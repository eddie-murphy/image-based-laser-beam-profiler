(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    928319,      22354]
NotebookOptionsPosition[    883091,      21640]
NotebookOutlinePosition[    886957,      21738]
CellTagsIndexPosition[    886399,      21718]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Beam Profiling Documentation",
 FontWeight->"SemiBold",
 FontColor->RGBColor[0., 0., 0.]]], "Title",ExpressionUUID->"7e3262c5-9f7f-\
4b44-a470-af60231a8f8d"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellLabel->
  "In[631]:=",ExpressionUUID->"8d2f2eb8-9256-4415-9c6b-a431d4085b29"],

Cell[TextData[StyleBox["ATTENTION: Every time you use open this notebook, \
evaluate the whole notebook first: Evaluation \[Rule] Evaluate Notebook. If \
you do not do this, intra-document links will not work. Every time you run \
another notebook (especially those with \
ClearAll[\[OpenCurlyDoubleQuote]Global`*\[CloseCurlyDoubleQuote]], rerun this \
entire notebook.",
 FontSize->18,
 FontWeight->"Bold",
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellDingbat->"\[HappySmiley]",
 ShowCellTags->False,ExpressionUUID->"e1b469e4-6436-41c7-a4d0-253e3fa660fa"],

Cell[BoxData[
 StyleBox[
  RowBox[{"SetOptions", "[", 
   RowBox[{
    RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
    RowBox[{"StyleDefinitions", "\[Rule]", 
     RowBox[{"Notebook", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cell", "[", 
          RowBox[{"StyleData", "[", 
           RowBox[{"StyleDefinitions", "\[Rule]", "\"\<Default.nb\>\""}], 
           "]"}], "]"}], ",", 
         RowBox[{"Cell", "[", 
          RowBox[{
           RowBox[{"StyleData", "[", "\"\<Notebook\>\"", "]"}], ",", 
           RowBox[{"Background", "\[Rule]", 
            RowBox[{"GrayLevel", "[", "0.99", "]"}]}]}], "]"}], ",", 
         RowBox[{"Cell", "[", 
          RowBox[{
           RowBox[{"StyleData", "[", "\"\<Input\>\"", "]"}], ",", 
           RowBox[{"Background", "\[Rule]", "LightYellow"}]}], "]"}], ",", 
         RowBox[{"Cell", "[", 
          RowBox[{
           RowBox[{"StyleData", "[", "\"\<Output\>\"", "]"}], ",", 
           RowBox[{"Background", "\[Rule]", "LightGreen"}]}], "]"}], ",", 
         RowBox[{"Cell", "[", 
          RowBox[{
           RowBox[{"StyleData", "[", "\"\<Text\>\"", "]"}], ",", 
           RowBox[{"Background", "\[Rule]", "LightBrown"}]}], "]"}], ",", 
         RowBox[{"Cell", "[", 
          RowBox[{
           RowBox[{"StyleData", "[", "\"\<Chapter\>\"", "]"}], ",", 
           RowBox[{"Background", "\[Rule]", 
            RowBox[{"GrayLevel", "[", ".9", "]"}]}]}], "]"}]}], "}"}], ",", 
       RowBox[{
       "StyleDefinitions", "\[Rule]", 
        "\"\<PrivateStylesheetFormatting.nb\>\""}]}], "]"}]}]}], "]"}],
  FontColor->GrayLevel[0]]], "Input",
 FontColor->GrayLevel[1],
 CellLabel->
  "In[632]:=",ExpressionUUID->"29efaa39-b990-4be4-ab45-17160ca215a7"],

Cell[BoxData[
 RowBox[{"CellPrint", "@", 
  RowBox[{"Cell", "[", 
   RowBox[{"\"\<Table of Contents\>\"", ",", "\"\<Chapter\>\"", 
    RowBox[{"(*", 
     RowBox[{"format", " ", "style", " ", "option"}], "*)"}], ",", 
    RowBox[{"CellTags", "\[Rule]", 
     RowBox[{"{", "\"\<toc\>\"", "}"}]}]}], "]"}]}]], "Input",
 CellLabel->
  "In[633]:=",ExpressionUUID->"9bd065bc-c410-410e-9a91-c2c5a7ce329c"],

Cell[CellGroupData[{

Cell["Table of Contents", "Chapter",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellTags->"toc",ExpressionUUID->"96a9d4bd-a86b-444e-a8b6-27684914a10b"],

Cell["\<\
Click on any of the links below to jump to that section. At each section \
there will be a link: back to the table of contents, to beginning of the \
section before, and to the beginning of the section after. \
\>", "Text",ExpressionUUID->"81b3aa75-5e48-4a6d-ae3a-944eb0e22b37"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Framed", "[", 
  RowBox[{
   RowBox[{"Column", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<Table of Contents\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<toc\>\""}], 
         "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<Introduction\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<intro\>\""}], 
         "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<Links to Helpful Websites\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<links\>\""}], 
         "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<Introduction Part 2 (Properties of beams)\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<intro2\>\""}], 
         "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<Introduction Part 3 (Gaussian Beam Math)\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<intro3\>\""}], 
         "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<The Thorlabs Camera\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<camera\>\""}], 
         "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<The Need to Decimate\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<deci\>\""}], 
         "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<What is a Module?\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<mod\>\""}], 
         "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<Code Used to Decimate\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<decicode\>\""}],
          "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<Fitting an Image\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<fitim\>\""}], 
         "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<Working with Multiple Images\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<work1\>\""}], 
         "}"}]}], "]"}], ",", 
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<The End...?\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<ending\>\""}], 
         "}"}]}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "}"}], "]"}], ",", 
   RowBox[{"RoundingRadius", "\[Rule]", "5"}]}], "]"}]], "Input",
 CellLabel->
  "In[634]:=",ExpressionUUID->"473e2580-5be6-4a37-bf8a-e2f5df76988e"],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      TemplateBox[{"\"Table of Contents\"",{
         NotebookObject[
          FrontEndObject[
           LinkObject["iqxbm_shm", 3, 1]], 41], "toc"},ButtonData},
       "HyperlinkDefault"]},
     {
      TemplateBox[{"\"Introduction\"",{
         NotebookObject[
          FrontEndObject[
           LinkObject["iqxbm_shm", 3, 1]], 41], "intro"},ButtonData},
       "HyperlinkDefault"]},
     {
      TemplateBox[{"\"Links to Helpful Websites\"",{
         NotebookObject[
          FrontEndObject[
           LinkObject["iqxbm_shm", 3, 1]], 41], "links"},ButtonData},
       "HyperlinkDefault"]},
     {
      TemplateBox[{"\"Introduction Part 2 (Properties of beams)\"",{
         NotebookObject[
          FrontEndObject[
           LinkObject["iqxbm_shm", 3, 1]], 41], "intro2"},ButtonData},
       "HyperlinkDefault"]},
     {
      TemplateBox[{"\"Introduction Part 3 (Gaussian Beam Math)\"",{
         NotebookObject[
          FrontEndObject[
           LinkObject["iqxbm_shm", 3, 1]], 41], "intro3"},ButtonData},
       "HyperlinkDefault"]},
     {
      TemplateBox[{"\"The Thorlabs Camera\"",{
         NotebookObject[
          FrontEndObject[
           LinkObject["iqxbm_shm", 3, 1]], 41], "camera"},ButtonData},
       "HyperlinkDefault"]},
     {
      TemplateBox[{"\"The Need to Decimate\"",{
         NotebookObject[
          FrontEndObject[
           LinkObject["iqxbm_shm", 3, 1]], 41], "deci"},ButtonData},
       "HyperlinkDefault"]},
     {
      TemplateBox[{"\"What is a Module?\"",{
         NotebookObject[
          FrontEndObject[
           LinkObject["iqxbm_shm", 3, 1]], 41], "mod"},ButtonData},
       "HyperlinkDefault"]},
     {
      TemplateBox[{"\"Code Used to Decimate\"",{
         NotebookObject[
          FrontEndObject[
           LinkObject["iqxbm_shm", 3, 1]], 41], "decicode"},ButtonData},
       "HyperlinkDefault"]},
     {
      TemplateBox[{"\"Fitting an Image\"",{
         NotebookObject[
          FrontEndObject[
           LinkObject["iqxbm_shm", 3, 1]], 41], "fitim"},ButtonData},
       "HyperlinkDefault"]},
     {
      TemplateBox[{"\"Working with Multiple Images\"",{
         NotebookObject[
          FrontEndObject[
           LinkObject["iqxbm_shm", 3, 1]], 41], "work1"},ButtonData},
       "HyperlinkDefault"]},
     {
      TemplateBox[{"\"The End...?\"",{
         NotebookObject[
          FrontEndObject[
           LinkObject["iqxbm_shm", 3, 1]], 41], "ending"},ButtonData},
       "HyperlinkDefault"]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"],
  RoundingRadius->5,
  StripOnInput->False]], "Output",
 CellLabel->
  "Out[634]=",ExpressionUUID->"63111185-5b1f-4420-995d-0e2737a7a079"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"CellPrint", "@", 
  RowBox[{"Cell", "[", 
   RowBox[{"\"\<Introduction\>\"", ",", "\"\<Chapter\>\"", 
    RowBox[{"(*", 
     RowBox[{"format", " ", "style", " ", "option"}], "*)"}], ",", 
    RowBox[{"CellTags", "\[Rule]", 
     RowBox[{"{", "\"\<intro\>\"", "}"}]}]}], "]"}]}]], "Input",
 CellLabel->
  "In[635]:=",ExpressionUUID->"57eb3855-8ab7-43cb-9e80-3c10aabbd1eb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Introduction", "Chapter",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellTags->"intro",ExpressionUUID->"19210f7a-a979-4c7b-82d2-5a6dc923265f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Before:\>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Table of Contents\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<toc\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<After: \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Introduction Part 2\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<intro2\>\""}], 
      "}"}]}], "]"}]}], "]"}]}], "Input",
 CellLabel->
  "In[636]:=",ExpressionUUID->"f170d4db-2f3f-469f-af04-8ecbf1c75967"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Before:\"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Table of Contents\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["iqxbm_shm", 3, 1]], 41], "toc"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Before:", 
   Hyperlink["Table of Contents", {
     NotebookObject[
      FrontEndObject[
       LinkObject["iqxbm_shm", 3, 1]], 41], "toc"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[636]:=",ExpressionUUID->"576fd4ed-67db-4bd8-9249-6ced4ab1e00b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"After: \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Introduction Part 2\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["iqxbm_shm", 3, 1]], 41], "intro2"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["After: ", 
   Hyperlink["Introduction Part 2", {
     NotebookObject[
      FrontEndObject[
       LinkObject["iqxbm_shm", 3, 1]], 41], "intro2"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[636]:=",ExpressionUUID->"c907aa72-42f0-4a6f-b961-e761a8868ad6"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 StyleBox["Hi",
  FontWeight->"Bold"],
 ". It\[CloseCurlyQuote]s nice to meet you. Let\[CloseCurlyQuote]s get down \
to business. The contents of this notebook will help you learn what it takes \
to profile a laser beam. Put simply, profiling a beam means determining \
certain properties of the beam. I\[CloseCurlyQuote]ll tell you about these \
mysterious properties later on. For now I have some introductory things to \
talk to you about. \n\nIf you are new to Mathematica read the following. If \
you are not new to Mathematica, ",
 StyleBox["STILL",
  FontWeight->"Bold"],
 " read the following:\nI am not going to tell you about basic Mathematica \
syntax. That is beyond the scope of this notebook. However, I will be \
documenting each line of code, telling you what it does and sometimes how it \
does what it does. I bet you all my bitcoins (zero bitcoins) that there will \
be function/syntax that you have not seen. Don\[CloseCurlyQuote]t freak out \
when you gaze upon such bewildering code. Reread the code a few times, and if \
you still do not understand, look up the information online. \n\nA specific \
website that I find helpful is Mathematica Stack Exchange. It is a question \
and answers forum. Directly below in the green cells are links to questions \
and answers that I found helpful when creating this program. I am also \
listing links to some official Mathematica documentation pages. Now you must \
understand that official Mathematica documentation is generally not helpful \
(it either overloads you with too much or undercuts you with too little). \
(However, once in a while I find something on there that is helpful). Some of \
the following links are about (random) things I found interesting. I\
\[CloseCurlyQuote]m not going to bother organizing these links into those \
three categories, not because I\[CloseCurlyQuote]m lazy, but because I don\
\[CloseCurlyQuote]t remember that much about them. Come back to this list if \
you run into confusing code later on, or if you feel like going on an \
adventure. \n\nThe first two links are to the homepages of Mathematica Stack \
Exchange and Wolfram Documentation, respectively. The third link is to a \
Mathematica Stack Exchange page hosting a bunch of links to different \
questions (and it is organized unlike my list) that might help you out a lot. \
The forth link is a collection of links to a google doc that I created \
(because I didn\[CloseCurlyQuote]t want to type 3 pages of urls in \
Mathematica). You can get a sense of what the urls are about in the google \
doc by looking at the text near the end of the url. "
}], "Text",ExpressionUUID->"367d294c-445f-49ae-8637-d6c30262599b"],

Cell[BoxData[{
 RowBox[{"CellPrint", "@", 
  RowBox[{"Cell", "[", 
   RowBox[{"\"\<Links to Helpful Sites/Pages:\>\"", ",", "\"\<Text\>\"", 
    RowBox[{"(*", 
     RowBox[{"format", " ", "style", " ", "option"}], "*)"}], ",", 
    RowBox[{"CellTags", "\[Rule]", 
     RowBox[{"{", "\"\<links\>\"", "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Framed", "[", 
  RowBox[{
   RowBox[{"Column", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Hyperlink", "[", 
       RowBox[{
       "\"\<Mathematica Stack Exchange\>\"", ",", 
        "\"\<https://mathematica.stackexchange.com\>\""}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Hyperlink", "[", 
       RowBox[{
       "\"\<Wolfram Language and System Documentation Center\>\"", ",", 
        "\"\<http://reference.wolfram.com/language/\>\""}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Hyperlink", "[", 
       RowBox[{
       "\"\<Where can I find examples of good Mathematica programming \
practice?\>\"", ",", 
        "\"\<https://mathematica.stackexchange.com/questions/18/where-can-i-\
find-examples-of-good-mathematica-programming-practice/\>\""}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Hyperlink", "[", 
       RowBox[{
       "\"\<All Other Links\>\"", ",", 
        "\"\<https://docs.google.com/document/d/\
12XCEQh0dlDfbduIREJF1CPT0YKD78AzRL2Te7JkuUcw/edit?usp=sharing\>\""}], "]"}]}],
      "}"}], "]"}], ",", 
   RowBox[{"RoundingRadius", "\[Rule]", "5"}]}], "]"}]}], "Input",
 CellLabel->
  "In[638]:=",ExpressionUUID->"7d55376d-a580-4bdc-8e1f-b8078fedd3f0"],

Cell["Links to Helpful Sites/Pages:", "Text",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellTags->"links",ExpressionUUID->"cf98a6d9-838d-4c3d-9fe7-5884dee804bc"],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      TemplateBox[{
       "\"Mathematica Stack Exchange\"",
        "https://mathematica.stackexchange.com"},
       "HyperlinkURL"]},
     {
      TemplateBox[{
       "\"Wolfram Language and System Documentation Center\"",
        "http://reference.wolfram.com/language/"},
       "HyperlinkURL"]},
     {
      TemplateBox[{
       "\"Where can I find examples of good Mathematica programming practice?\
\"","https://mathematica.stackexchange.com/questions/18/where-can-i-find-\
examples-of-good-mathematica-programming-practice/"},
       "HyperlinkURL"]},
     {
      TemplateBox[{
       "\"All Other Links\"",
        "https://docs.google.com/document/d/\
12XCEQh0dlDfbduIREJF1CPT0YKD78AzRL2Te7JkuUcw/edit?usp=sharing"},
       "HyperlinkURL"]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"],
  RoundingRadius->5,
  StripOnInput->False]], "Output",
 CellLabel->
  "Out[639]=",ExpressionUUID->"1be788e5-6fe8-474a-979e-468e990621dd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{"\"\<To Go Back to the TOC click this link:\>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Table of Contents\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<toc\>\""}], 
      "}"}]}], "]"}]}], "]"}]], "Input",
 CellLabel->
  "In[640]:=",ExpressionUUID->"d7f90fec-3d60-4359-b369-4f57c062cbd0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"To Go Back to the TOC click this link:\"\>", 
   "\[InvisibleSpace]", 
   TemplateBox[{"\"Table of Contents\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["iqxbm_shm", 3, 1]], 41], "toc"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["To Go Back to the TOC click this link:", 
   Hyperlink["Table of Contents", {
     NotebookObject[
      FrontEndObject[
       LinkObject["iqxbm_shm", 3, 1]], 41], "toc"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[640]:=",ExpressionUUID->"5f8fcd9a-b34b-4ae4-bc75-1fe569fb9ed6"]
}, Open  ]],

Cell["\<\
As you have probably noticed by now, there is a color scheme to this \
notebook. In its current state: the notebook\[CloseCurlyQuote]s background is \
a very light gray, the title of each section is a dark gray, all text cells \
are a light brown, all input (what I refer to as the \
\[OpenCurlyDoubleQuote]code\[CloseCurlyDoubleQuote]) cells are light yellow, \
and all output cells are green. That is the way I set it up.\
\>", "Text",ExpressionUUID->"c665ad7d-41f3-4ad5-95ae-bda29dfd5276"],

Cell["\<\
You also need to be aware of: File/folder paths. What is a file path you may \
ask? The green output below is a file path. In laymen\[CloseCurlyQuote]s \
terms, it is the path your computer takes to get to a file. (Path and \
Directory are interchangeable terms.) File paths are important for when you \
want to tell Mathematica where to look for something, which will be happening \
quite a bit in this document. Let\[CloseCurlyQuote]s see an example: 

To get the current Notebook Path/Directory, use the following code in yellow. \
\>", "Text",ExpressionUUID->"3ea58f41-44c9-4f02-8a02-4fdb07726dff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"currentdirectory", "=", 
  RowBox[{"NotebookDirectory", "[", "]"}]}]], "Input",
 CellLabel->
  "In[641]:=",ExpressionUUID->"ce4626d2-4cc0-4578-8e0b-cbc89356b6e2"],

Cell[BoxData["\<\"/Users/efm/Documents/Geneseo/Summer \
2017/documentation/\"\>"], "Output",
 CellLabel->
  "Out[641]=",ExpressionUUID->"650a6511-7363-44f9-9e14-a1689d41ce8f"]
}, Open  ]],

Cell[TextData[{
 "Now let\[CloseCurlyQuote]s say that you want the path to a file on your \
computer, not this current notebook. \n\nIf you are using a Mac you\
\[CloseCurlyQuote]re in luck (also good choice). You can easily copy the path \
of a file AND a folder. To do so: select the folder or file in Finder so that \
it is highlighted, and then press at the same time (simultaneously) these \
three buttons: ",
 StyleBox["option",
  FontSlant->"Italic"],
 " ",
 StyleBox["command",
  FontSlant->"Italic"],
 " ",
 StyleBox["c",
  FontSlant->"Italic"],
 ". This will copy the path. When pasting into Mathematica you need to \
enclose the path with quotes, effectively making it a string of characters.\n\
\nIf you are on a Windows computer, consider buying a Mac for your next \
laptop, because the only reliable way I know of for Windows is unintuitive. \
If you need the path of a only a file (not a folder) go to: Insert \
\[Rule]File Path. To get the path of a folder, select a file in the folder \
and then manually delete the file name off the end of the path. \n\n",
 StyleBox["Warning",
  FontWeight->"Bold"],
 ": File paths are written differently in macOS and Windows. (No one knows \
why Windows incorrectly represents file paths.) \n\nWhen importing files via \
a file path, the type of file (.jpeg, .pdf) needs to be at the end of the \
path. So make sure your computer displays file types at the end of file \
names. If it does not, look up how to do that. Because again, you need to \
include file type extensions at the end of file names in Mathematica. "
}], "Text",ExpressionUUID->"2a8a608b-c798-4562-a7c4-ebe5bf259346"],

Cell[TextData[{
 "There is one last thing I need to tell you. I created a package. A package \
is a group of functions that someone has coded to make it easier to do your \
job. These functions work like regular Mathematica function.  This package I \
created is called: FindingSpotSize. It is a folder containing files, each of \
which contains one function. Ignore what the name means for now. \n\n",
 StyleBox["ATTENTION",
  FontWeight->"Bold"],
 ": The package does everything the rest of this documentation talks about, \
but allows you to do it in just a few lines of code. So \
we\[CloseCurlyQuote]re going to install it right now. To do this go to the \
folder that this documentation is in; that is to say go to the folder that \
has a path of: "
}], "Text",ExpressionUUID->"0cf8570c-8f60-4db5-a703-501ac880b417"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NotebookDirectory", "[", "]"}]], "Input",
 CellLabel->
  "In[642]:=",ExpressionUUID->"330c812f-e306-4dd1-8742-1cb5a8756e3a"],

Cell[BoxData["\<\"/Users/efm/Documents/Geneseo/Summer \
2017/documentation/\"\>"], "Output",
 CellLabel->
  "Out[642]=",ExpressionUUID->"1821441e-0e33-4be6-a52c-c63bb8195494"]
}, Open  ]],

Cell["\<\
Locate a folder called FindingSpotSize and copy it. Now you need to locate \
what is called your User Base Directory using the following line of code. If \
you evaluated the notebook in the beginning, the path should already be \
outputted.\
\>", "Text",ExpressionUUID->"07bdaac6-dc5e-4eed-9ee9-d34c94b718b7"],

Cell[CellGroupData[{

Cell[BoxData["$UserBaseDirectory"], "Input",
 CellLabel->
  "In[643]:=",ExpressionUUID->"0dc598d7-f10c-48d4-a8c3-425cb74df85d"],

Cell[BoxData["\<\"/Users/efm/Library/Mathematica\"\>"], "Output",
 CellLabel->
  "Out[643]=",ExpressionUUID->"af9b348e-1884-4dbc-9172-a8956e512341"]
}, Open  ]],

Cell["\<\
Locate this folder. There should be a folder inside of it called \
\[OpenCurlyDoubleQuote]Applications\[CloseCurlyDoubleQuote]. Enter this \
folder. Inside \[OpenCurlyDoubleQuote]Applications\[CloseCurlyDoubleQuote] is \
where you will paste my package. If done correctly on a Mac, the final path \
of my package in your Mathematica should look similar to: \
/Users/username/Library/Mathematica/Applications/FindingSpotSize. I\
\[CloseCurlyQuote]ll talk about using the package later on. 

But to make sure you installed it correctly, we are going to load the package \
into this Mathematica notebook, which will allow us to use its tools.

We are going to tell the notebook to go and get the package. << is shorthand \
for the Get command. You are going to see some warnings (4 probably, titled: \
Needs, Needs, Needs, General) but you can ignore those. 

If you see an error message: \[OpenCurlyDoubleQuote]Get: Cannot open \
FindingSpotSize\[CloseCurlyDoubleQuote]
Then you have not copied the FindingSpotSize folder correctly to the \
specified folder. Make sure to not rename the folder. 

Rerun the entire notebook once you have copied the folder into Applications. \
\
\>", "Text",ExpressionUUID->"cef27f20-e843-43ba-9ce0-f6483cc7cbee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"<<", "FindingSpotSize`"}]], "Input",
 CellLabel->
  "In[644]:=",ExpressionUUID->"95134ce1-41e6-46d4-9a3c-f717c82de983"],

Cell[BoxData[
 TemplateBox[{
  "Needs","nocont",
   "\"Context \
\\!\\(\\*RowBox[{\\\"\\\\\\\"FindingSpotSize`Coordify`\\\\\\\"\\\"}]\\) was \
not created when Needs was evaluated.\"",2,644,18,28246961614426207586,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->
  "During evaluation of \
In[644]:=",ExpressionUUID->"1ae0d014-9d49-4f7f-9cbe-d948950285e0"],

Cell[BoxData[
 TemplateBox[{
  "Needs","nocont",
   "\"Context \\!\\(\\*RowBox[{\\\"\\\\\\\"FindingSpotSize`GaussianBeamFit`\\\
\\\\\"\\\"}]\\) was not created when Needs was evaluated.\"",2,644,19,
   28246961614426207586,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->
  "During evaluation of \
In[644]:=",ExpressionUUID->"5c9a2a89-790f-4f47-b82d-ae63e28222fc"],

Cell[BoxData[
 TemplateBox[{
  "Needs","nocont",
   "\"Context \
\\!\\(\\*RowBox[{\\\"\\\\\\\"FindingSpotSize`AutoCroppingSuperRevised`\\\\\\\"\
\\\"}]\\) was not created when Needs was evaluated.\"",2,644,20,
   28246961614426207586,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->
  "During evaluation of \
In[644]:=",ExpressionUUID->"78026afc-3e89-4e74-923f-33aedb80106c"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Needs\\\", \\\"::\\\", \
\\\"nocont\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,644,21,28246961614426207586,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->
  "During evaluation of \
In[644]:=",ExpressionUUID->"68c01b37-677b-4144-8b5c-14de04ce5bb4"]
}, Open  ]],

Cell["\<\
Congrats! You made it through Introduction Part 1. You only have 90% of the \
documentation left! Move on to Introduction Part 2. \
\>", "Text",ExpressionUUID->"6ab985ff-7941-4881-88b2-d9b5fd4650c6"],

Cell[BoxData[
 RowBox[{"CellPrint", "@", 
  RowBox[{"Cell", "[", 
   RowBox[{
   "\"\<Introduction Part 2 (Properties of Beams)\>\"", ",", 
    "\"\<Chapter\>\"", 
    RowBox[{"(*", 
     RowBox[{"format", " ", "style", " ", "option"}], "*)"}], ",", 
    RowBox[{"CellTags", "\[Rule]", 
     RowBox[{"{", "\"\<intro2\>\"", "}"}]}]}], "]"}]}]], "Input",
 CellLabel->
  "In[645]:=",ExpressionUUID->"58548d3e-a1fe-4bca-a0d4-f04a891e900f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Introduction Part 2 (Properties of Beams)", "Chapter",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellTags->"intro2",ExpressionUUID->"27d308e8-46a4-453f-98f7-6e169704eb4c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Home:  \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Table of Contents\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<toc\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Before:\>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Introduction\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<intro\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<After: \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Introduction Part 3\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<intro3\>\""}], 
      "}"}]}], "]"}]}], "]"}]}], "Input",
 CellLabel->
  "In[646]:=",ExpressionUUID->"e6fbdeb4-5034-4c59-bc5e-467d1d197f42"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Home:  \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Table of Contents\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["iqxbm_shm", 3, 1]], 41], "toc"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Home:  ", 
   Hyperlink["Table of Contents", {
     NotebookObject[
      FrontEndObject[
       LinkObject["iqxbm_shm", 3, 1]], 41], "toc"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[646]:=",ExpressionUUID->"2a328df8-cc95-4acf-9d35-376ff32e8723"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Before:\"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Introduction\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["iqxbm_shm", 3, 1]], 41], "intro"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Before:", 
   Hyperlink["Introduction", {
     NotebookObject[
      FrontEndObject[
       LinkObject["iqxbm_shm", 3, 1]], 41], "intro"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[646]:=",ExpressionUUID->"87f31aab-2553-4e31-8a6f-b0284ff9e3c5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"After: \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Introduction Part 3\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["iqxbm_shm", 3, 1]], 41], "intro3"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["After: ", 
   Hyperlink["Introduction Part 3", {
     NotebookObject[
      FrontEndObject[
       LinkObject["iqxbm_shm", 3, 1]], 41], "intro3"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[646]:=",ExpressionUUID->"64bdbf5e-50ef-401d-9f95-51c01e73afb2"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "I mentioned profiling a laser beam earlier. Profiling a beam means \
determining certain properties about it. Once we know these properties we can \
do things with the beam. The properties that we are interested in are called: \
beam waist and the beam waist position. Dr. Marcus probably told you to read \
some optics textbook. I came onto the project knowing nothing about laser \
beams and I found the textbook to not be too helpful. It was pretty heavy \
with the math and did not have very clear explanations on what was happening. \
Once I eventually learned what was going on, I decided to write my own little \
description of laser beams. That is what you will now be reading. \n\nHere \
are some things you should know: First, we are making assumptions about the \
laser beam we are working with. We assume the laser beams are Gaussian laser \
beams. What the name means at the moment is not that important. What is \
important is that by assuming they are Gaussian, we are assuming that they \
are perfectly created laser beams. However, nothing is perfect, so there are \
differences in what we theorize and what we actually see. \n\nSecond, \
whenever we talk about the cross sectional size of a beam, we are not talking \
about the distance from the center of the beam to its physical edges. Why is \
this? Its hard to define physical edges to a laser beam because the light \
doesn\[CloseCurlyQuote]t just stop at certain radius. If you shine a laser \
beam on a flat surface it might appear to you that at some radius away from \
what you perceive to be the center there is a distinct radius where the light \
stops existing. However, it doesn\[CloseCurlyQuote]t really stop existing \
beyond that radius, its just that you cannot see this faint light. So, it \
makes more sense to use some other measurement to determine the size of the \
beam. Thus, as is usually the case, people turned to math.\n\nIf I ask you \
for the size of the beam, I am asking you to tell me what the spot size of \
the beam is at that given location. (take away: size=spot size). The spot \
size is a measurement that is easily described and can be agreed upon by \
different scientists. \n\nSpot size is...\n\n...the distance from the center \
of the beam...\n\n...to where the intensity of the light...\n\n...has dropped \
by one standard deviation. \n\nIf the intensity of the light at the center of \
the beam has a value ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["I", "0"],
    FontSize->24], TraditionalForm]],ExpressionUUID->
  "d3a41267-b2c6-49c1-afa4-bf1756f9e19f"],
 ", then the intensity of light one standard deviation away from this max \
value has an intensity of ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox[
     SubscriptBox["I", "0"], 
     SuperscriptBox["\[ExponentialE]", "2"]],
    FontSize->24], TraditionalForm]],ExpressionUUID->
  "ae973a42-941f-4cb9-a2ad-1b1399960cb2"],
 ", where \[ExponentialE]=2.718.\nThird:\n\n...the beam waist of a laser beam \
is...\n\n...the smallest spot size the beam has. \n\nThe beam waist is \
usually represented as ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["w", "0"], TraditionalForm]],ExpressionUUID->
  "62d7ee82-5c5f-4a67-995c-9ac9a7e4dda9"],
 " or \[Sigma] . The beam waist position usually represented as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["z", "0"], " "}], TraditionalForm]],ExpressionUUID->
  "3d400184-e36f-47eb-a87a-94a72da1198c"],
 "is where the beam waist is located. \n\nIt is common to say that the axis \
the beam propagates along is the z axis, this explains why the beam waist \
position is represented as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["z", "0"], ".", " "}], TraditionalForm]],ExpressionUUID->
  "8513ab7d-be94-4244-bb80-2ef51952c6cd"],
 "\n\nForth, laser beam light wants to disperse. The more compact you make a \
laser beam, the more desperately it wants to disperse.\n\nThat is why it is \
observed that as beam waist decreases (that is to say you make the laser beam \
more compact with say a lens), the light diverges quicker.  \n\nFifth, I am \
by no means an expert on Gaussian laser beams. If you notice anything wrong \
in this documentation please correct it.\n\nBelow, I've attached the first \
page of a document I wrote. Click \[OpenCurlyDoubleQuote]view document\
\[CloseCurlyDoubleQuote] to view it and when you are done click \
\[OpenCurlyDoubleQuote]close document\[CloseCurlyDoubleQuote] to close it. \
You can view the full document in the folder that this notebook is in. The \
document is titled: testdoctry.pdf. Most of it is just restating what I said \
above but it also contains some graphics that might help you understand what \
is going on with Gaussian beam propagation. If I were you, I would only focus \
on the first page of the document as the last two pages are not important yet \
(and frankly I haven\[CloseCurlyQuote]t reviewed them). After you view the \
document move on to Introduction Part 3. You might have to side scroll inside \
this notebook to view the other pages of the document. \n\nIf you have been \
reading this notebook non-stop from the beginning, right now would be a good \
time to take a break. "
}], "Text",ExpressionUUID->"26a7aac9-42c0-4e85-ac46-f08b2d108bcf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ButtonBar", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\"\<View document\>\"", "\[RuleDelayed]", 
     RowBox[{"Expression", "[", 
      RowBox[{
       RowBox[{"doc", "=", 
        RowBox[{"Import", "[", 
         RowBox[{"currentdirectory", "<>", "\"\<testdoctry.pdf\>\""}], 
         "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Pages\>\"", ",", "1"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"\"\<close document\>\"", "\[RuleDelayed]", 
     RowBox[{"Expression", "[", 
      RowBox[{"Clear", "[", "doc", "]"}], "]"}]}]}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dynamic", "[", "doc", "]"}]}], "Input",
 CellLabel->
  "In[649]:=",ExpressionUUID->"21df25e2-3960-4514-9ec8-9f36dd921d01"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     ButtonBox["\<\"View document\"\>",
      Appearance->{"AbuttingRight"},
      ButtonFunction:>Expression[$CellContext`doc = Import[
          StringJoin[$CellContext`currentdirectory, "testdoctry.pdf"]], {
        "Pages", 1}],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox["\<\"close document\"\>",
      Appearance->{"AbuttingLeft"},
      ButtonFunction:>Expression[
        Clear[$CellContext`doc]],
      Evaluator->Automatic,
      Method->"Preemptive"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  ButtonBar[{"View document" :> Expression[$CellContext`doc = Import[
        StringJoin[$CellContext`currentdirectory, "testdoctry.pdf"]], {
      "Pages", 1}], "close document" :> Expression[
      Clear[$CellContext`doc]]}, Appearance -> {Automatic}]]], "Output",
 CellLabel->
  "Out[649]=",ExpressionUUID->"dcb69e4d-eefa-4a7e-913a-80f2c2a52270"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`doc, StandardForm],
  ImageSizeCache->{23., {1., 10.}}]], "Output",
 CellLabel->
  "Out[650]=",ExpressionUUID->"f7c45869-86f5-4917-b10c-d8ac9e5f04f8"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"CellPrint", "@", 
  RowBox[{"Cell", "[", 
   RowBox[{
   "\"\<Introduction Part 3 (Gaussian beam Math)\>\"", ",", "\"\<Chapter\>\"", 
    RowBox[{"(*", 
     RowBox[{"format", " ", "style", " ", "option"}], "*)"}], ",", 
    RowBox[{"CellTags", "\[Rule]", 
     RowBox[{"{", "\"\<intro3\>\"", "}"}]}]}], "]"}]}]], "Input",
 CellLabel->
  "In[651]:=",ExpressionUUID->"79eef98c-c896-46e8-879a-c1b7e5f84d8a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Introduction Part 3 (Gaussian beam Math)", "Chapter",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellTags->"intro3",ExpressionUUID->"a9c0e406-cd07-4404-bc7e-08daacda4df1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Home:  \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Table of Contents\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<toc\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Before:\>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Introduction Part 2\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<intro2\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<After: \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<The Thorlabs Camera\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<camera\>\""}], 
      "}"}]}], "]"}]}], "]"}]}], "Input",
 CellLabel->
  "In[652]:=",ExpressionUUID->"3b8d3c4c-ab7c-4251-984b-c4f8fae9239d"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Home:  \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Table of Contents\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["iqxbm_shm", 3, 1]], 41], "toc"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Home:  ", 
   Hyperlink["Table of Contents", {
     NotebookObject[
      FrontEndObject[
       LinkObject["iqxbm_shm", 3, 1]], 41], "toc"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[652]:=",ExpressionUUID->"24d3963b-8516-47b3-bc30-4432f5010b88"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Before:\"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Introduction Part 2\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["iqxbm_shm", 3, 1]], 41], "intro2"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Before:", 
   Hyperlink["Introduction Part 2", {
     NotebookObject[
      FrontEndObject[
       LinkObject["iqxbm_shm", 3, 1]], 41], "intro2"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[652]:=",ExpressionUUID->"57e4cb06-186c-4fa1-991e-5de6bf80f2bc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"After: \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"The Thorlabs Camera\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["iqxbm_shm", 3, 1]], 41], "camera"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["After: ", 
   Hyperlink["The Thorlabs Camera", {
     NotebookObject[
      FrontEndObject[
       LinkObject["iqxbm_shm", 3, 1]], 41], "camera"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[652]:=",ExpressionUUID->"a8aa064c-39bd-4c61-b055-d67d20b9371f"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "The time has come to learn the math used to described Gaussian laser beams. \
We will describe a laser beam through its intensity values at certain points \
in space. Using an equation with an x and y variable, you can describe how \
the intensity of a laser beam changes over a plane in space. \n\n",
 StyleBox["ATTENTION",
  FontWeight->"Bold"],
 ": I got in the habit of thinking of the x variable as width and the y \
variable as height. You should do the same. To view a 3D plot representing \
intensity of a laser beam as a function of position in a plane click the \
\[OpenCurlyDoubleQuote]view plot\[CloseCurlyDoubleQuote] button. Close the \
plot when you\[CloseCurlyQuote]re done as that will make this notebook run \
faster. "
}], "Text",ExpressionUUID->"0326d5f7-9ef2-47ec-8237-b7bca7a2ca8a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ButtonBar", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<View plot\>\"", "\[RuleDelayed]", 
      RowBox[{"Expression", "[", 
       RowBox[{
        RowBox[{"plot", "=", 
         RowBox[{"Plot3D", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"255", " ", "*", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               FractionBox[
                RowBox[{"-", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"widthpos", "-", "80"}], ")"}], "2"]}], 
                SuperscriptBox["30", "2"]], "-", 
               FractionBox[
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"heightpos", "-", "64"}], ")"}], "2"], 
                SuperscriptBox["30", "2"]]}]]}], "+", "0"}], ",", 
           RowBox[{"{", 
            RowBox[{"widthpos", ",", "1", ",", "160"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"heightpos", ",", "1", ",", "128"}], "}"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"MeshStyle", "\[Rule]", "None"}], ",", 
           RowBox[{"ColorFunction", "\[Rule]", "GrayLevel"}], ",", 
           RowBox[{"ViewAngle", "\[Rule]", ".6"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Bold", ",", " ", "Black", ",", "12"}], "]"}]}], ",", 
           RowBox[{"PlotRangePadding", "\[Rule]", "None"}], ",", 
           RowBox[{"PlotPoints", "\[Rule]", "5"}], ",", 
           RowBox[{"AxesLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<width\>\"", ",", "\"\<height\>\"", ",", 
              "\"\<Intensity\>\""}], "}"}]}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Pages\>\"", ",", "1"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"\"\<Close plot\>\"", "\[RuleDelayed]", 
      RowBox[{"Expression", "[", 
       RowBox[{"Clear", "[", "plot", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dynamic", "[", "plot", "]"}]}], "Input",
 CellLabel->
  "In[655]:=",ExpressionUUID->"2fb3a0a7-1400-4188-97e1-85b140b1a7c0"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     ButtonBox["\<\"View plot\"\>",
      Appearance->{"AbuttingRight"},
      ButtonFunction:>
       Expression[$CellContext`plot = 
        Plot3D[255 
           E^((-($CellContext`widthpos - 80)^2)/
              30^2 - ($CellContext`heightpos - 64)^2/30^2) + 
          0, {$CellContext`widthpos, 1, 160}, {$CellContext`heightpos, 1, 
           128}, PlotRange -> All, MeshStyle -> None, ColorFunction -> 
          GrayLevel, ViewAngle -> 0.6, LabelStyle -> 
          Directive[Bold, Black, 12], PlotRangePadding -> None, PlotPoints -> 
          5, AxesLabel -> {"width", "height", "Intensity"}], {"Pages", 1}],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox["\<\"Close plot\"\>",
      Appearance->{"AbuttingLeft"},
      ButtonFunction:>Expression[
        Clear[$CellContext`plot]],
      Evaluator->Automatic,
      Method->"Preemptive"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  ButtonBar[{
   "View plot" :> 
    Expression[$CellContext`plot = 
      Plot3D[255 
         E^((-($CellContext`widthpos - 80)^2)/
            30^2 - ($CellContext`heightpos - 64)^2/30^2) + 
        0, {$CellContext`widthpos, 1, 160}, {$CellContext`heightpos, 1, 128}, 
        PlotRange -> All, MeshStyle -> None, ColorFunction -> GrayLevel, 
        ViewAngle -> 0.6, LabelStyle -> Directive[Bold, Black, 12], 
        PlotRangePadding -> None, PlotPoints -> 5, 
        AxesLabel -> {"width", "height", "Intensity"}], {"Pages", 1}], 
    "Close plot" :> Expression[
      Clear[$CellContext`plot]]}, Method -> "Preemptive", 
   Appearance -> {Automatic}]]], "Output",
 CellLabel->
  "Out[655]=",ExpressionUUID->"c99ae1bb-c3f3-4f5f-9178-33ce32c35653"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`plot, StandardForm],
  ImageSizeCache->{31., {3., 10.}}]], "Output",
 CellLabel->
  "Out[656]=",ExpressionUUID->"f6d2b190-95d1-4866-b922-a0badb7989ba"]
}, Open  ]],

Cell[TextData[{
 "The equation we use to described the Intensity of a laser beam in a 2D \
plane is below. \n\n\t\t\t",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FrameBox[
     RowBox[{
      StyleBox[
       RowBox[{"Intensity", "(", 
        RowBox[{
         StyleBox[
          RowBox[{"width", " ", "position"}],
          FontColor->RGBColor[1, 0, 0]], ",", 
         StyleBox[
          RowBox[{"height", " ", "position"}],
          FontColor->RGBColor[1, 0, 0]]}], ")"}],
       FontSize->18], 
      StyleBox["=",
       FontSize->18], 
      RowBox[{
       RowBox[{
        StyleBox["maximumintensity",
         FontSize->18], 
        StyleBox[" ",
         FontSize->18], "*", " ", 
        SuperscriptBox["\[ExponentialE]", 
         SuperscriptBox[" ", 
          StyleBox[
           SuperscriptBox[" ", 
            SuperscriptBox[" ", 
             StyleBox[
              RowBox[{
               FractionBox[
                RowBox[{"-", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    StyleBox["widthposition",
                    FontWeight->"Bold",
                    FontColor->RGBColor[1, 0, 0]], "-", "widthcenter"}], 
                   ")"}], "2"]}], 
                SuperscriptBox["wwaist", "2"]], "-", 
               FractionBox[
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   StyleBox["heightposition",
                    FontWeight->"Bold",
                    FontColor->RGBColor[1, 0, 0]], "-", "heightcenter"}], 
                  ")"}], "2"], 
                SuperscriptBox["hwaist", "2"]]}],
              FontSize->18]]],
           FontSize->18]]]}], " ", 
       StyleBox["+",
        FontSize->18], 
       StyleBox["backgroundintensity",
        FontSize->18], 
       StyleBox[" ",
        FontSize->18]}]}]],
    Background->RGBColor[0.9, 1, 1]], TraditionalForm]],
  TextAlignment->Center,ExpressionUUID->
  "eb8354b6-dd0b-4264-9259-fc229d5da580"],
 "\nThe equation below allows for a non circular (potentially elliptical) \
laser beam by having separate width and height terms (major and minor axis \
terms). \[ExponentialE]=2.71828. The variables are in red. The constants in \
the equation are: ",
 StyleBox[" \n\t\t\t\t\t\t\t\t\t\t\t", "ItemNumbered"],
 StyleBox[Cell[BoxData[{
  FormBox[
   StyleBox[
    RowBox[{
    "maximumintensity", ",", " ", "\[IndentingNewLine]", "widthcenter", ",", 
     "\[IndentingNewLine]", "heightcenter", ",", "\[IndentingNewLine]", 
     "wwaist", ",", "\[IndentingNewLine]", "hwaist", ",", " ", 
     "\[IndentingNewLine]", "and", " "}], "Text"], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   StyleBox[
    RowBox[{"backgroundintensity", ".", " "}], "Text"], TraditionalForm]}], 
  "ItemNumbered",
  TextAlignment->Center,ExpressionUUID->
  "cf0c69cc-c2df-445e-8812-a7e50434b702"], "ItemNumbered"],
 "\n\n",
 StyleBox["Maximumintensity",
  IgnoreSpellCheck->True],
 " is the max intensity of the beam, which is located at the center. The \
widthcenter and heightcenter are the x and y coordinates of the beam\
\[CloseCurlyQuote]s center, respectively. wwaist and hwaist are the beam \
waists in a direction parallel to the width and height axes, respectively. ",
 StyleBox["Backgroudintensity",
  IgnoreSpellCheck->True],
 " is the intensity of background noise. \n\nNow we need to learn about the \
Thorlabs Camera."
}], "Text",ExpressionUUID->"bbe5752d-4025-4e84-9c60-303875aa88ec"],

Cell[BoxData[
 RowBox[{"CellPrint", "@", 
  RowBox[{"Cell", "[", 
   RowBox[{"\"\<The Thorlabs Camera\>\"", ",", "\"\<Chapter\>\"", 
    RowBox[{"(*", 
     RowBox[{"format", " ", "style", " ", "option"}], "*)"}], ",", 
    RowBox[{"CellTags", "\[Rule]", 
     RowBox[{"{", "\"\<camera\>\"", "}"}]}]}], "]"}]}]], "Input",
 CellLabel->
  "In[657]:=",ExpressionUUID->"50cba043-94b0-4f1e-af91-3157ac83d249"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Thorlabs Camera", "Chapter",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellTags->"camera",ExpressionUUID->"58444b99-f302-4ae2-be44-4790257b1960"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Home:  \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Table of Contents\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<toc\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Before:\>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Introduction Part 3\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<intro3\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<After: \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<The Need to Decimate\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<deci\>\""}], 
      "}"}]}], "]"}]}], "]"}]}], "Input",
 CellLabel->
  "In[658]:=",ExpressionUUID->"d0524762-b6bc-48bc-a839-d8573860494c"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Home:  \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Table of Contents\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["iqxbm_shm", 3, 1]], 41], "toc"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Home:  ", 
   Hyperlink["Table of Contents", {
     NotebookObject[
      FrontEndObject[
       LinkObject["iqxbm_shm", 3, 1]], 41], "toc"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[658]:=",ExpressionUUID->"2aa85f4a-23cf-44e6-97c3-90f398fdc951"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Before:\"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Introduction Part 3\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["iqxbm_shm", 3, 1]], 41], "intro3"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Before:", 
   Hyperlink["Introduction Part 3", {
     NotebookObject[
      FrontEndObject[
       LinkObject["iqxbm_shm", 3, 1]], 41], "intro3"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[658]:=",ExpressionUUID->"a7863fce-bd6d-4299-b7dd-b84898a98fa2"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"After: \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"The Need to Decimate\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["iqxbm_shm", 3, 1]], 41], "deci"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["After: ", 
   Hyperlink["The Need to Decimate", {
     NotebookObject[
      FrontEndObject[
       LinkObject["iqxbm_shm", 3, 1]], 41], "deci"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[658]:=",ExpressionUUID->"b848d373-06c9-4435-93c8-ed44248309bf"]
}, Open  ]]
}, Open  ]],

Cell["\<\
I\[CloseCurlyQuote]ve told you about a lot of things so far, but I haven\
\[CloseCurlyQuote]t told you what we\[CloseCurlyQuote]re actually doing. Well \
here it goes (drum roll please): 

You will take pictures of the laser beam at different z (axis of propagation) \
position...

...and then use the tools I have provided in my package...

...to find the beam waist and beam waist\[CloseCurlyQuote]s position of the \
laser beam. 

After you know these two parameters you will be able to correctly manipulate \
the beam with lenses. We have a lot more to cover before you are ready to do \
that though. 

How do my tools determine the beam waist and beam waist position? They do \
what is called fitting the 3D intensity equation covered in the previous \
section to each of the images (or more specifically to the image data). 

But we are not going to focus on fitting just yet because we have to talk \
about the camera you will be using to take images. You will 

I\[CloseCurlyQuote]ve included the spec sheet for the camera below and you \
can access it via the buttons.  The only pieces of information you should \
care about are that: images taken with the camera have dimensions of 1280 \
pixels by 1024 pixels and that each pixel is square and has a side dimension \
of 5.2 micrometers (microns) (\[Mu]m). \
\>", "Text",ExpressionUUID->"c32e4e7a-54d4-4fde-b20e-d7112b5628a3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ButtonBar", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\"\<View document\>\"", "\[RuleDelayed]", 
     RowBox[{"Expression", "[", 
      RowBox[{
       RowBox[{"doc2", "=", 
        RowBox[{"Import", "[", 
         RowBox[{"currentdirectory", "<>", "\"\<cameraspecsfinal.pdf\>\""}], 
         "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Pages\>\"", ",", "1"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"\"\<close document\>\"", "\[RuleDelayed]", 
     RowBox[{"Expression", "[", 
      RowBox[{"Clear", "[", "doc2", "]"}], "]"}]}]}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dynamic", "[", "doc2", "]"}]}], "Input",
 CellLabel->
  "In[661]:=",ExpressionUUID->"799dbbd3-9306-4797-8188-439fb91f81b8"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     ButtonBox["\<\"View document\"\>",
      Appearance->{"AbuttingRight"},
      ButtonFunction:>Expression[$CellContext`doc2 = Import[
          
          StringJoin[$CellContext`currentdirectory, 
           "cameraspecsfinal.pdf"]], {"Pages", 1}],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox["\<\"close document\"\>",
      Appearance->{"AbuttingLeft"},
      ButtonFunction:>Expression[
        Clear[$CellContext`doc2]],
      Evaluator->Automatic,
      Method->"Preemptive"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  ButtonBar[{"View document" :> Expression[$CellContext`doc2 = Import[
        StringJoin[$CellContext`currentdirectory, "cameraspecsfinal.pdf"]], {
      "Pages", 1}], "close document" :> Expression[
      Clear[$CellContext`doc2]]}, Appearance -> {Automatic}]]], "Output",
 CellLabel->
  "Out[661]=",ExpressionUUID->"68b5bb19-a913-422a-b075-b50f4f45a0ac"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`doc2, StandardForm],
  ImageSizeCache->{31., {1., 10.}}]], "Output",
 CellLabel->
  "Out[662]=",ExpressionUUID->"6ebfc422-ef45-4958-8b08-eeb95b2152cc"]
}, Open  ]],

Cell["\<\
In order to take pictures with the camera you will need to use the Thorlab \
Thorcam software. Here is some bad news. Thorcam software only runs on \
Windows, not macOS! If you have a Mac, you will need to either install a boot \
camp partition or use a virtual machine with usb device pass through. You\
\[CloseCurlyQuote]ll have to look up how to do both of those if you have a \
Mac. The link to the Thorcam software is below. With that sad news still \
fresh in your mind, continue on to next section. \
\>", "Text",ExpressionUUID->"03841e15-e54a-4862-b365-e60b851b5c8d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Thorcam Software\>\"", ",", 
   "\"\<https://www.thorlabs.com/software_pages/ViewSoftwarePage.cfm?Code=\
ThorCam\>\""}], "]"}]], "Input",
 CellLabel->
  "In[663]:=",ExpressionUUID->"457e299c-d6cd-4fd1-93ba-fba8cb124ff2"],

Cell[BoxData[
 TemplateBox[{
  "\"Thorcam Software\"",
   "https://www.thorlabs.com/software_pages/ViewSoftwarePage.cfm?Code=\
ThorCam"},
  "HyperlinkURL"]], "Output",
 CellLabel->
  "Out[663]=",ExpressionUUID->"f1458f89-9e24-4876-802f-498c32c17adb"]
}, Open  ]],

Cell["\<\
I intended to tell you how to use the Thorlabs software in this brown text \
box but I ran out of time. Maybe one day (probably never) \
I\[CloseCurlyQuote]ll fill in this section, but for now, \
it\[CloseCurlyQuote]ll be up to you to figure that out. I am attempting to \
tell you how to do everything else so please be understanding. \
\>", "Text",ExpressionUUID->"1a1811cf-2089-4ccf-bfa9-3bfb67afd4bc"],

Cell[BoxData[
 RowBox[{"CellPrint", "@", 
  RowBox[{"Cell", "[", 
   RowBox[{"\"\<The Need to Decimate\>\"", ",", "\"\<Chapter\>\"", 
    RowBox[{"(*", 
     RowBox[{"format", " ", "style", " ", "option"}], "*)"}], ",", 
    RowBox[{"CellTags", "\[Rule]", 
     RowBox[{"{", "\"\<deci\>\"", "}"}]}]}], "]"}]}]], "Input",
 CellLabel->
  "In[664]:=",ExpressionUUID->"20b90f28-492e-4bf5-bae9-f2b81b28aaf8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Need to Decimate", "Chapter",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellTags->"deci",ExpressionUUID->"f6fc9c31-617a-4703-b2ac-3cc0c2ba780d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Home:  \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Table of Contents\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<toc\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Before:\>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<The Thorlabs Camera\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<camera\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<After: \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Code Used to Decimate\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<decicode\>\""}], 
      "}"}]}], "]"}]}], "]"}]}], "Input",
 CellLabel->
  "In[665]:=",ExpressionUUID->"d2b663a0-30d7-4c1f-9fce-b58628b1b028"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Home:  \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Table of Contents\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["iqxbm_shm", 3, 1]], 41], "toc"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Home:  ", 
   Hyperlink["Table of Contents", {
     NotebookObject[
      FrontEndObject[
       LinkObject["iqxbm_shm", 3, 1]], 41], "toc"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[665]:=",ExpressionUUID->"826310ab-f120-4e2c-a6bc-2f326ee2a874"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Before:\"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"The Thorlabs Camera\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["iqxbm_shm", 3, 1]], 41], "camera"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Before:", 
   Hyperlink["The Thorlabs Camera", {
     NotebookObject[
      FrontEndObject[
       LinkObject["iqxbm_shm", 3, 1]], 41], "camera"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[665]:=",ExpressionUUID->"6c11e047-add0-44ec-9db3-5d49d80314d4"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"After: \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Code Used to Decimate\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["iqxbm_shm", 3, 1]], 41], "decicode"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["After: ", 
   Hyperlink["Code Used to Decimate", {
     NotebookObject[
      FrontEndObject[
       LinkObject["iqxbm_shm", 3, 1]], 41], "decicode"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[665]:=",ExpressionUUID->"092931ba-b421-49f5-9977-431a396920be"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Image files taken with the Thorlab camera contain way more data than we need. \
The average picture from it contains about 1.3 million pixels. We only want \
tens of thousands of pixels so that our computations don\[CloseCurlyQuote]t \
take forever to run. Just think of it like this:  Two million dollars is a \
lot more than 10 thousand dollars...a lot more. \
\>", "Text",ExpressionUUID->"d689d1a9-873b-495c-bcc6-135aa13a9460"],

Cell["\<\
So how do we get from 1.3 million pixels to tens of thousands of pixels. We \
do something called decimation. When you decimate an image, you pick out the \
key pieces of information and throw out all the rest. 

When we are decimating an image we need to choose by how much we decimate it \
by. You have to ask yourself, do I want to turn that 1.3 million pixels into \
100,000 pixels, 10,000 pixels or 1,000 pixels? YOu generally want as many as \
your computer can reasonable handle. 

Two different ways to decimate an image are demonstrated in this \
documentation (and these same two ways are used by my tools). The two ways \
are: automatic cropping and downsampling.

Automatic cropping, automatically crops the image to contain just the laser \
beam and just a little bit of the background. 

Downsampling is a little more difficult to explain and better seen in an \
example. So here\[CloseCurlyQuote]s the example of downsampling:\
\>", "Text",ExpressionUUID->"60a2e22f-8b06-4833-9eca-522164bf4c75"],

Cell["\<\
If you have not taken a linear algebra course: a matrix is a grid of numbers. \
Representing data in such a grid allows for some very cool math. \
\>", "Text",ExpressionUUID->"03b662bd-513a-4ddc-b3f3-b2fd09f9b451"],

Cell["\<\
Consider the matrix of values below. This matrix of values could represent \
pixel intensity values from an image sensor. That\[CloseCurlyQuote]s right \
folks, that camera on your phone contains an image sensor. And on this image \
sensor is a grid of pixels. And each pixel records a value (or a set of \
values). 

Each number represents a value of the intensity of light that hit that pixel. 

In just this example, 0 means the pixel registered light hitting it (so this \
pixel will be white), and 1 means the pixel did not register light (so this \
pixel will be black). This is an 8 by 8 matrix. \
\>", "Text",ExpressionUUID->"3862630d-9649-4abc-9338-bda01398d32d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"examplearray", "=", 
   RowBox[{"(", GridBox[{
      {"1", "1", "0", "0", "1", "1", "0", "0"},
      {"1", "1", "0", "0", "1", "1", "0", "0"},
      {"0", "0", "1", "1", "0", "0", "1", "1"},
      {"0", "0", "1", "1", "0", "0", "1", "1"},
      {"1", "1", "0", "0", "1", "1", "0", "0"},
      {"1", "1", "0", "0", "1", "1", "0", "0"},
      {"0", "0", "1", "1", "0", "0", "1", "1"},
      {"0", "0", "1", "1", "0", "0", "1", "1"}
     }], ")"}]}], ";"}]], "Input",
 CellLabel->
  "In[668]:=",ExpressionUUID->"5d2a305d-f2da-48a1-8359-585014ebc490"],

Cell["\<\
An image produced by this matrix of values would look like the grid of pixels \
below. The tick marks are aligned with the center point of each pixel. I\
\[CloseCurlyQuote]ve included red grid lines that represent the edges of \
pixels so that you can make out each pixel. \
\>", "Text",ExpressionUUID->"38ffcf31-df78-4b5a-aca1-6044fc4ec1f2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"examplearray", ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Mesh", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", "All"}], ",", 
   RowBox[{"MeshStyle", "\[Rule]", "Red"}]}], "]"}]], "Input",
 CellLabel->
  "In[669]:=",ExpressionUUID->"ae8f37d1-bbc6-4657-bb0d-a1d86fa41566"],

Cell[BoxData[
 GraphicsBox[{
   RasterBox[{{1, 1, 0, 0, 1, 1, 0, 0}, {1, 1, 0, 0, 1, 1, 0, 0}, {0, 0, 1, 1,
     0, 0, 1, 1}, {0, 0, 1, 1, 0, 0, 1, 1}, {1, 1, 0, 0, 1, 1, 0, 0}, {1, 1, 
    0, 0, 1, 1, 0, 0}, {0, 0, 1, 1, 0, 0, 1, 1}, {0, 0, 1, 1, 0, 0, 1, 1}}, {{
    0, 0}, {8, 8}}, {0, 1}], {
    {RGBColor[1, 0, 0], 
     StyleBox[
      LineBox[{{{0, 8}, {8, 8}}, {{0, 7}, {8, 7}}, {{0, 6}, {8, 6}}, {{0, 
       5}, {8, 5}}, {{0, 4}, {8, 4}}, {{0, 3}, {8, 3}}, {{0, 2}, {8, 2}}, {{0,
        1}, {8, 1}}, {{0, 0}, {8, 0}}}],
      Antialiasing->False]}, 
    {RGBColor[1, 0, 0], 
     StyleBox[
      LineBox[{{{0, 0}, {0, 8}}, {{1, 0}, {1, 8}}, {{2, 0}, {2, 8}}, {{3, 
       0}, {3, 8}}, {{4, 0}, {4, 8}}, {{5, 0}, {5, 8}}, {{6, 0}, {6, 8}}, {{7,
        0}, {7, 8}}, {{8, 0}, {8, 8}}}],
      Antialiasing->False]}}},
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{7.5, 
       FormBox["1", TraditionalForm]}, {6.5, 
       FormBox["2", TraditionalForm]}, {5.5, 
       FormBox["3", TraditionalForm]}, {4.5, 
       FormBox["4", TraditionalForm]}, {3.5, 
       FormBox["5", TraditionalForm]}, {2.5, 
       FormBox["6", TraditionalForm]}, {1.5, 
       FormBox["7", TraditionalForm]}, {0.5, 
       FormBox["8", TraditionalForm]}}, {{7.5, 
       FormBox["1", TraditionalForm]}, {6.5, 
       FormBox["2", TraditionalForm]}, {5.5, 
       FormBox["3", TraditionalForm]}, {4.5, 
       FormBox["4", TraditionalForm]}, {3.5, 
       FormBox["5", TraditionalForm]}, {2.5, 
       FormBox["6", TraditionalForm]}, {1.5, 
       FormBox["7", TraditionalForm]}, {0.5, 
       FormBox["8", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}, {3.5, 
       FormBox["4", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}, {5.5, 
       FormBox["6", TraditionalForm]}, {6.5, 
       FormBox["7", TraditionalForm]}, {7.5, 
       FormBox["8", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}, {3.5, 
       FormBox["4", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}, {5.5, 
       FormBox["6", TraditionalForm]}, {6.5, 
       FormBox["7", TraditionalForm]}, {7.5, 
       FormBox["8", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellLabel->
  "Out[669]=",ExpressionUUID->"a8cfa4b7-d64f-4d09-872b-2d37fd4f3a4d"]
}, Open  ]],

Cell["\<\
If I now Downsample the data to get a matrix whose both height and width \
dimensions has been divided by 2, I get this matrix:\
\>", "Text",ExpressionUUID->"0beb34b8-9899-497f-a407-9aab1dc52741"],

Cell[BoxData[
 RowBox[{
  RowBox[{"resampledexamplearray", "=", 
   RowBox[{"ArrayResample", "[", 
    RowBox[{"examplearray", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "4"}], "}"}], ",", 
     RowBox[{"Resampling", "\[Rule]", "\"\<Nearest\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->
  "In[670]:=",ExpressionUUID->"1093e79d-8257-4238-8389-b265c450f9c7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"resampledexamplearray", "//", "MatrixForm"}]], "Input",
 CellLabel->
  "In[671]:=",ExpressionUUID->"21b688a1-45b7-4cc7-a4da-ecc004415cdf"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "1", "0"},
     {"0", "1", "0", "1"},
     {"1", "0", "1", "0"},
     {"0", "1", "0", "1"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[671]//MatrixForm=",ExpressionUUID->"711f75df-316f-4396-8941-\
abd6e06e30f1"]
}, Open  ]],

Cell["\<\
Made into an image, the downsampled matrix looks like the following:\
\>", "Text",ExpressionUUID->"365f8cea-1d52-4330-b2bc-2cf208e776cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"resampledexamplearray", ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Mesh", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", "All"}], ",", 
   RowBox[{"MeshStyle", "\[Rule]", "Red"}]}], "]"}]], "Input",
 CellLabel->
  "In[672]:=",ExpressionUUID->"bbfab33e-35f6-4fe6-8bb4-68bb7217d4a1"],

Cell[BoxData[
 GraphicsBox[{
   RasterBox[{{1, 0, 1, 0}, {0, 1, 0, 1}, {1, 0, 1, 0}, {0, 1, 0, 1}}, {{0, 
    0}, {4, 4}}, {0, 1}], {
    {RGBColor[1, 0, 0], 
     StyleBox[
      LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 2}}, {{0, 
       1}, {4, 1}}, {{0, 0}, {4, 0}}}],
      Antialiasing->False]}, 
    {RGBColor[1, 0, 0], 
     StyleBox[
      LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 4}}, {{3, 
       0}, {3, 4}}, {{4, 0}, {4, 4}}}],
      Antialiasing->False]}}},
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{3.5, 
       FormBox["1", TraditionalForm]}, {2.5, 
       FormBox["2", TraditionalForm]}, {1.5, 
       FormBox["3", TraditionalForm]}, {0.5, 
       FormBox["4", TraditionalForm]}}, {{3.5, 
       FormBox["1", TraditionalForm]}, {2.5, 
       FormBox["2", TraditionalForm]}, {1.5, 
       FormBox["3", TraditionalForm]}, {0.5, 
       FormBox["4", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}, {3.5, 
       FormBox["4", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}, {3.5, 
       FormBox["4", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellLabel->
  "Out[672]=",ExpressionUUID->"18124e4e-4318-49ec-b01c-3d19235e2899"]
}, Open  ]],

Cell["\<\
You\[CloseCurlyQuote]ll notice that the matrix is now 4 by 4 pixels. This is \
because of the way I asked Mathematica to Downsample the image. Mathematica \
starting at the top left of the matrix, looked at every 2 by 2 block of \
pixels. It found the average value in each 2 by 2 block and then replaced the \
2 by 2 block with 1 pixel with the average value. Not all images look exactly \
the same when downsampled. It just so happens that this was the case due to \
my equisite planning. \
\>", "Text",ExpressionUUID->"86bc1f6d-4634-428b-a2f7-8b1004e1a401"],

Cell["\<\
Ideally, when decimating an image of the beam, you want to crop the most and \
downsample the least, as cropping throws out useless image data (the black \
background) and keeps the important image data (the beam) untouched, whereas \
downsampling introduces new intensity values everywhere in the image because \
it is averaging, therefore affecting the data. It was with this philosophy in \
mind that I created my decimation tool. \
\>", "Text",ExpressionUUID->"d748072d-fb83-4628-84d8-3d6d085d064f"],

Cell[TextData[{
 StyleBox["To recap",
  FontWeight->"Bold"],
 ": \n\n1)Decimation is done to save computing time. \n2)There are two \
methods to doing decimation that I cover and use: \n\ta) automatic cropping\n\
\tb) downsampling\n3) Automatic cropping is preferred as it  leaves the image \
data we care about untouched.\n4) We can choose how much we want to decimate \
an image by. We can choose how much to crop it by. We can choose how much to \
Downsample it by. "
}], "Text",ExpressionUUID->"316fb411-5ffb-400c-974e-889230e7983d"],

Cell[TextData[{
 "Automatic cropping at first appeared to be a perfect solution, however, \
perfection does not exist. It was decided by Dr. Marcus and the group, that \
an image should not take more than 2 minutes to be analyzed by the computer \
(the range of potential times ranged from 10 secs to 10 minutes). It was \
found that automatic cropping does not save time with large beams. Here\
\[CloseCurlyQuote]s why:\n\nFor explanation purposes lets say the amount of \
pixels in a image that demands exactly 2 minutes of computing time when \
analyzed is represented by the variable ",
 StyleBox["p",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ". If a beam is sufficiently large, the automatic cropping tool will output \
an image with an amount of pixels \[GreaterEqual] ",
 StyleBox["p.",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" ",
  FontSlant->"Italic"],
 "Thus, on these sufficiently large beams, the auto-cropping program produces \
images that will take more than 2 minutes of analysis. Further, it was found \
that downsampling an image from 1.3 million pixels to a ",
 StyleBox["p",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" ",
  FontSlant->"Italic"],
 "number of pixels did not significantly affect the data. \n\nTherefore:\n\
Auto-cropping is used on images of beams that will result in a final image \
with an amount of pixels less than ",
 StyleBox["p",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[". (that is to say auto-cropping is used on beams smaller than a \
certain size). \n",
  FontSlant->"Italic"],
 "Downsampling is used on images of beams that would have resulted in an \
amount of pixels greater than ",
 StyleBox["p",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" ",
  FontWeight->"Bold"],
 "had these same images been auto-cropped. When downsampled, images are \
always downsampled to have an amount of pixels equal to ",
 StyleBox["p",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ". "
}], "Text",ExpressionUUID->"4a56aaf5-fe49-4984-b119-13cedecbb216"],

Cell["\<\
With any of the analysis that we do on an image, we will have to convert it \
to real world units. For example, we have to go from pixels to millimeters. \
With automatic cropping this pixel to meter conversion is easy, as one pixel \
has a side dimensions always equal to 5.2 \[Mu]m. However,  downsampling, \
always changes a pixel\[CloseCurlyQuote]s side dimension to 10.4 \[Mu]m. This \
is from one pixel being replaced by a 2 by 2 block of pixels. The dimensions \
that I chose to have an image downsampled to were specifically chosen to \
maintain the original dimension ratio.\
\>", "Text",ExpressionUUID->"f65646d2-9f52-4c30-a8a8-5465cdb1db3e"],

Cell[BoxData[
 RowBox[{"CellPrint", "@", 
  RowBox[{"Cell", "[", 
   RowBox[{"\"\<What is a Module?\>\"", ",", "\"\<Chapter\>\"", 
    RowBox[{"(*", 
     RowBox[{"format", " ", "style", " ", "option"}], "*)"}], ",", 
    RowBox[{"CellTags", "\[Rule]", 
     RowBox[{"{", "\"\<mod\>\"", "}"}]}]}], "]"}]}]], "Input",
 CellLabel->
  "In[673]:=",ExpressionUUID->"a2566440-3398-4591-986a-ad39e8a5993c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["What is a Module?", "Chapter",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellTags->"mod",ExpressionUUID->"3c4f77d7-200e-432f-adc4-59c7be8d2f4b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Home:  \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Table of Contents\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<toc\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Before:\>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<The Need to Decimate\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<deci\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<After: \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Code Use to Decimate\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<decicode\>\""}], 
      "}"}]}], "]"}]}], "]"}]}], "Input",
 CellLabel->
  "In[674]:=",ExpressionUUID->"4adafa31-0342-4cdd-8ba3-aac3412da0de"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Home:  \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Table of Contents\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["iqxbm_shm", 3, 1]], 41], "toc"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Home:  ", 
   Hyperlink["Table of Contents", {
     NotebookObject[
      FrontEndObject[
       LinkObject["iqxbm_shm", 3, 1]], 41], "toc"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[674]:=",ExpressionUUID->"42b45433-1d82-4fed-87ea-269e1431b608"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Before:\"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"The Need to Decimate\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["iqxbm_shm", 3, 1]], 41], "deci"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Before:", 
   Hyperlink["The Need to Decimate", {
     NotebookObject[
      FrontEndObject[
       LinkObject["iqxbm_shm", 3, 1]], 41], "deci"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[674]:=",ExpressionUUID->"5fec46cb-c486-450a-a824-ca5904f3a307"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"After: \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Code Use to Decimate\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["iqxbm_shm", 3, 1]], 41], "decicode"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["After: ", 
   Hyperlink["Code Use to Decimate", {
     NotebookObject[
      FrontEndObject[
       LinkObject["iqxbm_shm", 3, 1]], 41], "decicode"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[674]:=",ExpressionUUID->"0062d421-88df-46a7-a017-d23748dfd57c"]
}, Open  ]]
}, Open  ]],

Cell["\<\
You can skip this section if you do not plan on fixing or changing the \
package code. If you do plan on editing the package code, you will have to \
edit the .m files found in the \[OpenCurlyDoubleQuote]FindingSpotSize\
\[CloseCurlyDoubleQuote] folder. You will also have to be familiar with the \
Module Function and the format for .m files. \
\>", "Text",ExpressionUUID->"23fb5982-080c-4e1e-bfd6-9951e3958d93"],

Cell["\<\
We are going to take a short break from talking about decimation and talk \
about a function in Mathematica I used a lot when creating my tools. The \
function is Module. You will need to understand what a module is, if you ever \
want to change, or add to, my FindingSpotSize package. \
\>", "Text",ExpressionUUID->"b68e00b0-0327-4656-a11f-99e64a8510e1"],

Cell["\<\
You can always ask Mathematica to tell you about a function by putting a \
question mark in front of the Function. However as you see below, this \
information is not always helpful.\
\>", "Text",ExpressionUUID->"ce833934-b21c-4e35-8b5d-a48dca50b3e4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Module"}]], "Input",
 CellLabel->
  "In[677]:=",ExpressionUUID->"8a4169f8-f5b4-4bbb-a6de-931c2d73d60f"],

Cell[BoxData[
 RowBox[{"\<\"\\!\\(\\*RowBox[{\\\"Module\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) specifies that \
occurrences of the symbols \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"y\\\", \\\"TI\\\"]\\), \[Ellipsis] in \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) should be treated as local. \
\\n\\!\\(\\*RowBox[{\\\"Module\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\"=\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"0\\\", \
\\\"TR\\\"]]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\
\\\"}], \\\",\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
defines initial values for \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\), \
\[Ellipsis]. \"\>", "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Module"]}]], "Print", "PrintUsage",
 CellTags->
  "Info6773732883974-3918236",ExpressionUUID->"f1304859-156a-4119-944c-\
204b4833566e"]
}, Open  ]],

Cell["\<\
So don\[CloseCurlyQuote]t count on Mathematica to help you use its functions. \
\>", "Text",ExpressionUUID->"c90a61ac-4924-4a2d-9a93-a80f2ee0ca09"],

Cell["\<\
A module establishes a local namespace or scope for variables. Module allows \
you to use already defined variables as if they were not already defined. \
\>", "Text",ExpressionUUID->"839aa269-f855-46cd-a3db-202d27c29963"],

Cell[TextData[{
 "Let us see an example. \nFirst, I am going to assign a value of 7 to a \
variable x",
 StyleBox[" ",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 "for no particular reason. "
}], "Text",ExpressionUUID->"b0227ea5-3121-4832-86ad-fb0ab8de5081"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "=", "7"}]], "Input",
 CellLabel->
  "In[678]:=",ExpressionUUID->"2fdd3554-382e-41d8-8669-b05d3235f2f4"],

Cell[BoxData["7"], "Output",
 CellLabel->
  "Out[678]=",ExpressionUUID->"00f60286-34d7-434a-8470-34b113022347"]
}, Open  ]],

Cell["\<\
Now I am going to create a module. Don\[CloseCurlyQuote]t worry about the \
code I use to do it yet, just focus on the output for now. Inside the module \
I am going to create the variable x. I am then going to assign a value of 3 \
to x. The output should be 3 and it is. 

This is a nice feature of a module. Anything that goes into a module assumes \
a new identify as long as it is in the module and when you are outside of the \
module everything goes back to the way it was. \
\>", "Text",ExpressionUUID->"4a6a85fd-e8b9-4ded-b52e-6bd2a562d676"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", "x", "}"}], ",", 
   RowBox[{
    RowBox[{"x", "=", "3"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<The value of x inside the module: \>\"", "<>", 
      RowBox[{"ToString", "[", "x", "]"}]}], "]"}]}]}], "]"}]], "Input",
 CellLabel->
  "In[679]:=",ExpressionUUID->"40d9a09d-3c8d-4b04-bb9b-ed47b4c97367"],

Cell[BoxData["\<\"The value of x inside the module: 3\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[679]:=",ExpressionUUID->"62376483-9937-4ad2-b380-30b0a55168bb"]
}, Open  ]],

Cell["\<\
Now I am going to ask Mathematica to tell me what the value of x is outside \
of the module. If I setup the module correctly, the value outputted should be \
7, and it is.\
\>", "Text",ExpressionUUID->"15198ecc-5afb-4265-be46-3d97626f829a"],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellLabel->
  "In[680]:=",ExpressionUUID->"58262253-0b43-49d4-b9b2-e9aba4b11626"],

Cell[BoxData["7"], "Output",
 CellLabel->
  "Out[680]=",ExpressionUUID->"75bd4ecf-872d-40fa-ae73-0dcce8950cf5"]
}, Open  ]],

Cell["\<\
You can even do calculations in a module. I am going to assign x a value of 5 \
and then add 6 to this value. It should be noted that module outputs the \
result of the last entry inside it. In this case it outputs the result of  x+6\
\>", "Text",ExpressionUUID->"fc49c149-9a24-4909-9c9c-eb70fd678fc1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", "x", "}"}], ",", 
   RowBox[{
    RowBox[{"x", "=", "5"}], ";", 
    RowBox[{"x", "+", "6"}]}]}], "]"}]], "Input",
 CellLabel->
  "In[681]:=",ExpressionUUID->"f8cfafa6-de75-48f4-9506-73bd2535eab4"],

Cell[BoxData["11"], "Output",
 CellLabel->
  "Out[681]=",ExpressionUUID->"8ca4103a-b00a-4cb8-b12c-0c7ea256769e"]
}, Open  ]],

Cell["The format of Module is as follow:", "Text",ExpressionUUID->"ddd84b80-6ac7-48e6-8b9f-e6b1968171f1"],

Cell["\<\
Module[{list of variables you want to use in your module},each line of code; \
separated; by semicolons; with the last entry being the returned output]\
\>", "Program",ExpressionUUID->"06c808af-afd9-413e-9dca-213ad7b1926c"],

Cell["\<\
A multivariable and multiple calculation Module looks like the below line of \
code. You will see that the last entry is a list. What I like about Module is \
that you can return a list as an output. \
\>", "Text",ExpressionUUID->"1d4156db-8e04-4211-82ea-8758c8a659ce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
   RowBox[{
    RowBox[{"x", "=", "8"}], ";", 
    RowBox[{"y", "=", "2"}], ";", 
    RowBox[{"z", "=", 
     RowBox[{"x", "+", "y"}]}], ";", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]}], "]"}]], "Input",
 CellLabel->
  "In[682]:=",ExpressionUUID->"a02eed41-8274-45a1-9849-a63091068e67"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8", ",", "2", ",", "10"}], "}"}]], "Output",
 CellLabel->
  "Out[682]=",ExpressionUUID->"ba878bab-8a7a-443c-9f0a-e6c619e2acb7"]
}, Open  ]],

Cell[TextData[{
 "I mentioned before that anything that goes into a Module assumes a new \
identity. That is only true if you make sure to list the variable in the \
section of Module I called: ",
 StyleBox["list of variables you want to use in your module",
  FontSlant->"Italic"],
 ". "
}], "Text",ExpressionUUID->"b850a529-d7ad-46a0-876c-514083ebbaba"],

Cell[TextData[{
 "x still has a value of 7 in the global scope (outside of the module) . If I \
do not list x as a variable in the ",
 StyleBox["list of variables you want to use in your module",
  FontSlant->"Italic"],
 " list, then the module does not give x a temporarily new identity. That can \
be seen below where I do not list it. "
}], "Text",ExpressionUUID->"de3e7657-c096-4d97-a762-e8750ab48092"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"y", ",", "z"}], "}"}], ",", 
   RowBox[{
    RowBox[{"y", "=", "2"}], ";", 
    RowBox[{"z", "=", 
     RowBox[{"x", "+", "y"}]}], ";", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]}], "]"}]], "Input",
 CellLabel->
  "In[683]:=",ExpressionUUID->"92cd3bac-77cf-4e46-a72c-aca392780d41"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7", ",", "2", ",", "9"}], "}"}]], "Output",
 CellLabel->
  "Out[683]=",ExpressionUUID->"a04fdd41-5871-48b4-9769-aef8f1543747"]
}, Open  ]],

Cell["\<\
It is important to know that if do not list x intially but do assign it a \
value inside the module, I change its value outside of the module (because, \
well, it never really was officially in the module). That can be seen below \
where I assign x a value of 6 inside the module and then ask for Mathematica \
to tell me what it thinks the value of x is. Instead of returning 7, \
Mathematica will tell us x now has a value of 6. \
\>", "Text",ExpressionUUID->"7969209e-249f-440d-9a00-4799c956cfb3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"y", ",", "z"}], "}"}], ",", 
   RowBox[{
    RowBox[{"x", "=", "6"}], ";", 
    RowBox[{"y", "=", "2"}], ";", 
    RowBox[{"z", "=", 
     RowBox[{"x", "+", "y"}]}], ";", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]}], "]"}]], "Input",
 CellLabel->
  "In[684]:=",ExpressionUUID->"17258ee3-3a24-4e71-909b-f6ba35a8eb3e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6", ",", "2", ",", "8"}], "}"}]], "Output",
 CellLabel->
  "Out[684]=",ExpressionUUID->"71a62a33-a497-4cfe-bfba-7b14669cd150"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellLabel->
  "In[685]:=",ExpressionUUID->"0bcf64e6-1c0f-4d97-ae81-111bb29e4bb1"],

Cell[BoxData["6"], "Output",
 CellLabel->
  "Out[685]=",ExpressionUUID->"adc28a5c-3b20-4d0d-af61-9cd2b6d7fce9"]
}, Open  ]],

Cell["Also,", "Text",ExpressionUUID->"4961e4bb-f8d6-40c0-b054-8266a03d358e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", "x", "}"}], ",", 
   RowBox[{"x", "=", "3"}]}], "]"}]], "Input",
 CellLabel->
  "In[686]:=",ExpressionUUID->"42cc9a2b-e1dc-4080-8f24-9688a999107e"],

Cell[BoxData["3"], "Output",
 CellLabel->
  "Out[686]=",ExpressionUUID->"d9c87be2-0b28-4244-b851-9684eff358b1"]
}, Open  ]],

Cell["is equivalent to:", "Text",ExpressionUUID->"31fc073a-dc48-41ad-a63f-1e3199e6d6f7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "=", "3"}], "}"}], ",", "x"}], "]"}]], "Input",
 CellLabel->
  "In[687]:=",ExpressionUUID->"fde4fae4-025c-42b5-b766-d0f3a24ec856"],

Cell[BoxData["3"], "Output",
 CellLabel->
  "Out[687]=",ExpressionUUID->"9910fe0b-7b3a-4fd4-ba17-d4d01666f20f"]
}, Open  ]],

Cell[TextData[{
 "You can assign initial values to the variables inside the ",
 StyleBox["list of variables you want to use in your module.",
  FontSlant->"Italic"]
}], "Text",ExpressionUUID->"bf8a3cc5-1f7f-43a1-a822-1a49dd85b800"],

Cell["\<\
Module is a very powerful when used correctly because it can allow for \
actually programs to be written in Mathematica. You might be asking where \
exactly does one use Module. Well you use it in user defined functions. I am \
going to write out the code to a random user defined function using Module \
below and then I will explain it. \
\>", "Text",ExpressionUUID->"e23f885d-49f8-4143-9301-b0b9dfdbd805"],

Cell[BoxData[
 RowBox[{
  RowBox[{"add2", "[", "number_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"num", "=", "number"}], ",", "newnum"}], "}"}], ",", 
    RowBox[{
     RowBox[{"newnum", "=", 
      RowBox[{"num", "+", "2"}]}], ";", 
     RowBox[{"{", 
      RowBox[{"num", ",", "newnum"}], "}"}]}]}], "]"}]}]], "Input",
 CellLabel->
  "In[688]:=",ExpressionUUID->"9d0aed51-7580-4cab-bbef-dd1e813d25e4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"add2", "[", "5", "]"}]], "Input",
 CellLabel->
  "In[689]:=",ExpressionUUID->"77874d21-b1ee-48db-a359-f492a9e88c44"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "7"}], "}"}]], "Output",
 CellLabel->
  "Out[689]=",ExpressionUUID->"b3580087-7ab0-4480-b78e-b83579cea650"]
}, Open  ]],

Cell["\<\
So this function will add 2 to any number entered into it. Let\
\[CloseCurlyQuote]s break this code down into pieces. First, I write the \
function\[CloseCurlyQuote]s name and decide what to call the input value. \
\>", "Text",ExpressionUUID->"f22da23c-bd53-48a9-8128-5669d6250bd0"],

Cell["add2[number_] ", "Program",ExpressionUUID->"419870ec-35c4-468c-b4f5-4d4b051e5951"],

Cell["\<\
For any function you create, you put an underscore after the name of the \
variable you use for an input value. \
\>", "Text",ExpressionUUID->"97cd3542-5cd0-4bab-928f-b84b502506f9"],

Cell["Then I add", "Text",ExpressionUUID->"e1bce7a8-50f9-4e79-ada4-702af6512634"],

Cell[":=", "Program",ExpressionUUID->"090a2fcb-a8e3-46ce-8f6d-f4c52e620bef"],

Cell["to get", "Text",ExpressionUUID->"5150e56e-7c0a-4a2c-af99-4d1d00ec39a7"],

Cell["add2[number_] :=", "Program",ExpressionUUID->"d596a9e4-a6d3-4701-8e95-b34c08174be0"],

Cell["When you create a function you use you use \[OpenCurlyDoubleQuote]:=\
\[CloseCurlyDoubleQuote]. ", "Text",ExpressionUUID->"3cff6871-3811-40d3-91d4-\
22f66eebbc88"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "t_", "]"}], ":=", 
  SuperscriptBox["t", "2"]}]], "Input",
 CellLabel->
  "In[690]:=",ExpressionUUID->"1b9a88da-8845-46d1-92f3-9743c610da8d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "5", "]"}]], "Input",
 CellLabel->
  "In[691]:=",ExpressionUUID->"4ba75595-51b6-43d1-97ad-ef1a5252717a"],

Cell[BoxData["25"], "Output",
 CellLabel->
  "Out[691]=",ExpressionUUID->"eeca15c3-6241-4ba5-bc21-e6432e7886aa"]
}, Open  ]],

Cell["\<\
I then create the module. Notice there is a comma between the list of \
variables and the area where computations happen. \
\>", "Text",ExpressionUUID->"a38b4d80-1182-4cae-ac26-580526d27225"],

Cell["add2[number_] :=Module[{},]", "Program",ExpressionUUID->"0f234d5a-b533-47f3-8976-be260e045329"],

Cell["\<\
And then I tell it what variables I will be using inside the module. I will \
be using a variable called \[OpenCurlyDoubleQuote]num\[CloseCurlyDoubleQuote] \
and \[OpenCurlyDoubleQuote]newnum\[CloseCurlyDoubleQuote]. This part of the \
process always requires foresight.\
\>", "Text",ExpressionUUID->"3f20c280-9182-4f3e-9c5b-6a69ea9cf5d4"],

Cell["add2[number_] :=Module[{num, newnum},]", "Program",ExpressionUUID->"ec38805d-10cd-4c90-aeca-370470c2d8db"],

Cell["\<\
I then make it so that \[OpenCurlyDoubleQuote]num\[CloseCurlyDoubleQuote] has \
an initial value equal to the input value \[OpenCurlyDoubleQuote]number\
\[CloseCurlyDoubleQuote]. This part of the process creates the bridge that \
spans from the outside of the module to inside the module. \
\>", "Text",ExpressionUUID->"68659b82-bc9f-4c94-8be5-a04ce5edb287"],

Cell["add2[number_] := Module[{num = number, newnum},]", "Program",ExpressionUUID->"7471452e-8758-49e2-953e-1a37329e9682"],

Cell["\<\
Before I thought of what variables I needed inside the module, I thought \
about how I was going to return the output. I decided that I would assign the \
result of the decision to the a variable called \[OpenCurlyDoubleQuote]newnum\
\[CloseCurlyDoubleQuote]. Hence, why I created a \
\[OpenCurlyDoubleQuote]newnum\[CloseCurlyDoubleQuote] variable inside the \
module earlier and said that it required foresight. 

So now I perform adding 2 to num, and assign the result to variable \
\[OpenCurlyDoubleQuote]newnum\[CloseCurlyDoubleQuote]. Notice that I use \
\[OpenCurlyDoubleQuote]num\[CloseCurlyDoubleQuote] instead of number in the \
addition. It is best to use the variables local to the Module when doing \
anything inside the module. \
\>", "Text",ExpressionUUID->"5912ab1d-558c-43dc-ac05-82fa6fe5ee5f"],

Cell["\<\
add2[number_] := Module[{num = number, newnum}, newnum = num + 2]\
\>", "Program",ExpressionUUID->"a6b5ff32-af7d-4737-87b3-659ec90c4c4a"],

Cell["\<\
I then decide what the output will be. I decided it will be a list where the \
first element is the inputted value, and the second element is the value of \
the result of the addition. \
\>", "Text",ExpressionUUID->"2388f84d-02c1-4a97-a746-cc729060dd8f"],

Cell["\<\
add2[number_] := Module[{num = number, newnum},newnum = num + 2;{num,newnum}]\
\
\>", "Program",ExpressionUUID->"952b5fd3-7d6c-4264-8f74-9e079eed71f2"],

Cell["\<\
And that is it. I hope you have a better understanding of what a module is. \
If you still don\[CloseCurlyQuote]t understand, ask the internet for help. I\
\[CloseCurlyQuote]m sure there are better explanations online. No matter what \
you do, make sure you understand Module and how to use it to create a user \
defined (\[OpenCurlyDoubleQuote]do something\[CloseCurlyDoubleQuote]) \
function (not a math function) before moving on. \
\>", "Text",ExpressionUUID->"6435367e-5d85-4560-a802-fc0becbae310"],

Cell[TextData[{
 StyleBox["ATTENTION",
  FontWeight->"Bold"],
 ": After coming back to this program after a few months of doing other \
things, I now realize I probably could have done everything not using module. \
But since that is what I used and since I am not going to change it all to \
not use module, I think it was still worth your while to read about Module. "
}], "Text",ExpressionUUID->"517cf99a-304c-4205-be2c-00ae88e1cfa4"],

Cell[BoxData[
 RowBox[{"CellPrint", "@", 
  RowBox[{"Cell", "[", 
   RowBox[{"\"\<Code Used to Decimate\>\"", ",", "\"\<Chapter\>\"", 
    RowBox[{"(*", 
     RowBox[{"format", " ", "style", " ", "option"}], "*)"}], ",", 
    RowBox[{"CellTags", "\[Rule]", 
     RowBox[{"{", "\"\<decicode\>\"", "}"}]}]}], "]"}]}]], "Input",
 CellLabel->
  "In[692]:=",ExpressionUUID->"a2df2f77-df3b-405d-8718-92007b39c839"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code Used to Decimate", "Chapter",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellTags->"decicode",ExpressionUUID->"9b507183-d280-4650-b4c3-87369bb62bef"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Home:  \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Table of Contents\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<toc\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Before:\>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<What is a Module?\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<mod\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<After: \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Fitting an Image\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<fitim\>\""}], 
      "}"}]}], "]"}]}], "]"}]}], "Input",
 CellLabel->
  "In[693]:=",ExpressionUUID->"2f1658d1-6d0d-4375-9b01-0a674272ecbf"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Home:  \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Table of Contents\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["iqxbm_shm", 3, 1]], 41], "toc"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Home:  ", 
   Hyperlink["Table of Contents", {
     NotebookObject[
      FrontEndObject[
       LinkObject["iqxbm_shm", 3, 1]], 41], "toc"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[693]:=",ExpressionUUID->"7efb22bb-a90e-4a82-8d7d-c5a04d23294b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Before:\"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"What is a Module?\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["iqxbm_shm", 3, 1]], 41], "mod"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Before:", 
   Hyperlink["What is a Module?", {
     NotebookObject[
      FrontEndObject[
       LinkObject["iqxbm_shm", 3, 1]], 41], "mod"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[693]:=",ExpressionUUID->"ae5b2ed4-6292-4e3b-8cd2-734260a6bfff"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"After: \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Fitting an Image\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["iqxbm_shm", 3, 1]], 41], "fitim"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["After: ", 
   Hyperlink["Fitting an Image", {
     NotebookObject[
      FrontEndObject[
       LinkObject["iqxbm_shm", 3, 1]], 41], "fitim"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[693]:=",ExpressionUUID->"2e4efd75-e0d2-4a02-996d-c0ec7897cd43"]
}, Open  ]]
}, Open  ]],

Cell["\<\
My decimation process is performed by the tool TotallyDecimate. Below is a \
flowchart of the process that occurs in TotallyDecimate. \
I\[CloseCurlyQuote]ll walk you through the process. At this point, you are \
not expected to know about the elements in the flowchart. In fact don\
\[CloseCurlyQuote]t look at the flow chart for more than 5 seconds until you\
\[CloseCurlyQuote]ve finished reading this section. For now, just know that \
the tool follows a process. \
\>", "Text",ExpressionUUID->"ce076bc9-267b-40f2-873f-cc67f34507d5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "TotallyDecimate"}]], "Input",
 CellLabel->
  "In[696]:=",ExpressionUUID->"2c76f4f2-5bd8-4ca1-a993-d5dfb5eb846d"],

Cell[BoxData["\<\"TotallyDecimate[imdata] will do the most effecient and \
effective decimation possible and will return {data,pixel multiplier to mm \
value}\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info6963732883975-3918236",ExpressionUUID->"e8e19916-9709-477e-a0e2-\
8e6da4fe50df"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LayeredGraphPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<Image\>\"", "\[Rule]", "\"\<TotallyDecimate\>\""}], ",", 
     RowBox[{"\"\<TotallyDecimate\>\"", "\[Rule]", "\"\<GuessSpotSize\>\""}], 
     ",", 
     RowBox[{
     "\"\<CroppingDimensions\>\"", "\[Rule]", 
      "\"\<AutoCropSuperRevised\>\""}], ",", 
     RowBox[{
     "\"\<GuessSpotSize\>\"", "\[Rule]", "\"\<Piecewise Function\>\""}], ",", 
     
     RowBox[{
     "\"\<Piecewise Function\>\"", "\[Rule]", 
      "\"\<GuessSpotSize \[LessEqual] 157 pixels\>\""}], ",", 
     RowBox[{
     "\"\<Piecewise Function\>\"", "\[Rule]", " ", 
      "\"\<GuessSpotSize>157 pixels\>\""}], ",", 
     RowBox[{
     "\"\<GuessSpotSize>157 pixels\>\"", "\[Rule]", 
      "\"\<Decimate (Downsample)\>\""}], ",", 
     RowBox[{
     "\"\<Decimate (Downsample)\>\"", "\[Rule]", 
      "\"\<{Downsampled Image Data,0.0104}\>\""}], ",", 
     RowBox[{
     "\"\<GuessSpotSize \[LessEqual] 157 pixels\>\"", "\[Rule]", 
      "\"\<CroppingDimensions\>\""}], ",", 
     RowBox[{
     "\"\<AutoCropSuperRevised\>\"", "\[Rule]", " ", 
      "\"\<{AutoCropped Image Data, 0.0052}\>\""}]}], "}"}], ",", "Top", ",", 
   
   RowBox[{"VertexLabeling", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", 
      RowBox[{"Arrowheads", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"0.07", ",", "0.6"}], "}"}], "}"}], "]"}], ",", 
      RowBox[{"Thickness", "[", "0.005", "]"}]}], "}"}]}], 
   RowBox[{"(*", 
    RowBox[{",", " ", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"700", ",", "350"}], "}"}]}]}], "*)"}], ",", 
   RowBox[{"PlotRangePadding", "\[Rule]", "None"}], ",", 
   RowBox[{"DirectedEdges", "\[Rule]", "True"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "2"}], ",", 
   RowBox[{"ImagePadding", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Background", "\[Rule]", 
    RowBox[{"GrayLevel", "[", ".99", "]"}]}]}], "]"}]], "Input",
 CellLabel->
  "In[697]:=",ExpressionUUID->"85a21294-f5da-4552-afb7-95c7b717bdf2"],

Cell[BoxData[
 GraphicsBox[
  TagBox[GraphicsComplexBox[{{0., 7.}, {0., 6.}, {0., 5.}, {-1., 2.}, {-1., 
    1.}, {0., 4.}, {-1., 3.}, {0., 3.}, {0., 2.}, {0., 1.}, {-1., 0.}}, {
     {GrayLevel[0], Thickness[0.005], Arrowheads[{{0.07, 0.6}}], 
      ArrowBox[{1, 2}], ArrowBox[{2, 3}], ArrowBox[{3, 6}], ArrowBox[{4, 5}], 
      ArrowBox[{5, 11}], ArrowBox[{6, 7}], ArrowBox[{6, 8}], ArrowBox[{7, 4}],
       ArrowBox[{8, 9}], ArrowBox[{9, 10}]}, 
     {GrayLevel[0], Thickness[0.005], Arrowheads[{{0.07, 0.6}}], InsetBox[
       FrameBox["\<\"Image\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 1], InsetBox[
       FrameBox["\<\"TotallyDecimate\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 2], InsetBox[
       FrameBox["\<\"GuessSpotSize\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 3], InsetBox[
       FrameBox["\<\"CroppingDimensions\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 4], InsetBox[
       FrameBox["\<\"AutoCropSuperRevised\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 5], InsetBox[
       FrameBox["\<\"Piecewise Function\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 6], InsetBox[
       FrameBox["\<\"GuessSpotSize \[LessEqual] 157 pixels\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 7], InsetBox[
       FrameBox["\<\"GuessSpotSize>157 pixels\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 8], InsetBox[
       FrameBox["\<\"Decimate (Downsample)\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 9], InsetBox[
       FrameBox["\<\"{Downsampled Image Data,0.0104}\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 10], InsetBox[
       FrameBox["\<\"{AutoCropped Image Data, 0.0052}\"\>",
        Background->RGBColor[1, 1, 0.8],
        FrameStyle->RGBColor[0.94, 0.85, 0.36],
        StripOnInput->False], 11]}}],
   Annotation[#, 
    VertexCoordinateRules -> {{0., 7.}, {0., 6.}, {0., 5.}, {-1., 2.}, {-1., 
     1.}, {0., 4.}, {-1., 3.}, {0., 3.}, {0., 2.}, {0., 1.}, {-1., 0.}}]& ],
  AspectRatio->2,
  Background->GrayLevel[0.99],
  FrameTicks->None,
  ImagePadding->Automatic,
  PlotRange->All,
  PlotRangePadding->None]], "Output",
 CellLabel->
  "Out[697]=",ExpressionUUID->"48bcd761-187e-494e-a206-04c977b855b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Image", "Section",ExpressionUUID->"c6012fc3-6878-4f54-a815-b07a4549e5d2"],

Cell["\<\
The first thing that happens in the decimation process is that the image gets \
imported into Mathematica. The image taken with the Thorlab camera is a \
bitmap image (it could be different but as I mentioned before we only take \
images in the bitmap format). This file type is chosen because it does not \
compress the image data at all. 

The first thing to do when importing an image is to give Mathematica the file \
path to the image. For the purposes of this explanation, I will be importing \
an image located in the documentation folder. It is an image of a laser beam. \
We will be using the Import function.\
\>", "Text",ExpressionUUID->"1b809259-61f8-4e4d-9e47-f1debe345bea"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Import"}]], "Input",
 CellLabel->
  "In[698]:=",ExpressionUUID->"f07ce19e-680b-4082-825b-25c5474a423d"],

Cell[BoxData[
 RowBox[{"\<\"\\!\\(\\*RowBox[{\\\"Import\\\", \\\"[\\\", StyleBox[\\\"\\\\\\\
\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"file\\\\\\\",\\\\\\\"TI\\\\\\\"]\\\\)\\\\\\\
\"\\\", ShowStringCharacters->True], \\\"]\\\"}]\\) imports data from a file, \
returning a complete \\!\\(\\*StyleBox[\\\"Wolfram Language\\\", \
\\\"RebrandingTerm\\\"]\\) version of it.\\n\\!\\(\\*RowBox[{\\\"Import\\\", \
\\\"[\\\", \
RowBox[{StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"file\\\\\\\",\\\\\
\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True], \\\",\\\", \
StyleBox[\\\"elements\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) imports the \
specified elements from a file.\\nImport[\\\"http://\\!\\(\\*StyleBox[\\\"url\
\\\", \\\"TI\\\"]\\)\\\",\[Ellipsis]] and \\!\\(\\*RowBox[{\\\"Import\\\", \\\
\"[\\\", RowBox[{StyleBox[\\\"\\\\\\\"ftp://\\\\!\\\\(\\\\*StyleBox[\\\\\\\"\
url\\\\\\\",\\\\\\\"TI\\\\\\\"]\\\\)\\\\\\\"\\\",ShowStringCharacters->True], \
\\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) import \
from any accessible URL.\"\>", "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Import"]}]], "Print", "PrintUsage",
 CellTags->
  "Info6983732883976-3918236",ExpressionUUID->"08aaabac-2f37-4852-8fa5-\
ff0c74ac0e8b"]
}, Open  ]],

Cell["To import an image we could just use the basic option:", "Text",ExpressionUUID->"7c4b07be-b56b-4e08-bf41-94d63306ae23"],

Cell["Import[\"image path\"]", "Program",ExpressionUUID->"9a679cf4-56bc-4301-8ec8-efa47ff22c94"],

Cell["\<\
But this imports the image as an image. You might be thinking, that sounds \
good, but, in fact, we do not want an image. We want just the data of the \
image, not the visual representation of the data that is commonly referred to \
as the image. To get just the data of the image we specify Data:\
\>", "Text",ExpressionUUID->"05dabb15-4b78-4e9b-8aca-6a8fc52cb552"],

Cell["Import[\"image path\", \"Data\"]", "Program",ExpressionUUID->"3141dcbc-81f7-4b9d-91ae-96537b2d915d"],

Cell["\<\
Let us look at the differences in importing the image and importing the image \
data: \
\>", "Text",ExpressionUUID->"f1a7f0f0-b8ad-491f-963b-6b98d2a1e2e1"],

Cell["First, I am importing the image:", "Text",ExpressionUUID->"15cb2947-4740-4bec-93b1-a5ad71c3bcae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{"currentdirectory", "<>", "\"\<image.bmp\>\""}], "]"}]], "Input",
 CellLabel->
  "In[699]:=",ExpressionUUID->"d6510856-09e4-4d5b-aa24-9cd9dfa72309"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
2WabbbbZZptttr1j/w/VLcj2
    "], {{0, 210}, {234, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{234, 210},
  PlotRange->{{0, 234}, {0, 210}}]], "Output",
 CellLabel->
  "Out[699]=",ExpressionUUID->"f49cb1da-a057-4f2d-93b2-97ea96d852e5"]
}, Open  ]],

Cell["\<\
Second, I am importing the image data. Below is the data that is used to form \
the visual image above. \
\>", "Text",ExpressionUUID->"26b99415-b235-4558-b517-894b52991431"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{
   RowBox[{"currentdirectory", "<>", "\"\<image.bmp\>\""}], ",", 
   "\"\<Data\>\""}], "]"}]], "Input",
 CellLabel->
  "In[700]:=",ExpressionUUID->"528f3836-d02e-46cc-9228-b7460923fdf3"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton"], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 700, 28246961614426207586, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 700, 28246961614426207586, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 700, 28246961614426207586, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[28246961614426207586 === $SessionID, 
   Out[700], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->
  "Out[700]=",ExpressionUUID->"2c7a84d0-82fe-4476-8361-63774b4ceafd"]
}, Open  ]],

Cell[TextData[{
 "They look a bit different, right? If on the output of the second one you \
just see ",
 StyleBox["{... 1 ...}",
  FontWeight->"Bold"],
 ", click \[OpenCurlyDoubleQuote]show more\[CloseCurlyDoubleQuote] at the \
bottom of the white box and you will be shown a list of lists of values \
(mostly zeros). "
}], "Text",ExpressionUUID->"bb4c2e85-c7fe-4870-958b-448c004380ee"],

Cell[CellGroupData[{

Cell["Side Note on Using <>:", "Subsection",ExpressionUUID->"65600bba-2dda-4711-bc58-7bb313647021"],

Cell["\<\
You might be wondering about the path I specified in the Import function \
because it doesn\[CloseCurlyQuote]t look like a path I\[CloseCurlyQuote]ve \
shown you before:\
\>", "Text",ExpressionUUID->"f5a853cc-723e-4e96-81b2-a355a930d8b0"],

Cell["currentdirectory <> \"image.bmp\"", "Program",ExpressionUUID->"854a7cf5-8e98-494e-8a58-cd7f4533dbd4"],

Cell["\<\
Earlier, the directory of the documentation folder which houses the image, \
was saved to the variable \[OpenCurlyDoubleQuote]currentdirectory\
\[CloseCurlyDoubleQuote] with the command:\
\>", "Text",ExpressionUUID->"83eaae71-c94c-409b-822c-11c8d5f81ed6"],

Cell["currentdirectory = NotebookDirectory[]", "Program",ExpressionUUID->"c937d424-582c-44c3-810b-933b748c1740"],

Cell["\<\
The Notebookdirectory[] gives us a path that is very close to the path of the \
image that I want to import. However, it is missing the last piece of \
information, which is the image name and the image file type. I add this \
information to the path of the current folder\[CloseCurlyQuote]s directory \
using the less than and greater than signs in the configuration as seen below:\
\>", "Text",ExpressionUUID->"7edb909c-1cd3-41a9-bf11-2371120b5e00"],

Cell["<>", "Program",ExpressionUUID->"630dbe0f-53e4-43ce-abc9-a3bf86f20878"],

Cell["\<\
And because a path is just a string of characters, I need the name of the \
file and image file type to be a string as well. I make it a string by \
enclosing it in quotes as such:\
\>", "Text",ExpressionUUID->"a4d6e6c4-a0ff-4f4d-812e-4aa3b820d32a"],

Cell["\"image.bmp\"", "Program",ExpressionUUID->"375e9a03-41f9-41d6-abbe-ca451bcda388"],

Cell["\<\
Also, <> is shorthand for the StringJoin function. That is to say: \
\>", "Text",ExpressionUUID->"d8c36dfc-dba7-44f6-ab8d-52276a6a8763"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\"\<firstpart\>\"", "<>", "\"\<secondpart\>\"", "<>", 
  "\"\<thirdpart\>\"", "<>", "\"\<etc\>\""}]], "Input",
 CellLabel->
  "In[701]:=",ExpressionUUID->"a68558f4-61cb-4dfc-8ed5-8214747f132c"],

Cell[BoxData["\<\"firstpartsecondpartthirdpartetc\"\>"], "Output",
 CellLabel->
  "Out[701]=",ExpressionUUID->"80babdf9-8546-49b7-b23e-4c4ddfa5dfcc"]
}, Open  ]],

Cell["is equivalent to:", "Text",ExpressionUUID->"99aa47b5-efb9-49f0-a98c-823d675929a0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringJoin", "[", 
  RowBox[{
  "\"\<firstpart\>\"", ",", "\"\<secondpart\>\"", ",", "\"\<thirdpart\>\"", 
   ",", "\"\<etc\>\""}], "]"}]], "Input",
 CellLabel->
  "In[702]:=",ExpressionUUID->"3eb7d726-5421-4feb-9052-9ec4f320e7dc"],

Cell[BoxData["\<\"firstpartsecondpartthirdpartetc\"\>"], "Output",
 CellLabel->
  "Out[702]=",ExpressionUUID->"0dff5a01-afca-4884-9402-5aed81d53c06"]
}, Open  ]],

Cell["\<\
If I put it all together I get a string referring to the path of the image. \
currentdirectory is a variable already assigned a string of characters \
representing the path of the image\[CloseCurlyQuote]s folder so no quotes are \
needed around it.\
\>", "Text",ExpressionUUID->"3fb82b47-3be4-4f37-9ee9-3da98621b3f2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"currentdirectory", "<>", "\"\<image.bmp\>\""}]], "Input",
 CellLabel->
  "In[703]:=",ExpressionUUID->"60f4da74-156b-43b1-ac00-f271dc75933c"],

Cell[BoxData["\<\"/Users/efm/Documents/Geneseo/Summer \
2017/documentation/image.bmp\"\>"], "Output",
 CellLabel->
  "Out[703]=",ExpressionUUID->"656b1e78-e2d5-4481-902d-b59dac384844"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["End of Side Note on <>. Back to the Image Import :", "Subsection",ExpressionUUID->"62fb76ca-26f1-4f55-83bd-c5436dcefb52"],

Cell[TextData[{
 "The list of list of values from the raw data import is actually a matrix of \
values. A digital image can be represented as a matrix of values. Each \
element in such a matrix represents a pixel (picture element) of an image. In \
a colored image, each pixel contains three values. Each value represents an \
intensity value recorded in a different color space. The three different \
color spaces are ",
 StyleBox["R",
  FontSize->18,
  FontWeight->"Bold"],
 "ed, ",
 StyleBox["G",
  FontSize->18,
  FontWeight->"Bold"],
 "reen, and ",
 StyleBox["B",
  FontSize->18,
  FontWeight->"Bold"],
 "lue. This is commonly referred to as RGB. Intensity values for any color \
space go from 0 to 255 inclusively (meaning 0 and 255 are acceptable color \
values). \n\nIf you want to see what a pixel looks like, open up an image on \
your computer and keep zooming in until you cannot zoom in anymore. At this \
zoom level you should be able to see colored squares. Each of these squares \
is a pixel. \n\nHere\[CloseCurlyQuote]s the thing: the Thorlabs camera is a \
grayscale camera. It is not an RGB camera. Instead of recording intensity \
values for the three R, G, and B color spaces, the Thorlabs camera records \
intensity values only in the grayscale (or gray) color space. This means each \
pixel in an image taken with the Thorlabs camera only contains one value. \n\n\
Below is a grid. The top row is the grayscale intensity value and the bottom \
row is the color associated with that value. You can scroll to the right to \
view more of the colors. "
}], "Text",ExpressionUUID->"9ae52093-8247-4704-afee-e8b80a57964d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"arraydatalist", "=", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"#", "&"}], ")"}], ",", "256", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[704]:=",ExpressionUUID->"28c83ebc-42b6-4494-89a0-167619f3746a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"numbers", "=", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#", "//", "Round"}], "}"}], "&"}], ",", "256", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "255."}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[705]:=",ExpressionUUID->"f965aa4a-c8c2-4ec9-bf70-50c8682878d0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"colorchart", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"(", 
       RowBox[{"GrayLevel", "[", "#", "]"}], ")"}], "}"}], "&"}], "/@", 
    "arraydatalist"}]}], ";"}]], "Input",
 CellLabel->
  "In[706]:=",ExpressionUUID->"77f0f09c-e42c-41b7-bd70-4a8c6c571be8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"numbers", "//", "Transpose"}], ",", 
     RowBox[{"colorchart", "//", "Transpose"}], ",", "1"}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}], ",", 
   RowBox[{"Background", "\[Rule]", "White"}], ",", 
   RowBox[{"ItemSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", " ", "2"}], "}"}]}]}], "]"}]], "Input",
 CellLabel->
  "In[707]:=",ExpressionUUID->"6074535e-a3da-4116-a023-a0974beeeff8"],

Cell[BoxData[
 TagBox[GridBox[{
    {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13",
      "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", 
     "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", 
     "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", 
     "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", 
     "62", "63", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", 
     "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", 
     "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", 
     "98", "99", "100", "101", "102", "103", "104", "105", "106", "107", 
     "108", "109", "110", "111", "112", "113", "114", "115", "116", "117", 
     "118", "119", "120", "121", "122", "123", "124", "125", "126", "127", 
     "128", "129", "130", "131", "132", "133", "134", "135", "136", "137", 
     "138", "139", "140", "141", "142", "143", "144", "145", "146", "147", 
     "148", "149", "150", "151", "152", "153", "154", "155", "156", "157", 
     "158", "159", "160", "161", "162", "163", "164", "165", "166", "167", 
     "168", "169", "170", "171", "172", "173", "174", "175", "176", "177", 
     "178", "179", "180", "181", "182", "183", "184", "185", "186", "187", 
     "188", "189", "190", "191", "192", "193", "194", "195", "196", "197", 
     "198", "199", "200", "201", "202", "203", "204", "205", "206", "207", 
     "208", "209", "210", "211", "212", "213", "214", "215", "216", "217", 
     "218", "219", "220", "221", "222", "223", "224", "225", "226", "227", 
     "228", "229", "230", "231", "232", "233", "234", "235", "236", "237", 
     "238", "239", "240", "241", "242", "243", "244", "245", "246", "247", 
     "248", "249", "250", "251", "252", "253", "254", "255"},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[0],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[1, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.0026143790849673196`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["1", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[1, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[1, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[2, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.005228758169934639],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["2", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[2, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[2, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[1, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.00784313725490196],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["1", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[1, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[1, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[4, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.010457516339869279`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["4", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[4, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[4, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[1, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.0130718954248366],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["1", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[1, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[1, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[2, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.01568627450980392],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["2", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[2, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[2, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[7, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.01830065359477124],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["7", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[7, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[7, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[8, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.020915032679738557`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["8", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[8, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[8, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[3, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.023529411764705882`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["3", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[3, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[3, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[2, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.0261437908496732],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["2", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[2, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[2, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[11, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.028758169934640518`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["11", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[11, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[11, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[4, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.03137254901960784],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["4", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[4, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[4, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[13, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.033986928104575154`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["13", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[13, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[13, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[14, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.03660130718954248],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["14", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[14, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[14, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[1, 17]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.039215686274509796`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["1", "17"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[1, 17]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[1, 17]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[16, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.041830065359477114`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["16", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[16, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[16, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[1, 15]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.04444444444444444],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["1", "15"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[1, 15]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[1, 15]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[6, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.047058823529411764`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["6", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[6, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[6, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[19, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.049673202614379075`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["19", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[19, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[19, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[4, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.0522875816993464],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["4", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[4, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[4, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[7, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.054901960784313725`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["7", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[7, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[7, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[22, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.057516339869281036`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["22", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[22, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[22, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[23, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.06013071895424837],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["23", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[23, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[23, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[8, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.06274509803921569],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["8", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[8, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[8, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[5, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.06535947712418301],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["5", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[5, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[5, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[26, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.06797385620915031],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["26", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[26, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[26, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[9, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.07058823529411765],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["9", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[9, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[9, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[28, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.07320261437908496],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["28", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[28, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[28, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[29, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.07581699346405227],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["29", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[29, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[29, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[2, 17]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.07843137254901959],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["2", "17"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[2, 17]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[2, 17]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[31, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.08104575163398692],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["31", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[31, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[31, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[32, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.08366013071895423],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["32", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[32, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[32, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[11, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.08627450980392157],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["11", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[11, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[11, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[2, 15]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.08888888888888888],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["2", "15"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[2, 15]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[2, 15]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[7, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.09150326797385619],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["7", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[7, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[7, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[12, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.09411764705882353],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["12", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[12, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[12, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[37, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.09673202614379084],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["37", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[37, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[37, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[38, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.09934640522875815],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["38", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[38, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[38, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[13, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.10196078431372549`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["13", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[13, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[13, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[8, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.1045751633986928],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["8", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[8, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[8, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[41, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.10718954248366011`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["41", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[41, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[41, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[14, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.10980392156862745`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["14", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[14, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[14, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[43, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.11241830065359477`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["43", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[43, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[43, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[44, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.11503267973856207`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["44", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[44, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[44, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[3, 17]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.11764705882352941`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["3", "17"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[3, 17]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[3, 17]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[46, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.12026143790849673`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["46", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[46, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[46, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[47, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.12287581699346403`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["47", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[47, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[47, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[16, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.12549019607843137`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["16", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[16, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[16, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[49, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.12810457516339868`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["49", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[49, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[49, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[10, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.13071895424836602`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["10", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[10, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[10, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[1, 5]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.13333333333333333`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["1", "5"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[1, 5]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[1, 5]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[52, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.13594771241830061`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["52", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[52, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[52, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[53, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.13856209150326795`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["53", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[53, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[53, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[18, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.1411764705882353],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["18", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[18, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[18, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[11, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.1437908496732026],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["11", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[11, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[11, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[56, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.14640522875816991`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["56", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[56, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[56, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[19, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.14901960784313723`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["19", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[19, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[19, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[58, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.15163398692810454`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["58", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[58, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[58, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[59, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.1542483660130719],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["59", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[59, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[59, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[4, 17]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.15686274509803919`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["4", "17"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[4, 17]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[4, 17]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[61, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.15947712418300652`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["61", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[61, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[61, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[62, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.16209150326797384`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["62", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[62, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[62, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[21, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.16470588235294115`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["21", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[21, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[21, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[64, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.16732026143790846`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["64", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[64, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[64, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[13, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.16993464052287582`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["13", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[13, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[13, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[22, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.17254901960784313`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["22", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[22, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[22, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[67, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.17516339869281042`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["67", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[67, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[67, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[4, 15]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.17777777777777776`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["4", "15"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[4, 15]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[4, 15]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[23, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.18039215686274507`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["23", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[23, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[23, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[14, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.18300653594771238`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["14", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[14, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[14, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[71, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.18562091503267975`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["71", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[71, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[71, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[24, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.18823529411764706`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["24", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[24, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[24, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[73, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.19084967320261434`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["73", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[73, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[73, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[74, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.19346405228758168`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["74", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[74, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[74, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[5, 17]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.196078431372549],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["5", "17"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[5, 17]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[5, 17]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[76, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.1986928104575163],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["76", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[76, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[76, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[77, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.20130718954248367`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["77", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[77, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[77, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[26, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.20392156862745098`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["26", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[26, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[26, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[79, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.2065359477124183],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["79", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[79, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[79, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[16, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.2091503267973856],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["16", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[16, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[16, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[27, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.2117647058823529],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["27", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[27, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[27, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[82, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.21437908496732022`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["82", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[82, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[82, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[83, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.21699346405228762`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["83", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[83, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[83, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[28, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.2196078431372549],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["28", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[28, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[28, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[1, 3]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.2222222222222222],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["1", "3"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[1, 3]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[1, 3]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[86, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.22483660130718955`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["86", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[86, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[86, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[29, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.22745098039215683`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["29", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[29, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[29, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[88, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.23006535947712414`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["88", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[88, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[88, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[89, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.2326797385620915],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["89", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[89, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[89, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[6, 17]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.23529411764705882`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["6", "17"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[6, 17]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[6, 17]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[91, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.23790849673202613`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["91", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[91, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[91, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[92, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.24052287581699347`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["92", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[92, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[92, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[31, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.24313725490196078`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["31", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[31, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[31, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[94, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.24575163398692806`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["94", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[94, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[94, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[19, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.24836601307189543`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["19", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[19, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[19, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[32, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.25098039215686274`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["32", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[32, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[32, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[97, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.25359477124183005`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["97", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[97, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[97, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[98, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.25620915032679736`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["98", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[98, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[98, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[33, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.25882352941176473`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["33", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[33, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[33, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[20, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.26143790849673204`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["20", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[20, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[20, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[101, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.2640522875816993],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["101", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[101, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[101, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[2, 5]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.26666666666666666`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["2", "5"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[2, 5]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[2, 5]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[103, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.269281045751634],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["103", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[103, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[103, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[104, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.27189542483660123`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["104", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[104, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[104, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[7, 17]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.27450980392156865`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["7", "17"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[7, 17]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[7, 17]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[106, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.2771241830065359],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["106", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[106, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[106, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[107, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.2797385620915033],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["107", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[107, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[107, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[36, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.2823529411764706],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["36", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[36, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[36, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[109, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.28496732026143784`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["109", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[109, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[109, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[22, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.2875816993464052],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["22", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[22, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[22, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[37, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.2901960784313725],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["37", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[37, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[37, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[112, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.29281045751633983`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["112", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[112, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[112, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[113, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.29542483660130714`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["113", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[113, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[113, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[38, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.29803921568627445`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["38", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[38, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[38, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[23, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3006535947712418],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["23", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[23, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[23, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[116, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.30326797385620907`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["116", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[116, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[116, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[39, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.30588235294117644`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["39", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[39, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[39, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[118, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3084967320261438],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["118", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[118, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[118, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[7, 15]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.31111111111111106`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["7", "15"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[7, 15]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[7, 15]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[8, 17]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.31372549019607837`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["8", "17"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[8, 17]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[8, 17]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[121, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.31633986928104574`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["121", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[121, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[121, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[122, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.31895424836601305`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["122", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[122, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[122, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[41, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.32156862745098036`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["41", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[41, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[41, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[124, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.32418300653594767`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["124", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[124, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[124, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[25, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.326797385620915],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["25", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[25, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[25, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[42, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3294117647058823],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["42", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[42, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[42, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[127, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3320261437908496],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["127", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[127, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[127, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[128, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3346405228758169],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["128", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[128, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[128, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[43, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.33725490196078434`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["43", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[43, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[43, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[26, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.33986928104575165`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["26", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[26, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[26, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[131, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3424836601307189],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["131", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[131, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[131, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[44, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.34509803921568627`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["44", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[44, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[44, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[133, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3477124183006535],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["133", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[133, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[133, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[134, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.35032679738562084`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["134", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[134, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[134, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[9, 17]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3529411764705882],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["9", "17"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[9, 17]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[9, 17]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[8, 15]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3555555555555555],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["8", "15"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[8, 15]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[8, 15]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[137, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3581699346405228],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["137", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[137, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[137, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[46, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.36078431372549014`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["46", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[46, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[46, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[139, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.36339869281045745`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["139", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[139, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[139, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[28, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.36601307189542476`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["28", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[28, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[28, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[47, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3686274509803922],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["47", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[47, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[47, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[142, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3712418300653595],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["142", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[142, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[142, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[143, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3738562091503268],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["143", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[143, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[143, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[48, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3764705882352941],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["48", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[48, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[48, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[29, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3790849673202614],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["29", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[29, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[29, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[146, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3816993464052287],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["146", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[146, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[146, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[49, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.38431372549019605`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["49", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[49, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[49, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[148, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.38692810457516336`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["148", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[148, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[148, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[149, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.38954248366013067`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["149", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[149, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[149, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[10, 17]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.392156862745098],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["10", "17"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[10, 17]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[10, 17]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[151, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3947712418300653],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["151", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[151, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[151, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[152, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3973856209150326],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["152", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[152, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[152, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[3, 5]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["3", "5"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[3, 5]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[3, 5]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[154, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.40261437908496733`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["154", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[154, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[154, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[31, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.40522875816993464`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["31", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[31, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[31, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[52, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.40784313725490196`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["52", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[52, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[52, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[157, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.41045751633986927`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["157", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[157, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[157, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[158, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4130718954248366],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["158", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[158, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[158, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[53, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.41568627450980394`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["53", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[53, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[53, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[32, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4183006535947712],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["32", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[32, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[32, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[161, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4209150326797385],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["161", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[161, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[161, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[54, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4235294117647058],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["54", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[54, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[54, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[163, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.42614379084967313`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["163", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[163, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[163, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[164, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.42875816993464044`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["164", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[164, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[164, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[11, 17]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.43137254901960786`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["11", "17"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[11, 17]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[11, 17]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[166, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.43398692810457523`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["166", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[166, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[166, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[167, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4366013071895424],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["167", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[167, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[167, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[56, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4392156862745098],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["56", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[56, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[56, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[169, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4418300653594771],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["169", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[169, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[169, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[2, 3]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4444444444444444],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["2", "3"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[2, 3]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[2, 3]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[57, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4470588235294118],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["57", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[57, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[57, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[172, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4496732026143791],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["172", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[172, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[172, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[173, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4522875816993464],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["173", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[173, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[173, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[58, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.45490196078431366`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["58", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[58, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[58, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[35, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.457516339869281],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["35", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[35, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[35, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[176, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4601307189542483],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["176", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[176, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[176, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[59, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4627450980392157],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["59", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[59, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[59, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[178, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.465359477124183],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["178", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[178, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[178, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[179, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4679738562091504],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["179", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[179, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[179, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[12, 17]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.47058823529411764`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["12", "17"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[12, 17]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[12, 17]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[181, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.47320261437908495`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["181", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[181, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[181, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[182, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.47581699346405226`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["182", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[182, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[182, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[61, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.47843137254901963`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["61", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[61, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[61, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[184, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.48104575163398694`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["184", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[184, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[184, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[37, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.48366013071895425`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["37", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[37, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[37, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[62, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.48627450980392156`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["62", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[62, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[62, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[11, 15]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4888888888888889],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["11", "15"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[11, 15]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[11, 15]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[188, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.49150326797385613`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["188", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[188, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[188, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[63, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4941176470588235],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["63", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[63, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[63, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[38, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.49673202614379086`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["38", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[38, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[38, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[191, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4993464052287582],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["191", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[191, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[191, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[64, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5019607843137255],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["64", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[64, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[64, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[193, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5045751633986928],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["193", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[193, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[193, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[194, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5071895424836601],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["194", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[194, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[194, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[13, 17]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5098039215686274],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["13", "17"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[13, 17]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[13, 17]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[196, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5124183006535947],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["196", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[196, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[196, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[197, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.515032679738562],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["197", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[197, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[197, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[66, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5176470588235295],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["66", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[66, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[66, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[199, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5202614379084967],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["199", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[199, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[199, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[40, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5228758169934641],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["40", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[40, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[40, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[67, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5254901960784314],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["67", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[67, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[67, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[202, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5281045751633986],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["202", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[202, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[202, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[203, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.530718954248366],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["203", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[203, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[203, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[4, 5]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5333333333333333],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["4", "5"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[4, 5]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[4, 5]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[41, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5359477124183005],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["41", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[41, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[41, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[206, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.538562091503268],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["206", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[206, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[206, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[69, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5411764705882353],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["69", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[69, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[69, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[208, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5437908496732025],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["208", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[208, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[208, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[209, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5464052287581699],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["209", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[209, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[209, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[14, 17]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5490196078431373],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["14", "17"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[14, 17]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[14, 17]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[211, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5516339869281046],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["211", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[211, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[211, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[212, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5542483660130718],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["212", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[212, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[212, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[71, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5568627450980392],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["71", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[71, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[71, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[214, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5594771241830065],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["214", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[214, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[214, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[43, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5620915032679737],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["43", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[43, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[43, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[72, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5647058823529412],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["72", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[72, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[72, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[217, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5673202614379085],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["217", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[217, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[217, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[218, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5699346405228757],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["218", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[218, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[218, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[73, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.572549019607843],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["73", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[73, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[73, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[44, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5751633986928104],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["44", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[44, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[44, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[13, 15]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5777777777777776],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["13", "15"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[13, 15]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[13, 15]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[74, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.580392156862745],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["74", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[74, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[74, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[223, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5830065359477125],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["223", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[223, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[223, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[224, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5856209150326797],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["224", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[224, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[224, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[15, 17]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.588235294117647],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["15", "17"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[15, 17]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[15, 17]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[226, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5908496732026143],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["226", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[226, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[226, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[227, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5934640522875816],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["227", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[227, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[227, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[76, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5960784313725489],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["76", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[76, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[76, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[229, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5986928104575163],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["229", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[229, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[229, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[46, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6013071895424836],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["46", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[46, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[46, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[77, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6039215686274508],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["77", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[77, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[77, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[232, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6065359477124181],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["232", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[232, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[232, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[233, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6091503267973856],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["233", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[233, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[233, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[78, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6117647058823529],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["78", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[78, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[78, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[47, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6143790849673202],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["47", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[47, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[47, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[236, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6169934640522876],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["236", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[236, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[236, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[79, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6196078431372548],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["79", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[79, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[79, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[14, 15]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6222222222222221],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["14", "15"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[14, 15]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[14, 15]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[239, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6248366013071894],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["239", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[239, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[239, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[16, 17]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6274509803921567],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["16", "17"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[16, 17]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[16, 17]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[241, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.630065359477124],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["241", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[241, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[241, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[242, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6326797385620915],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["242", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[242, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[242, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[81, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6352941176470587],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["81", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[81, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[81, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[244, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6379084967320261],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["244", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[244, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[244, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[49, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6405228758169933],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["49", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[49, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[49, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[82, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6431372549019607],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["82", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[82, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[82, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[247, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.645751633986928],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["247", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[247, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[247, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[248, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6483660130718953],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["248", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[248, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[248, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[83, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6509803921568628],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["83", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[83, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[83, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[50, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.65359477124183],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["50", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[50, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[50, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[251, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6562091503267974],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["251", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[251, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[251, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[84, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6588235294117646],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["84", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[84, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[84, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[253, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6614379084967319],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["253", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[253, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[253, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[254, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6640522875816992],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["254", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[254, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[254, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[1],
      Editable->False,
      Selectable->False]}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {{
        GrayLevel[1]}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{2}}, "Rows" -> {{2}}}],
  "Grid"]], "Output",
 CellLabel->
  "Out[707]=",ExpressionUUID->"9ad327f2-0944-472e-87f1-2e4936220fbd"]
}, Open  ]],

Cell["\<\
So I\[CloseCurlyQuote]ve said that each pixel in an image taken with the \
Thorlabs camera only contains one value. But I lied. In fact each pixel in an \
image taken with the Thorlabs camera contains three values. However, all \
three of these values are the same, indicating that the Thorlabs camera is \
still a grayscale camera that takes intensity values for only one color space \
(the graylevel color space). Yeah it\[CloseCurlyQuote]s weird and it presents \
a problem because the Mathematica functions we will use only work with data \
of a single color space. This means that we cannot have three values per \
element in the matrix. We must have only one value per element in the matrix. \
\>", "Text",ExpressionUUID->"0a83e3b7-5462-4104-bc38-f4056a8cc4e6"],

Cell["\<\
So I\[CloseCurlyQuote]ve already showed you how to import the image data into \
Mathematica. I now want to show you what the image data looks like in a \
nicely formatted matrix (as opposed to the list of lists of values that you \
saw earlier). I will be using MatrixForm which I will talk about soon. 

However, I cannot show you the whole matrix that represents the image data \
inside this notebook because there is not enough display space. However, I \
can show you just a part of the matrix and that is what I have done below. I \
will soon talk about how I chose just a part of the matrix. \
\>", "Text",ExpressionUUID->"8435920d-b28c-40e8-ab40-8832e5be1987"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"currentdirectory", "<>", "\"\<image.bmp\>\""}], ",", 
     "\"\<Data\>\""}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"89", ";;", "91"}], ",", 
     RowBox[{"80", ";;", "100"}], ",", "All"}], "]"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellLabel->
  "In[708]:=",ExpressionUUID->"962825b3-de2e-4d73-a5ae-dce7ed321922"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"77"},
          {"77"},
          {"77"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"73"},
          {"73"},
          {"73"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"81"},
          {"81"},
          {"81"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"82"},
          {"82"},
          {"82"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"83"},
          {"83"},
          {"83"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"88"},
          {"88"},
          {"88"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"88"},
          {"88"},
          {"88"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"95"},
          {"95"},
          {"95"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"96"},
          {"96"},
          {"96"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"94"},
          {"94"},
          {"94"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"103"},
          {"103"},
          {"103"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"112"},
          {"112"},
          {"112"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"117"},
          {"117"},
          {"117"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"131"},
          {"131"},
          {"131"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"129"},
          {"129"},
          {"129"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"134"},
          {"134"},
          {"134"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"135"},
          {"135"},
          {"135"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"133"},
          {"133"},
          {"133"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"143"},
          {"143"},
          {"143"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"144"},
          {"144"},
          {"144"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"149"},
          {"149"},
          {"149"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"76"},
          {"76"},
          {"76"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"79"},
          {"79"},
          {"79"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"79"},
          {"79"},
          {"79"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"84"},
          {"84"},
          {"84"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"91"},
          {"91"},
          {"91"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"93"},
          {"93"},
          {"93"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"95"},
          {"95"},
          {"95"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"97"},
          {"97"},
          {"97"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"100"},
          {"100"},
          {"100"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"101"},
          {"101"},
          {"101"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"113"},
          {"113"},
          {"113"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"117"},
          {"117"},
          {"117"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"124"},
          {"124"},
          {"124"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"130"},
          {"130"},
          {"130"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"133"},
          {"133"},
          {"133"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"132"},
          {"132"},
          {"132"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"138"},
          {"138"},
          {"138"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"139"},
          {"139"},
          {"139"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"146"},
          {"146"},
          {"146"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"144"},
          {"144"},
          {"144"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"156"},
          {"156"},
          {"156"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"75"},
          {"75"},
          {"75"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"78"},
          {"78"},
          {"78"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"83"},
          {"83"},
          {"83"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"86"},
          {"86"},
          {"86"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"91"},
          {"91"},
          {"91"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"93"},
          {"93"},
          {"93"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"94"},
          {"94"},
          {"94"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"100"},
          {"100"},
          {"100"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"105"},
          {"105"},
          {"105"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"109"},
          {"109"},
          {"109"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"114"},
          {"114"},
          {"114"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"116"},
          {"116"},
          {"116"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"127"},
          {"127"},
          {"127"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"134"},
          {"134"},
          {"134"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"137"},
          {"137"},
          {"137"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"140"},
          {"140"},
          {"140"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"143"},
          {"143"},
          {"143"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"148"},
          {"148"},
          {"148"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"152"},
          {"152"},
          {"152"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"152"},
          {"152"},
          {"152"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"148"},
          {"148"},
          {"148"}
         },
         GridBoxAlignment->{
          "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
           "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}, "RowsIndexed" -> {}}],
        Column], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[708]//MatrixForm=",ExpressionUUID->"b40dd363-d686-422e-9cd0-\
ebaef895e040"]
}, Open  ]],

Cell[TextData[{
 "See how we get three equal values per element in the matrix. For instance \
in the first element of the matrix we get: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {"77"},
      {"77"},
      {"77"}
     }], ")"}], TraditionalForm]],ExpressionUUID->
  "db0e66a4-42c0-4980-b430-10427ea24324"],
 ".\nWe would like each of those miniature columns to be replaced by a single \
value: For example we want  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {"77"},
      {"77"},
      {"77"}
     }], ")"}], TraditionalForm]],ExpressionUUID->
  "2f7339f0-beb7-43b6-9428-939a06f81ec5"],
 " replaced by 77. \nBelow, I accomplish getting each element to be a single \
value by selecting the first value in each column. Read the Long Side Note \
below to see in detail how I did this. "
}], "Text",ExpressionUUID->"0df18ac1-703e-4ad2-a045-77978cb42740"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"currentdirectory", "<>", "\"\<image.bmp\>\""}], ",", 
     "\"\<Data\>\""}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"89", ";;", "91"}], ",", 
     RowBox[{"80", ";;", "100"}], ",", "1"}], "]"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellLabel->
  "In[709]:=",ExpressionUUID->"a67b9d6a-aad0-4a1d-a3a2-6d236be67550"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"77", "73", "81", "82", "83", "88", "88", "95", "96", "94", "103", 
      "112", "117", "131", "129", "134", "135", "133", "143", "144", "149"},
     {"76", "79", "79", "84", "91", "93", "95", "97", "100", "101", "113", 
      "117", "124", "130", "133", "132", "138", "139", "146", "144", "156"},
     {"75", "78", "83", "86", "91", "93", "94", "100", "105", "109", "114", 
      "116", "127", "134", "137", "140", "143", "148", "152", "152", "148"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[709]//MatrixForm=",ExpressionUUID->"327699d8-bcc3-4628-821e-\
6f51b6a3aa7d"]
}, Open  ]],

Cell["\<\
And we have not lost any information in doing this because all three of the \
numbers in a mini column in the matrix are the same value. \
\>", "Text",ExpressionUUID->"c906933a-4680-4262-a2ee-5bf4bc0b8618"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Long Side Note: Indexing into Lists and Matrices, and MatrixForm, Explained:\
\>", "Subsection",ExpressionUUID->"a17166f7-a9d9-4f0b-aa4a-79d7b8a964ca"],

Cell["\<\
If you are unfamiliar with looking at just a section of a list (or a section \
of a matrix) then the above code will seem confusing. Let\[CloseCurlyQuote]s \
go over what I have done as you\[CloseCurlyQuote]ll need to be familiar with \
this notation. \
\>", "Text",ExpressionUUID->"4637a3ac-6848-48f8-af40-08057d8ebaab"],

Cell["\<\
So I first have the import function that we are familiar with: \
\>", "Text",ExpressionUUID->"162359fd-2b5b-4742-ba5e-2bfc2a2a3ec6"],

Cell["Import[currentdirectory <> \"image.bmp\", \"Data\"]", "Program",ExpressionUUID->"4d7ac9a6-4a4e-42a7-96bc-5177c4e275aa"],

Cell["I then tack on in double square brackets: ", "Text",ExpressionUUID->"4fe0a6e4-1925-4836-95e1-b13dc56b5016"],

Cell["[[89;;91,80;;100,1]]", "Program",ExpressionUUID->"78ea8839-2e96-4cce-a28d-f30c70685106"],

Cell["\<\
Any time you want to index (that is picking out a part of a list or a \
matrix), you tack on double square brackets at the end of the list, or the \
variable representing the list. See:\
\>", "Text",ExpressionUUID->"c42e2c5d-722c-4ed4-ae5b-525d8c0acf28"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "curly", " ", "brackets", " ", "around", " ", "a", " ", "list", " ", "of", 
    " ", "things", " ", "makes", " ", "a", " ", "list"}], "*)"}]}]], "Input",
 CellLabel->
  "In[710]:=",ExpressionUUID->"952375f1-40ad-44dd-9759-54cede7c70d9"],

Cell[BoxData["5"], "Output",
 CellLabel->
  "Out[710]=",ExpressionUUID->"fac0ee9d-4b10-4c40-a061-79eea2eb7eaa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"list", "=", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "semicolon", " ", "supresses", " ", "output", " ", "of", " ", "just", " ", 
    "that", " ", "line", " ", "of", " ", "code"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"list", "[", 
  RowBox[{"[", "2", "]"}], "]"}]}], "Input",
 CellLabel->
  "In[711]:=",ExpressionUUID->"e34b4b8d-0391-4f8f-871f-5d7b570e3a05"],

Cell[BoxData["3"], "Output",
 CellLabel->
  "Out[712]=",ExpressionUUID->"a7757a6e-b923-42a4-95b9-1879d3c9818e"]
}, Open  ]],

Cell["\<\
The first way to move around in an image data matrix is height:\
\>", "Text",ExpressionUUID->"27c3c5e8-7af0-4d4d-ae28-e09ad08cced2"],

Cell["[[89;;91", "Program",ExpressionUUID->"fc8bba12-0976-46ae-9a07-f4f31da2343b"],

Cell["The second is width: ", "Text",ExpressionUUID->"d73ad6ed-7eb8-45be-9fa7-30cd3974ffac"],

Cell[",80;;100,", "Program",ExpressionUUID->"151a0d8a-55a3-49b6-adc3-7c39c5e92d1c"],

Cell["\<\
And the third dimension specifies which value in a mini column we want.\
\>", "Text",ExpressionUUID->"98d71b2a-65e3-4477-9f4a-eec54ef3e1d6"],

Cell["1]]", "Program",ExpressionUUID->"4b98213a-8b76-4e76-bf4d-a9e59001e5af"],

Cell["Dimensions in matrices are separated by commas. ", "Text",ExpressionUUID->"6baa58aa-5220-4c47-afc9-f6e943962046"],

Cell["\<\
Let us focus on one dimensional lists for the moment: 

When I want Mathematica to pick out just a single element of a list I just \
have one number in the square brackets. The number in the square brackets \
corresponds to the elements sequential (from left to right) place in the list \
with the leftmost element having a place numbered as 1. \
\>", "Text",ExpressionUUID->"7c2717ef-ae07-4db7-a513-b7096d618a20"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"4", ",", "5", ",", "6"}], "}"}], "[", 
  RowBox[{"[", "3", "]"}], "]"}]], "Input",
 CellLabel->
  "In[713]:=",ExpressionUUID->"efc75e52-a592-4986-9b77-b0ff919ca74e"],

Cell[BoxData["6"], "Output",
 CellLabel->
  "Out[713]=",ExpressionUUID->"6686b6ee-8b9a-4ffe-b6ec-9dfcb00d788a"]
}, Open  ]],

Cell["\<\
When I want Mathematica to pick out a group of elements (say 5 and 6) in a \
list I have multiple things in square brackets. First I have the numbered \
place of the leftmost element in the group (in this case 2 for the number 5). \
This number is followed by two semicolons. The third and last number is the \
numbered place of the rightmost element in the group (in this case 3 for the \
number 6). \
\>", "Text",ExpressionUUID->"18f9373b-3598-4930-ac0a-fa9f8e80cf72"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"4", ",", "5", ",", "6"}], "}"}], "[", 
  RowBox[{"[", 
   RowBox[{"2", ";;", "3"}], "]"}], "]"}]], "Input",
 CellLabel->
  "In[714]:=",ExpressionUUID->"596a7d90-f58e-49b7-9c5e-30722f020e7f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "6"}], "}"}]], "Output",
 CellLabel->
  "Out[714]=",ExpressionUUID->"9b8c84f5-be21-4acf-a6ee-53aec8116b7b"]
}, Open  ]],

Cell["\<\
When I have a matrix of values this one dimension list notation gets repeated \
for each dimension.  Let us say I have the following matrix:\
\>", "Text",ExpressionUUID->"0493f2ba-0940-40bd-b9e6-768eaed64a95"],

Cell[BoxData[
 RowBox[{
  RowBox[{"matrix", "=", 
   RowBox[{"(", GridBox[{
      {"11", "12", "13"},
      {"21", "22", "23"}
     }], ")"}]}], ";"}]], "Input",
 CellLabel->
  "In[715]:=",ExpressionUUID->"c91384af-f935-44df-ad5c-c4442cffe2e9"],

Cell["\<\
I can create a matrix by also using brackets. A matrix after all is really \
just a list of lists. \
\>", "Text",ExpressionUUID->"e65d0c5e-16c0-4457-97d8-44560f785acc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"11", ",", "12", ",", "13"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"21", ",", "22", ",", "23"}], "}"}]}], "}"}], "//", 
  "MatrixForm"}]], "Input",
 CellLabel->
  "In[716]:=",ExpressionUUID->"e28d9277-e5b8-4f5c-9d0d-4108fafd8fa5"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"11", "12", "13"},
     {"21", "22", "23"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[716]//MatrixForm=",ExpressionUUID->"f890ba8a-e0ac-4f98-8090-\
d57986dd6e6f"]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s say I want the value 13 from the matrix above. \
Positions in matrices in Mathematica work like this. The top left hand corner \
has a position of [[1, 1]]. As you move down the matrix the first number \
increases. As you move to the right in the matrix, the second number \
increases. So the value 13 has a position: [[1,3]]. The positions in the two \
dimensions is separated by a comma. \
\>", "Text",ExpressionUUID->"586246eb-7b66-4338-a3f7-04403a6555b2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"matrix", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "3"}], "]"}], "]"}]], "Input",
 CellLabel->
  "In[717]:=",ExpressionUUID->"283623b6-5932-4205-bf10-77f9061c3433"],

Cell[BoxData["13"], "Output",
 CellLabel->
  "Out[717]=",ExpressionUUID->"ebdcc42f-d9b2-4bc4-86c7-e87a18fa2962"]
}, Open  ]],

Cell["The value of 22 has a position of [[2, 2]] :", "Text",ExpressionUUID->"e396161d-7a52-46d8-912a-d832525616cf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"matrix", "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "2"}], "]"}], "]"}]], "Input",
 CellLabel->
  "In[718]:=",ExpressionUUID->"9f196d66-16af-408d-9bd7-e351d2fdd6c2"],

Cell[BoxData["22"], "Output",
 CellLabel->
  "Out[718]=",ExpressionUUID->"3b59084a-7bd1-4e81-8bca-36ad5e39800c"]
}, Open  ]],

Cell["Here is the matrix again:", "Text",ExpressionUUID->"31f928d9-dfd1-4b7a-94b6-8a2c939f497a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"matrix", "//", "MatrixForm"}]], "Input",
 CellLabel->
  "In[719]:=",ExpressionUUID->"583629c7-0fa1-4704-90d9-1388d2b8e85c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"11", "12", "13"},
     {"21", "22", "23"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[719]//MatrixForm=",ExpressionUUID->"5e04e3d2-82e6-4d5b-b899-\
1c75f51f66d2"]
}, Open  ]],

Cell["\<\
If I wanted the whole first row of the matrix then I would use the double \
semicolon for the second, or width, dimension: without having to specify a \
start and stop position. I had to specify the height dimension as 1:\
\>", "Text",ExpressionUUID->"0fb902dc-f718-4531-bef1-9c2bd032677a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"matrix", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", ";;"}], "]"}], "]"}]], "Input",
 CellLabel->
  "In[720]:=",ExpressionUUID->"ed9feea1-31ee-4bda-aa26-e5d620430b04"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"11", ",", "12", ",", "13"}], "}"}]], "Output",
 CellLabel->
  "Out[720]=",ExpressionUUID->"40cca1d6-ef98-42fd-88ce-83c4568932d3"]
}, Open  ]],

Cell["I could also use All: ", "Text",ExpressionUUID->"3bdec2a5-d23c-43d0-80bc-ad43a31c09dc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"matrix", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "All"}], "]"}], "]"}]], "Input",
 CellLabel->
  "In[721]:=",ExpressionUUID->"4d77c0b5-fa33-4fe8-a2ae-79c1ea5415e2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"11", ",", "12", ",", "13"}], "}"}]], "Output",
 CellLabel->
  "Out[721]=",ExpressionUUID->"cfee664f-6997-4f50-8b44-150ac2b956b2"]
}, Open  ]],

Cell["I could also use 1;;3: ", "Text",ExpressionUUID->"fd0093a0-76b5-414f-8546-8e643ff9c588"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"matrix", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", 
    RowBox[{"1", ";;", "3"}]}], "]"}], "]"}]], "Input",
 CellLabel->
  "In[722]:=",ExpressionUUID->"b0d15d27-a15b-421c-a7c8-874badaa2530"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"11", ",", "12", ",", "13"}], "}"}]], "Output",
 CellLabel->
  "Out[722]=",ExpressionUUID->"b741eb1b-88b0-4442-bb5e-a6822a2fe58c"]
}, Open  ]],

Cell["\<\
If I wanted the values 11 and 12 then I would only be able to do:\
\>", "Text",ExpressionUUID->"c410f479-5970-4cbb-b8ba-b674918dac25"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"matrix", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", 
    RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]], "Input",
 CellLabel->
  "In[723]:=",ExpressionUUID->"54202c1d-05dd-4de7-b007-1ebf7e4cd85b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"11", ",", "12"}], "}"}]], "Output",
 CellLabel->
  "Out[723]=",ExpressionUUID->"815fcc3e-65d4-4a2d-8682-3f6dcff823e4"]
}, Open  ]],

Cell["If I wanted the values from the second column I can do :", "Text",ExpressionUUID->"a4191605-e0c4-46f9-89d8-89052d5fe70b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"matrix", "[", 
   RowBox[{"[", 
    RowBox[{";;", ",", "2"}], "]"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellLabel->
  "In[724]:=",ExpressionUUID->"ab738b43-e936-40a5-aa8a-85074770fe83"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"12"},
      {"22"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[724]//MatrixForm=",ExpressionUUID->"0c99dabb-014b-413b-b0ec-\
3c891e4c27fe"]
}, Open  ]],

Cell["Or:", "Text",ExpressionUUID->"e58cbc4c-3aba-4bd3-99e4-df4743690583"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"matrix", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellLabel->
  "In[725]:=",ExpressionUUID->"814ecbb0-8551-47fd-af41-cc8e2f163432"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"12"},
      {"22"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[725]//MatrixForm=",ExpressionUUID->"25f41c8e-873d-4c0d-8887-\
7848f8eaf46a"]
}, Open  ]],

Cell["Or:", "Text",ExpressionUUID->"a791d087-b190-45a7-b674-b3caffc9891d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"matrix", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"1", ";;", "2"}], ",", "2"}], "]"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellLabel->
  "In[726]:=",ExpressionUUID->"662be444-7b67-4de9-bae5-ec7478a7dac4"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"12"},
      {"22"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[726]//MatrixForm=",ExpressionUUID->"235cfee8-afef-4405-b139-\
4c39d2f89555"]
}, Open  ]],

Cell["\<\
I would like to now explain : //MatrixForm 

//MatrixForm tells Mathematica to display the output as a matrix. It \
generally works as expected. There is one caveat to it. You cannot use \
//MatrixForm on anything you are assigning to a variable. See this example: \
\>", "Text",ExpressionUUID->"011a1b0f-ef0b-49ca-8e44-8681f17e01de"],

Cell["You can do this:", "Text",ExpressionUUID->"8182bec4-5028-4c28-ab2b-b3c27931d593"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}]}], "}"}]}]], "Input",
 CellLabel->
  "In[727]:=",ExpressionUUID->"c5858426-ccca-428d-81a0-b95f0f8372cd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[727]=",ExpressionUUID->"8d66ebfa-8998-4087-bc71-550d6be8450e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "//", "MatrixForm"}]], "Input",
 CellLabel->
  "In[728]:=",ExpressionUUID->"f1de9219-5b9a-4ff6-82cf-861ec0f838a7"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3", "3"},
     {"3", "3"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[728]//MatrixForm=",ExpressionUUID->"d05e5aaa-dca5-483e-99a3-\
bd5258e220a4"]
}, Open  ]],

Cell["\<\
And if you multiply each element in the matrix by 3 and have the output \
displayed as a matrix you get:\
\>", "Text",ExpressionUUID->"c2bcf606-b9b7-43b1-bda1-47ae8345703f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mat", "*", "3"}], "//", "MatrixForm"}]], "Input",
 CellLabel->
  "In[729]:=",ExpressionUUID->"6aa10e09-bddc-4816-8b64-1a9d059ecc96"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"9", "9"},
     {"9", "9"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[729]//MatrixForm=",ExpressionUUID->"aeed4a78-d6f1-4d6d-8574-\
f183255864e3"]
}, Open  ]],

Cell["However, you cannot do this: ", "Text",ExpressionUUID->"45025395-10ec-40ef-bb20-97bcd7060057"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "=", 
  RowBox[{
   RowBox[{"(", GridBox[{
      {"3", "3"},
      {"3", "3"}
     }], ")"}], "//", "MatrixForm"}]}]], "Input",
 CellLabel->
  "In[730]:=",ExpressionUUID->"647add77-dd91-40f5-8756-cfb2a6373ffa"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3", "3"},
     {"3", "3"}
    },
    GridBoxAlignment->{
     "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[730]//MatrixForm=",ExpressionUUID->"28cc0c03-a376-4a75-ba70-\
33abcbd7b8a0"]
}, Open  ]],

Cell["\<\
because when you try to do anything with this matrix things go wrong, like \
multiplying each element by 3:\
\>", "Text",ExpressionUUID->"91af0f3c-fb35-47b7-8026-82cbb62ed13c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mat", "*", "3"}], "//", "MatrixForm"}]], "Input",
 CellLabel->
  "In[731]:=",ExpressionUUID->"34ecfb49-f76a-458b-918c-3d5cad27da0b"],

Cell[BoxData[
 TagBox[
  RowBox[{"3", " ", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"3", "3"},
       {"3", "3"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[731]//MatrixForm=",ExpressionUUID->"60dfc500-d734-493c-8f15-\
5842ed63f879"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["End of Long Side Note. Back to Image Import", "Subsection",ExpressionUUID->"da5468ba-9a01-4ff0-97af-7118903906b2"],

Cell["\<\
So if we want to pick out just one value in each mini column of the three \
dimensional matrix that is our image data, we can use the following notation \
tacked on the end of the Import function:\
\>", "Text",ExpressionUUID->"80820944-3be5-4456-aff0-f418150e2c88"],

Cell["[[All, All, 1]]", "Program",ExpressionUUID->"99d242fd-dff2-4559-a365-3ab0b0b674fc"],

Cell["or:", "Text",ExpressionUUID->"1328a864-5546-4a0b-b5f0-0744db3f3a13"],

Cell["[[;;, ;;, 1]]", "Program",ExpressionUUID->"25daf22f-a1d8-4dfd-a294-98cfdf4e204d"],

Cell["\<\
I am telling Mathematica I want every row, every height, and the first value \
in each mini column. \
\>", "Text",ExpressionUUID->"97b18093-f2e6-47b3-9a65-42f607e98e79"],

Cell["\<\
Let\[CloseCurlyQuote]s put everything we have learned together. Let\
\[CloseCurlyQuote]s import our image data like we did before, select the \
first value in each mini column, and then save the resulting two dimensional \
matrix to the variable imdata: \
\>", "Text",ExpressionUUID->"3312a74d-e27e-4e63-8390-7152cdcfd0da"],

Cell[BoxData[
 RowBox[{
  RowBox[{"imdata", "=", 
   RowBox[{
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"currentdirectory", "<>", "\"\<image.bmp\>\""}], ",", 
      "\"\<Data\>\""}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "All", ",", "1"}], "]"}], "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[732]:=",ExpressionUUID->"a68ee8e8-7fb1-43db-9889-eb47186f60f9"],

Cell["\<\
Let\[CloseCurlyQuote]s check that the image data is correct by displaying a \
visual representation of the image data using ArrayPlot and specifying a gray \
level color function. \
\>", "Text",ExpressionUUID->"c25da662-13b5-4947-a773-3a907e747e30"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"imdata", ",", 
   RowBox[{"ColorFunction", "->", "GrayLevel"}]}], "]"}]], "Input",
 CellLabel->
  "In[733]:=",ExpressionUUID->"3183c3e5-d538-4cfd-a3a4-9cac633769e0"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[SparseArray[Automatic, {210, 234}, 0., {1, {CompressedData["
1:eJyV0t1PTwEcx/F3UR4qpJREqSQSJUXJ00/0q0TJQw9E+rHZfpYys2Yz5SI2
a3JlbjJ3GmPWjZkxDxfWbObpoosuGGY2My4wxrwv+gc622vnbOec7/l8v9+T
0Xa0vj0CeMX4jgmaollaoI1q18BYrTiL1uqS3qsoEvr0RbW+fEcZE+G8/up4
lPd0KBreqW2SZx2eDN900o/FTLWesmNgSIFYeKlQHPxS3zTInA4P1DADvqo3
HrJmwj01JsB39SdCvsGfKZxk3WQYVM1sM+hCChTPgRGdToWcuTCsznmQkgaP
FE6HhPlwX+EMSMqEh+rIgnQH8kLd2VCwEN6qPwfKF8FP3VgMLbkQvwSeqCsP
cpfCqC4ug2A+/NC1Amhabr5Ce9KxFfZSBK91thhKV5pXA6ugrsSdlMJdHVkN
aWXwXN1r7GUtfNTldVC9Hn5rcIMzCkCki7up5nKI3gS31bLZ6wq4pcYgRFTC
ddVXwR9dqbaXLfBBvTVm2gqPFdrms7XmUVkdvFHndv+Teriq0h1mUminc1Dv
LkjebZ8qaYCnamg0qzqa3KlONZtxD5xT1F44o3/qaoHPat3nPBTYbx9KbIUT
GlHZAXepTypqgx4NKzYEFerRkEbFQUhVngoVUFCVY6rG6T+wTooL
      "], CompressedData["
1:eJzVnXtXE2cQh2m/gUIgikJQlJug0IIoWKtoq4JKUahAtZoAFYUiokVAQJSi
WKtQuYmEO7nYyCXBouQedrMJ4UN1dhOhnp6eAzTJzvzFIWcuz/ubmXffzYHd
GHlNgfzzkJCQ02UhIZ/Bz8rqmityRcX12pLLirKKn65X3qyuu3Op9MqP1xRl
5fzvN25WFRYVl5T+cBk+k69+WF1TW3f3l/qG1vb8gsKiSz6Dq//wqv65pvZ2
3R3eqPF+y8P2x0+eduVfKPx+zVb+ifEtn/W9hsam5tYHbQ8ftf+aX3DhYmHR
ulzuN7c8aAOXjr7c/O824NbiS9XR+azrTN658xtybl71ftL59LdnL7pzTuad
3WyIx0KM35+/6OruPXr6TG7e2U3TrIX6o6e3/+Q3357yV7xuCHjk6NfHc074
N2pv/8CQMvVgFsQ+djzHv7Ff9vT29Q+8GnydeTj7yFdCAj/T+zK8Hk7NOHQ4
K3BJhFUoR0bHJg6kpWdkBjKVoNiQUpUe2BV5CzOkHB4Z/TI942BmsJKNjU+q
NEnJKalfBDftxOSUet+B1LQgpx2HvCp18n4x8qq1+0VasEb7RjedkLQvOUUk
ArVGq0sUMb9KrdHFJSQmJYuXX/vmT93bmdnY+ERRZRAwpmdm5/fsjRO5ItCU
QDK3a3cssMQniE7jFWZOH4uHZm4XIpjZOVR1MshAnHgsNPpooY3R4BjmZbF7
EFULgKJjsE26YX5BFoOO6d1fst34mBaiZeh2aoHr/YdFky0GKRtGKhDMjLHB
gCsK9nScZEaTBalmRhPS3hdEQ0tmlsXg7TWzRYZ1R/PiYb4YWKJwa4ebzor2
Wirw2XEX12pfYljks2u1R2EndERFY0e02ZdYCpQ7CUA62B0UMO0ONhI9JbOD
gpKMK5JGxZciSejpYFgJEUHZbTSGHSpPgtOxxHDbttOBdRGCldJBjZAS0pXl
woGXDC7DhknCiQksiSCEyzglpOSFqy2tfmBYYryhYeGkeFknR64lnJwnlNrG
xlNvIcbMEVSZo4fs3AqbBjFmjhqwkyCxO5RcL3PuLfSgnZwrnBZwGKlDMi8w
rWM9EJNrYTe1WxGemR7yMq0vAICYmMawGRMjBo3JAROcPPcysas0udGDIyfB
2SN4xwfN7CH4RRG1M9wyNYVd1BR2b6U4fBHETnBuCTmJ3RJaGrs9EiklYNeK
lBAt51mRbieEu0yG1OWRov+ryLVNgU4HACsNVP6+yENJVjqsHiKkLs9OIqRc
JBFSLpoEJjQpP09ESNErys+Sm0zlCWCuyNAzshxyQqg1bkDoRtR4yMVz7kWN
xzpRy4e79eIQszF4hUNbU5ANx2OQ/v2PSUgVs+GksjswctkYfFQWBz4k6xIm
HrOFScIlkNmSgozHhk0gbDx4aIT9UZQHTf7HeFltjhQEOEBjNDsQgIAui6bU
NNE5FowiI8xDfxhNYhdkQRhgURC8BB8WRRTAYBUjs6/+70VKrTe8C+Kq+cza
6dnAPy16da2wzo+9Hcx18gLrpmf0wck4Nj4FDawPzuqghrpZ/TwkC2gu5cjY
xNRMprCgQOUYmVRNH8oKpGjDI5Nv57IDlmDglVIDe9fMMX8Hh9DZ/n+y/sue
vkGV2m+P1H/e1Q2A/uEDur4T/uCCWKM80/+J0jmYK7y6YaO+/LsfTsECzm0u
7fmCdbvwHh2dUxfXZQ/mo/zLNko/eW2H16zOF7K1rb2ouISP5LPwGtTerb/X
2PSouBQ8yz+61TY0gUnljaqSawowreRfAXK7rr7tqqKsoupWefnfGofpHQ==

      "]}, CompressedData["
1:eJztnc2yNceVlsUlcAlwC1yAJ0yYEsENEMCU8IixZ/SwBwyaCAYOgiDoDiIQ
/9AN0cLgthq7LbUtt2Vbsn6tT5IlcQmEtPZTGfXU934rq3bts8+RdSYrsqp2
/WY++a6VK/P8jb//j//uP/xrL7300t/5By+99Ne/+vv2t76xj8F+55Hcx2O1
37yf21q/32/e98PY71xpv2l/D2tTO7n1d5z9/e/Kdzr6nHvf43e+9c//4Mu/
35sud7/fZ7t61z3Xvb/TY2uXt27H/Xe/rj6cVW9mt/+u2v2cOMsmviTbHTd7
/lQ+Zu/9/Z6KPVq/rq9/Xb2aq3e/v7u+ztbT2fu/9j3Mvedb65LHYq/tZ87v
J7t6t7e++vdHz9dxeO45Zvl7q/7m3vXt8dbzvd8tbZ+t37X99zd27/7u+M4e
bRezv9/7/vZ+r72/K3vv+vhQ9b0r+z1+e/d7PcrDs+vxUfv3vvr7Z9PtZK6+
9+3gqH7fZzud8nVtD3uf67h/1h1X5eP6ZbbfwLo+U76V3Xs/yc7qt73tZq/f
MXdcqjf3rve31k2zz329P+rjut/V/lxP2L/Xpvp+tL3U/fxB3J72+7rd/fl9
dM95ln80+/332Xu3g6P9zP3iNWfprXTc3vre1fuunOzbb3359y+my10/Nttf
zb6ns+IJqfxim+rpU2lXe5/nuL8y228cbU9H+6G97aprL0fbU93PdzeW/baz
1+v6r/Q+Zt/zXp1wXb9273bz0O3xuP5L9tr2eSub6l2nx7r2ubf/cjur6353
utxt767ftd/ufRztX233tmfqk+vVevvR+n5vuzfeM+vXXRs3n/fHru0/Z/Xo
rJ2t/6n9JFv3u22ff+urv3+5lLvt6TzePtsfJ17Ntu/0XdJ3vFYXz9mnonev
17VH7bV+5Kzd209c6xfO6tzUPmct7dO27vNfxf3pPN7e8WS2X57tr9P3YPss
p8/R04897jrfXjtdO/u72fOlfrjj9bX95VntsGuXe9tr1w67duvtXXlve/b+
Wf2xtx/vvnva73p0XTv+usR/Oy7s73/3bj+7f07bu3qV6t+sfznb/js9vLd9
U07b/8lXf/96upxs4g/2qD+f3uMsJ9J3nq03s7p9bz2fs49V318f9/L2s3V6
9/3P0t9dPe62z9qufaX+PLVftmPref7NYr3fx81ywvffPc/eON9efyHx4cX1
5Hgc7vn1fzYP7d7t/FZ+wLw/5eNc3tvOu/2z/Xldb75f9vGz/WbXbrp+ObXT
P/njL//+aGnPlL3d7T39zpzo7su20z17445H/bUX15PjcYHUPvbZx6oH9uuD
2fdwlA+d7Tgwqwdmx6+Sne0Xu3a/lweddftPtp7z326sedLxJXFkVmfM8tPW
3+ksXmBT/dtXn6/1Ix47L87TI0f9h71+xaztuJH6q1m/Ym/7T+1otv++lh+0
c3Mi7e/s2XrF2zvedvz29/L3nI0bddxJ9TXV7290yvPus/dzbhWvwN6KL0fH
A1N/OsuBWU4kzrg9J5501rx46au/f7fhST33yxvL8baz15vl1CyfZ3WiObQ3
vtLpHtdb1+dZP/463jwVznT6ZXvcbDxlNs5C+VrOnMUXrPvVvfqja2eJI0e5
0ukS8yWV6/m3vMGaN2z3eRLPZvk4+37Sd0ncma0Hs3Hdvbon1f9O/8zZrl0/
Vr6cF2+51l+ajbN08ZUuLuuyOdP5LZ3/0fkj6bhUdntO++u5Mg/+5ld//36x
9dz/Yfmdt/t4LMfbJs7M+mdpu/XPXu64HqT64PrT8eYod27Dm8fCl+xPdfql
04edTTp0Nn63V7+kepf0y2w8xH5J1/7Pssmvqed9OXLAZfhh2+3H/u2v/v7j
hi8dh5Ku6jicvkfHocSbtN/1p8t/u5Y3bkfHePNYdc28funKs7ollTvdMsuT
Th9Tj1I8wGXzpvNfkt/Q8aHzO7y9nmerH5LeSLrFOsX86Phim87b6R5s5+d1
fljiTqd7Ot64PBvPOcqfc/TNY9U7PX/2xn+P+k3+Xv6u9fs8HxKb+jHbVB9T
f5p0ShfvSJxwO0zn6XRL8ocSB7y940e9l//0rX/01d9/Xsp7bcej9D66OFHS
Rx4PS/on1YNZ/szqnXU9ns/bPXcc67HpnvPiN0fHoZLeudU4k+tZp2+S3un4
QzujnPwccyDpks52vEk2cYXttt5f7+2/xONsuW7HJb/PznYcSvooxaldT2y7
ejc7vp44lLi0rx0+NT20X889tD66VvckHqV6l7iU/Kq6n23/nfye1A7Nj3Rc
auepvdv6PBwPV8wb/94cqvf035by7/3TL//+62LZ7v3eznmTLkvbO10168+l
79vFkVJcyfUVe9RvS3yyPcdveyxcOh4nevF72Bt/27/u1CyHOjsbd+7iM7Z7
eTKrN9zOk45JnDIXvB3ecB6XuS7b/+gPv/z778t2yuz3cbY+H/fh+0/cTjrR
32M2Hpe4tdffM6/MraT/b8WpY/rq3pzar6f2PnfST7zno+Nf/t6uD+ZPsh2P
ki5KuifpoMSL5DclfdEd3+23fjFHzAvzpd7PHy/bKWPNp3R84pbvLz3H3jj6
Xm6ZX7P5XElPJV01m1+9d1zuXL/v3nGo2ese11cdp/wdunG2a/WTj0v1bDbe
1Pl1yc8zp6xn3F7tP3X73f4T93ycuWP+JPujH3759ydL+YvPv/z7n4tlf3f+
7jjz1O/B7zX1F52fmOJfnf7qxgXP5lnHMbc729ty7OnpsaM6bDaedS3fOh3f
6bAuvtHxLOkw8yvppaSTOr6YT+YEZW/n/LPHU6738T8Wy35zrZ7nT5fjvJ/t
nNc8TPeb/NHkP9um74WtepnHUa/lXIrjz/LtaNz+qG7ruLC2j59b6/3z6753
nPJ3S/orcSjpq8SpLr4+yynzqvPbkr/V6RS369TOE0/MHdtql3+64Uo6nvPy
OyzcSmXfV+JZer6OX9ZrSbfN+qEpPyL5m11+Vup/Xf+v5Rbtzvac+Nfj5ZXt
2brK2/le2E5XpXhEimvtzYvqdJSt40cpnpQ4ZR3j7dYliRuJB97u482XdD62
13t6Zfkdlu3e7/N2x1H2c3Rx/m6c0n5miv+nOAH1w1yj3MXNOv/A7QDbcWwv
t9L2FDd6PhfuzbF5bnXlvbqL8uy4Itb6q8uzmR3vntVdaVwvxctTPNw8M5fM
i1k+pOO647vfJVvPMaz31/P+r8t7HNbX83kS93y/idOdXkv62P1SN47pcrLW
b6l/ndVn3bhXp89ol5193H7k+fkS18b3u3FI+5HYWf/Qej/5BSnO637b/bvb
RbKdP2h/LvHJ7d6cgB9u9z5Px7F0nXRdtnP9+m7f21jfp8+DTffh7Yl71rdp
XCJxLvmhlLtxnTRegO38Tur5tf7mXj8TO+tfPn/7teOL5+mz7r47ft2KZ/Yz
Oz+ym8eXeOZ+OMXDUj5EiscnPWaeuX3W/b0S27n5YG5g2e7jzBVzKdl03Xq+
713e0/++PN+wbOd36XifD+v7MOfsF6d4m7+D/dXkp3b+qnnnekV9w87mx7o/
T7w7K57Wte9jeu1W+q3XaXv12FGOJT8z6bJZnnV6DOt6h03x4M6v7MYPZ+NO
2E6H0e7hQb2n/7NYcwRrnpkviXuJW9ZhXNf3k+63u890X+awdVsaZ0jxN383
c87fP+k4+6mUrdtcP4/O457Vbyle3em2Lp42x7enE087Oi7Q6TV/n/Q907hl
53/Webd8S/rM9deccx5Fp8u6+Hpqr7Rrt39zpJ5z8IJy3ef3I//gR6e72M55
bX3+dN3E4/Qc5p/vM/nDya9N3Ov8U/upLlvPdZxLfmrSb2lcoeNd4txRf/XY
+MG9eHfeuOesnnOZ9+vvQRlr/d3xLq3/5n7T41auj0nHpfG2xDvnUaT4t+Ne
9gNn/T8snKnzf//yvv5ss50yfKn38oPIHW9P5/P2ZH1cx1Ef1+lAbOLfrO6z
n9vNf0j8S3lx5iL10v114p856PbiduV2t9d/xZ7jxz5d7vl92Jp3tl08zryb
5Z71XeKd62GXD5s453h2ykO1tX9qf83t2zrOfMPW+X+wsfDNZaz5lHSceUrZ
5+M6vj/2+34pz/Iy8TP57bxv+pEU33PecMrPwXbztzr+2c+g3rr+Xqv/sPca
n3gxjx5u/OFe8brEt726LsXpUjzOfEs8S3G5NE7q9jIbh7P/an2TeFbnffXy
vK8u5Trfn1+u8+fLdvOP7eZP4lbHT85X3/P/LvfFeSn7fjmPy76eeehy8seT
P9yNZ1BO40fJH+70XvIrrPeox2n+Qsc5867Od/180453iTcPw7n5/JFZvrns
95B4Z86l72POpbhd4ps5Z75Rpj52/qr9muT3pPhcGl9w+7R/mPQQXIBnWDgH
b+r8P1zK5iBlc5Pr1fMObmH9e1/X29P9sR2eUeY65qrP6/tK/i/9B+/bHPR4
rsc9ZudRpDwW96fmHvVx1s9N+QbmnzlY76kfz+g4t27f187Hul+eybX6zrbj
Hu99Nm43yz9zz/5rN/6Q9F3yV52PWs+1zQtxnMnxOfupjrOZS4k3cAp+1H3/
cOEfluP4nXllrqbr2JqzbPd9eL+vy35+5/tLXDdHeX8pTug8l5SHw3c1B5MO
7PKSZ/3gpPsSB+3nuj0l3YftuOftqf0fi+udzcG93M3PQdnvo9N7Hr/AJr2H
TXGLNE5R5x26z/6rbee/Jr6l8Qi3E8rO/3C7oz26vdZ5Xt3wwByr8/1ow6G6
v7+4vIe/uFznRwtP2M/vOR/HsZ3jfR1v5zqUu/NyfXORsi374VviPe8Ny/u0
nk460HrQcQm+K9yzTbrP/ezecQ4s9dz8wybuYa0z3C7RJ6kd7+Xe4xrX2J+/
cjS+l/qNveMZ/o7mIeXZfGLXs8TD5N+m/BNsiuslvzflm6AD67yDg27n5h6c
wcIleFP399pi6/qvXe7ntctzvXZ5Lz/ecM1lX8f7OR/W3Ev35/vAcpy3J277
/Vhnut8hrgAfrRfNSX9f1wfzMc1b6+bjJl4mPmJpD7P+sXXh2fPOHhcfH55/
3TwLbOJh4p85mMZ1qSeOLzsu43Fb11vP+3J9p2wdaP835aXQ3uCh42JYt2/z
xBzDwr26zuuLZXvd/+sbXnI++OTj4aiPtx7lOKx5xvnNZc7Ldq7r5/Tzw0Vz
0H61/Wcs38H+cqcf3Q+meKL7WfvLyX9OcUTrR7eDbp2nzl+ezQvsdON1ccPH
z0XbTg+m8ZFOHyadODtO4npj/5l6lvxhuNfNS3WciTK24yD6hLLHdbH2J63D
4AecME/qPH95eT/D1vO/frn+KJujnIcyx9n6eHgK57zd5zWf2Z/4yXls2W9O
wkesdWPSi86v8biz/eqUX5j86zS+PDsv2Hw0F91+UlzR7bLe/3zeYMeLOd48
tnUJvr25v9nxY2zSj3v9aKz7taQjU3zRnKQewcm0Xm9an8k6kXZAGV6m+WC0
N/MRiz9X59vmvziO6Hgiuql+P3hV59naeq6/vNzvTy73+ZOFk/AUy37KHJeO
5zrmKWX2w2nzm+N5Hutdntf61To16WH79ViPT1tfOl/H3Ezj00lPuh9O/rbz
EbtxGesDt4+9+YapnXZ+9qyedPnFvLwXJ7OuTM9jLu7Vk4mT1o8ud/mFdd4R
d+l4SX1L/nRa5ySNK9ufNhedH0x7s1+NzoGHjidaL8IP8weO1XV+suGeOUm5
7uenl+d9Y9le1/npsh/L+TkODnt70rNY7j9xmOPg51ovvr6JJ3DcrN7k/dov
px9LeY585+R/Oy6Z9KX9cLancezZfB7agXnZ+d+0P9tZP9x8gB+2x/Tl/cdr
0n0e1ZOd/837xiZu7vW/sfgh9r/hpONAab2WLq/a8Xraj/Nv7G/T/up+x3g0
fqLbMXE49BHtHh1mTlI2v+p9/fTyXoZlez3nG4ut+3hjw0n4Wfe/PZ79WM4P
/7gfc5XjzHMsxydda/4m63Gq58dTt3lAfK80jzHNk07r3aTx79n8b9djcxOd
kLjZze+b9c+th/by8zp//OHnsbg8G7c0LxMn947jdLzcy0n74daX3bi155l0
8+w8Xo31eKrHaeCkrf1P9JH5CD/hh/Wi+cd2uMb+Ou/PLuf92cJDttf5f3Z5
7r9arH+HrfsaXIXT1q/WufCTMr+Dmz4P/YP7D8cDPL7P+2U7793jZ+anvyf9
JXbWT3ec0/xMeeToTvvn5qXjmfCTdpPyxZPeTLqn88uTf35sfOfh8yH3jncf
9bsp+713XOz4aL878THl9yQ+2s+2v530hf1v2lGdd6sjOz8bax7a37aeM6/g
FJyr6w3e1X3+fLF13r+63OewbOc48xPeWm9i6z1st3Of7Dcv0ZfWnz6O9+Q4
qzla19nqTPSl84ngo+ObHi+3zrSeNCfTOBBl8zHpS3PSfjmcpB3RbtI8wsTH
jpPXjofPcevx5k36+Ww7fen3mnQk5bTOG9Z5QVi+v/tTyvbH4afrp9drsG60
XkBHeN4LZdqT8/YoOw/beYToIY/fpPEYOJJ4ZL7BP2wd/+bl+j+/vN9chqPw
E/6at2yHo+a47w+eU8ZyPP0C+tJxAvSseWpdCkfhKu8b/Z7y7G3rvYxxOnPU
uhOb9Gadb7teY5q32I2fW28mnbk3rwjrdj47/nMbjh7l6uzvjutObKc//T7N
zaQ3sSkPIuVVWndST6g/1p1pPS9zE15iqfduF/a/07oLKT9oPX478mgcr0y8
hBPw0noP/lhf1nFvLrau84vLdd9crI+r8/1isx3r39fzvLnhNpyknPQw281Z
nrPOv9WzLpuj1qPwk/cPR+Gn5wM5bxNb5/+zTb/q8UH77VjinNRLc9T8nJ3v
0/npbmez40PWoZ3+NEcov3j8+d76s9ehc+NZ2/GgvePkiZ/JX/f4j/33xE/7
7R7/sf6kvsJR++vWnbQLxyuxaZ4z7dH+uvlJ+4af8JLtHkcxN+AMfKrz/3yx
5ly9n18stu7rFwtX63q/vLznXy1ljq/r/HJzHs5f9/fmcj91n29uLPeHzrVO
RtfCWfjquIFt0q+8R94b/RT9l8fd8ev5fu4P+f7Wo3A16VL6aetS5ynZv0cP
dP68eUo7od3QjmhfiaNHx4uOjrNjH4d/fzT+2Y+vP7+f6XXoLE9nx9XpX81R
83RvfqZ1AvXeeUXwtOOq/ff6/RinSHlFlOEm1n4sei3pPviEboSX8I5yPe8v
L9f51eW9vLWUsfATvtZ9DM5yPvMVPnMfdf5h63yDp7bwNsUPrG+dN2C9Dlet
Vz1u7/E6vqP9+xQnNU9T3DT5+c5vMk/t3zufJPn3WNoR7Yp2lnSpyx1PZ8eP
bK8bT7odN12eHUcyP2fH05M+tR/fWb4v/Sff3dykvjiPOK1jS7+f/HrrB/MT
Xqa8dfQL3KznGHrH40O0X+tO2jvcRHfCT7iC/rPuxB+Hk/Cv7uety3FvXY57
e7F1/rcv533rcn9vX97j28vv631uuQtvuS5leOp4AveJNe85vq4zuOt4Kjyl
7PF/xwV4z3yHet7XN/oUXZrW//D4U+Jomleb8prsP5mj1HePx9MePB8Tftq/
73Sp9Y91qXnQjS+dw9GH9u+P5312/v7RcabEV/sT1qXdvEvrVNentB5HWi8c
3rqee1wJvjpO6nEl2iP6pu5/6FHzle3opeTfY+EHOg0dZ87CNSz8Q1/CV7gJ
R+Eq2+v3v15s/f6dy3t453Ifv15+V+/lrYW7lOG3r8P9cV/cJ3yGu+hc9G+d
f8QNUp6B47K8P3jLe679P9mM+8Fdz1+iH/U4P/UhrROCdb5HGvdHB9TzbufB
W1ek/CfaCdZxVdqZeUs7Te3Y7T3l81zr/ye+Pd/eiqvz4/rYa/Oi6rh+PD9x
Nfn9LicdSz2xnqV+pThAGtf3+BTtwVzFomPqefP6RHA0jdPDV+d5wgOs/X64
ioVX6Ev77XAOftb7eOdyH4OfVX53sXU/7y7763qjXOcdvIWjdf13luuxnzKW
+8PCX8o8l+O/8NfxXMcT4Gs979C/zivDb+C7OL5tvVvv5XXFy0fePraO265n
bN46r4R6ST3FWs86D8DjV7QL+3/Wtda3bofduJV5gD067o99HONW5/OUcjde
5fdsm+I2s7qVeuB6QTnpVuqhx1cdJ3B+qcepPK6fxvG9LgZ6iPFm2m3y/51f
hJ8LV+EDHEHnYfHv0afoR/hZ+wdP1/wbXIWf9ft3L+/n3cv3e3c5Dzq27u+d
hcOU1+f99cJz9DB85b7hKf2D4xD0F/DW43DwFl1LPIH3Rpn+iffsfo0y34vv
57z/9TzUrZ6lvjgeC1epX44bmKspryqtG5visN28UdqdeZrGszq+Wr9STjx9
PpceXz7qi8ep5uMD5m2XD4CFo+ap8/Vddj4VetU61XrV/TX1rc6zXXfOeoD6
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
5kE3DyLpVpeP6dcuX+vhx70SVxNf3U/xvunX0roa1q2U+d6Jr44XJN0KV6mv
1Gvqs9dxcD6682+tV9C35iv6J/G19r+xWNp/7R/jXeQb1P3/cuEsetbjOfAW
HjlOYK4m3jmuWdcdHF6P5w9/vu5z6E/8e29Hj3Kf6FKeo+5jjFet1+kc/w+Z
98N7s/8PX+Gq9arzZG3Rq/SvdZ3tugv4PV7vZnY+g3Us9Ra+Op6a8gdoF+gO
6xHak9ubeZraa4oHmKsdR6+NBzxsnDXp1G4+Qx8nSHydHc+y/5D4OstZrPVr
0q1wlnpqP8zjWugN+Ip1fJZ25fwu5x2gY9FF1kvwNY1v1f5tni2cxcLfOn7o
WOeRwlu4Zg6aq+hK+GgOm9+UuW79bsQvzEvK5imcRafCUWwdv+Uq7w//nzg3
753vgCWO4/gO38/5WPSv9LvmqvnqPFjz0/N1zVXqr8cXPF5lnWr/33FVt7MU
D7DfOctX7Cxn9/J1jncPly+AvVa/+j35PVq3JpviBPZHXC+sY+Er/bjztRJn
qe+Oh1U9/f5GxzpuwLgF+hXOonfcPmnHa79zrB+IrkLHYtFf+L3oNuKL8NZx
A/xoeIs+dJ4tNuldc3OdJzW4aZ6z3/FS7rOuN/4PMbrU62RSrt+P+QRwlfcD
V4m38D7px2bH//FDXMZfoV+lXtjvMVdtqXeOr9b5tuNYzrua1a20E/v/bk/2
+90eZ/Ox4IB50MUBbM2fffHWe+nY/fMPeN7ZfAG/b74D/V8a30pxWNcH8zSt
82iuwlPHCTy+5TgBFn3icS/a2dpv3P7fAbhq/VrvLevWOm4bJ4Cv6FZ4hYWn
jseiC9mfuEt8gbgn+tbzWTneZXQp3ISP3Dc6mzL6HF5ieX6X6XesT61Tvc64
5wf4OzmuynfG4tdgqR+U6Zfppx0HcBzV6995/B+OOg/AcdVOt5qjyf/v8gHQ
p51Opdzp1KRbHxdH+/GrxFPK7j8ST9P82aRXu/Es85R6kOKu3fwC+nvqr/0v
uEr9t1513mud59XN+IXHs7DWqfZD0VHwtK6/ne+FToUnxAXQc+g8lx23hLfw
zuNCa797O/7uvAXn65uT3I91J/y07qzfjzip/fvEUd5jHb9dB4a4Kd/D34n+
EI7ih2D57ljz0xzFduNS1qMel+r8/sTRpFNpV7TDbtw/6VLzNHFh1t83f17M
qfvPE0i206mpP+nyWc3X5Pcnvtb5Xt7oU/PUfn/iqXWAdSr1Hj1BmXaCDqF9
maP1nNvxK+e91nHbdQ3wS9FVcBULT+AqOtXlus6w1rHwLK2zSxku2h+nzPk4
v/NH2Z7ui/uGn/jv+O3mZuIn+ai8R7jJe6bM98Di1zteir/B98UfMTfTfFbq
DeWUn4qdzZ/CUt+TDk1+foqbdvn+iaPm6V7/3nbNm73rId46nno9Pztump9+
3x1HUx6AuUm9oR+mXnlcyvzEduOtjqNah2JpX3ATPeN4Wx0/8ljxN70egdcl
MEfhBlzxuraOA8AndB98g4uOT9oPZzv84zyJl+Yk92Pr+CbPVb8b6297Xr/1
JrzkvXq8nvdu/cl34rvZf4eX9t/3xkWtOx2/tx+fdCf1m3pvbnZ+vMvmZeKm
OXkrXq45c3R9lvut12KbeJrewyxfky61NVeTn+/+lnrVzbuaXbfFFl3qeVi0
N+tSdAztdb1Ox9BH1qfoUvxRuApP0alY8xUu2Q9G55mH8BIeYjmOMsc7fml+
Oy/U17df7jhGWh/beU5wM/VLvE+v68D3MEe9bgo85TvD0zS/NNWbxNHZ/H3K
6E778Ymj5ik2cdT8pJw42vF0PQ59nKNPi6v9OJSfu4uTmp8uJ33q/pHvnfx4
+Ek9S/monv9PvcZS353/j7Ue8bgT7dDrBaT1u+Eousl6yn4+ZazzWdFt8AhO
mV9w1nFXW+fHcx771Vj2O//A2+EmFk5ieV7rTZ7b74n3yHvlPaM7iXPCS8p8
H/o9vmOdZ/SLjn/WeTI/Xa8c9/Q4vLmZeNnFPxM307wnj8snXYOl/e7NdzrK
T3NpbR+f/rRNfr3fQ+LnXp4mjqZxe3PUfr3joo6PUp/rPl7ZcJX24HF82hHt
qo7fjt9bj3r+Ku0bv9/5UvABXWXesh3OmJ9pfRZzz/FGc9a843z2t9nu8XLf
D9b74af1pOfzmpeMszt+wvs2L603+W6O19Bf8p3hpvtV6glx9RTnhKOJn2k9
IHMz6U/HO603Pe5wdDw+tW/zYJab2GPxzvuvu2q7l5vJ8r5t/V38/TyuZL8d
636Yeoe1H5TyoOq+XtlYdKjz+OFnHTe4CS9pn26/btfWSXATPsAF8wJrrqLT
8Hfhqv39xDOvE4Ku9XnZjrWf7bL1sdchsa7k+XgvlJ2PBC/NR/or5/li7Zdj
nd9mXsJJ/BR4iWW745yOy6d1/11/Xb+tM+FlvZ+XNzoj6c5Ob5qXttad13Iy
jcMnPq3t4+EjNr2PWX2Jta7Emo98X+qB9SWWfpf65nin9abrL/Xb9d/jprQf
tzePN5iX9fsfbaz9R6zHneBDvYfBSbhizhAPdLzU3DTXkr/McY4LYO1Pc5x/
h+V+/TzWie5HsLwfzyfyugl13qEf+X629HseJ8SmeZv2S+yHu3+e9cfho/0o
cxGbxgVmx9E7LmI7PpoT5sexuOX9uHiUh0k3Ji76O1g3zo6j29+27daFgode
d89cRC/QbpL/jfV4kMtut3AQvUN7T/55ss739niy/Vf4BMdszVfnmfs8ntdj
/5n78vN4fCbxD0s/Qr9jXVj1Zes3owv5bs4fct6lbZ13qwvhYNKHya82/8xB
6rst7aHTh8mvTvxzOz0alzQvzh3PeTx5RYmLHQ95v9aFfJ/kN/Pdbe1H29of
sV50Paaem4v40c4XMRfNQ6z5R9l58Y5TWj/CRXPSPKnneH3DQ3OQMjrNuq2z
5iTb7dc7rup5Otx/Wm8ey3vye+zihvDOHMTiHzsP1/xzHNE6MK2X1OWhY1M8
seNfiit28UXao9vlXv4lPjxO/vXrfpzFv+QXJ+4lv5jvbR3Y6UJzz/oPS322
n2MdiHV7SfPX03wgrwNhPrq9wwO4Bxetj7DoKVvzBz45b4Yy3GR7Nx7EcfDM
cT6vk2HOzY6POP5nrlmnO2+H78R3dF4t33+Wd9Z77ndT/5x45/pd9/Ny5F3S
fbQzbKf/9uq8ZB8X7/o44Fncm40DzvKOepD8Atcf+7+OB6b15cw955ebe1jr
QbczczD5yVjrHTiX/Gf7k5Q9PmMO+Xis449Jp2Htl1q3+nnMuW59IFt0nTmW
dBv9l9cP8voW2LQ+W/o/GI7vJe5RP7v6nDjXjRubbx3nUv7NUV2XeDLHu/vN
o7mWeynvk/ft75H83G4eDdb9Y6f70v/b6PJuunmKbm9uj9aBcM9+WZdHbj7A
Pa/nCW/MIfjkeJr1GftTPM7+Ntcz53x/PIftXj1nP9X9juN3fDfzz/2d87DZ
b77ZJn+2819TvU7jGJ0f2/EOO8u7a/Xd4+Te7eN9nZ9r/cf369a1sHX9MQ/p
bx1ntg50f+52MDsuYuv1Ya0HsWkdTft78CLpP7Z7PCVx0PrM2z0f2efj+OSn
wkFz3M+V1mFyP5I4l/Km/b2OrmtmfyHpuxTHS7rO9Zdy0nmUaTfJut1huzie
Oej2bh7chnuJT/eP762fe/v/5Dq95+/kfoyy9b65R33BdnE/29l11KwDrAM9
HkK7c/zI4yOOv7vdcxx8MEfYbsv+lDdnXppb5pfPk87nuCUcd9nP2a3bkKzf
r79H1Ythnf9sXed8lTQ+mzhHfet4h3W9TrxLcTvrCNobttN3tOOzOPc44nnn
6TvruTSOge04Z51n3iX/t8sD7Pjm8Y203nmax+f4t/0obPKDrevMO/u95kOK
e6U84JSP6OPNQf+unvfVjTWf/f8QsEmn8V7sh5pjft+JX/5+Xd5Jp9uS30p9
S/4qlv2zXHO72eu/7h2fOFevPZZ5c/PxPN6D38/sOG33vVJ/lXhn7lF/kh+L
TfOSsF2cz3Futyv7TdZ1tEvacxpXxJp35qLjXY6H2S/GwjNv9/6UH5Ly4KzP
2I8+87iP84Tr+nk+RZov3vHN68invBLXi8S7xLmk2xLfXJ+TTpvlXPKvsC9u
x2ndq6em387TcbOcm9VxHd9mxy9c3+xHOF7n/jzNg7OeM+fq+q9s9If9WMfX
KcMBx+/Ybl2U9J79Qh+feJT8yTQu6udw3Mz6tYuj8f6wSZ8ljiW91sXbrs0b
pt5RntVrszyjHSXbcS3pNuysX9pxY20fnz6zTfya5Viy/p6Uu/FY6ot1GjaN
v3Z+qvNROj/V8ThzzO3a+sUco5xsymcxZ9Lxadyjy9/oxjdneWV9Nssrfw/r
L5fdX5lb5lU3Tlr3m3XYUT1Ge9k732Evr87VX/fWYw+vy7CzXEv67WicDWtd
luIpHl/o8qbS/xvo1ndNnDMfPP4KZ6zrkk5KHPR2rydqjvl+zS2vz9zpLe9n
e6eDU3zM3KKc4gzmmP3KxDH4ZY65fppjjq8k3ZXi/3vHO21Tuz7Xjzybaz1H
u3HQWV6lfsTfaZZbaXy0W0fF8Qz7ldZj1HNbz99J7cr5c2lcjrLbe7KOszne
lDjo47HmZzovx1lXWj85nuWy9ZT5nvxAj9ckfz/Ft8wp+4mpvtR9zf9/T9dP
W/e/1H+3j6O86rh1G711b911vT+JNc+6fI7Oml+zcTHHx9xvup7aUu+T/5Hy
2lK7tH9pPZLi2t7ecYNy8l/NyS4vwufxfae4O9a8sl5N/l+KT3Z5s0k/W1+b
W64fHa+6vIrEK/fL1PO98wZmeYX9evqLW251uivZ2X6iju95NesvOu/W9TDx
KvmN7qftd1gXJB2W1mN23N+23kOOY6e4duIj50m6qLse260n0/+bMIfSvHNz
KI0Ten/iVYq7J78v2aP6yvV0Vl+ZT3v1lG3Hpaels66PYyXb6avZeVKUXT9m
1weZ1VOu14lT/n8FqT1286btByW/KY2f+XfdeFzijo/z8ek+Zsfz0vxw86aL
Kzr+xHezv2e/7iiP0jhQikcl3YSd1U1ub509dzzwXnlemUMud3GqWR6lOFXq
Zzq/Ls1PsqXedRyi/rs/tp8xG2fv9psr3e8S/6zT0nhm4lzSeckvS/fl95b0
TTeukfRPF1/y98aaM0kHub5hk36n/rpfTXHbzm+jfWHPiX8/Ft1z/vie30vi
z95xP/On41DHJftxji90flxqRykektZFTfs7/dC1c+9P3Oh0Vcor73g5q3dS
XpOtdWnijb9j1aNt/8P37+bbmjvuD91vpnjRbDy70z+3jWs/Vg59u9VBs/6a
y8kPs01+WeqfOi5Zb1svuR6bP+6vO3/C7c026YN0fBon9/bEwy5ek/jh+0pc
7NZdneVO8peTH8X32xuf7ubLJH8r1dez4tKzvHnacen9Osh2L4+wSRfN8ij5
Z8maT66HaVzO/Wvy25J/kLZ3cQ6332Sty8yxdJ7EuTSOldYx7fg5G0fGWnc6
r8M6le+UuNPpnS5/8tp4T8efxKHUfvbpnl5f7Pvd/XTQi+/3uC5KeqiLU5s/
RzmU5gGmOGWX5zTbrro89S4ukjjX8S3pMvtvnQ5LttM5fi/me+JO0j9VL3L+
UOJLsnt1Txpfcf/acSfFd7p2ltpj117P5cTDx6UTX+biQ9vxyC4unfqbWf4k
/WObONTFiVIcIvXnnU38st7q9JX3J/2UOGfe2ab96bnSe5odp+o4k/ypji9Y
6hV2Nk8x8cWceX57mI/nrPfP+iv35sj5/HH5Wn9rbzzI5VldZP64Htd5R7wy
xRfMoWRTu0v9+iyfkj+Y9FDnH5pXHQ+TTXxJ79W893FH9UzHGazr0+y8tLM4
8/Uav7qf/jF/uv4gjUfW77f1oLN7/bJuvCyNm9X1+ryS2TgpZW+n/bI9cWwv
p47+vrOdXuE5uu1Jz5graVwq8cacsd2b10w9T/Z3a7xqniNz8fP8XvdypX73
3ciXFN+h7PqT9Ew37mWu1Plf3pQTFxKPZnVT4pd/5+N8vH93lB/dedN9pPGk
2bhuF1/pykmvzPpHrsepns+ON72YJ/du94/PD8Km72GOdH5Ssq4vqT7Njp+n
frHjQoobdPxIx/s4H5/2dzpor17quJHew9F4SacvOp2R/JqOH53+uI2+mG2P
9+ZC5oPt0XEh86Ar742ruL4knWG94bLrb5cXOMuVzh+a9Zc6P6C7Hr/z71P7
7nh3tP2n9p6sv3eyHQ86DmBv63fcu52fzYueH7Pc6OIfaXvSi3vHozu90fEk
ccTbZ3kx6wel9j5b3ssn35/zXTseXBvnTLzv/IrOv0iccD11fb2OF/dux/eP
W8yO/yZ+dzbFSVO5rpf1hetjx4dOf3S8mNUje/2fdB8dX2Y5NRs/mG3/e/VC
5y/4u1NfOj/C9dJ2n054Kv7B9X7ELC+P+hdd+088qPP28czU7hMHEhe6OPxe
XTG7P113ljfdcb7/joez7Trl83Q8n7WuL65nrn/X+QVdO7l3+334dl6/27Zv
l7v2nXS/t3f1qmvPKb6Qyl27nm0viRPdebv9s/3zbHvt2jHvGZvabefH7+2X
sV37Paf/fmr2+vkqaX9t336H9N26dj3r79f5+nyHWb8/teejOrbjSnfddB/p
+Fkdk/S07ax/fW3eY9e+j/nfT11nn9+ubY/237b+jh3Hu/ad9Huqr2fp944T
XbtJOsPldJ7ufva241ldnb4P3zf1w1377erP17t/3t8OXd7bHmc523G5a4+z
cXfsbDtI9TmV917Px6Xfub1157ft3su149pdfznbHq/zc59KO7y2/Xbl4/1r
HTffr872p7P1rauflLvtXXtMv589fi9v9l63a49njyvN2mO69+vaHs/TvdjU
Hs/uZzs7Gx/Z23593rR/dvx09nd77/tou5v9Dm6Pe+OX5/ST924v1/Z/5/V7
e+PD3r7XXtv+UnlvO997H0fbxbXjJEf7t9u0m69r+5rXnbPvbW8/NmuPtrOz
xuv2Hu/fHd2frn/091378Xfb257ObV/3bgezuq/vl657j/n7pO3+vi4f1TG+
3uzvzrLd/Xb31d1/et9+v3u/44vbRad3nrq93bjAXv+p033YvfWp2z57nvS7
bvve++/6g9nrJHtb/fXU2svs/fdxeW/fy5+j/pDtUV13lh7ca2fb6+z9dty5
rU56KvV/b7z6eH9h2/Fmbzup4/r6cVZ7u1W77a6z9/rHvs+96+VZ+mV2/36+
d/Zo/bhWT53V33Ben9/b0/7nH9/nje37nk+Fs3u5e1SX7OX6t6frDfbaeMPR
8++9/jn1/6lws7v+bHu5vp+f7c+77dfao9c7yw8614/6utnZ53s4PYq9VX28
jd2rf55qf3ltvzpbv86vT+dc56zj9+rhp2qvfe6Hrg/XfvfflXZ9q/p6tD+6
ljtn399Ts7Pt7xv7jf3GfmO/sY/N/n+2pHrR
     "]}], {{0, 0}, {234, 210}}, {0, 1}],
  
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellLabel->
  "Out[733]=",ExpressionUUID->"acd7029e-bdf3-4a22-bf56-fe4ec5419aa2"]
}, Open  ]],

Cell["\<\
If we compare this to the original image import (seen below) we see that they \
are the same image. The size of the images might appear different on your \
screen (this is due to different scalings of the outputs), but the pixel \
dimensions of the images are still the same. \
\>", "Text",ExpressionUUID->"3819b8a9-e204-4968-99bf-218974692e61"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{"currentdirectory", "<>", "\"\<image.bmp\>\""}], "]"}]], "Input",
 CellLabel->
  "In[734]:=",ExpressionUUID->"5e336eb0-2029-4372-9d46-7b8dcab3357a"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
2WabbbbZZptttr1j/w/VLcj2
    "], {{0, 210}, {234, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{234, 210},
  PlotRange->{{0, 234}, {0, 210}}]], "Output",
 CellLabel->
  "Out[734]=",ExpressionUUID->"3a4c3d37-6294-49a7-9976-d64583a0686f"]
}, Open  ]],

Cell["\<\
With the image component done, we can move on to the next component: \
GuessSpotSize\
\>", "Text",ExpressionUUID->"e3a4663a-4520-4d0d-9648-9dc3c46c979b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["GuessSpotSize", "Section",ExpressionUUID->"f3df1930-f061-485f-a1c7-bb5afd4ee5f7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "GuessSpotSize"}]], "Input",
 CellLabel->
  "In[735]:=",ExpressionUUID->"3054946f-4b2f-436b-b5f1-5c54a5c5b4a4"],

Cell[BoxData["\<\"GuessSpotSize[imdata] gives in list format {wheight,wwidth} \
the spot size guesses.\"\>"], "Print", "PrintUsage",
 CellTags->
  "Info7353732883979-3918236",ExpressionUUID->"9440c20a-d6ee-4275-a566-\
520676b00a57"]
}, Open  ]],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s recall what we learned about spot size earlier in \
Introduction Part 3: \n\nIt is the distance from the center of the beam to \
where the intensity of the light has dropped by one standard deviation. If \
the intensity of the light at the center of the beam has a value ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "0"], TraditionalForm]],ExpressionUUID->
  "cb3d393d-e16f-4cca-b747-c17f809bde22"],
 ", then if the light has dropped by one standard deviation, the light now \
has an intensity of ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    SubscriptBox["I", "0"], 
    SuperscriptBox["\[ExponentialE]", "2"]], TraditionalForm]],ExpressionUUID->
  "482f3ece-11b2-4fb8-91c6-474ef5b06a45"],
 ". In our math we include a spot size in the height and width direction, \
which allows us to deal with circular beams as well as elliptical beams. \n\n\
I named this component of the decimation process GuessSpotSize, because guess \
what? It guesses the spot size of the beam in the height and width directions \
without doing any hardcore analysis. What do I mean by hardcore analysis? I \
briefly mentioned this many sections ago (Introduction Part 3), but by \
hardcore analysis I mean fitting an intensity function (the one we talked \
about in Introduction Part 3 to an image.\n\nI am now going to go off on a \
tangent on fitting a function to an image. I could do this else where but \
since I just mentioned it I might as well do so now. \n\nYou might be \
thinking how can I fit a function to an image? Answer: an image is a \
function. And by fitting an image we mean we want to find an approximation of \
this image functino. Each pixel (which contains a value) has a numbered \
position in both the height (y) and width (x) directions. Therefore, we can \
say that an image is a set of values mapped to a 2D space. \n\nBelow is a \
great video that talks about images as functions. The speaker says the word \
\[OpenCurlyDoubleQuote]channel\[CloseCurlyDoubleQuote] to describe the gray \
colorspace (the same one that the Thorlabs camera uses). He also talks about \
smoothing an image and that is very relatable to, but not exactly the same \
as, the decimation that we were talking about earlier. The second link is a \
continuation of the first video. You will hear him talk about the ways to \
write an image function. You will also hear him mention negative values, but \
we won\[CloseCurlyQuote]t be concerning ourselves with negative values so don\
\[CloseCurlyQuote]t focus on that part. "
}], "Text",ExpressionUUID->"9f0c40d5-7c96-4b92-88dd-b2cc6e98abc0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Images as Functions\>\"", ",", 
   "\"\<https://www.youtube.com/watch?v=x1zhWArrkko\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Images as Functions Continued\>\"", ",", 
   "\"\<https://www.youtube.com/watch?v=edOZEXduamc\>\""}], "]"}]}], "Input",
 CellLabel->
  "In[736]:=",ExpressionUUID->"65273bfc-3ab6-42f5-85fc-7737d0a12443"],

Cell[BoxData[
 TemplateBox[{
  "\"Images as Functions\"","https://www.youtube.com/watch?v=x1zhWArrkko"},
  "HyperlinkURL"]], "Output",
 CellLabel->
  "Out[736]=",ExpressionUUID->"32673e78-00e4-45b1-ad2d-d30f5f4f3d0e"],

Cell[BoxData[
 TemplateBox[{
  "\"Images as Functions Continued\"",
   "https://www.youtube.com/watch?v=edOZEXduamc"},
  "HyperlinkURL"]], "Output",
 CellLabel->
  "Out[737]=",ExpressionUUID->"b58235ce-3bbe-489d-b1d0-ff2fe8f1e5a4"]
}, Open  ]],

Cell[TextData[{
 "Now at this point the documentation quality takes a bit of a nose dive. To \
complete the documentation in the time I have allotted to its creation, I had \
to make some cuts. The next part of the document was supposed to include a \
step by step breakdown of the code used in each of my user defined functions \
that are in my package. \n\nHowever, the documentation does not do that. \
Instead, the documentation following this point will be bare bones. It will \
be include enough information so that you know what each of the functions you \
will interact with do, what each of these functions requires as input, and \
what each of these functions outputs. You will also know what will cause \
errors in these functions. You will not know how these functions work in \
great detail. \n\nOne thing that worries me about this is that the program is \
incomplete. Roshan and I never could get our two programs to agree on data. \
So you might be tempted to create your own program thinking you can fix the \
issues, but I advise against that as that might take a whole summer to do (as \
it took me a whole summer to make this program). Near the end of the summer I \
experimented with including a correction factor in my fitting program to \
account for the fact that the laser beams we used are not perfectly gaussian. \
For more information, please ask Dr. Marcus about the embedded gaussian \
discussion we had last summer and see the Slack posts. Using this correction \
factor did seem to increase the accuracy of my program\[CloseCurlyQuote]s \
results, however, that was when I chose the correction factor myself. My \
program seemed to be unable to correctly choose the correction factor itself. \
\n\nAnother issue that I encountered was that the two methods I used to \
profile a beam: using the camera/computer and using a pinhole, returned \
widely different results. For more information see the Slack post with the \
attached file called: \[OpenCurlyDoubleQuote]",
 StyleBox["divergenceangle",
  IgnoreSpellCheck->True],
 " final.pdf\[CloseCurlyDoubleQuote]\n\nI do not think there are any coding \
mistakes in my code causing these issues. I think some of the issues are \
being caused by my code being written with the idea that it is okay to \
approximate the beams as perfectly gaussian. \n\nNow it would make sense for \
you to understand how my code works in great detail so that you could edit it \
to include a correction factor if you decide you want to do that. However, \
like I said, I will not be explaining how my code works in great detail.\n\n\
This puts you in a bad position. \n\nWith that in mind let\[CloseCurlyQuote]s \
discuss GuessSpotSize. Why would you want to guess when you can just fit? \
Well fitting data to multivariable functions like we are doing requires some \
good initial conditions. We acquire these decent initial conditions by doing \
educated guess work. \n\nMy tools actually use GuessSpotSize twice. The first \
time is used to determine what type of decimation should be performed. The \
second time is for doing fitting. "
}], "Text",ExpressionUUID->"cc98be94-ecfe-4b48-8250-7c25061941fc"],

Cell["\<\
Here is a quickly commented version of GuessSpotSize. A comment describes the \
line of code that comes directly before it. \
\>", "Text",ExpressionUUID->"7b15bb7f-b627-4ea2-87ab-686d2c6bf1bd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GuessSpotSize", "[", "imdata_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"decimateddata", "=", "imdata"}], ",", "max", ",", 
      "centercoord", ",", "heightcentercoord", ",", "widthcentercoord", ",", 
      "decimatedheight", ",", "decimatedwidth", ",", "intbackground", ",", 
      "targetintensity", ",", "intvaluesinwidthdirection", ",", 
      "halftotalwidth", ",", "intvaluesinheightdirection", ",", 
      "halftotalheight", ",", "wwidthguess", ",", "wheightguess"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"max", " ", "=", " ", 
      RowBox[{"Max", "[", "decimateddata", "]"}]}], ";", 
     RowBox[{"(*", " ", 
      RowBox[{"finds", " ", "max", " ", "value"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"decimatedheight", " ", "=", " ", 
      RowBox[{"Length", "[", 
       RowBox[{"decimateddata", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"finds", " ", "height", " ", "of", " ", "image"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"decimatedwidth", " ", "=", " ", 
      RowBox[{"Length", "[", 
       RowBox[{"decimateddata", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", " ", "All"}], "]"}], "]"}], "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"finds", " ", "width", " ", "of", " ", "image"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"centercoord", " ", "=", " ", 
      RowBox[{"FirstPosition", "[", 
       RowBox[{"decimateddata", ",", " ", "max", ",", " ", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"finds", " ", "posiiton", " ", "of", " ", "max", " ", "value"}],
       "*)"}], "\[IndentingNewLine]", 
     RowBox[{"heightcentercoord", " ", "=", " ", 
      RowBox[{"centercoord", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", 
     RowBox[{"widthcentercoord", " ", "=", " ", 
      RowBox[{"centercoord", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
      "breaks", " ", "down", " ", "the", " ", "coordinate", " ", "list", " ", 
       "into", " ", "two", " ", "seperate", " ", "values"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"intbackground", " ", "=", " ", 
      RowBox[{"Mean", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"decimateddata", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", " ", "1"}], "]"}], "]"}], ",", " ", 
         RowBox[{"decimateddata", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", " ", "decimatedheight"}], "]"}], "]"}], ",", " ",
          "\n", "   ", 
         RowBox[{"decimateddata", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", " ", "decimatedwidth"}], "]"}], "]"}], ",", " ", 
         "\n", "   ", 
         RowBox[{"decimateddata", "[", 
          RowBox[{"[", 
           RowBox[{"decimatedheight", ",", " ", "decimatedwidth"}], "]"}], 
          "]"}]}], "}"}], "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
      "guesses", " ", "background", " ", "color", " ", "based", " ", "on", 
       " ", "colors", " ", "of", " ", "corners"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"targetintensity", " ", "=", " ", 
      RowBox[{
       RowBox[{"max", "/", 
        RowBox[{"E", "^", "2"}]}], "//", "N"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
      "where", " ", "intensity", " ", "has", " ", "dropped", " ", "by", " ", 
       "1", " ", "std"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"intvaluesinwidthdirection", " ", "=", "  ", 
      RowBox[{
       RowBox[{"Reverse", "[", 
        RowBox[{"decimateddata", "[", 
         RowBox[{"[", 
          RowBox[{"heightcentercoord", ",", " ", 
           RowBox[{"1", " ", ";;", " ", "widthcentercoord"}]}], "]"}], "]"}], 
        "]"}], "//", "N"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
      "starting", " ", "from", " ", "center", " ", "it", " ", "lists", " ", 
       "pixel", " ", "values", " ", "to", " ", "edge", " ", "of", " ", 
       "image"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"halftotalwidth", " ", "=", " ", 
      RowBox[{"decimatedwidth", "/", "2.0"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"intvaluesinheightdirection", " ", "=", " ", 
      RowBox[{
       RowBox[{"Reverse", "[", 
        RowBox[{"decimateddata", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", " ", ";;", " ", "heightcentercoord"}], ",", " ", 
           "widthcentercoord"}], "]"}], "]"}], "]"}], "//", "N"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
      "same", " ", "as", " ", "other", " ", "intvalues", " ", "list", " ", 
       "but", " ", "in", " ", "height", " ", "direction"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"halftotalheight", " ", "=", " ", 
      RowBox[{"decimatedheight", "/", "2.0"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wwidthguess", " ", "=", " ", 
      RowBox[{
       RowBox[{"FirstPosition", "[", 
        RowBox[{"intvaluesinwidthdirection", ",", " ", 
         RowBox[{"_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", " ", "<", " ", 
             RowBox[{"(", "targetintensity", ")"}]}], " ", "&"}], ")"}]}], 
         ",", "\n", "    ", "halftotalwidth", ",", "2"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
      "finds", " ", "the", " ", "first", " ", "place", " ", "in", " ", "the", 
       " ", "list", " ", "of", " ", "values", " ", "where", " ", "the", " ", 
       "value", " ", "is", " ", "under", " ", "1", " ", "std", " ", "away", 
       " ", "from", " ", "max", " ", 
       RowBox[{"value", ".", " ", "index"}], " ", "equals", " ", "number", 
       " ", "of", " ", "pixels", " ", "away", " ", "from", " ", "center"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"wheightguess", " ", "=", " ", 
      RowBox[{
       RowBox[{"FirstPosition", "[", "\n", "   ", 
        RowBox[{"intvaluesinheightdirection", ",", " ", 
         RowBox[{"_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", " ", "<", " ", 
             RowBox[{"(", "targetintensity", ")"}]}], " ", "&"}], ")"}]}], 
         ",", " ", "\n", "   ", "halftotalheight", ",", "2"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
      "does", " ", "same", " ", "thing", " ", "but", " ", "in", " ", "height",
        " ", "direction"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"wheightguess", ",", "wwidthguess"}], "}"}]}]}], 
   RowBox[{"(*", 
    RowBox[{"this", " ", "is", " ", "the", " ", "returned", " ", "output"}], 
    "*)"}], "\n", "]"}]}]], "Input",
 Evaluatable->False,ExpressionUUID->"c4f8a723-144f-4181-a14a-24428b558de8"],

Cell["\<\
GuessSpotSize takes a matrix of image data as input and outputs a list of \
{the guessed waist in the height direction, and the guessed waist in the \
width direction}. \
\>", "Text",ExpressionUUID->"9901ae9e-ebc0-4af5-8e5c-db569bfb2f8c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Piecewise Function", "Section",ExpressionUUID->"daf30052-a7d4-4007-af91-f1dbb84ddc74"],

Cell["\<\
The next thing that happens in the TotallyDecimate function is determining if \
the image should be autocropped or decimated. This is done by comparing the \
result of GuessSpotSize to a predefined waist size. If the beam is guessed to \
have a greater waist size than this predefined value, it is downsampled. If \
the beam is guessed to have a size smaller than the predefined value the \
image is autocropped. This predefined value was determined through \
experimentation. \
\>", "Text",ExpressionUUID->"e78f6f9d-632a-445c-a0f2-68c2fa8ccf74"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Downsampling", "Section",ExpressionUUID->"2c2d5fb2-f3af-41f5-be18-01acca97c5d6"],

Cell["\<\
In a truly terrible way, the downsampling function is titled: Decimate. \
Decimate\[CloseCurlyQuote]s description in the Mathematica (drop down arrow) \
also isn\[CloseCurlyQuote]t correct. All decimate does is Downsample.

Decimate takes image data as input, and outputs downsampled image data.  

Decimate just wraps a built in Mathematica function in a nicer and more \
friendly package. 
Here is the code:\
\>", "Text",ExpressionUUID->"999a598a-6497-40e4-92a2-6eb6cf37d8f4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Decimate", "[", 
   RowBox[{"imdata_", ",", 
    RowBox[{"power_:", "3"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"twoisraisedby", "=", "power"}], ",", 
      RowBox[{"data", "=", "imdata"}], ",", "height", ",", "width"}], "}"}], 
    ",", 
    RowBox[{
     RowBox[{"height", "=", 
      RowBox[{"Length", "[", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], "]"}]}], ";", 
     RowBox[{"width", " ", "=", " ", 
      RowBox[{"Length", "[", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", " ", "All"}], "]"}], "]"}], "]"}]}], ";", 
     RowBox[{"ArrayResample", "[", 
      RowBox[{"data", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"2", "^", "twoisraisedby"}], ")"}]}], ")"}], "*", 
          "height"}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"2", "^", "twoisraisedby"}], ")"}]}], ")"}], "*", 
          "width"}]}], "}"}], ",", " ", 
       RowBox[{"Resampling", " ", "->", " ", "\"\<Nearest\>\""}]}], "]"}]}]}],
    "]"}]}]], "Input",
 CellLabel->
  "In[738]:=",ExpressionUUID->"57b06774-08a4-47d9-9709-e2247c8dfe0d"],

Cell["\<\
ArrayResample is the built in function that does the downsampling. \
Downsampling cuts each of the dimensions of the image to 1/8 their former \
size. 

Let\[CloseCurlyQuote]s have an example. \
\>", "Text",ExpressionUUID->"01116ca3-c2f1-44c9-9291-c47e43127fd3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"imdata", "=", 
   RowBox[{
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"currentdirectory", "<>", "\"\<image2.bmp\>\""}], ",", 
      "\"\<Data\>\""}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "All", ",", "1"}], "]"}], "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[739]:=",ExpressionUUID->"da52314b-4d8e-4bf8-b4a7-4175f012f990"],

Cell[BoxData[
 RowBox[{
  RowBox[{"newim", "=", 
   RowBox[{"Decimate", "[", "imdata", "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[740]:=",ExpressionUUID->"8ae3facd-a671-4614-a9d2-e55f98bed3be"],

Cell["\<\
Below we first see the original image. Below that is the downsampled image. \
Notice how it appears less smooth. In this example it would have made more \
sense to use the autocropping tool (because the beam is so small). \
\>", "Text",ExpressionUUID->"3e7e6b73-3421-4dc3-9d89-35d6db327930"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"imdata", ",", 
   RowBox[{"ColorFunction", "\[Rule]", "GrayLevel"}]}], "]"}]], "Input",
 CellLabel->
  "In[741]:=",ExpressionUUID->"b35ee3c2-63d4-49be-b7cf-25ecf86663d8"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[SparseArray[Automatic, {1024, 1280}, 0., {1, {CompressedData["
1:eJzt1ulPyHEcwPG3sxAhJBG5O5xJziJ3RDpUKEcpJYXcHjjWeJJpM7O5lo15
5NzMMWOemWFG8wCTY2M8aHjgmDne/4bt99leD377/r7H5/P5br9f7Oqa7OpW
QKu2BBFEEEEEEUQQRmu1U08N1jxV67ReKsYPZ6ku6ZfynHBRYW1gnR4pxe/q
WUW60AH9UHV7+KiKEPigylD4om0d3LMjHFR0Jziv9DB4rvWdHesCxzU+HJ5p
S1fo3g0uK6c7fNOxCEjrAe9U78FTesEb1UfC1N7QopNRkNUHQqLhlmr7wsh+
nkUnYiC3vzkMgHvaGwtTBsJ3XRkEVRYibojrq3EoFA2D/sPhlU7FQXG8zwnu
qTOJUD4C4kfCZ10fBbtGm9MYCB0LD3QwCRaOg/Bk66VD4yE7BSImQJOOTIT8
SdBnsjVX4xQomWo/Uq2hLqTBpmnWZLo90O10zzzDPWb6TzML7mrvbEidA391
Zy7stpGpGfBT1+dbxwWQlAlfdXEh1CyyHlnwSecWQ1k2xObACx3Ohbl58EfX
lsDGfPMrgGYdLYTMpfZpmWOqXO4dKYInqiuG5BXwVg0rYfIqeK+G1TChxPmq
K4WENfBQtWXeu3K4oaVr4bdOVdiLSniqinXmq/oqiFrvHdNoL+dtza7xHRVs
cF2t3Gg/VLIJXquwFh4rbbP5KnoL7FeLCrbCTUVug61qUuJ22KP7Ct8BGdqn
q2rWb3XbCX01NBAIBAL/pX8Agn+c
      "], CompressedData["
1:eJztnFeXVEUUhaf4J774C8w554gYMIuIIAqKYhhEQVAUEQNmFAMYUVTMOWBW
FBVzzjnn7NnrVq17u1ePMwMz3XWrvocND9jdt8759q5zk6uMGD903JCurq5V
u7u6nP19hv1xtukC0+WmK01TTSebTjHNqvz7haaLTBeb5prmmS7zn7vCf/a6
ymdPd8X3zzadYzqv6Xsu9Z/X5+abrvGfnWE6zTSz6TvO8sei75pjOtd/5/k9
HN8l/jdaHad+b4HpKtPV/revNy003WC6xbTYdKtpuj+mU/1xVY/pzDYc17W+
rtXjO9Y02XSiaYrv2UmmaZX6V4851HJWBMd+o2mRr/HtpiNNR/k1TTId37S2
sK7pNVrbTaab/RrF0G1+rVpnd9M6T+ihj3Vd7+LKeu8w3Wm6y3S36R7TvaYj
TBN87yeajvH9T7k2IU9a1SbUZbzpcF+bib4mxyVel2rW9sbN/aYHTA+bHvG1
CizJW0e7kiXqVtbtPtMo0xjToabDTONcyVvVj6rjRGr5v7UMHD7oShYfNT1u
Oth0iGksdR7QOj/UVOv9fa1HV+oN24NX8ydMB/l6j6Hmban5Elew/pjpQF//
wDw9aH8PlO/ygbLnANMI35NR9CWKvjxpesr0tGm/pj7JPyPpV7T9Wmp6ybQn
vatd754xPWt6zrTM9Ar9q2X/lvoePm8abtqXPta6j3uZ9vF9JFPr3Ut5MmTr
Hq7YJ9XfvX2P6W8a/X3B9KIrZqHlpl1Nu/ueD2/Rd7ydbu9fNg2j71n2fTeH
73Puv/b5V02vm3ZxRQ5oL4ALuBAXr7mCjaGu4AM2YCPkxRumnUw7u4IPsgM+
WmWHOHnLtKMrcwRWYKUnVt50Ra7ACqz0hRVlyzum90zbmbY37eCKvKnuT7AE
S31lSRzBEAytKENvu4Kjd12RSx+ZtjFt68go+Bp4vt53JVcwBVMry5RyioyC
p4HiSfvf1q7c/+AKrgZy7/vA9KFrZIz8grPB4ExZ9qlpK1fwxlwPc+3INnH3
sekT02emLR0MwmBnGIQ3eGt35pFzcNcJ7jTrbeGKvRb+4K8T/Gne+9y0sSMH
4bDzHH7pykyER3iMgUdlo5jkvBguY+DyC9fIIyzCYiczUjxuZtrckZOwGR+b
2sO/csU+vomDVViNm9WvXcHppg5WYTVuVuETPmPmU/u+8vQb04aunAHIVtit
E7vfmr4zbeRgGIbTYBh+4bdu/K5n2sAxS8BxvTlWDovl9V3BMnMFPNed5+9N
P5h+dAXbcA3XKXFdnT3gGq5T4fon0zqmdV05k8A5nKfGueaSKutwDuepcg7b
sJ0a28wnsJ0q28rttRxsw3aabGsmWcO0tiPD4TxtznWO+bMr5xU4h/NUOWcm
h/McOFeea37huiGs58C65nSyHd5z4F33g3gOC75T5Vt5/qtpdVeyTp7De8q8
/2L6zXH9BdbTZ13ZzpwO6zmwrlwX77+78hwV7uE+F+7FPM/qwn6O7GueV+7/
4fAAHsjTA+If9mE/R/ZD/jMD4YFcPSD+9Zww/MN/jvyHPUAeYB/AB7n7QM+k
4QW8gBfwAl7AC3gBL+CFRi+sZlrT4Qf8gB/khz9Nf7nCF+wT+AJflPeVgzf+
doU38ASeyN0T8oPeHZAfNEexV+ALfFHuFfIGMxS+wBeNvuA+NX7AD6Uf8AAe
yNkDOqfWjIQH8EDuHuC9ZDyQqwc0C8E+7OfKPucBeCBXD4R7a3gAD+TqgbAP
/GP61/H/sMALeAH+4T9n/rUXsA/gg9x9wL1ifIAP8AE+wAfhWhFewAu5e0Hn
B+HZa/yAH3L3g/aG8E4nfsAPufshPFOEB/BArh7gfQO8gBcaz515Jw1P4InG
+2ycQ+MH/NC4R3DvGS/ghfI5DPYG/IAfCj90DcEP+AE/BD/w7iY+wAfFuwu6
thT2BbyAF3LyQvABzMN8Lsw35z9zED7I2Qe6VoQH8ECuHoB5mM+NefIe9nNl
P8z+uuaDB/BArh5gD4D/nPmHe7jPkXvNPrAP+7mwz5wD87kxr7zXvS24h/uc
uNdznuQ93OfGvWZ7nm2G/RzZ51om3OfIPe87wn6u7PMMA9znyH24jg/3cJ8T
97yvCPe5cc9sD/O5MR9mHLEP8zCfA/PkO6ynzrpyXZzDOIynyjhMwzRMwzRM
x8205m7NIswh8J0q38zbcJ4D57p+AuMwngvj8A3fqfCta97kNlynxnWYv2Eb
tlNjWzMJXMN1SlyL6TCLwDRMp8I0GQ3PqfAMy7CcCsuao5k14DklnslneE6B
ZxiG4TozrDyGW7itG7fkLdzWjVvNC+IWZmE2ZmYDr3AKpzFzqmytzgPiFVZh
NVZWlavkKYzGyGjgM+z58AmfMfGpDBWbcAmXMXGpa1Ds53AZC5fVeRMmYTIG
JrmOBJOxMamchEmYjIFJPT/CtUtYjIFFZSMcwmEnOWw1M8IhHHZqXuxpToRD
OGwXh+zH8NdO/sSesk/cBd5gDdYGgjVxpnyr7qEwBVMDlV+BJ1iCpZVhiUyC
o5XlCHZgp7/swAqs9CdnlDHwAi994aU6G5MzcNNXbnTdR3MMvMCLeKmyIk6q
1wWZd2Glt2xRrsAHfDTzQXbARjMb4kKZ0cwFTOTFhHgI+SAGyIW8GAiZoBmT
/SFvDrQvDKP/2fWfPqffZ/qbbn9H0rta9k6+lBfxYX17Gfo2in5F3S/1arnv
Fd6Kr1fNvtK+hqfi61PVU9q32K/i7ZX6tIzeRNMb6t6euldrDvOdY360rz01
b2/OwPng1HyJr3NvdaWmvdc0MCx+xzbVdIKvY6gh9Svqp9oEzqqMTarUJqe6
qCb94aKuaw/rntS0xmkJ9VbrE9PdvpdTfe9m1GRNYT1hLVPacNz9OeZFPdR/
5iAd2/wWx7PQH8diX5MV/c3wWwv8d2t9k/06ZvfwXeGz81r8d3P8b8313x14
+A+Zh/hs
      "]}, CompressedData["
1:eJztnTusbdmVlk12wiZrQidIDiGDpCSHFTZZk9EiqgBLTQQEHVRAcAOCRuqg
kRCiEUIY8WzerX4WbjBF+V22y3a5XC/Xk6wJqbpzfXvpfvv+Z4y51tp7n+uq
CmrcufY66znnP/7xjzHn+uLf+Fu/8jf/3Be+8IW/+He+8IUXf+nLd1988SvP
fW4/t5/bz4r9jYOP4+MddfxfNDv7nLrPMR232j57/tn3+lnrB1vvt/ueqvc3
e5yt+31W3+/s++w+r+74nX3PW/vTLJ7sPc9WnHvW8ebSz/Wo9/Ibz730y7/2
6C+99Pcvtl/3767T3591e+lxur3/XOa9b++HVX98+nG643ev/35W7dE8pd+f
9h7n1nZvPz7GbuUVt+53t8LLfj8+qn908bR3vH8Q29X+1xoPs+Pms42/e3H6
eByl38z2nyfPs73fdc9fjYfUTsc9erx0x/lenHo2x0O63v38Mb3vqj8ci/vn
57227T6HS/mPuf7+i9rPj+ItmV/O4ug2XJ/nHUfZ3/nNX3n+S7/zm7F97fF0
dP+/bNxw636/l9dcfny4nfpXt393+UfVz2f7+1Hj4tLj7Ri/NO9Xnr5f1b9u
PT6uP46q57vVb8yOA9vZcZKOYzuu67fK81V29npmjz/7PPaOz21x3+d+axaH
uuNr63jqve/fOhsHaVxstdV50u/VfrPXuffvqvFe4cJe/3fd8ej+/vDH3Swf
2Br/zo6zrePl6HG2dVy5/c5v//rLf+Wd325fb/f4WI7fHa97/dzDGIfd/v9w
x181zmb93lY/eNR4m93u31M/7v7etT4O7Wr73vPvxatbj9d9fvDS47E6/qXG
Y18fvpTf29sfu34ljYfu+Oj+/aVs97r2xpnpve71u1V/rMbr07c/NP85r8ds
fT57eezeOO8of3bUeBv39Y/juPfvafs/fHx7/+S03Tb9Xff4aVzv5elH+d+u
Pz6WDz/UuLQax/P+eW+8cbR/rvrV7Dit4tOEG2nc2O4dn9U4rf7O11Fdj/ev
/PpWfnSUvz+af/f890Mb95cf136eqT1rjxrnXR7a/fv0e3cce5xV4++o32mP
+/ynZ3/H9vT7Vp5/NL86Kh7fyuvvx4Fbj/90nv1x997xXP390XH23n7Z9eO2
jJ9qnKZxlv7Ox/Xfpb9P47rCgVn/n3Bv9j1V76ca/0fhwv08YqsufmsesDdO
mM9H7bW9/GTW0ap+1Y3DZ/8ujcvKz6Zx+rvf/dUXvvof/tnJVuPaNuFJsuk8
FW51cSnZo/TES8UVlT+7Dl+4tY4wn8++/3lsxwcfp/ILXV7R7Y9V/63ihDRe
qvHXHbe0x3X88/bfp/P793Q+40Q6nnFxNp7p4kzFK2b54aV0ijn94dZ8Yb/e
MMsr9vKM9F662yvc6MYLXb3OeFLxhO54NR6k8cl+tuzv8e3fZ/fz9nTeCncS
DnVtl6908b/Sm2bxo7vf08fJ1vjl1ngyz0O26pcJnytcqbZXeFLFGamfdftn
8p/deKLCk/R7Gs/dcf29T813/0Xc37+77e2z1781LpqNl7q4spevbNVVn/z7
o+qUHh6OVPHbXjzp4kY3D9LlJd16gUrPqPIH1bio8KAazx733fGfzpOOM57D
vzzb///9+O9+/N//7F+dfk9/X11PhZezceCsvtzlo6nOo9sfZ+Oh+/3v1vji
1jxmVs/p41IXh7o4NRvfbsWhFN9UvLyrl3Z5TRV3zOKG8QObcKOLez4uv/s8
1fnS31W46efa1ZW6vGi2fm1WD57lSbP4tA+nHgoO7c8Pd3Gm4pmzPGgWd1L/
6vKcrThUxUcJX6pxW41z8CDhQsKPtL+3d211H7ZdnaiKN7s696xOdHQdTFf/
mcWjffHZrepajsOvij9txatZHOv6qa41biWeVOFX0ju26joJz7r8pYtH/n3c
/78+2Wq/6u+r8zpOnG134+CKjyXdfTYu3NoPKzyrxsuxfOrW/Kp73v1x3lH4
VPGpWX264lddnKrwp6v3VPpR4ksVjzJudLd/cjGfXNG/Of2e2t5uy+/d66p4
WcLpip9WutxsHVOFU1vzqEnPmsWrp/OFrevQVzzm2vi0FWe3r6PU5U17dSbj
ThXvdflPiuO6cU4V53n8pnbiMQkHjCPj/v9txCvvl3CK39P50/Wl60w4XD2n
pONXuvys7p5wqJun7eLUbP6/y6sepn7VjUuPqweY5U0pj1/xpa3xXRW/VfFZ
8teOTyq8qXCnwiPjhvHDf5f27+JOwivjmfdL99PF2a7136fnXula3l7pWxUv
n9XjZ3WtWT1rFte28Z+Hq18lvPL2Lq86Sp/q1u1W9TVVXFfl37p8yvwnxWXJ
Jrz4R48fx7+LPMl/l2x1vK1/V+FeFydT3Jlw3rhW8eHkr7bWx1f5yIRvlQ6y
V+/aytceBm5t5W/bce7pfmN+3YH0Hu3XUjv5Sdc5zdYrdvWoKk7s4lfSnRIu
gCtYb094we/jPf37eBx+934+Tmqb/1X42Y1nK56a8grdPG2KQys/WfH/ivdV
OloaJ926roR7+/jcs4p/td6fcHAWD/fqZckfuv9UftX9OvG5tL3Sp7u6fBr/
CU+q7QnPquOy/yc38emdnOGTf/fxjY/ef4z73404m/C2e18VP7SfSfnTqj7N
vK/qRxV+JjyscG+2rqOKu/bxvVvhYF+H8/X37jPHr7N1YN28ZMK5lH9MfraK
T9le1TcY1xJvq/ha4l0Jx4wztCv88X7GH2w6XvfvEr6l331ftgkPHTcnvOzi
nvGvW+fifmA8q/hhV++bxbvE+/blS8/zp7fBvcvnF7r8rdLjunUYFT9znLq1
PtX4NpvHrOLWWd0qjdfEm9i/wpXf+7NPL/A/nlnjlre7nfCu+t3X5e2JHyY8
TPu5nfRE224+I+Fc+n0W/6p63WS7ut6szpf4XoUjT8ela9WFzM8HqHhthXtP
/v32+tgUr3bzpgnnttZzdPOlxrsUd6VxWsVxFY9KODeex386a4/7+y/PfXqW
X3/5P5+22/J7ws+9OJr+voujiY9WeJjyzMZD88Au7iUc7OJhFwcrXtjFwb31
KA+DByY+uJ8HJv67lwfO6nZd/Kvi2wonZ+tmq/h2Nn+QcKCKOxMOJVzDgoc/
+fS2fvxfz/ARy+/p76vtXA/bE05X12/8reLyri6YeGKKj80Pu3phV/+r4uGt
870qnnJ0fd5t8bDPFy+l/yX/U/HEivdvzVt05xFUdavp9yoOrvIO5jeJByUe
lvCx4nnmg8bFcZ//7cwa79huPE1/7/19XW5zPF+nrf++ek5VfF3liRJuuk1/
SfF3Fad08XJrXG1e4nGb4r9ZvNyGi7fSEWs+eZR+mPxQxSP9Hqv8bsqTJN7Y
5YvVPPMqv7s1f5twr6sHYs3XEq9L+Php65NNy33+3smyPeFeavs8Pk7CZ+Mv
bW83nia+WW2v8kZdPO3yzy5uHoWXFa88uu7mGJ55ez7ZxcEqjp7FQbcrHaWq
/7NN8UylB7n/duNoW+Og48ZZm8Z1N4427n3h8X+/f2bHff3+aT/a3s7xjHdu
s79xL+Go97dNuJ54csWjK77J80157i7ftDU+VnXaCSe7eNnlk7P65CxOpnj2
uviYeONX4vVt5Y9dPjkbZ1fzjSo+meLsbj2046WkP6b5E4k/VvG18S6N64SL
iR/amh+O6/+DMzz85H+f/OsPTr/T9n4Jf9luPDPOJp7K8X28xDcr/uo43/zT
/DvF72yv6p621j9217mpcLPKc6ftFV4mXnkb/fL6/PJa8fhsXU/C04SfW/Pc
Fd80bqY6xe4834SnKf/i8Zny0AkvqzjbOJZswlPsn/908y/94clWOGw8NK81
j/V+vq7q+s1XZ3UE8DTpteafKS/fjeOruD31zwpXKz0/8ZDu/JlZnJ3lpc9K
3L4VTxO+bsXTLo6yf6XXVDha6Z5Jj0/rrXTnsWA9zhIftS6ZeKrHeeKh4IJx
CrxL28FJrHF03NcfLvjwR6c2+9M27vo4xlvjd+LDxmXOZzxPvDfx4+p5Jj21
m6+zDtDN09tWOGv8rNpVnVIapwlPK1ytcPa2+Ho8D028ND0X42fSWSp9NOmk
VVxf1V+meCnlh6p1Y2bzP1XewvjoeLWbn0n8z/E6Fhz6C59ezi//UWw/3v2L
f3zCT9pY/533T3qB24n/Gsexvh/jcsLNStet8l9JF7DOmuZRVvNEE3+dnf/Y
nefdzTN1dYBKD6jwcw7Xqrz57XjrVp6acHe2jnM2D9XVAdyPEl+t1hec5akJ
Z5OOWvHSbl2RccJ4Yh5qfDKemYfyO9sTjo77++Mz/MX6d47j62J7wv2KP3t7
4sHGZfPhpAun5530mKSHV3pBwmH3v2pdusRvq7ium/c3jzX+VnmsWd7aw+NL
10FdDnfT86hwd5bvpjikwt9Kn690g6peNOmuCX+reUCJB3X1VcezSV+kneJ/
cAkcM856u+24nz957kuPb/BPTnhK29a46+3my8bx9HcJ5/139hcJvyvenXQW
592s/9qvWm+o5lVVukLiw5431V3HN/Hiqq4Aa30vxa+X0mt7ePxwcXcvHhuX
kx9MfLfa3q0nqNYbqnDY+JpsledK9QFJFzSOpvxPyt+zn/VW80vzXKxx1fgH
/o77e+lkx33+j+f+8rjR0/a/+viG1u1dvOY8yfo6Ob5x2Pw58eOkL2PTc7a/
s36R4hbHOUmXsK14sful+2vFj6txsrW+a2t9wmV58bXqufo6cPe+Kp13bz1s
9f6qeq8uLqe8mfsp7cQzEh5b5zXvNR4nHbLK398pnk56QsVvjYPgJxb8ow3u
Yh+f9stfO/1Oe9zv1872Zz/wGhw1jns719HFe/Nk36fxN+Fy4svGa/PmVE/s
ugfHQ0m3cB1E0i3cLxMvpp3yH4yXlEfZi8Npe4XH3t7F456OfHtcvhQvrupt
k27UxeHEl13fUOkSKU4zn0j93Low7aRLMN6c3zHPSjht/K14HXhsnEp8GFwz
/hpvsc8/PsCfnqy3p/3Ba+M55+N3+we2G48rfk7bfLyrZyS8Tr87DjGe0+Y9
V3qy8dl1vtX8sqruN/Hmqt6n4s2XqovYqmN0eep1ePTl+HOF38bnWdzGpveZ
bLeeotIvqjrdFD8m3my8TnUOjNfEv8zPGOep3su6sPUD81PjmHHR+GlrvB44
86fLc/6fz/21xz+slt99HON6wnEs1238t18xD0/6TNJXjOfOQ3p7yiOm+Mf5
gGrecKpvM05vxe2qHqOqy/D4S/y6qhtOeL0Vvx8Wr95e5zaL210+3dU/Eq/e
WodhPo1N+FzxaNrd9a/S+gSJR8ObU3yd4u8Up6f8mfE56cdY82Nw9q9/Ojx/
9X+d7Liv1bL9MZz92teX5/71UxsLnnNc8Bzc9Xbjvf0B15v8gvm9/VDi47ST
Tm7cNj9PPJu2+0Gq47BejU06CDbpI9U6i6kOqcJrj7u9dcjdfOGT+HLU+oe3
qps7Dr+T36rikif3P/eX3bxiwvFuHjHx7dn1vKrvcRjPzZOsS8KvUt4v6R+p
zgJccT1EytcZv8E341rCUfATfHb7MYy/8L9PduDSatnO/j4O/sC47+0+r/0J
v+NXuH7axnn7saQPJZ098XPjfZonY5ynf1jndv456dypLiTxdfDcep/5eKrX
6+ooVV20x/ts/UfStSsevo2XX1rnruoB+/h+f/zRr8tLfJztXT6e8Ns6d8Jz
x4HOP7r/VnFp4uPmUaneAxy3fuq6sVQnXOG184duW/8wXhs/wUHjNb+D13/v
8T/+z4J/ryzj/eXT/n97PJiTNd6Dz/ye/IJ/dxub4gXjvHUh83LjuvOfKV9q
/5p4uvm58x+uA7QeB57TH91OeN7Vyx2/Jhw3H0+8PeG7+Xma95Lw3LgEbiXe
XuksD1VXSXx8ln8fpZ9U+cq9ddPG66SjpO9auU7PcW2qd/Z4ZNwmPcS8zfNH
rM+murekk8BDrZMY58yX+d14ye/GVXAbPGf7eA6vnNnxPl454X5qs3/Cc85r
v2F/Y/zGgs+OR2jze6p3sb5uvcV1LImP498Tbqf8Jv2V7WkdqqoeJeE27YTb
5ksJt83Dkl6e4vQuH6/0ljm8fDh6yqz+3eXbCbe7+G2/m/Ca7ZVOYpvmFySe
Yp3EeSbjNZZxeCcdFAsup3Fua7y2fou1HpJ0auOut5v3ejs4Cj5XbfB3XN+K
x+P5fGO53tWO5/SNxe984+zvkgXvE58H1+2vKh3Gfi/VNdqPJr085UHMw43b
yRrHra9U6yclvdx8J8Wx1XrwtpfC7ZTP3Me3L4Xj+/l2F7+r/GWlfxufK32k
Wteoqv9LeUvr2rbVOsJpngTjrso7GofN16p65VRHDa6YJ1vfAFfBs4ofg3f8
XuGmt4PP4DAWfAavB05+c3lu3zzDce8Pnttf+Hr43bzc/D3heMqT+vmzPdUp
Wj9x3tO8G+v+Zd2EtvmF8Zt2hdvOb5p3V3lOj8+Kd8/OT690k2S7+vd1cTvh
+HF8POH40+OTmm/7/SQ8T3lK9480nyb1P+N4Vy8xr0k4bv7dre/DWkd1nO46
P6x5o3WQpDsb97DGU/Nht9nP+2PZPp7D+X4+37ifby7P61unNr+zP5bjmq+b
t9vP2G8l/cXPFev6Guvo4L/r0rHG8bTuFP0prYNqvc75zyrvOaun7K1jSXx8
K54fheu34eHbeXq67r38POH6UThe1XdX+O1+aB6e9BT6fzc/ybjzukiuX0g6
tvNkzqMZJ8AReHeq7wDXzb+Ne8ZL4zR8OOFq4tVsH9f3rUUX/vbyfL51wm1+
H3i57uf9wXefFzw3n3dcwHbjO237OetLfs68D+s0xvlUp57mDYHnaX4n1vlP
6+bmI0lvMa5X8+k9zipcr/KfjPuEE0lfmcX1ipffhqdv11kqPE/+rMLxru6d
8DzpLH7/7ieJlyc9vNJVkh6eeJHx3Hw8rWtkHl7VcTsfZ/2kqt8Ap8Bv82Nw
FLyE92K9HfxlO5bjgNO0x31/e3lv317u/zvLdX5niVPW9ri/b5/Ow9/Rxvo8
jgPsX7COS7A8J/Dd+VrrTs4Dw9t5b+A5fpn3mvT0NG8ozfuk/xnPvS6OeYlx
fbZeJekx1bxO8/M0L2h2PmdXL69w/bZ43sf76jorXPf2Lj+v8D3x86S3WB83
rps/pHWpzcvNX9J6Uc5v+vtQWNcpWCc3vltvTbzceAGuW1cx/4SngmfgnvHX
OGkeTdv82fhL2/g9ru+7y/1+b3l+3z1Zfsfyd7bgv89P2/eRrOONLq93vON4
iLb1d96r8d31oSlfat6e8qbGd+M8/dv64lYdBttddzDh/Gw+dK/ucgxvvzR+
H1/X0uXvfq7G8SofOovr3fUBEz9P+rn1FvObNF8TvuT6cM8T8bhNennF052/
S3Uo4JB5qnULeDZ4CH7ThmeDp+C1txt/x3V85wy/bcdz+O6Cl99b7n+1yQ9w
fM43nuO6PeG/dSDrPjwP603Oxzq/7PpH83is69idX3V9Y6pzSnq8+6XXCa7W
a6m+v1Ctx2KcT7aaR1TND+3i+3Xzp5fXX7bidlc39/Pdy8u7+U/3L/e/hOPG
b9eJm4czPhJ+Oy4Gv53v9LgFr62bo8Mav83H0QHg4+AMPBM+Dm4578h2457x
GXyEPxunwWNwFzue16vL9b263N+rp+3jetffx3V/P+5vPOc8XA/X4TjB/geL
37Ju4/jE+VyeM/4S/+m6IvN13qv5OpZ+kPIuXvcW3u5+6TpH1ztW64dXOoxx
2+MyrddS1S9WPL3S07v4vY3P3mq+UMb5o3l40lkqHl7N00y47v7iusQ03944
bh3d/MS83OOiwnPXtTgvhvW8efA94bnrx4n/jePWka1zG8eMf+a3WPASXIdP
g7vm12wHt8fz+cFyPT84tcd1/mC5/++fcH281++ffh/P5fun/RLuc53wdSx+
gLbx3vEIz8V6E/tZt8evuu7TPJ73x/vk/dt6nTDXtaf5pPQ/+ql5etLdHZem
7/Vs/a4vFpxPunrF040vCe+xR+nsxtHb4Pv+vOhRuF7x8qPqzau8qPlHNz9q
3n6n+UFp3RTrLWnej3GdtufVO+9pXIdHYq2nGKfBLdrmu+bF5t3GVdrDH/3g
hMu0B479cLmeHy7v4bXluf3whPPj+f3whP/+e3Ae/MdyffgV/AwWf8R+8Hzn
a+3X2A6u4w/RrfCnvAevZ+C4yny+Wm8MHm+dDl2GfmY9hn6KBd9dvwWOJz0m
zT9iPHV19qrOcXZdxWTN35+uK9S6S8L5+/H9dnj+5PZuHuEczxOuJ/3FuF7h
OO3qu2XuV11c79YvWn8Bz9N3FVM+1HWLia97PSnXtYAb4Ak6r3UV81HzVucn
rZ/YwrvNr7HgM7gMbo/n8aMFz1Y77utHy/W9drL87uOB61hwH/+BNa/Hgvf2
S+C+dSTjvXGd5218f37Jr4LrWNfNmLfbul94vZi03nrCd+f5sc4XWZexTTp7
t94x5U9THbtxvTuf9NL51Pvx9tp1MVV9TM3bjfcVzvu5V/q647KE+47v3I/c
v6r6RtcDpHVtXVfg+kavx2Kd3XUPKT9qvu76aPDefB2envQW81LwDB4L/wYH
2Q4vNr5jwV/zb/i5cdu4P/Duxye8Zzt2XP9rZ36A43N+2lzHnXQd2sZ7tltP
Aufxf45nwH+eLzqO60DRa8D90V9Wncb5buvz1foEaR0C477nq2Ktv1uvMd67
bb5Ufc8+zV/qriOQ8CPx+ITzs7i/TX+/dj613i/hvu+7yjv7uSZen+YPp/V9
kl5T4X+aX+H+aV5vvPf6Luk7bfB8dHnr79W8f+szad6o+bzr9+CZzh/C512H
aH4ProOD8GMseA4eg99JhzG+j+fwk+V5/3h5fq+fLNvH8/nJyY7rX/0C/mPc
z49Of8d24z/8v7Lm+/aH+AHwH8tztQ7m/KzrLPHb+AHzfqznuXodeHSetH67
1+9N6z+meRvVfCfrOEmvNx9Leg7jOa3LW+F/V6/fyve34f618q/7620q/m+b
+L+fe8rHenvi/0m3p78kvbDi/2kd9LTOl3Uexo/zsub9XjeAcWu+D9+zPg9O
oBPgB1zXCL/Hgk/mreCaLXgPrwf3zefBdXDZvB18hqfTHud5fXk+r5/aWPzB
eA6vL/e97m9/QdyA9XnH/f74TFfCP3E/xBf2G84/OA/AcyWe4rnjBxwX4A/Q
43iPWMcFrsO0/mN93/OdiQOcr3UdPfErNtXTJ3+Q1vWt4oCk/6S6+Urv6c6L
Srw15SePjQOO5v+zfL/m/5Wt9J6E/ykeqPSepAsmvE+4n3i/dX3naxkPaX0w
8y4s8bjxnrbra9B1wHl4ouefGl/MS11/Dr7D743r4J31c/AP3DRPdxu8xYLr
475/erLjPb5+suA8dvSL1S+M+ziPH4griBNSXIA/cPyCHf7ltZMfwC84f0B8
QDxgnch1Pp6Plerwec9pflUX/4kr07oI8H7zf/Ma83/roEn/dxzgeMDj0nFA
pfNX82Bn6+qP0n/ux/+Kr18+r1vx/8T77Req59f1A139P61L1/UH3XUNjP9Y
6z+MF2y1Ho11WddXWvdN+I9uDF64PhD9wXXvxn10HvAMvgsOgn/goXHSfBtc
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
9jzeR0vdJvG+cd71/PBLcAe8dx0n1nle9Bz0fXi+14dD34Efg6fgPDgKroL3
/J3rhcB9zuP1q8Ftjs/+nBddhvOB1xyH++C84Pp4j2+dWeIe8h/gPPETOg44
b54/7mut10GHA+ddvwOvJ65znb7nA1IfQPw4/u58XWiv42Nen+ZvuW7HcbC/
I2Adx/y+0nEqPp9w/ij9PvH5p/Pbo3T843WchPddXl/x/FT3lHDffte4P6vn
p+9RVnld13XSn71OFTwHfs/4GP15zd8a7+FXxNeMTyz5W8Yz+TnX6cPvqOMZ
1/PaycIX4Y/gPRY9GQvuw/fBfeoQ75b6RHCfNnlM/MIj1fXjH8BX8Bc8B2ex
4C/8Gf0cHPb3C9CPwHf4u/Um/A94z/mIV7hO5y24n3GedT02Py+eIzhvHQec
xw+Py1m/Kwne0+a9gvfo9vQH4z18AZw3rwfvXbfj78QQn5KXon8b79FvjPPV
dyZTvab5mfHeuF/pOQnvk75Q8Xus8a7i9Qnf53j8Xl5f52u7PL+bx+3ivW21
3rPrOukHiScY79P6bl53kP4NvzevT3Wc8Hyv2wPeo686Dk91+67fgefDB8H7
ry51f+DKuJ61buf5RdcHn5zHRcdH10e3AA/BY3gv28f53zzp28Zpf8cSnAVf
OS7+gra/j2x+bl2JNjjvfCvH4TrxW8Q13Af3j3W9E8+N55r4PH7X3xEG17HW
b3i/vPfxnL9zlpd1HTD9K/F7f/eF/up1OuE1af1mLHzetpqHa7xP+G49p7u+
f+LzXf0+8XvjfeL3CV+fjvd78X2e5yf/VOF/FQ9Y1+f5peefdDav35PWc064
b55v/E/foTfPT+u1MX68vonXa2M8ouswbsm3ud4C/Z78HG30HXg/eAGegP/o
B+A++ULndV1HaD0a/QJcNN6Dn1j4MRa+Tpv94M9Y8BfLfvgBjgN+Ow7g+Eln
Yj+O++Ki04znstbbMI8NfE/6PDye52p+n9Zf5j3B4++kz/Ne/Z1g9D5/Jzjp
OPAM9Hqs+T28Hj7vuoQ03xYLP3K+Fj6V8D7hvsezbVfXSfiScD/pExXOH6Pn
XH5+VsX3Z3HfeJ/0Lz/XNI+rqt9Pen7Sd1y/Y34PP3F/pp8zDsB9eD7jxnoO
48vzc+FjjFf0HHDe6/LA71ynCS6YL/r7YE/izIpL4D545jgA/QJ9Z5x3XVcS
/Acvwe27RffBL4Cv7M/vxluOz3b4NvtbN+K4xAPOLxvfOT/Xyfk4D/eZ6izh
9dZvxvWef7eROlnPuyL/Ap/nfbrukjZ47/ys192HT7gO2PPG4fXVvFvXp1nX
sW5vnIffY12X083Pmt93119O/HFWxzd/Tfif7Da8P5rnz+N+5QcqvafKi1R1
nF2dp1qf2fU69M/E7437zt/C859f8l+MK+dvwX3zffgZfD/VaaLzgP/M1wUf
wH/0gPRdSHAHXIJ/glv4BXDt42UeKbzX68mAj+Alv+MXwHNvB8fN7/kdm/wI
luPz9/YT/O7jgvfkYclfeB5tWicH/0j9jfHd+RUser3XVwD3ea/m9fAA+oXn
3YL7aX196zleV83rKlvXwZrPG/e9rrJ1fOO94/FUf5/w3/y+q/NgjfeXwv85
vn89vJ/F/4T76bl0+X7Ce79X4737iXHf9fmuywf36dfwGa8niK6DZfykebdY
xp/X4zfv93rM4+/XeZbwfa/T8OKiC6AX+LvA1P3B+/ED8FPX84NzLyz1PbTB
QeKA9D15r0fgdWioA8V6XgBtf9eKOMDrhdrv8Hf2NxzH5/N94e/QafCL4DzP
y/nZ0S/W9fGdr8UP+3uLvE8sfh5+D74/WvJA1u9TnhZ9ET6CTd9hxLr+nnEB
D/L8WvP7tN6C8T59V6XCd9tu3X23/r7C92N1naNwfl7fn+X/XdyveP1efk9/
sS5Y1WsmHR+8t44P/0n524T7Xn851WvC3+B1/r4v4x8/4HX5Xc9pvRg/4Dp+
+D/r9sBjbY3/bPd6bmmdeSz7cRz8Bv6B31M8AX6D/+C+LbjuOhvOw/Wh21i/
QY/nuaTvnoDj1N+47pL4y+/D86r8ns3nX17qu0Z/W3UccJ5+5zpM6/fwevCd
fk38Cq67Xhmb8rbWc6r5teZnie9bxzUeGCcSvqd6kqRHV3jfxfke3l8L/6u8
7nz9fsL7xOeres2E9+YD5vnm9+b5Ce/N8437rtsB763vwLPg94xPcP5u0XVc
d+F6ffgeOE+9HnovuAH+wxuN++C91+UH919Y6jvRJ+D/8FrnfcF7toOT/I4O
Al8GTx0/uB7GeWPjPzoM/J3f8RvgPG2sj8v1cR3Ox/o5gPc8J+Il6zfp+7he
Bz/Nn/V3cukn9BvwPeE8/Y/+iE3fz7V+D94bz83rU919Nb/KvCytq5nys8YD
40YX7yvdJvH5y+Rrb8/vu3hf6Tn2p34PFZ9P660lXpDqctwv0zxb6zlY8lse
N55vm3R84zz4znbidSx1PP7OItY6P/oveA/OYNERsOaj4JcteDeOu64XMK57
ndcF3oOj4Kf9gPGe7eAx1jqL62hoJ93IuhPn4brHez9f19i6Dc8Bv4hOA68n
XoLH42exXgeHfIz5PH6evI71eeJF8D3V12PhIeYnaf17+r31edddWr8xvjtP
W62XY1x3/G7eV+nzXZyf1Wvc3sbnH46Ok3h9wvcun0+8fmtdjnkB/cp52VSX
k9bTMZ93nQ7xr9cXBO/hVa7bsX7vcYwF/+H14D08z99fBC9ctw9fhP+P57+u
vw++j/tf8Ys2/BU+C8+lDS6C5+b3bIfXg//gPNa4Ds8nDjB+ez1o51VdR8l5
iUPAd3R32twP27l/6108N3533Y3rbXgv+GPnYa3TuF8QDzofBI+HV4Dr7pf0
V9eZeV6h+Y7zsGk+VbUuctLljeeJx1u/qeouK30e29Vrtuo2czrOw+Hv6f6N
62n+WtLleX/Jnyf+bjx3G76R1se0XkP/dz0CeibjBV5v/gS+e/zBv6zjo9sz
nuHx5nXGdSx8/qtLXb51HXg8/B4cMo83nrluB3yjbbyHD2Ph6ebrWG/HP1jP
B+edJ8CP2K8kfu48NNbbeQ48F/QunpvbPFd0Gd6D8dzfLcGP877HcdY8q9cz
Nl9Hj6HtdS3pn+7P1feqjOeMny6eJ76OTfWUSZdJedeUfzWOd3l8wvkurt+W
t8/r7t28auLnXZ6ecJz+YDy3zodN9TXW3enX8HT6vb/jCd/BWofHWp9h3Hl+
FeM01V9axwEHrNPC+4j34YfWB7Dow+gItNGPzdvBbes11qmx8F3w1Pyd363v
g8O2/B1t6yZeF4LfOQ/X6bgEXQXc5v79vRHyGI57yHs4b+q6d/wyfBwLnuPP
0dWJ69J3BuELrouEZ7gOPs17reojjePWO9P6NozP6vuDVT7VOFHhd8If45Nx
rKu3b8Px49Yz6/LtJ6/3fH2bro5inm2/aj9sv13hNP2Ifoa1fm7+bbxOOrrX
t4HfpLoZcNs6i/UWxqnracBr6+vE4+bf4AX8m3yqeTc4bV3d86nAM+OacRIL
D6e+xLhtXAZXvb+/s5XOB/4SF7hNHtPrvbPddaPcN8/JuMzzhF/zvLHER7wf
50nww7xn82uvI0n/AZetn6S8Z8Jp6l7o98Zl6+LpOyKJbxunE79OfLvi10kn
qfKfCZeNb/fbhI9H17vMz1uq+PRRenf1/Si3XaeYvh+S1huz/o2lHxunrYt7
nQLrJs4veR0DrOvOjNeMa3g1Frw2ryYux4In5NnS+pVY9HFwyzwTCy/Fun6b
7fBZr8tiC64ab8Ft4zXH5e9dZ8J94F+sb2DZjzbPwd9vdB0Kz5PnbHzm/Zg3
o4Phn7H23/QHx2vWP+ALxmnzDXQQrxOWeHS3PiXp3Mbraj1B87auDmJ8Nk67
XfHpSg9JOsRl8Hp73bnvw/fZ1UG83e9lNl/p/mHcTnnMLu8G343n9H/juHUS
47lxHL5EnGsdnPHsunVwAPymDV4Qh4PX1kfAbVtwy9+hsN4Nv2a/u0U3N56D
n9Yf2O66GH437rMf+MvfW8+wn/F3csFj60LoHMZprOtKwG3iF3533Tj6h+eZ
kc/AP7vuxOsBmF+D1+bV4LfzksZx82z3966OXenZHqfV/KGE20kHSfhS4XjF
t2f1j/t59rXrUL5S4njCdeN7wvOE74mfV/66wnXzcOO6dTr3W+vgWPq/rb//
7flH1lUYl/7+n3Vvxnn6DiA4Dt9DL0X/dl0iFhwi/qft+ajgnXkrOO51ytEh
wFNwFtz1PErr5/gN6xbWbTiOz2/L7+bX4Lf1EOvX1JE4juG5pnXXwXHwm/fl
eZ68X/Db/hw8p39U8z4TDwe/zcPBcfNwx68pb2Q+Xs3/r9bttU5SreO4t65w
loc/vd3l45euN6lxvOLlfk4Vbicct+5l67jMeUzzc/crb0/zh9K6v17/1zzd
urjznOC5eTm8i3Hr+hTGNzwdPDCew9Ph5+gr4I31Fnim+abzcOM8ax26dRhw
07hr3Abn2Q5ew7P9nSLrPFyP8TjV1bC/18NP86uIW4zb+D/X+fh7eObhWOc3
PE8f/51w2+u1gNvOm9MGt82/0zyfxMOtb5uHd/l4xcsTH0/5sr04nnC94q1z
+H19XSX5m0pfOQq/U14z6SzuD+4v5gHG96TDWH8Bx1N9iuvIjePm54w/+JRx
nPFrfgae+7vI4Dj4DY6AL+CPeSSWfBu45bpDrxNmHDWOm7eD57TBf3iw9Q2O
Z/7MecFf4gZw2Lic8Nrbuc8Kt9FLjNfjulbdy/PtnZfmfWJ57+M9ntu0vqL7
lfOTiXfTn50nsg6e8Dvhtfl2Vedd6Sqz67AYh5IOPpu3THrKbXh4f/2VxLcT
/650lORXU17T+O33n76vYWv+Xenm6Tt79H/XqzBOwG/Xh1snr+b3V99ZNV5Y
TwFnzBOx4JPzc66rcNv1K9aXk+4MzoKbxk9bz4MBX+1PzJf9O3GF1zU2LtPm
d54TzxX/OO5n1UU8z8Z4nXTupIuk/GSq13bdNv3R/RTeYX3bPJvtVd1f0rs9
7rp6SeLXtI0jXb078eun49dWneR6eJ1wurJd3aSb3+yus2I8N+9ONvHuqs7Q
ugn4nepWrJt4nFXfxXZeM83f9HcPjOPgDG1w3OszWk+BdztvR9vr9Hq9P/AW
PAeXaRtnjcdJxzEPtuW6uS/wl+PR9n0772v/Zj7t/IP1a+shvL9U95fwmv5h
3E7fpcA6L5l07aruz+Mi4XbiR2nepPl0VaddWeNKF69n+XXFty+ji+zn2Ukf
SXi9FbcrvE56iXl3F8+TXpLiR/p9wmvrJI5fk86d8pfwMnDA9YSefw9eez6m
2+AT2803bcFV18sZt70eo3m8jwveert1HOOvfwd3Pf/FfsnrCXL/6btAfs6J
R1v38Pwr4inX+znP6PqR9P0469bm1+A0/Tbp2cbril+ndau6eG1+XfG2vTp2
Tx+o8fk2PHt+PdpZft3F7y5eG7eN1wm/E8+u1sFyntL93fzaOG28xiacTvN2
aFvPxoIXxhPP38FS9wCeY43f/g4eOAmuJh5u/cG/W4+gzf7WbYy74Ku/3+H1
QbzuI/v7/sFl+LN1Jj9X4hrXYXteI9bv13q084rGafoN/cvzZ4zLroOyDgIu
YytcrupFku6R9OmqbtvtpHukNrarV1f41uPVt+fT9+s5898JTc811Wf6vaV1
ZxNOp3yk+YF17VQ3Yv3adYDwHX9nyDoI49TrFXrdQsa742xbfnc9ib9DjeV3
2uCV5197nXPjufm661PMc9P6ia6/QLfhuvAztO1fEh57/wqH2W7eDA5X82Ow
XgfK9XrgcaVDJ75sHKZfWq+z3pHWFaGd8Jnt1XfarE+7bXyuxvtWvpzwuIfP
l5qfvr0epMLr5IcSn57l0ZUOMjuv0ric8o/Wp9O6gtb9unV9nn+DBZ89fs2n
0Tusc5rH+fuh4LVx2/wanMaab5ufgnfgp/UV81TrCeAw5+E4Pq+Pl/A54Tj3
6XVUnf/zei/puzjWlXk/1i8SDrt+w/XTXZ5s3pDy37SruryKH3fXeerW53Xr
O8zfLlXfcRt+fHm8TrjdxelK50jxj23qJ906PucNq3VfGTdeF9A8mnHn+mvG
q+Nc69JJn8b6uz/WQ9P8G+OW53Ow3fza9SXGQ+Mnfwe+gqNJ9+X4bPdxEu+v
4gPn+7hfnov1YyzP13oy78Xro6Z6Daz7AW38ufN/ST82/hqnq7rp9D0c8Lla
H6Sy1puTnpFwOeF04nnGnS4eP2xc3o/Tvv+9+FzhdKVH2yb92fjs/up4MOnP
Ca9p30nnSOsaM749zl1vDT5Y94DfpXoC69fww8THXT9i/un1ixLeezttLPiZ
js9+1mvA3yqP53xeum+va8rzdDzjuuYqz5f4svN+2ITP4K/x2jqF6zVS3Qb9
PtlUB530ZI/DpDe7TrriyVXd3V6deU7PSHh5KRyucbmrayRc9nP1+zAe0044
XK3nl3A45Tn8fUvzZeOx57eYL8Oj4c1Y69Ae18Zl43P6zgJ44u8VWg/xdu8P
fhk/jZuuLzMfdds4nb6vi/V50rwR67/mv/ZT3Df+jOeGTd9tp13hrfVj3rtx
t5rvbV6c8Lab3/M4SHnzpFtUeJx4cVWH0c37zeoVszzzNnz5cjpFN8+X+HDF
e+2vU30z7e78lLTuta3r5zyujL/mQ0lndn7euGxeZl3D/M28DtxJerTzh9Zf
XYdt3p3yYhzXeAjeW3ehbf6KdXyQ6lqSDsR+ad51wlXHM1jjLO/ffpr+snW9
/0oPdr9PeRWPH+sOCWcr3E08KuFuVx+ueO2x+brr5/Pm7i/XVaTn28XZVPdW
rYdq3E14m3DX+luKB81/Ew4z/rDO83n+N+O7wmVwwnnAxJPNj+F/qa7LuJr2
T7qH82Dm3+afWM/HMD81vtqfsJ/v33k1rJ+/9Vz7Td6j62qMs/BZ46zr07yO
kf1/0hO664tW86y93k3it7PrZCS8rXC2i7uzPPbJv7uVzpvxdxZfuzyW7aku
wrhbrW9XfZfL8VfSEyprvGUc+bvr1oE9Lp2vc7vanniw833GYVvwyvpxaps3
Om+V/q76PdUlGG/NU12vkNZbxia+WukD4Kj9Kdut/1f1ZkkvqHhB4rEVnlq3
reoeunpBqkOt8mgJT6u82jb+erRu0Ndlj9YLjKddfbbS6at6hpQfSOtbuF+7
v6fvmTvuq9afc/xoXnunvMqd8nDGV38/13hqXDHumP9VdRbWi41/SbewLmoc
tS7qv6/mEyde6voCP7cU//u9mJfa2p86/rEu0NVbUz1CV4dNeoD5qcfVbD1C
pb86b1Ph51F89X4cfDh6bBdPE64mO1u/m3A18dX03ZQun+3qtowf6waMN2zC
29Q27tI2zla6gnHH+JT4ntf/N54Z79J3X4yP/p5p+ruKh5pnmof6eVk39XM1
jjr+SPG+cTTlsSr+2V3nIc37rPC0ivu7tours/msJ+3WecSX5qvXw9EKV6t5
a916ru56mglPU/1Lhaep7jHVrSed1utxJr0g5c3AgcTDUh484WiqJzUOJ35o
3LMO7PMaN318zyuxLmo8dJyecJLtVRxhf+i24/iq3qqa1+v+mvIH3q+7HkOV
l6p00y5uzuLovjzVtfNTNV7PxvUpvk95qUqPSfpptb5OpadW+axZXaBaB9B5
L+MqNtXdpvqvhBvmY+BP+l53wiv/nY/nPLrzZ+l74BX+VudPujK4WPkbW+ve
ySb9M82zTXn8bryeeGY375Ty+4wnxo95SxU3VrjJ9m7eKeFol99dBy/n9dB0
f+l5VHjp559wNPnDFN/P8tGErwk/q3XeU162WtfMcX/C0YqPYh3Xp7y18yyu
s026YaozSLpBhaPpetL3f7DWN5KfSfkhx+OOAyp9M8XhlR7U1TXTunqJJyS9
cy+/dDvxor15pH066O1xMuFmeg5dvtmtO63Wm/F7r/TxSi/Fpv7s8VDhZaqv
quL3xD8rHppwM303yfG8cdZ5qsT3/Pc+n/HO+yfe7OOYH6b7djyd/I3jbeOk
8bGqT3L8XcUvXT2z8vOpbtQ8smu78fds/WjCxzl+WeHa5XAzXV+Fl4ln+rn5
uSZb6ZuprrRqV/PqttZFJVvhp8dfyisZR6txn3ATXDEO3SmON84Zr6r9bVOc
7L83/qV4Oq1P5eeReGLlj1Iex/Xyqd7I/SPpPrO45/5Z1XV28z1VnJ34ZBrf
3Xj7frzcG38fjZd9nKzut8sru3qmcdLtilcmnEy/V3F6qt+v9E3zjfS9k+p7
yWmcV/NbU9yZ9E/jE/t7ndMKd7HGvQoPjfvWE6v8WNIXU1xt/9Sdr5n4YxVf
d3lita5JhZPd+LrCyYo3zvLIY3Dy2nmdrzTxsY+XlZ7bxc2qPim9b/eHbvye
+l/CySo/lPJBiaekuvuK95h/Ot5MdU4pfgevUn1/4m2unzK+JfyueKL9QMqL
Oc+S4mXXNaR63RRfp7xMqmvr6uJJZ7Qf7643MouT3Ti70h/T9oQfD0uX7OuV
VZx9NL9M78Xvz+3EM2lX/DLlfbrxd6pHot39vm/ileY3KZ+Q8j8V/0x46r83
Lqb433+Xjletf5RwLukUSTdMuJd4Yqo3T3pjNw9dxdVJF7KtcHBvXqayR/HF
Y+Pr6+dtntye8vZ9XOzqvpVemXDR+FjNH5qdF298NB6aL3bricxnqryOf/d+
qa6zshV+GZer74ZUdTQJ55M/MN9LvDDph5VNeFjhoG2lG1a2wr0KBxP+det1
ZnHvsnh4K544zxsrPrk1ru7iZPJ/5omz+ZqKN1b5mkqHnJ0PlOqGKv0y4YzX
kTDeGqfcTniX9vd1pPprP4f0XKzfpuNV/K+rE87WJXZ1Q+NfNx5O22f5YFc3
nM1LP1tx8v68TIWXiR924+m9+W3zxCq/neLnKu5JuJis89hub62vrHhnwtkU
byYcte0er5q/V+FghZ+zvC/5rYSHSQdMuFfFvdXv7p/d/Enig7N4WI3bCvce
Zly8nxd2eeLWeLrLD5NN/SHhYIqnq3xfipM9XrBsNw6meY8prk78sduucKfC
y8qm/FF1vgr3jVsVvvn3Lt5t1QFT3FDFwd067ZQXTDzQ42WW9+2Ne3s4eGue
19cNq/vrxsPJ71R5/wrvEr6lfEmlU1f1Yca1hG/eTjvhHTbhhut6sIlXVvwp
8cQuHqX9qrxD5QdmrfHL7UrPmOVxia/N1sF087xH4dqT+2c+8jD5XF+3q+LS
hFNdHtblZVX94CxOpX5Z+eGKr1Xz+rv8rYpn+ftq/avu74kfVXiTriNtr3Cr
ej7mW7PrzZpPVet8VfX71faj4syj8w4V75jDq9vxqLnrr/WyWZyq3muFT7ZV
nFjh0ywupbqValx5nHatx3ka76md4q3ueX28Lt74uRh/0nOr9PxKH3A9SMKd
qo4++c0uHiW9K/n7rt5/DD+61HyKeVyq8Cnh8V48sj0Kj6o8Z/KjqX64axNv
quaze3xWf5/224s3CX+q486ub9Ktr6jm+Xfjttk4bSsfMg7Rrvr9pXhRD3ce
Tl1awqGEOwmH9uLO7PtO+cXUz5K/rPp3lYfs6hyzf5942iwuzvK27vGMb924
Kv1e6T4Vvvj3rt+q6sC7PGdWL9qLN9t4z9G60HG8ZiuudOtakz6U4rMu/0n9
sNIzK54/a7v5ou44747fCk+q41R8JuHibB1UVQdQ8Zaurlzpzd1+mnBkVt/p
jb/Z/Nnt9OZZ3lLhy2w8NVsPUOFLFWdXdVSz+bbq9626g/lTFX9VeDW7f4UP
Ca8q/PDvXdyo3kvlX6r+4H7VxZNuPLRVjzF+zMVFl46H5nlNxWO6es3Tn2PO
y3f55Vb8sU1+reqv3TxHtw5gLz/aWy9Y8YqEP8aVtH+FnxW+pDinynNW8/+7
8U83HqpwZRZvuvjTw53b40oXZy4dR5lfprj1KLypeE/VT2fjeo+TrbgzO149
brvH6Z5/lo9UvDHpJt35It33m3DE7a18JemU1XiZxZGnb78VnlxPl9mKM9V7
26vrdHGni0cV7lTzWarxX43nLl51ecJRfKOKK7v4XOWdK76a/M7R8c9WflLh
ytw4PlpXqfBiPh6axZMujszqNXvz4bP4UvEY2rPjoevPu/qOj9s9XsKPrs7R
xYVq/lVXJ9uLF91+shUv3N+3xS/Xrq87Ls6ZxZGEJ1vjoLR9qw48y1e6/bNb
tzybp0r8omu75+nqP7PxRsXbqniE7VvfW3r/s7jR5dVdXrEPP66NDzVezOJf
hRt7+cn9+H3uD/byDPcv+63K71VxTXe8pbyFeU0Xr2bxo3t9XV2ii78VT6jw
v+IL3Xi4woUKD+bij2vhQ3XceV1jK7+oeMVWnpHef8UftuofVX/v6hzev+Id
XZyZrZfoXl83/krjOrVtq/fSjRMqHrBXv7y/3/7ixxVH40H1nNP7S+9xqy7R
5Q+z/q0aT1vHudvGqb22ez9b8cDbu+P/WjrCrB45xwe6uuFDxYNav9yKD0fp
m3vjh714UOmZW/FiL+5svY7u+bpxVqX37LXVuO76/e44v78fp/Fya79fjft5
HeGo8b1VT0z7V/2s66eqcWF/XMURadzMjrNZXOjy8706fhWndd/fUeN0br+H
yte3xv99/330ON5qU785Kq6f7f+zfq+q69tqu/dbjb/ZcVr5166/7Y6/2f0q
f9UbJ9ePr7f60dlxye/d/OnsuNzb77u8u8sbt46n9PfVeY7irV3/mNqpH3T9
4LZx9az6y+vz3Nk4d6+/PFofmx0He/33pa+j+/y64/DJv780H33o4/H6cWW1
vRpne8df6l9b/37vcWd5316ddfb6un6t57f8nqv6hWd1XM3zzK7d69+6fmx2
fHX92t64c6+frcbdXrxgv1kcq/jIrJ3tT3Pj59bjqu+vjh5X1Tjz9tn3vdW/
bT3+1vNW++29//vHVx/fLsvftuL9rf3R0f5pPU71XOf8f36Ps++929+q4x01
3mbjlaPGVXUde+Oh64yvh+KHqnF0OX+VxlV6/kf5s2p8HD0uq366t/9vvY+0
fy/erd/ftvHwrPiLed2hem7d8bB1XHR1i67/2tp/jxqv3eub9QPH9odnxc7G
SXv7ff/vqvczOy66/eXY8dH/DlB3fHX/btt1/KL290vpAsfzodTPq/al7Sze
Ho3L1X1vfZ7b+vez1v+vPZ5mx0m93za8P86PbL2+J+329bCOwenPWr/d6q+O
4/Gz7+/Y/nZ8XLLv+BWPvHV/ubXdyruO9nvbechR/fA69tbv+9b9ah7vbvue
Lv3+P6v949L9oPt8u8991n90z/dZee9bn//e97b1+n5R3sve+/is+7HP7ef2
c3sL+/8BkcIwUg==
     "]}], {{0, 0}, {1280, 1024}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellLabel->
  "Out[741]=",ExpressionUUID->"bf91b383-9533-4b4f-9ba4-8f0b81bdf3b8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"newim", ",", 
   RowBox[{"ColorFunction", "->", "GrayLevel"}]}], "]"}]], "Input",
 CellLabel->
  "In[742]:=",ExpressionUUID->"f6dd8d99-a588-45f7-8525-3733d2e0ae60"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[SparseArray[Automatic, {128, 160}, 0., {1, {CompressedData["
1:eJxTTMoPymNkYGBoZBg5gAOIRYFYFYjNgdgbiBOAuAyI+4B4GRDvA+KrQPwO
iNmBASQPxGZA7AvEKUBcDcQTgHgpEG8H4hNAfA2IHwLx8yGMAZZ0OBs=
      
      "], CompressedData["
1:eJxTTMoPSmJiYGB4zsjAAEQMBoZGxiamZha6evpQprmFpQ4Kz8paG13ARgtT
yBabmJ0mVlEN7ML2pIqTqNwBpwSJ4lQRxiqKVRBTDEMAlY/EhtAAhjJlIw==

      "]}, CompressedData["
1:eJydV3tozWEYHklCKElL7iVJCCVJbxJKkpaEktCSSywtuV+SNMJRCKGDltZa
oxkzMxu7uW4zxy6G2cbZzS1JbuW7Pe/p+37n5wx/ePf9vsv7vM/7vO/3neEr
NyYkdomLiwuL/wJn36372pFE0e0ex/qti7Uv4LHXZjaUTBx9gsc1bbXDk1al
dNLvHmc99p+mX8eqdmScP8djPR/k7yOSVsUf73mJ5+11fjj84ovEgXNwvv6e
ar6nGf8ZvmPsA14bX2w8WGfzGvT409+vGH9ZbPW+bGqXy+OvsT2SuGDMvLxM
mj1wWXLlrMtswaftz4vPxYU4cY6LR6+/SWvzF5X32XvLzBdQ+uoDBYcTC4zf
22z77h30MLgwh/HqfekenLb+XJz+egJe8ACein/Kg/Np+rRuG8buu2u+F1Pe
0KmPq9vuk1gs/io1+Mp4Xp93j+PbmXF+cNcp153zUz26/Fd+wSvOB496XEKK
noGPqeuUkzPSJlTSlVCWOOEpdU+9WyRC47HeV0H7U76NvPz9gZm/x/noHP5Y
/SPg0esS5egqXVh4agttyiVBliCyiCaNHjDq1dFHtJU2nckMVZGi91SN+V5P
IhkJKxpf0lwFuNbkodrwUsVxy1PPZBaz3mz9pXVaN+Dd7jtprBPwZPsNkaa5
npR8Et6Qml7WTEI84oAmw3OT8dPA8Wi9PTV+7nNetd5vcJ3bfcitz0j/wjrw
DV1+yd62uUd9mZP/OpPn17RdzC7u/pZyWy4eGpfbYvC00jm5vF8LSVV93tXM
+HOu9hYhVNNUFWAF1w3qF/r5O26v3qE35E+fc4fzCx2Db62bJhIgBaQ2EkGI
qXZTzx+M3toM3rDB2cg6G6IKpsL0myLWD/hD34muf3/92PdUBvcXjecB9er/
cc78LyGSq4XSSaolufIt45UqWzCmg+LUv0/0Y6lE3sF56aYLg+sEdY9+gDjQ
N9w47P7o9s3TnjwoOScXMn7kQevrBbUq2TSSXN3/Y5gOSnktfU8S3dl37bRe
JaiDdjdPXp6+OkyS/S3USOOV4OpYl24e/hc/dGffyze574Av+B+mhPzG+AnT
cxnexBaSJP8ua+W4UNdq++dXpMJbF6L5qsAeMU+4v9z69eujdjxB5967wbzo
eihn/SiTXcd9B7yiLqB3raMGU581HD/uM9y/bt8Enr+/CwK+uNF/cF9qvT8x
eXhm/NSafvqS9aTr+IU5p9r03QrWn67PQu7LqFf3voquE++7z8Xv9nupgjX5
JXxfoW+EZXvMqTT+I1Z1y8nlvA940R/BM/x1jucIbtxPqAvED91pnHmMH7pH
fwAuvb+U3zHot24fBM7o722/92yEX7cu7fOymBe8D4AfFnigK/edAh6i15n/
e8sPp/vehx/Xgh9YfEfd2+/ioA+uWLoMOPuCHnwYu/5cv/bvm1i/Q2L/PvKz
9n0ey5/f2O8dn/KP+GPbP1A9JpI=
     "]}], {{0, 0}, {160, 128}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellLabel->
  "Out[742]=",ExpressionUUID->"82e4b631-b80a-4311-82f4-9cc2060f9210"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["AutoCropping", "Section",ExpressionUUID->"d50a7f2d-04bb-4ede-b6af-d46ade825dd8"],

Cell["\<\
My autocropping tool went through many revisions and I eventually ended up \
with AutoCropSuperRevised. The code to AutoCropSuperRevised is too complex to \
explain to you. So I\[CloseCurlyQuote]m not going to even try to comment on \
it. Just know that it always works as long as you give it a non blank image \
(data). 

In order to use AutoCropSuperRevised, it must be given image data and a list \
of new dimensions. My code gets a list of new dimensions from the function: \
CroppingDimensions. All CroppingDimensions does is guesses the waist size and \
adds some padding to this value. CroppingDimensions then returns new \
dimensions that results in a new image that includes the beam and just a \
little bit of the background. 

Let\[CloseCurlyQuote]s see an example:\
\>", "Text",ExpressionUUID->"0cd47980-ab73-439f-adda-6e473c856bb3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"newimage", "=", 
   RowBox[{"AutoCropSuperRevised", "[", 
    RowBox[{"imdata", ",", 
     RowBox[{"CroppingDimensions", "[", "imdata", "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->
  "In[743]:=",ExpressionUUID->"d8695760-9cb2-41bf-9acd-4225f29a561f"],

Cell["\<\
Below is the original image. Below that is the autocropped image. \
\>", "Text",ExpressionUUID->"9454f54b-e1c1-4f8e-bfe1-6f4521ae083b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"imdata", ",", 
   RowBox[{"ColorFunction", "\[Rule]", "GrayLevel"}]}], "]"}]], "Input",
 CellLabel->
  "In[744]:=",ExpressionUUID->"c7a1707c-563e-4238-bee3-0a521840ac3b"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[SparseArray[Automatic, {1024, 1280}, 0., {1, {CompressedData["
1:eJzt1ulPyHEcwPG3sxAhJBG5O5xJziJ3RDpUKEcpJYXcHjjWeJJpM7O5lo15
5NzMMWOemWFG8wCTY2M8aHjgmDne/4bt99leD377/r7H5/P5br9f7Oqa7OpW
QKu2BBFEEEEEEUQQRmu1U08N1jxV67ReKsYPZ6ku6ZfynHBRYW1gnR4pxe/q
WUW60AH9UHV7+KiKEPigylD4om0d3LMjHFR0Jziv9DB4rvWdHesCxzU+HJ5p
S1fo3g0uK6c7fNOxCEjrAe9U78FTesEb1UfC1N7QopNRkNUHQqLhlmr7wsh+
nkUnYiC3vzkMgHvaGwtTBsJ3XRkEVRYibojrq3EoFA2D/sPhlU7FQXG8zwnu
qTOJUD4C4kfCZ10fBbtGm9MYCB0LD3QwCRaOg/Bk66VD4yE7BSImQJOOTIT8
SdBnsjVX4xQomWo/Uq2hLqTBpmnWZLo90O10zzzDPWb6TzML7mrvbEidA391
Zy7stpGpGfBT1+dbxwWQlAlfdXEh1CyyHlnwSecWQ1k2xObACx3Ohbl58EfX
lsDGfPMrgGYdLYTMpfZpmWOqXO4dKYInqiuG5BXwVg0rYfIqeK+G1TChxPmq
K4WENfBQtWXeu3K4oaVr4bdOVdiLSniqinXmq/oqiFrvHdNoL+dtza7xHRVs
cF2t3Gg/VLIJXquwFh4rbbP5KnoL7FeLCrbCTUVug61qUuJ22KP7Ct8BGdqn
q2rWb3XbCX01NBAIBAL/pX8Agn+c
      "], CompressedData["
1:eJztnFeXVEUUhaf4J774C8w554gYMIuIIAqKYhhEQVAUEQNmFAMYUVTMOWBW
FBVzzjnn7NnrVq17u1ePMwMz3XWrvocND9jdt8759q5zk6uMGD903JCurq5V
u7u6nP19hv1xtukC0+WmK01TTSebTjHNqvz7haaLTBeb5prmmS7zn7vCf/a6
ymdPd8X3zzadYzqv6Xsu9Z/X5+abrvGfnWE6zTSz6TvO8sei75pjOtd/5/k9
HN8l/jdaHad+b4HpKtPV/revNy003WC6xbTYdKtpuj+mU/1xVY/pzDYc17W+
rtXjO9Y02XSiaYrv2UmmaZX6V4851HJWBMd+o2mRr/HtpiNNR/k1TTId37S2
sK7pNVrbTaab/RrF0G1+rVpnd9M6T+ihj3Vd7+LKeu8w3Wm6y3S36R7TvaYj
TBN87yeajvH9T7k2IU9a1SbUZbzpcF+bib4mxyVel2rW9sbN/aYHTA+bHvG1
CizJW0e7kiXqVtbtPtMo0xjToabDTONcyVvVj6rjRGr5v7UMHD7oShYfNT1u
Oth0iGksdR7QOj/UVOv9fa1HV+oN24NX8ydMB/l6j6Hmban5Elew/pjpQF//
wDw9aH8PlO/ygbLnANMI35NR9CWKvjxpesr0tGm/pj7JPyPpV7T9Wmp6ybQn
vatd754xPWt6zrTM9Ar9q2X/lvoePm8abtqXPta6j3uZ9vF9JFPr3Ut5MmTr
Hq7YJ9XfvX2P6W8a/X3B9KIrZqHlpl1Nu/ueD2/Rd7ydbu9fNg2j71n2fTeH
73Puv/b5V02vm3ZxRQ5oL4ALuBAXr7mCjaGu4AM2YCPkxRumnUw7u4IPsgM+
WmWHOHnLtKMrcwRWYKUnVt50Ra7ACqz0hRVlyzum90zbmbY37eCKvKnuT7AE
S31lSRzBEAytKENvu4Kjd12RSx+ZtjFt68go+Bp4vt53JVcwBVMry5RyioyC
p4HiSfvf1q7c/+AKrgZy7/vA9KFrZIz8grPB4ExZ9qlpK1fwxlwPc+3INnH3
sekT02emLR0MwmBnGIQ3eGt35pFzcNcJ7jTrbeGKvRb+4K8T/Gne+9y0sSMH
4bDzHH7pykyER3iMgUdlo5jkvBguY+DyC9fIIyzCYiczUjxuZtrckZOwGR+b
2sO/csU+vomDVViNm9WvXcHppg5WYTVuVuETPmPmU/u+8vQb04aunAHIVtit
E7vfmr4zbeRgGIbTYBh+4bdu/K5n2sAxS8BxvTlWDovl9V3BMnMFPNed5+9N
P5h+dAXbcA3XKXFdnT3gGq5T4fon0zqmdV05k8A5nKfGueaSKutwDuepcg7b
sJ0a28wnsJ0q28rttRxsw3aabGsmWcO0tiPD4TxtznWO+bMr5xU4h/NUOWcm
h/McOFeea37huiGs58C65nSyHd5z4F33g3gOC75T5Vt5/qtpdVeyTp7De8q8
/2L6zXH9BdbTZ13ZzpwO6zmwrlwX77+78hwV7uE+F+7FPM/qwn6O7GueV+7/
4fAAHsjTA+If9mE/R/ZD/jMD4YFcPSD+9Zww/MN/jvyHPUAeYB/AB7n7QM+k
4QW8gBfwAl7AC3gBL+CFRi+sZlrT4Qf8gB/khz9Nf7nCF+wT+AJflPeVgzf+
doU38ASeyN0T8oPeHZAfNEexV+ALfFHuFfIGMxS+wBeNvuA+NX7AD6Uf8AAe
yNkDOqfWjIQH8EDuHuC9ZDyQqwc0C8E+7OfKPucBeCBXD4R7a3gAD+TqgbAP
/GP61/H/sMALeAH+4T9n/rUXsA/gg9x9wL1ifIAP8AE+wAfhWhFewAu5e0Hn
B+HZa/yAH3L3g/aG8E4nfsAPufshPFOEB/BArh7gfQO8gBcaz515Jw1P4InG
+2ycQ+MH/NC4R3DvGS/ghfI5DPYG/IAfCj90DcEP+AE/BD/w7iY+wAfFuwu6
thT2BbyAF3LyQvABzMN8Lsw35z9zED7I2Qe6VoQH8ECuHoB5mM+NefIe9nNl
P8z+uuaDB/BArh5gD4D/nPmHe7jPkXvNPrAP+7mwz5wD87kxr7zXvS24h/uc
uNdznuQ93OfGvWZ7nm2G/RzZ51om3OfIPe87wn6u7PMMA9znyH24jg/3cJ8T
97yvCPe5cc9sD/O5MR9mHLEP8zCfA/PkO6ynzrpyXZzDOIynyjhMwzRMwzRM
x8205m7NIswh8J0q38zbcJ4D57p+AuMwngvj8A3fqfCta97kNlynxnWYv2Eb
tlNjWzMJXMN1SlyL6TCLwDRMp8I0GQ3PqfAMy7CcCsuao5k14DklnslneE6B
ZxiG4TozrDyGW7itG7fkLdzWjVvNC+IWZmE2ZmYDr3AKpzFzqmytzgPiFVZh
NVZWlavkKYzGyGjgM+z58AmfMfGpDBWbcAmXMXGpa1Ds53AZC5fVeRMmYTIG
JrmOBJOxMamchEmYjIFJPT/CtUtYjIFFZSMcwmEnOWw1M8IhHHZqXuxpToRD
OGwXh+zH8NdO/sSesk/cBd5gDdYGgjVxpnyr7qEwBVMDlV+BJ1iCpZVhiUyC
o5XlCHZgp7/swAqs9CdnlDHwAi994aU6G5MzcNNXbnTdR3MMvMCLeKmyIk6q
1wWZd2Glt2xRrsAHfDTzQXbARjMb4kKZ0cwFTOTFhHgI+SAGyIW8GAiZoBmT
/SFvDrQvDKP/2fWfPqffZ/qbbn9H0rta9k6+lBfxYX17Gfo2in5F3S/1arnv
Fd6Kr1fNvtK+hqfi61PVU9q32K/i7ZX6tIzeRNMb6t6euldrDvOdY360rz01
b2/OwPng1HyJr3NvdaWmvdc0MCx+xzbVdIKvY6gh9Svqp9oEzqqMTarUJqe6
qCb94aKuaw/rntS0xmkJ9VbrE9PdvpdTfe9m1GRNYT1hLVPacNz9OeZFPdR/
5iAd2/wWx7PQH8diX5MV/c3wWwv8d2t9k/06ZvfwXeGz81r8d3P8b8313x14
+A+Zh/hs
      "]}, CompressedData["
1:eJztnTusbdmVlk12wiZrQidIDiGDpCSHFTZZk9EiqgBLTQQEHVRAcAOCRuqg
kRCiEUIY8WzerX4WbjBF+V22y3a5XC/Xk6wJqbpzfXvpfvv+Z4y51tp7n+uq
CmrcufY66znnP/7xjzHn+uLf+Fu/8jf/3Be+8IW/+He+8IUXf+nLd1988SvP
fW4/t5/bz4r9jYOP4+MddfxfNDv7nLrPMR232j57/tn3+lnrB1vvt/ueqvc3
e5yt+31W3+/s++w+r+74nX3PW/vTLJ7sPc9WnHvW8ebSz/Wo9/Ibz730y7/2
6C+99Pcvtl/3767T3591e+lxur3/XOa9b++HVX98+nG643ev/35W7dE8pd+f
9h7n1nZvPz7GbuUVt+53t8LLfj8+qn908bR3vH8Q29X+1xoPs+Pms42/e3H6
eByl38z2nyfPs73fdc9fjYfUTsc9erx0x/lenHo2x0O63v38Mb3vqj8ci/vn
57227T6HS/mPuf7+i9rPj+ItmV/O4ug2XJ/nHUfZ3/nNX3n+S7/zm7F97fF0
dP+/bNxw636/l9dcfny4nfpXt393+UfVz2f7+1Hj4tLj7Ri/NO9Xnr5f1b9u
PT6uP46q57vVb8yOA9vZcZKOYzuu67fK81V29npmjz/7PPaOz21x3+d+axaH
uuNr63jqve/fOhsHaVxstdV50u/VfrPXuffvqvFe4cJe/3fd8ej+/vDH3Swf
2Br/zo6zrePl6HG2dVy5/c5v//rLf+Wd325fb/f4WI7fHa97/dzDGIfd/v9w
x181zmb93lY/eNR4m93u31M/7v7etT4O7Wr73vPvxatbj9d9fvDS47E6/qXG
Y18fvpTf29sfu34ljYfu+Oj+/aVs97r2xpnpve71u1V/rMbr07c/NP85r8ds
fT57eezeOO8of3bUeBv39Y/juPfvafs/fHx7/+S03Tb9Xff4aVzv5elH+d+u
Pz6WDz/UuLQax/P+eW+8cbR/rvrV7Dit4tOEG2nc2O4dn9U4rf7O11Fdj/ev
/PpWfnSUvz+af/f890Mb95cf136eqT1rjxrnXR7a/fv0e3cce5xV4++o32mP
+/ynZ3/H9vT7Vp5/NL86Kh7fyuvvx4Fbj/90nv1x997xXP390XH23n7Z9eO2
jJ9qnKZxlv7Ox/Xfpb9P47rCgVn/n3Bv9j1V76ca/0fhwv08YqsufmsesDdO
mM9H7bW9/GTW0ap+1Y3DZ/8ujcvKz6Zx+rvf/dUXvvof/tnJVuPaNuFJsuk8
FW51cSnZo/TES8UVlT+7Dl+4tY4wn8++/3lsxwcfp/ILXV7R7Y9V/63ihDRe
qvHXHbe0x3X88/bfp/P793Q+40Q6nnFxNp7p4kzFK2b54aV0ijn94dZ8Yb/e
MMsr9vKM9F662yvc6MYLXb3OeFLxhO54NR6k8cl+tuzv8e3fZ/fz9nTeCncS
DnVtl6908b/Sm2bxo7vf08fJ1vjl1ngyz0O26pcJnytcqbZXeFLFGamfdftn
8p/deKLCk/R7Gs/dcf29T813/0Xc37+77e2z1781LpqNl7q4spevbNVVn/z7
o+qUHh6OVPHbXjzp4kY3D9LlJd16gUrPqPIH1bio8KAazx733fGfzpOOM57D
vzzb///9+O9+/N//7F+dfk9/X11PhZezceCsvtzlo6nOo9sfZ+Oh+/3v1vji
1jxmVs/p41IXh7o4NRvfbsWhFN9UvLyrl3Z5TRV3zOKG8QObcKOLez4uv/s8
1fnS31W46efa1ZW6vGi2fm1WD57lSbP4tA+nHgoO7c8Pd3Gm4pmzPGgWd1L/
6vKcrThUxUcJX6pxW41z8CDhQsKPtL+3d211H7ZdnaiKN7s696xOdHQdTFf/
mcWjffHZrepajsOvij9txatZHOv6qa41biWeVOFX0ju26joJz7r8pYtH/n3c
/78+2Wq/6u+r8zpOnG134+CKjyXdfTYu3NoPKzyrxsuxfOrW/Kp73v1x3lH4
VPGpWX264lddnKrwp6v3VPpR4ksVjzJudLd/cjGfXNG/Of2e2t5uy+/d66p4
WcLpip9WutxsHVOFU1vzqEnPmsWrp/OFrevQVzzm2vi0FWe3r6PU5U17dSbj
ThXvdflPiuO6cU4V53n8pnbiMQkHjCPj/v9txCvvl3CK39P50/Wl60w4XD2n
pONXuvys7p5wqJun7eLUbP6/y6sepn7VjUuPqweY5U0pj1/xpa3xXRW/VfFZ
8teOTyq8qXCnwiPjhvHDf5f27+JOwivjmfdL99PF2a7136fnXula3l7pWxUv
n9XjZ3WtWT1rFte28Z+Hq18lvPL2Lq86Sp/q1u1W9TVVXFfl37p8yvwnxWXJ
Jrz4R48fx7+LPMl/l2x1vK1/V+FeFydT3Jlw3rhW8eHkr7bWx1f5yIRvlQ6y
V+/aytceBm5t5W/bce7pfmN+3YH0Hu3XUjv5Sdc5zdYrdvWoKk7s4lfSnRIu
gCtYb094we/jPf37eBx+934+Tmqb/1X42Y1nK56a8grdPG2KQys/WfH/ivdV
OloaJ926roR7+/jcs4p/td6fcHAWD/fqZckfuv9UftX9OvG5tL3Sp7u6fBr/
CU+q7QnPquOy/yc38emdnOGTf/fxjY/ef4z73404m/C2e18VP7SfSfnTqj7N
vK/qRxV+JjyscG+2rqOKu/bxvVvhYF+H8/X37jPHr7N1YN28ZMK5lH9MfraK
T9le1TcY1xJvq/ha4l0Jx4wztCv88X7GH2w6XvfvEr6l331ftgkPHTcnvOzi
nvGvW+fifmA8q/hhV++bxbvE+/blS8/zp7fBvcvnF7r8rdLjunUYFT9znLq1
PtX4NpvHrOLWWd0qjdfEm9i/wpXf+7NPL/A/nlnjlre7nfCu+t3X5e2JHyY8
TPu5nfRE224+I+Fc+n0W/6p63WS7ut6szpf4XoUjT8ela9WFzM8HqHhthXtP
/v32+tgUr3bzpgnnttZzdPOlxrsUd6VxWsVxFY9KODeex386a4/7+y/PfXqW
X3/5P5+22/J7ws+9OJr+voujiY9WeJjyzMZD88Au7iUc7OJhFwcrXtjFwb31
KA+DByY+uJ8HJv67lwfO6nZd/Kvi2wonZ+tmq/h2Nn+QcKCKOxMOJVzDgoc/
+fS2fvxfz/ARy+/p76vtXA/bE05X12/8reLyri6YeGKKj80Pu3phV/+r4uGt
870qnnJ0fd5t8bDPFy+l/yX/U/HEivdvzVt05xFUdavp9yoOrvIO5jeJByUe
lvCx4nnmg8bFcZ//7cwa79huPE1/7/19XW5zPF+nrf++ek5VfF3liRJuuk1/
SfF3Fad08XJrXG1e4nGb4r9ZvNyGi7fSEWs+eZR+mPxQxSP9Hqv8bsqTJN7Y
5YvVPPMqv7s1f5twr6sHYs3XEq9L+Php65NNy33+3smyPeFeavs8Pk7CZ+Mv
bW83nia+WW2v8kZdPO3yzy5uHoWXFa88uu7mGJ55ez7ZxcEqjp7FQbcrHaWq
/7NN8UylB7n/duNoW+Og48ZZm8Z1N4427n3h8X+/f2bHff3+aT/a3s7xjHdu
s79xL+Go97dNuJ54csWjK77J80157i7ftDU+VnXaCSe7eNnlk7P65CxOpnj2
uviYeONX4vVt5Y9dPjkbZ1fzjSo+meLsbj2046WkP6b5E4k/VvG18S6N64SL
iR/amh+O6/+DMzz85H+f/OsPTr/T9n4Jf9luPDPOJp7K8X28xDcr/uo43/zT
/DvF72yv6p621j9217mpcLPKc6ftFV4mXnkb/fL6/PJa8fhsXU/C04SfW/Pc
Fd80bqY6xe4834SnKf/i8Zny0AkvqzjbOJZswlPsn/908y/94clWOGw8NK81
j/V+vq7q+s1XZ3UE8DTpteafKS/fjeOruD31zwpXKz0/8ZDu/JlZnJ3lpc9K
3L4VTxO+bsXTLo6yf6XXVDha6Z5Jj0/rrXTnsWA9zhIftS6ZeKrHeeKh4IJx
CrxL28FJrHF03NcfLvjwR6c2+9M27vo4xlvjd+LDxmXOZzxPvDfx4+p5Jj21
m6+zDtDN09tWOGv8rNpVnVIapwlPK1ytcPa2+Ho8D028ND0X42fSWSp9NOmk
VVxf1V+meCnlh6p1Y2bzP1XewvjoeLWbn0n8z/E6Fhz6C59ezi//UWw/3v2L
f3zCT9pY/533T3qB24n/Gsexvh/jcsLNStet8l9JF7DOmuZRVvNEE3+dnf/Y
nefdzTN1dYBKD6jwcw7Xqrz57XjrVp6acHe2jnM2D9XVAdyPEl+t1hec5akJ
Z5OOWvHSbl2RccJ4Yh5qfDKemYfyO9sTjo77++Mz/MX6d47j62J7wv2KP3t7
4sHGZfPhpAun5530mKSHV3pBwmH3v2pdusRvq7ium/c3jzX+VnmsWd7aw+NL
10FdDnfT86hwd5bvpjikwt9Kn690g6peNOmuCX+reUCJB3X1VcezSV+kneJ/
cAkcM856u+24nz957kuPb/BPTnhK29a46+3my8bx9HcJ5/139hcJvyvenXQW
592s/9qvWm+o5lVVukLiw5431V3HN/Hiqq4Aa30vxa+X0mt7ePxwcXcvHhuX
kx9MfLfa3q0nqNYbqnDY+JpsledK9QFJFzSOpvxPyt+zn/VW80vzXKxx1fgH
/o77e+lkx33+j+f+8rjR0/a/+viG1u1dvOY8yfo6Ob5x2Pw58eOkL2PTc7a/
s36R4hbHOUmXsK14sful+2vFj6txsrW+a2t9wmV58bXqufo6cPe+Kp13bz1s
9f6qeq8uLqe8mfsp7cQzEh5b5zXvNR4nHbLK398pnk56QsVvjYPgJxb8ow3u
Yh+f9stfO/1Oe9zv1872Zz/wGhw1jns719HFe/Nk36fxN+Fy4svGa/PmVE/s
ugfHQ0m3cB1E0i3cLxMvpp3yH4yXlEfZi8Npe4XH3t7F456OfHtcvhQvrupt
k27UxeHEl13fUOkSKU4zn0j93Low7aRLMN6c3zHPSjht/K14HXhsnEp8GFwz
/hpvsc8/PsCfnqy3p/3Ba+M55+N3+we2G48rfk7bfLyrZyS8Tr87DjGe0+Y9
V3qy8dl1vtX8sqruN/Hmqt6n4s2XqovYqmN0eep1ePTl+HOF38bnWdzGpveZ
bLeeotIvqjrdFD8m3my8TnUOjNfEv8zPGOep3su6sPUD81PjmHHR+GlrvB44
86fLc/6fz/21xz+slt99HON6wnEs1238t18xD0/6TNJXjOfOQ3p7yiOm+Mf5
gGrecKpvM05vxe2qHqOqy/D4S/y6qhtOeL0Vvx8Wr95e5zaL210+3dU/Eq/e
WodhPo1N+FzxaNrd9a/S+gSJR8ObU3yd4u8Up6f8mfE56cdY82Nw9q9/Ojx/
9X+d7Liv1bL9MZz92teX5/71UxsLnnNc8Bzc9Xbjvf0B15v8gvm9/VDi47ST
Tm7cNj9PPJu2+0Gq47BejU06CDbpI9U6i6kOqcJrj7u9dcjdfOGT+HLU+oe3
qps7Dr+T36rikif3P/eX3bxiwvFuHjHx7dn1vKrvcRjPzZOsS8KvUt4v6R+p
zgJccT1EytcZv8E341rCUfATfHb7MYy/8L9PduDSatnO/j4O/sC47+0+r/0J
v+NXuH7axnn7saQPJZ098XPjfZonY5ynf1jndv456dypLiTxdfDcep/5eKrX
6+ooVV20x/ts/UfStSsevo2XX1rnruoB+/h+f/zRr8tLfJztXT6e8Ns6d8Jz
x4HOP7r/VnFp4uPmUaneAxy3fuq6sVQnXOG184duW/8wXhs/wUHjNb+D13/v
8T/+z4J/ryzj/eXT/n97PJiTNd6Dz/ye/IJ/dxub4gXjvHUh83LjuvOfKV9q
/5p4uvm58x+uA7QeB57TH91OeN7Vyx2/Jhw3H0+8PeG7+Xma95Lw3LgEbiXe
XuksD1VXSXx8ln8fpZ9U+cq9ddPG66SjpO9auU7PcW2qd/Z4ZNwmPcS8zfNH
rM+murekk8BDrZMY58yX+d14ye/GVXAbPGf7eA6vnNnxPl454X5qs3/Cc85r
v2F/Y/zGgs+OR2jze6p3sb5uvcV1LImP498Tbqf8Jv2V7WkdqqoeJeE27YTb
5ksJt83Dkl6e4vQuH6/0ljm8fDh6yqz+3eXbCbe7+G2/m/Ca7ZVOYpvmFySe
Yp3EeSbjNZZxeCcdFAsup3Fua7y2fou1HpJ0auOut5v3ejs4Cj5XbfB3XN+K
x+P5fGO53tWO5/SNxe984+zvkgXvE58H1+2vKh3Gfi/VNdqPJr085UHMw43b
yRrHra9U6yclvdx8J8Wx1XrwtpfC7ZTP3Me3L4Xj+/l2F7+r/GWlfxufK32k
Wteoqv9LeUvr2rbVOsJpngTjrso7GofN16p65VRHDa6YJ1vfAFfBs4ofg3f8
XuGmt4PP4DAWfAavB05+c3lu3zzDce8Pnttf+Hr43bzc/D3heMqT+vmzPdUp
Wj9x3tO8G+v+Zd2EtvmF8Zt2hdvOb5p3V3lOj8+Kd8/OT690k2S7+vd1cTvh
+HF8POH40+OTmm/7/SQ8T3lK9480nyb1P+N4Vy8xr0k4bv7dre/DWkd1nO46
P6x5o3WQpDsb97DGU/Nht9nP+2PZPp7D+X4+37ifby7P61unNr+zP5bjmq+b
t9vP2G8l/cXPFev6Guvo4L/r0rHG8bTuFP0prYNqvc75zyrvOaun7K1jSXx8
K54fheu34eHbeXq67r38POH6UThe1XdX+O1+aB6e9BT6fzc/ybjzukiuX0g6
tvNkzqMZJ8AReHeq7wDXzb+Ne8ZL4zR8OOFq4tVsH9f3rUUX/vbyfL51wm1+
H3i57uf9wXefFzw3n3dcwHbjO237OetLfs68D+s0xvlUp57mDYHnaX4n1vlP
6+bmI0lvMa5X8+k9zipcr/KfjPuEE0lfmcX1ipffhqdv11kqPE/+rMLxru6d
8DzpLH7/7ieJlyc9vNJVkh6eeJHx3Hw8rWtkHl7VcTsfZ/2kqt8Ap8Bv82Nw
FLyE92K9HfxlO5bjgNO0x31/e3lv317u/zvLdX5niVPW9ri/b5/Ow9/Rxvo8
jgPsX7COS7A8J/Dd+VrrTs4Dw9t5b+A5fpn3mvT0NG8ozfuk/xnPvS6OeYlx
fbZeJekx1bxO8/M0L2h2PmdXL69w/bZ43sf76jorXPf2Lj+v8D3x86S3WB83
rps/pHWpzcvNX9J6Uc5v+vtQWNcpWCc3vltvTbzceAGuW1cx/4SngmfgnvHX
OGkeTdv82fhL2/g9ru+7y/1+b3l+3z1Zfsfyd7bgv89P2/eRrOONLq93vON4
iLb1d96r8d31oSlfat6e8qbGd+M8/dv64lYdBttddzDh/Gw+dK/ucgxvvzR+
H1/X0uXvfq7G8SofOovr3fUBEz9P+rn1FvObNF8TvuT6cM8T8bhNennF052/
S3Uo4JB5qnULeDZ4CH7ThmeDp+C1txt/x3V85wy/bcdz+O6Cl99b7n+1yQ9w
fM43nuO6PeG/dSDrPjwP603Oxzq/7PpH83is69idX3V9Y6pzSnq8+6XXCa7W
a6m+v1Ctx2KcT7aaR1TND+3i+3Xzp5fXX7bidlc39/Pdy8u7+U/3L/e/hOPG
b9eJm4czPhJ+Oy4Gv53v9LgFr62bo8Mav83H0QHg4+AMPBM+Dm4578h2457x
GXyEPxunwWNwFzue16vL9b263N+rp+3jetffx3V/P+5vPOc8XA/X4TjB/geL
37Ju4/jE+VyeM/4S/+m6IvN13qv5OpZ+kPIuXvcW3u5+6TpH1ztW64dXOoxx
2+MyrddS1S9WPL3S07v4vY3P3mq+UMb5o3l40lkqHl7N00y47v7iusQ03944
bh3d/MS83OOiwnPXtTgvhvW8efA94bnrx4n/jePWka1zG8eMf+a3WPASXIdP
g7vm12wHt8fz+cFyPT84tcd1/mC5/++fcH281++ffh/P5fun/RLuc53wdSx+
gLbx3vEIz8V6E/tZt8evuu7TPJ73x/vk/dt6nTDXtaf5pPQ/+ql5etLdHZem
7/Vs/a4vFpxPunrF040vCe+xR+nsxtHb4Pv+vOhRuF7x8qPqzau8qPlHNz9q
3n6n+UFp3RTrLWnej3GdtufVO+9pXIdHYq2nGKfBLdrmu+bF5t3GVdrDH/3g
hMu0B479cLmeHy7v4bXluf3whPPj+f3whP/+e3Ae/MdyffgV/AwWf8R+8Hzn
a+3X2A6u4w/RrfCnvAevZ+C4yny+Wm8MHm+dDl2GfmY9hn6KBd9dvwWOJz0m
zT9iPHV19qrOcXZdxWTN35+uK9S6S8L5+/H9dnj+5PZuHuEczxOuJ/3FuF7h
OO3qu2XuV11c79YvWn8Bz9N3FVM+1HWLia97PSnXtYAb4Ak6r3UV81HzVucn
rZ/YwrvNr7HgM7gMbo/n8aMFz1Y77utHy/W9drL87uOB61hwH/+BNa/Hgvf2
S+C+dSTjvXGd5218f37Jr4LrWNfNmLfbul94vZi03nrCd+f5sc4XWZexTTp7
t94x5U9THbtxvTuf9NL51Pvx9tp1MVV9TM3bjfcVzvu5V/q647KE+47v3I/c
v6r6RtcDpHVtXVfg+kavx2Kd3XUPKT9qvu76aPDefB2envQW81LwDB4L/wYH
2Q4vNr5jwV/zb/i5cdu4P/Duxye8Zzt2XP9rZ36A43N+2lzHnXQd2sZ7tltP
Aufxf45nwH+eLzqO60DRa8D90V9Wncb5buvz1foEaR0C477nq2Ktv1uvMd67
bb5Ufc8+zV/qriOQ8CPx+ITzs7i/TX+/dj613i/hvu+7yjv7uSZen+YPp/V9
kl5T4X+aX+H+aV5vvPf6Luk7bfB8dHnr79W8f+szad6o+bzr9+CZzh/C512H
aH4ProOD8GMseA4eg99JhzG+j+fwk+V5/3h5fq+fLNvH8/nJyY7rX/0C/mPc
z49Of8d24z/8v7Lm+/aH+AHwH8tztQ7m/KzrLPHb+AHzfqznuXodeHSetH67
1+9N6z+meRvVfCfrOEmvNx9Leg7jOa3LW+F/V6/fyve34f618q/7620q/m+b
+L+fe8rHenvi/0m3p78kvbDi/2kd9LTOl3Uexo/zsub9XjeAcWu+D9+zPg9O
oBPgB1zXCL/Hgk/mreCaLXgPrwf3zefBdXDZvB18hqfTHud5fXk+r5/aWPzB
eA6vL/e97m9/QdyA9XnH/f74TFfCP3E/xBf2G84/OA/AcyWe4rnjBxwX4A/Q
43iPWMcFrsO0/mN93/OdiQOcr3UdPfErNtXTJ3+Q1vWt4oCk/6S6+Urv6c6L
Srw15SePjQOO5v+zfL/m/5Wt9J6E/ykeqPSepAsmvE+4n3i/dX3naxkPaX0w
8y4s8bjxnrbra9B1wHl4ouefGl/MS11/Dr7D743r4J31c/AP3DRPdxu8xYLr
475/erLjPb5+suA8dvSL1S+M+ziPH4griBNSXIA/cPyCHf7ltZMfwC84f0B8
QDxgnch1Pp6Plerwec9pflUX/4kr07oI8H7zf/Ma83/roEn/dxzgeMDj0nFA
pfNX82Bn6+qP0n/ux/+Kr18+r1vx/8T77Req59f1A139P61L1/UH3XUNjP9Y
6z+MF2y1Ho11WddXWvdN+I9uDF64PhD9wXXvxn10HvAMvgsOgn/goXHSfBtc
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
9jzeR0vdJvG+cd71/PBLcAe8dx0n1nle9Bz0fXi+14dD34Efg6fgPDgKroL3
/J3rhcB9zuP1q8Ftjs/+nBddhvOB1xyH++C84Pp4j2+dWeIe8h/gPPETOg44
b54/7mut10GHA+ddvwOvJ65znb7nA1IfQPw4/u58XWiv42Nen+ZvuW7HcbC/
I2Adx/y+0nEqPp9w/ij9PvH5p/Pbo3T843WchPddXl/x/FT3lHDffte4P6vn
p+9RVnld13XSn71OFTwHfs/4GP15zd8a7+FXxNeMTyz5W8Yz+TnX6cPvqOMZ
1/PaycIX4Y/gPRY9GQvuw/fBfeoQ75b6RHCfNnlM/MIj1fXjH8BX8Bc8B2ex
4C/8Gf0cHPb3C9CPwHf4u/Um/A94z/mIV7hO5y24n3GedT02Py+eIzhvHQec
xw+Py1m/Kwne0+a9gvfo9vQH4z18AZw3rwfvXbfj78QQn5KXon8b79FvjPPV
dyZTvab5mfHeuF/pOQnvk75Q8Xus8a7i9Qnf53j8Xl5f52u7PL+bx+3ivW21
3rPrOukHiScY79P6bl53kP4NvzevT3Wc8Hyv2wPeo686Dk91+67fgefDB8H7
ry51f+DKuJ61buf5RdcHn5zHRcdH10e3AA/BY3gv28f53zzp28Zpf8cSnAVf
OS7+gra/j2x+bl2JNjjvfCvH4TrxW8Q13Af3j3W9E8+N55r4PH7X3xEG17HW
b3i/vPfxnL9zlpd1HTD9K/F7f/eF/up1OuE1af1mLHzetpqHa7xP+G49p7u+
f+LzXf0+8XvjfeL3CV+fjvd78X2e5yf/VOF/FQ9Y1+f5peefdDav35PWc064
b55v/E/foTfPT+u1MX68vonXa2M8ouswbsm3ud4C/Z78HG30HXg/eAGegP/o
B+A++ULndV1HaD0a/QJcNN6Dn1j4MRa+Tpv94M9Y8BfLfvgBjgN+Ow7g+Eln
Yj+O++Ki04znstbbMI8NfE/6PDye52p+n9Zf5j3B4++kz/Ne/Z1g9D5/Jzjp
OPAM9Hqs+T28Hj7vuoQ03xYLP3K+Fj6V8D7hvsezbVfXSfiScD/pExXOH6Pn
XH5+VsX3Z3HfeJ/0Lz/XNI+rqt9Pen7Sd1y/Y34PP3F/pp8zDsB9eD7jxnoO
48vzc+FjjFf0HHDe6/LA71ynCS6YL/r7YE/izIpL4D545jgA/QJ9Z5x3XVcS
/Acvwe27RffBL4Cv7M/vxluOz3b4NvtbN+K4xAPOLxvfOT/Xyfk4D/eZ6izh
9dZvxvWef7eROlnPuyL/Ap/nfbrukjZ47/ys192HT7gO2PPG4fXVvFvXp1nX
sW5vnIffY12X083Pmt93119O/HFWxzd/Tfif7Da8P5rnz+N+5QcqvafKi1R1
nF2dp1qf2fU69M/E7437zt/C859f8l+MK+dvwX3zffgZfD/VaaLzgP/M1wUf
wH/0gPRdSHAHXIJ/glv4BXDt42UeKbzX68mAj+Alv+MXwHNvB8fN7/kdm/wI
luPz9/YT/O7jgvfkYclfeB5tWicH/0j9jfHd+RUser3XVwD3ea/m9fAA+oXn
3YL7aX196zleV83rKlvXwZrPG/e9rrJ1fOO94/FUf5/w3/y+q/NgjfeXwv85
vn89vJ/F/4T76bl0+X7Ce79X4737iXHf9fmuywf36dfwGa8niK6DZfykebdY
xp/X4zfv93rM4+/XeZbwfa/T8OKiC6AX+LvA1P3B+/ED8FPX84NzLyz1PbTB
QeKA9D15r0fgdWioA8V6XgBtf9eKOMDrhdrv8Hf2NxzH5/N94e/QafCL4DzP
y/nZ0S/W9fGdr8UP+3uLvE8sfh5+D74/WvJA1u9TnhZ9ET6CTd9hxLr+nnEB
D/L8WvP7tN6C8T59V6XCd9tu3X23/r7C92N1naNwfl7fn+X/XdyveP1efk9/
sS5Y1WsmHR+8t44P/0n524T7Xn851WvC3+B1/r4v4x8/4HX5Xc9pvRg/4Dp+
+D/r9sBjbY3/bPd6bmmdeSz7cRz8Bv6B31M8AX6D/+C+LbjuOhvOw/Wh21i/
QY/nuaTvnoDj1N+47pL4y+/D86r8ns3nX17qu0Z/W3UccJ5+5zpM6/fwevCd
fk38Cq67Xhmb8rbWc6r5teZnie9bxzUeGCcSvqd6kqRHV3jfxfke3l8L/6u8
7nz9fsL7xOeres2E9+YD5vnm9+b5Ce/N8437rtsB763vwLPg94xPcP5u0XVc
d+F6ffgeOE+9HnovuAH+wxuN++C91+UH919Y6jvRJ+D/8FrnfcF7toOT/I4O
Al8GTx0/uB7GeWPjPzoM/J3f8RvgPG2sj8v1cR3Ox/o5gPc8J+Il6zfp+7he
Bz/Nn/V3cukn9BvwPeE8/Y/+iE3fz7V+D94bz83rU919Nb/KvCytq5nys8YD
40YX7yvdJvH5y+Rrb8/vu3hf6Tn2p34PFZ9P660lXpDqctwv0zxb6zlY8lse
N55vm3R84zz4znbidSx1PP7OItY6P/oveA/OYNERsOaj4JcteDeOu64XMK57
ndcF3oOj4Kf9gPGe7eAx1jqL62hoJ93IuhPn4brHez9f19i6Dc8Bv4hOA68n
XoLH42exXgeHfIz5PH6evI71eeJF8D3V12PhIeYnaf17+r31edddWr8xvjtP
W62XY1x3/G7eV+nzXZyf1Wvc3sbnH46Ok3h9wvcun0+8fmtdjnkB/cp52VSX
k9bTMZ93nQ7xr9cXBO/hVa7bsX7vcYwF/+H14D08z99fBC9ctw9fhP+P57+u
vw++j/tf8Ys2/BU+C8+lDS6C5+b3bIfXg//gPNa4Ds8nDjB+ez1o51VdR8l5
iUPAd3R32twP27l/6108N3533Y3rbXgv+GPnYa3TuF8QDzofBI+HV4Dr7pf0
V9eZeV6h+Y7zsGk+VbUuctLljeeJx1u/qeouK30e29Vrtuo2czrOw+Hv6f6N
62n+WtLleX/Jnyf+bjx3G76R1se0XkP/dz0CeibjBV5v/gS+e/zBv6zjo9sz
nuHx5nXGdSx8/qtLXb51HXg8/B4cMo83nrluB3yjbbyHD2Ph6ebrWG/HP1jP
B+edJ8CP2K8kfu48NNbbeQ48F/QunpvbPFd0Gd6D8dzfLcGP877HcdY8q9cz
Nl9Hj6HtdS3pn+7P1feqjOeMny6eJ76OTfWUSZdJedeUfzWOd3l8wvkurt+W
t8/r7t28auLnXZ6ecJz+YDy3zodN9TXW3enX8HT6vb/jCd/BWofHWp9h3Hl+
FeM01V9axwEHrNPC+4j34YfWB7Dow+gItNGPzdvBbes11qmx8F3w1Pyd363v
g8O2/B1t6yZeF4LfOQ/X6bgEXQXc5v79vRHyGI57yHs4b+q6d/wyfBwLnuPP
0dWJ69J3BuELrouEZ7gOPs17reojjePWO9P6NozP6vuDVT7VOFHhd8If45Nx
rKu3b8Px49Yz6/LtJ6/3fH2bro5inm2/aj9sv13hNP2Ifoa1fm7+bbxOOrrX
t4HfpLoZcNs6i/UWxqnracBr6+vE4+bf4AX8m3yqeTc4bV3d86nAM+OacRIL
D6e+xLhtXAZXvb+/s5XOB/4SF7hNHtPrvbPddaPcN8/JuMzzhF/zvLHER7wf
50nww7xn82uvI0n/AZetn6S8Z8Jp6l7o98Zl6+LpOyKJbxunE79OfLvi10kn
qfKfCZeNb/fbhI9H17vMz1uq+PRRenf1/Si3XaeYvh+S1huz/o2lHxunrYt7
nQLrJs4veR0DrOvOjNeMa3g1Frw2ryYux4In5NnS+pVY9HFwyzwTCy/Fun6b
7fBZr8tiC64ab8Ft4zXH5e9dZ8J94F+sb2DZjzbPwd9vdB0Kz5PnbHzm/Zg3
o4Phn7H23/QHx2vWP+ALxmnzDXQQrxOWeHS3PiXp3Mbraj1B87auDmJ8Nk67
XfHpSg9JOsRl8Hp73bnvw/fZ1UG83e9lNl/p/mHcTnnMLu8G343n9H/juHUS
47lxHL5EnGsdnPHsunVwAPymDV4Qh4PX1kfAbVtwy9+hsN4Nv2a/u0U3N56D
n9Yf2O66GH437rMf+MvfW8+wn/F3csFj60LoHMZprOtKwG3iF3533Tj6h+eZ
kc/AP7vuxOsBmF+D1+bV4LfzksZx82z3966OXenZHqfV/KGE20kHSfhS4XjF
t2f1j/t59rXrUL5S4njCdeN7wvOE74mfV/66wnXzcOO6dTr3W+vgWPq/rb//
7flH1lUYl/7+n3Vvxnn6DiA4Dt9DL0X/dl0iFhwi/qft+ajgnXkrOO51ytEh
wFNwFtz1PErr5/gN6xbWbTiOz2/L7+bX4Lf1EOvX1JE4juG5pnXXwXHwm/fl
eZ68X/Db/hw8p39U8z4TDwe/zcPBcfNwx68pb2Q+Xs3/r9bttU5SreO4t65w
loc/vd3l45euN6lxvOLlfk4Vbicct+5l67jMeUzzc/crb0/zh9K6v17/1zzd
urjznOC5eTm8i3Hr+hTGNzwdPDCew9Ph5+gr4I31Fnim+abzcOM8ax26dRhw
07hr3Abn2Q5ew7P9nSLrPFyP8TjV1bC/18NP86uIW4zb+D/X+fh7eObhWOc3
PE8f/51w2+u1gNvOm9MGt82/0zyfxMOtb5uHd/l4xcsTH0/5sr04nnC94q1z
+H19XSX5m0pfOQq/U14z6SzuD+4v5gHG96TDWH8Bx1N9iuvIjePm54w/+JRx
nPFrfgae+7vI4Dj4DY6AL+CPeSSWfBu45bpDrxNmHDWOm7eD57TBf3iw9Q2O
Z/7MecFf4gZw2Lic8Nrbuc8Kt9FLjNfjulbdy/PtnZfmfWJ57+M9ntu0vqL7
lfOTiXfTn50nsg6e8Dvhtfl2Vedd6Sqz67AYh5IOPpu3THrKbXh4f/2VxLcT
/650lORXU17T+O33n76vYWv+Xenm6Tt79H/XqzBOwG/Xh1snr+b3V99ZNV5Y
TwFnzBOx4JPzc66rcNv1K9aXk+4MzoKbxk9bz4MBX+1PzJf9O3GF1zU2LtPm
d54TzxX/OO5n1UU8z8Z4nXTupIuk/GSq13bdNv3R/RTeYX3bPJvtVd1f0rs9
7rp6SeLXtI0jXb078eun49dWneR6eJ1wurJd3aSb3+yus2I8N+9ONvHuqs7Q
ugn4nepWrJt4nFXfxXZeM83f9HcPjOPgDG1w3OszWk+BdztvR9vr9Hq9P/AW
PAeXaRtnjcdJxzEPtuW6uS/wl+PR9n0772v/Zj7t/IP1a+shvL9U95fwmv5h
3E7fpcA6L5l07aruz+Mi4XbiR2nepPl0VaddWeNKF69n+XXFty+ji+zn2Ukf
SXi9FbcrvE56iXl3F8+TXpLiR/p9wmvrJI5fk86d8pfwMnDA9YSefw9eez6m
2+AT2803bcFV18sZt70eo3m8jwveert1HOOvfwd3Pf/FfsnrCXL/6btAfs6J
R1v38Pwr4inX+znP6PqR9P0469bm1+A0/Tbp2cbril+ndau6eG1+XfG2vTp2
Tx+o8fk2PHt+PdpZft3F7y5eG7eN1wm/E8+u1sFyntL93fzaOG28xiacTvN2
aFvPxoIXxhPP38FS9wCeY43f/g4eOAmuJh5u/cG/W4+gzf7WbYy74Ku/3+H1
QbzuI/v7/sFl+LN1Jj9X4hrXYXteI9bv13q084rGafoN/cvzZ4zLroOyDgIu
YytcrupFku6R9OmqbtvtpHukNrarV1f41uPVt+fT9+s5898JTc811Wf6vaV1
ZxNOp3yk+YF17VQ3Yv3adYDwHX9nyDoI49TrFXrdQsa742xbfnc9ib9DjeV3
2uCV5197nXPjufm661PMc9P6ia6/QLfhuvAztO1fEh57/wqH2W7eDA5X82Ow
XgfK9XrgcaVDJ75sHKZfWq+z3pHWFaGd8Jnt1XfarE+7bXyuxvtWvpzwuIfP
l5qfvr0epMLr5IcSn57l0ZUOMjuv0ric8o/Wp9O6gtb9unV9nn+DBZ89fs2n
0Tusc5rH+fuh4LVx2/wanMaab5ufgnfgp/UV81TrCeAw5+E4Pq+Pl/A54Tj3
6XVUnf/zei/puzjWlXk/1i8SDrt+w/XTXZ5s3pDy37SruryKH3fXeerW53Xr
O8zfLlXfcRt+fHm8TrjdxelK50jxj23qJ906PucNq3VfGTdeF9A8mnHn+mvG
q+Nc69JJn8b6uz/WQ9P8G+OW53Ow3fza9SXGQ+Mnfwe+gqNJ9+X4bPdxEu+v
4gPn+7hfnov1YyzP13oy78Xro6Z6Daz7AW38ufN/ST82/hqnq7rp9D0c8Lla
H6Sy1puTnpFwOeF04nnGnS4eP2xc3o/Tvv+9+FzhdKVH2yb92fjs/up4MOnP
Ca9p30nnSOsaM749zl1vDT5Y94DfpXoC69fww8THXT9i/un1ixLeezttLPiZ
js9+1mvA3yqP53xeum+va8rzdDzjuuYqz5f4svN+2ITP4K/x2jqF6zVS3Qb9
PtlUB530ZI/DpDe7TrriyVXd3V6deU7PSHh5KRyucbmrayRc9nP1+zAe0044
XK3nl3A45Tn8fUvzZeOx57eYL8Oj4c1Y69Ae18Zl43P6zgJ44u8VWg/xdu8P
fhk/jZuuLzMfdds4nb6vi/V50rwR67/mv/ZT3Df+jOeGTd9tp13hrfVj3rtx
t5rvbV6c8Lab3/M4SHnzpFtUeJx4cVWH0c37zeoVszzzNnz5cjpFN8+X+HDF
e+2vU30z7e78lLTuta3r5zyujL/mQ0lndn7euGxeZl3D/M28DtxJerTzh9Zf
XYdt3p3yYhzXeAjeW3ehbf6KdXyQ6lqSDsR+ad51wlXHM1jjLO/ffpr+snW9
/0oPdr9PeRWPH+sOCWcr3E08KuFuVx+ueO2x+brr5/Pm7i/XVaTn28XZVPdW
rYdq3E14m3DX+luKB81/Ew4z/rDO83n+N+O7wmVwwnnAxJPNj+F/qa7LuJr2
T7qH82Dm3+afWM/HMD81vtqfsJ/v33k1rJ+/9Vz7Td6j62qMs/BZ46zr07yO
kf1/0hO664tW86y93k3it7PrZCS8rXC2i7uzPPbJv7uVzpvxdxZfuzyW7aku
wrhbrW9XfZfL8VfSEyprvGUc+bvr1oE9Lp2vc7vanniw833GYVvwyvpxaps3
Om+V/q76PdUlGG/NU12vkNZbxia+WukD4Kj9Kdut/1f1ZkkvqHhB4rEVnlq3
reoeunpBqkOt8mgJT6u82jb+erRu0Ndlj9YLjKddfbbS6at6hpQfSOtbuF+7
v6fvmTvuq9afc/xoXnunvMqd8nDGV38/13hqXDHumP9VdRbWi41/SbewLmoc
tS7qv6/mEyde6voCP7cU//u9mJfa2p86/rEu0NVbUz1CV4dNeoD5qcfVbD1C
pb86b1Ph51F89X4cfDh6bBdPE64mO1u/m3A18dX03ZQun+3qtowf6waMN2zC
29Q27tI2zla6gnHH+JT4ntf/N54Z79J3X4yP/p5p+ruKh5pnmof6eVk39XM1
jjr+SPG+cTTlsSr+2V3nIc37rPC0ivu7tours/msJ+3WecSX5qvXw9EKV6t5
a916ru56mglPU/1Lhaep7jHVrSed1utxJr0g5c3AgcTDUh484WiqJzUOJ35o
3LMO7PMaN318zyuxLmo8dJyecJLtVRxhf+i24/iq3qqa1+v+mvIH3q+7HkOV
l6p00y5uzuLovjzVtfNTNV7PxvUpvk95qUqPSfpptb5OpadW+axZXaBaB9B5
L+MqNtXdpvqvhBvmY+BP+l53wiv/nY/nPLrzZ+l74BX+VudPujK4WPkbW+ve
ySb9M82zTXn8bryeeGY375Ty+4wnxo95SxU3VrjJ9m7eKeFol99dBy/n9dB0
f+l5VHjp559wNPnDFN/P8tGErwk/q3XeU162WtfMcX/C0YqPYh3Xp7y18yyu
s026YaozSLpBhaPpetL3f7DWN5KfSfkhx+OOAyp9M8XhlR7U1TXTunqJJyS9
cy+/dDvxor15pH066O1xMuFmeg5dvtmtO63Wm/F7r/TxSi/Fpv7s8VDhZaqv
quL3xD8rHppwM303yfG8cdZ5qsT3/Pc+n/HO+yfe7OOYH6b7djyd/I3jbeOk
8bGqT3L8XcUvXT2z8vOpbtQ8smu78fds/WjCxzl+WeHa5XAzXV+Fl4ln+rn5
uSZb6ZuprrRqV/PqttZFJVvhp8dfyisZR6txn3ATXDEO3SmON84Zr6r9bVOc
7L83/qV4Oq1P5eeReGLlj1Iex/Xyqd7I/SPpPrO45/5Z1XV28z1VnJ34ZBrf
3Xj7frzcG38fjZd9nKzut8sru3qmcdLtilcmnEy/V3F6qt+v9E3zjfS9k+p7
yWmcV/NbU9yZ9E/jE/t7ndMKd7HGvQoPjfvWE6v8WNIXU1xt/9Sdr5n4YxVf
d3lita5JhZPd+LrCyYo3zvLIY3Dy2nmdrzTxsY+XlZ7bxc2qPim9b/eHbvye
+l/CySo/lPJBiaekuvuK95h/Ot5MdU4pfgevUn1/4m2unzK+JfyueKL9QMqL
Oc+S4mXXNaR63RRfp7xMqmvr6uJJZ7Qf7643MouT3Ti70h/T9oQfD0uX7OuV
VZx9NL9M78Xvz+3EM2lX/DLlfbrxd6pHot39vm/ileY3KZ+Q8j8V/0x46r83
Lqb433+Xjletf5RwLukUSTdMuJd4Yqo3T3pjNw9dxdVJF7KtcHBvXqayR/HF
Y+Pr6+dtntye8vZ9XOzqvpVemXDR+FjNH5qdF298NB6aL3bricxnqryOf/d+
qa6zshV+GZer74ZUdTQJ55M/MN9LvDDph5VNeFjhoG2lG1a2wr0KBxP+det1
ZnHvsnh4K544zxsrPrk1ru7iZPJ/5omz+ZqKN1b5mkqHnJ0PlOqGKv0y4YzX
kTDeGqfcTniX9vd1pPprP4f0XKzfpuNV/K+rE87WJXZ1Q+NfNx5O22f5YFc3
nM1LP1tx8v68TIWXiR924+m9+W3zxCq/neLnKu5JuJis89hub62vrHhnwtkU
byYcte0er5q/V+FghZ+zvC/5rYSHSQdMuFfFvdXv7p/d/Enig7N4WI3bCvce
Zly8nxd2eeLWeLrLD5NN/SHhYIqnq3xfipM9XrBsNw6meY8prk78sduucKfC
y8qm/FF1vgr3jVsVvvn3Lt5t1QFT3FDFwd067ZQXTDzQ42WW9+2Ne3s4eGue
19cNq/vrxsPJ71R5/wrvEr6lfEmlU1f1Yca1hG/eTjvhHTbhhut6sIlXVvwp
8cQuHqX9qrxD5QdmrfHL7UrPmOVxia/N1sF087xH4dqT+2c+8jD5XF+3q+LS
hFNdHtblZVX94CxOpX5Z+eGKr1Xz+rv8rYpn+ftq/avu74kfVXiTriNtr3Cr
ej7mW7PrzZpPVet8VfX71faj4syj8w4V75jDq9vxqLnrr/WyWZyq3muFT7ZV
nFjh0ywupbqValx5nHatx3ka76md4q3ueX28Lt74uRh/0nOr9PxKH3A9SMKd
qo4++c0uHiW9K/n7rt5/DD+61HyKeVyq8Cnh8V48sj0Kj6o8Z/KjqX64axNv
quaze3xWf5/224s3CX+q486ub9Ktr6jm+Xfjttk4bSsfMg7Rrvr9pXhRD3ce
Tl1awqGEOwmH9uLO7PtO+cXUz5K/rPp3lYfs6hyzf5942iwuzvK27vGMb924
Kv1e6T4Vvvj3rt+q6sC7PGdWL9qLN9t4z9G60HG8ZiuudOtakz6U4rMu/0n9
sNIzK54/a7v5ou44747fCk+q41R8JuHibB1UVQdQ8Zaurlzpzd1+mnBkVt/p
jb/Z/Nnt9OZZ3lLhy2w8NVsPUOFLFWdXdVSz+bbq9626g/lTFX9VeDW7f4UP
Ca8q/PDvXdyo3kvlX6r+4H7VxZNuPLRVjzF+zMVFl46H5nlNxWO6es3Tn2PO
y3f55Vb8sU1+reqv3TxHtw5gLz/aWy9Y8YqEP8aVtH+FnxW+pDinynNW8/+7
8U83HqpwZRZvuvjTw53b40oXZy4dR5lfprj1KLypeE/VT2fjeo+TrbgzO149
brvH6Z5/lo9UvDHpJt35It33m3DE7a18JemU1XiZxZGnb78VnlxPl9mKM9V7
26vrdHGni0cV7lTzWarxX43nLl51ecJRfKOKK7v4XOWdK76a/M7R8c9WflLh
ytw4PlpXqfBiPh6axZMujszqNXvz4bP4UvEY2rPjoevPu/qOj9s9XsKPrs7R
xYVq/lVXJ9uLF91+shUv3N+3xS/Xrq87Ls6ZxZGEJ1vjoLR9qw48y1e6/bNb
tzybp0r8omu75+nqP7PxRsXbqniE7VvfW3r/s7jR5dVdXrEPP66NDzVezOJf
hRt7+cn9+H3uD/byDPcv+63K71VxTXe8pbyFeU0Xr2bxo3t9XV2ii78VT6jw
v+IL3Xi4woUKD+bij2vhQ3XceV1jK7+oeMVWnpHef8UftuofVX/v6hzev+Id
XZyZrZfoXl83/krjOrVtq/fSjRMqHrBXv7y/3/7ixxVH40H1nNP7S+9xqy7R
5Q+z/q0aT1vHudvGqb22ez9b8cDbu+P/WjrCrB45xwe6uuFDxYNav9yKD0fp
m3vjh714UOmZW/FiL+5svY7u+bpxVqX37LXVuO76/e44v78fp/Fya79fjft5
HeGo8b1VT0z7V/2s66eqcWF/XMURadzMjrNZXOjy8706fhWndd/fUeN0br+H
yte3xv99/330ON5qU785Kq6f7f+zfq+q69tqu/dbjb/ZcVr5166/7Y6/2f0q
f9UbJ9ePr7f60dlxye/d/OnsuNzb77u8u8sbt46n9PfVeY7irV3/mNqpH3T9
4LZx9az6y+vz3Nk4d6+/PFofmx0He/33pa+j+/y64/DJv780H33o4/H6cWW1
vRpne8df6l9b/37vcWd5316ddfb6un6t57f8nqv6hWd1XM3zzK7d69+6fmx2
fHX92t64c6+frcbdXrxgv1kcq/jIrJ3tT3Pj59bjqu+vjh5X1Tjz9tn3vdW/
bT3+1vNW++29//vHVx/fLsvftuL9rf3R0f5pPU71XOf8f36Ps++929+q4x01
3mbjlaPGVXUde+Oh64yvh+KHqnF0OX+VxlV6/kf5s2p8HD0uq366t/9vvY+0
fy/erd/ftvHwrPiLed2hem7d8bB1XHR1i67/2tp/jxqv3eub9QPH9odnxc7G
SXv7ff/vqvczOy66/eXY8dH/DlB3fHX/btt1/KL290vpAsfzodTPq/al7Sze
Ho3L1X1vfZ7b+vez1v+vPZ5mx0m93za8P86PbL2+J+329bCOwenPWr/d6q+O
4/Gz7+/Y/nZ8XLLv+BWPvHV/ubXdyruO9nvbechR/fA69tbv+9b9ah7vbvue
Lv3+P6v949L9oPt8u8991n90z/dZee9bn//e97b1+n5R3sve+/is+7HP7ef2
c3sL+/8BkcIwUg==
     "]}], {{0, 0}, {1280, 1024}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellLabel->
  "Out[744]=",ExpressionUUID->"2007b58a-012f-4f0a-b40e-072e6f7487d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"newimage", ",", 
   RowBox[{"ColorFunction", "\[Rule]", "GrayLevel"}]}], "]"}]], "Input",
 CellLabel->
  "In[745]:=",ExpressionUUID->"eedc17f4-3cb5-4414-b129-a53f7f574eee"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[SparseArray[Automatic, {296, 296}, 0., {1, {CompressedData["
1:eJzd0ttPiGEcwPGvYyFSIYnIIVKIVI7lLIdCoUI5ROmsQg4XZMZNxmZmc2jZ
mCvCZg4z5s4MM8wFJoeNcdFw4TALX38G7/Z5t3fP+/ye53eIXleVVdkOiP37
+oee9uqk3hqqearUKb1QlPms1wX91DI3NCuoA5TpgVI6whmFG2i/vquyM3xQ
SQC8V2kgfFZdF8/sCgcU2Q3OaUYQPFNFd9d6wHElB8NTbekJoSFwUdmh8FXH
wiCtF7xVgxdP6QOv1RAOU/tCq05GwOJ+EBAJN1TbH0YP8C46EQVLB5rDILij
+miYMhi+6dIQKLcQscOMr6YYyB8OA0fASzXGQsFIv+M8U6fjoXgUjBwNn3R1
DOxMMKexEDgO7ulAImSOh+Ak66WDyZCVAmET4ImOTIScSdBvsjVX0xQonGo/
Uq2hzqdBzTRrMt0e6OYM7zzTM2ZBu9lwW/VzIHUu/NatdNhlI1Pnww9dXWAd
F0JiBnxRcyZULbIei+Gjzi6BoiyIzobnOrwU0pfBL11ZDtU55pcLLTqaBxkr
7NNK11S6yhnJh0faWwBJq+GNDq2ByWvhnQ6tgwmF7tfe9RC3Ae6rtsi5K4Zr
WrER2tRYYi9K4bFKysxXDeUQUeGMKcHhvKk5Vf6j3E3G1Zpq+6HCGnilvFp4
qLTN5qvILbBPrcrdCtcVXgdb9UTx22C37ip4O8zXHl1Wi9oUsgP6K+Y/8Ad+
prhS
      "], CompressedData["
1:eJztnetXVFUYxqf+k770WQaGi4ApQqAoAoqmUcCAUIrMICRBolwSsUIjUwMV
LDUNgwEl7yBiahgJIkOEiCN3DZw7zDn4oT0zzFrmypUo55z3mcUnWLP2ft/f
8+zn7DNnBs55S6mKVr4pk8nezpHJ3mA/d5XsPVSRm19QXLL32337D5QfPHS4
4nh+wc5dX+wuZa+UHayoPJpfuKOIvfBVye49X5d+4xj3XZljZOWR7384+uOJ
k9U1mrzCz3ewQV++aNSx42xcZvZnW3O3bc8vYIOLdhb/3/CfqqrrVOrMrE/Z
tG3b815+2qmfqzW1deotbGaOo+PM5tbU1p0+U//L2XOb0lTpGZmvWKZG4yhz
9tzG1LT0zE9eGUbjorlwsaExdVOaenPGbFQ7r1z/0ccbNrKCKnX6LJW8cPFS
Q2NTc2JyigCVL7PSsYlJySlCYLPi1xKS1gtW/ErT1biERGEbNF+L/eDDBKXg
XX69fuN91ikuXpxeLW2rxWx387dbrR2i9mu59XvMOpE7rlm7TlxTmcjWjlWr
17y3Vvy+f9xua49auSrG3l0C2fb2dyIl7R4tsfqOu9oVkVHSU3RqI1ZIjnFX
27VseQQNO7q6wyOIrEzXn8vooHT39IYtWRrO1okQUhgxoL967vXq3g0lZ5Sd
637YEnJQoQSN0oWEUozV/b4HIUSD1acbCA6hmvq+B7qH/YOLaQNSZusn7Vz/
QFAwbb7BoUDiDg4OjQTRPj4cjIFBxI9iRjnMGIkjDg0vXATg5NDwyGjgAhTU
RwveQUFF4Rx99Ng/EMdWhvv3WAAeMBSv73y4SPj6+cOlYvyJ3heRmsUDkNrg
7ePrB0muZ+ig5JDYqDnxwsTWyxWghusNRh/MzVBvQA0581yOuhsajApc270x
32EZjGYPb1TPjSYL6v5iNMMm3WgyWxW4e4zJrAB+q8vwLdYJbAFWbHyLFTxA
Vi9sfovVC3wFLFb5nIQ5CbMhYZ4nvoZJ2zw3WImJSRsnhxdh85B7usNSeLhF
oODP1EwDugBOAS8A9ip5OkLg+OBHgI0DFzBp46eQP7BwSEDn5+FXAP9UjK+A
g5fAewJ/y+FaBk8veA3A36o6BbjDtQHnDhdpvBsc0Bz0NzpOCbwbLAP/1A00
oF9ucvyUt998ZAkcDwxv9x89QT7gAqDhwb3neNS/JXIJQF8AbHoeGB87OVPI
9E+hvQf/fBR7ywS/dkR/w4BMD32tiB37ST9ceFjfJ+D+d3QafA5atHT7YybE
ApttixUYHJA7ANJtywQkthmR2hwAmGvE0w0gsgkwGiY8n9GAjVC0UN4aAO7M
5oQdf4JCOsYyQP8ubdMJwPB0bDyY7N1J/2VoMALlYoA1Z9mkDwmxIz2mD7mI
/nY5Sp3QEUbShMMjziQSJqS8xoMjoUvD6aHpBtiCUoNifi2X/rkTzyGRM4kU
DiGUvig6LCzGhJyJiJaehaHcY7sgmez2kuAgYUd3j51CSght9MoYKV3o1EZK
vA6dXZFS9pess0R940Vt1x4rssK4eKVIvVrb40WRZVfVJpYokZ4OebOlVfg2
wlVnxQWGT0oW0hlhyK80u6rOWtGGxqaUDc6n475+vVSVmoFlZee8RpXzz1DM
bPqZ+iw2cQZPNna1rc/YkpObV/jSkzS1p+u3vmj0M4OrHPWL/nNYpX3Miaqa
557XXFZ+5NjJ7GLng5737S+3/7an9EDZ4Yp/AMjRl4I=
      "]}, CompressedData["
1:eJztnTusbdmVlk12wiZrQidIDiGDpCSHFTZZk9EiqgBLTQQEHVRAcAOCRuqg
kRCiEUIY8WzerX4WbjBF+V22y3a5XC/Xk6wJqbpzfXvpfvv+Z4y51tp7n+uq
CmrcufY66znnP/7xjzHn+uLf+Fu/8jf/3Be+8IW/+He+8IUXf+nLd1988SvP
fW4/t5/bz4r9jYOP4+MddfxfNDv7nLrPMR232j57/tn3+lnrB1vvt/ueqvc3
e5yt+31W3+/s++w+r+74nX3PW/vTLJ7sPc9WnHvW8ebSz/Wo9/Ibz730y7/2
6C+99Pcvtl/3767T3591e+lxur3/XOa9b++HVX98+nG643ev/35W7dE8pd+f
9h7n1nZvPz7GbuUVt+53t8LLfj8+qn908bR3vH8Q29X+1xoPs+Pms42/e3H6
eByl38z2nyfPs73fdc9fjYfUTsc9erx0x/lenHo2x0O63v38Mb3vqj8ci/vn
57227T6HS/mPuf7+i9rPj+ItmV/O4ug2XJ/nHUfZ3/nNX3n+S7/zm7F97fF0
dP+/bNxw636/l9dcfny4nfpXt393+UfVz2f7+1Hj4tLj7Ri/NO9Xnr5f1b9u
PT6uP46q57vVb8yOA9vZcZKOYzuu67fK81V29npmjz/7PPaOz21x3+d+axaH
uuNr63jqve/fOhsHaVxstdV50u/VfrPXuffvqvFe4cJe/3fd8ej+/vDH3Swf
2Br/zo6zrePl6HG2dVy5/c5v//rLf+Wd325fb/f4WI7fHa97/dzDGIfd/v9w
x181zmb93lY/eNR4m93u31M/7v7etT4O7Wr73vPvxatbj9d9fvDS47E6/qXG
Y18fvpTf29sfu34ljYfu+Oj+/aVs97r2xpnpve71u1V/rMbr07c/NP85r8ds
fT57eezeOO8of3bUeBv39Y/juPfvafs/fHx7/+S03Tb9Xff4aVzv5elH+d+u
Pz6WDz/UuLQax/P+eW+8cbR/rvrV7Dit4tOEG2nc2O4dn9U4rf7O11Fdj/ev
/PpWfnSUvz+af/f890Mb95cf136eqT1rjxrnXR7a/fv0e3cce5xV4++o32mP
+/ynZ3/H9vT7Vp5/NL86Kh7fyuvvx4Fbj/90nv1x997xXP390XH23n7Z9eO2
jJ9qnKZxlv7Ox/Xfpb9P47rCgVn/n3Bv9j1V76ca/0fhwv08YqsufmsesDdO
mM9H7bW9/GTW0ap+1Y3DZ/8ujcvKz6Zx+rvf/dUXvvof/tnJVuPaNuFJsuk8
FW51cSnZo/TES8UVlT+7Dl+4tY4wn8++/3lsxwcfp/ILXV7R7Y9V/63ihDRe
qvHXHbe0x3X88/bfp/P793Q+40Q6nnFxNp7p4kzFK2b54aV0ijn94dZ8Yb/e
MMsr9vKM9F662yvc6MYLXb3OeFLxhO54NR6k8cl+tuzv8e3fZ/fz9nTeCncS
DnVtl6908b/Sm2bxo7vf08fJ1vjl1ngyz0O26pcJnytcqbZXeFLFGamfdftn
8p/deKLCk/R7Gs/dcf29T813/0Xc37+77e2z1781LpqNl7q4spevbNVVn/z7
o+qUHh6OVPHbXjzp4kY3D9LlJd16gUrPqPIH1bio8KAazx733fGfzpOOM57D
vzzb///9+O9+/N//7F+dfk9/X11PhZezceCsvtzlo6nOo9sfZ+Oh+/3v1vji
1jxmVs/p41IXh7o4NRvfbsWhFN9UvLyrl3Z5TRV3zOKG8QObcKOLez4uv/s8
1fnS31W46efa1ZW6vGi2fm1WD57lSbP4tA+nHgoO7c8Pd3Gm4pmzPGgWd1L/
6vKcrThUxUcJX6pxW41z8CDhQsKPtL+3d211H7ZdnaiKN7s696xOdHQdTFf/
mcWjffHZrepajsOvij9txatZHOv6qa41biWeVOFX0ju26joJz7r8pYtH/n3c
/78+2Wq/6u+r8zpOnG134+CKjyXdfTYu3NoPKzyrxsuxfOrW/Kp73v1x3lH4
VPGpWX264lddnKrwp6v3VPpR4ksVjzJudLd/cjGfXNG/Of2e2t5uy+/d66p4
WcLpip9WutxsHVOFU1vzqEnPmsWrp/OFrevQVzzm2vi0FWe3r6PU5U17dSbj
ThXvdflPiuO6cU4V53n8pnbiMQkHjCPj/v9txCvvl3CK39P50/Wl60w4XD2n
pONXuvys7p5wqJun7eLUbP6/y6sepn7VjUuPqweY5U0pj1/xpa3xXRW/VfFZ
8teOTyq8qXCnwiPjhvHDf5f27+JOwivjmfdL99PF2a7136fnXula3l7pWxUv
n9XjZ3WtWT1rFte28Z+Hq18lvPL2Lq86Sp/q1u1W9TVVXFfl37p8yvwnxWXJ
Jrz4R48fx7+LPMl/l2x1vK1/V+FeFydT3Jlw3rhW8eHkr7bWx1f5yIRvlQ6y
V+/aytceBm5t5W/bce7pfmN+3YH0Hu3XUjv5Sdc5zdYrdvWoKk7s4lfSnRIu
gCtYb094we/jPf37eBx+934+Tmqb/1X42Y1nK56a8grdPG2KQys/WfH/ivdV
OloaJ926roR7+/jcs4p/td6fcHAWD/fqZckfuv9UftX9OvG5tL3Sp7u6fBr/
CU+q7QnPquOy/yc38emdnOGTf/fxjY/ef4z73404m/C2e18VP7SfSfnTqj7N
vK/qRxV+JjyscG+2rqOKu/bxvVvhYF+H8/X37jPHr7N1YN28ZMK5lH9MfraK
T9le1TcY1xJvq/ha4l0Jx4wztCv88X7GH2w6XvfvEr6l331ftgkPHTcnvOzi
nvGvW+fifmA8q/hhV++bxbvE+/blS8/zp7fBvcvnF7r8rdLjunUYFT9znLq1
PtX4NpvHrOLWWd0qjdfEm9i/wpXf+7NPL/A/nlnjlre7nfCu+t3X5e2JHyY8
TPu5nfRE224+I+Fc+n0W/6p63WS7ut6szpf4XoUjT8ela9WFzM8HqHhthXtP
/v32+tgUr3bzpgnnttZzdPOlxrsUd6VxWsVxFY9KODeex386a4/7+y/PfXqW
X3/5P5+22/J7ws+9OJr+voujiY9WeJjyzMZD88Au7iUc7OJhFwcrXtjFwb31
KA+DByY+uJ8HJv67lwfO6nZd/Kvi2wonZ+tmq/h2Nn+QcKCKOxMOJVzDgoc/
+fS2fvxfz/ARy+/p76vtXA/bE05X12/8reLyri6YeGKKj80Pu3phV/+r4uGt
870qnnJ0fd5t8bDPFy+l/yX/U/HEivdvzVt05xFUdavp9yoOrvIO5jeJByUe
lvCx4nnmg8bFcZ//7cwa79huPE1/7/19XW5zPF+nrf++ek5VfF3liRJuuk1/
SfF3Fad08XJrXG1e4nGb4r9ZvNyGi7fSEWs+eZR+mPxQxSP9Hqv8bsqTJN7Y
5YvVPPMqv7s1f5twr6sHYs3XEq9L+Php65NNy33+3smyPeFeavs8Pk7CZ+Mv
bW83nia+WW2v8kZdPO3yzy5uHoWXFa88uu7mGJ55ez7ZxcEqjp7FQbcrHaWq
/7NN8UylB7n/duNoW+Og48ZZm8Z1N4427n3h8X+/f2bHff3+aT/a3s7xjHdu
s79xL+Go97dNuJ54csWjK77J80157i7ftDU+VnXaCSe7eNnlk7P65CxOpnj2
uviYeONX4vVt5Y9dPjkbZ1fzjSo+meLsbj2046WkP6b5E4k/VvG18S6N64SL
iR/amh+O6/+DMzz85H+f/OsPTr/T9n4Jf9luPDPOJp7K8X28xDcr/uo43/zT
/DvF72yv6p621j9217mpcLPKc6ftFV4mXnkb/fL6/PJa8fhsXU/C04SfW/Pc
Fd80bqY6xe4834SnKf/i8Zny0AkvqzjbOJZswlPsn/908y/94clWOGw8NK81
j/V+vq7q+s1XZ3UE8DTpteafKS/fjeOruD31zwpXKz0/8ZDu/JlZnJ3lpc9K
3L4VTxO+bsXTLo6yf6XXVDha6Z5Jj0/rrXTnsWA9zhIftS6ZeKrHeeKh4IJx
CrxL28FJrHF03NcfLvjwR6c2+9M27vo4xlvjd+LDxmXOZzxPvDfx4+p5Jj21
m6+zDtDN09tWOGv8rNpVnVIapwlPK1ytcPa2+Ho8D028ND0X42fSWSp9NOmk
VVxf1V+meCnlh6p1Y2bzP1XewvjoeLWbn0n8z/E6Fhz6C59ezi//UWw/3v2L
f3zCT9pY/533T3qB24n/Gsexvh/jcsLNStet8l9JF7DOmuZRVvNEE3+dnf/Y
nefdzTN1dYBKD6jwcw7Xqrz57XjrVp6acHe2jnM2D9XVAdyPEl+t1hec5akJ
Z5OOWvHSbl2RccJ4Yh5qfDKemYfyO9sTjo77++Mz/MX6d47j62J7wv2KP3t7
4sHGZfPhpAun5530mKSHV3pBwmH3v2pdusRvq7ium/c3jzX+VnmsWd7aw+NL
10FdDnfT86hwd5bvpjikwt9Kn690g6peNOmuCX+reUCJB3X1VcezSV+kneJ/
cAkcM856u+24nz957kuPb/BPTnhK29a46+3my8bx9HcJ5/139hcJvyvenXQW
592s/9qvWm+o5lVVukLiw5431V3HN/Hiqq4Aa30vxa+X0mt7ePxwcXcvHhuX
kx9MfLfa3q0nqNYbqnDY+JpsledK9QFJFzSOpvxPyt+zn/VW80vzXKxx1fgH
/o77e+lkx33+j+f+8rjR0/a/+viG1u1dvOY8yfo6Ob5x2Pw58eOkL2PTc7a/
s36R4hbHOUmXsK14sful+2vFj6txsrW+a2t9wmV58bXqufo6cPe+Kp13bz1s
9f6qeq8uLqe8mfsp7cQzEh5b5zXvNR4nHbLK398pnk56QsVvjYPgJxb8ow3u
Yh+f9stfO/1Oe9zv1872Zz/wGhw1jns719HFe/Nk36fxN+Fy4svGa/PmVE/s
ugfHQ0m3cB1E0i3cLxMvpp3yH4yXlEfZi8Npe4XH3t7F456OfHtcvhQvrupt
k27UxeHEl13fUOkSKU4zn0j93Low7aRLMN6c3zHPSjht/K14HXhsnEp8GFwz
/hpvsc8/PsCfnqy3p/3Ba+M55+N3+we2G48rfk7bfLyrZyS8Tr87DjGe0+Y9
V3qy8dl1vtX8sqruN/Hmqt6n4s2XqovYqmN0eep1ePTl+HOF38bnWdzGpveZ
bLeeotIvqjrdFD8m3my8TnUOjNfEv8zPGOep3su6sPUD81PjmHHR+GlrvB44
86fLc/6fz/21xz+slt99HON6wnEs1238t18xD0/6TNJXjOfOQ3p7yiOm+Mf5
gGrecKpvM05vxe2qHqOqy/D4S/y6qhtOeL0Vvx8Wr95e5zaL210+3dU/Eq/e
WodhPo1N+FzxaNrd9a/S+gSJR8ObU3yd4u8Up6f8mfE56cdY82Nw9q9/Ojx/
9X+d7Liv1bL9MZz92teX5/71UxsLnnNc8Bzc9Xbjvf0B15v8gvm9/VDi47ST
Tm7cNj9PPJu2+0Gq47BejU06CDbpI9U6i6kOqcJrj7u9dcjdfOGT+HLU+oe3
qps7Dr+T36rikif3P/eX3bxiwvFuHjHx7dn1vKrvcRjPzZOsS8KvUt4v6R+p
zgJccT1EytcZv8E341rCUfATfHb7MYy/8L9PduDSatnO/j4O/sC47+0+r/0J
v+NXuH7axnn7saQPJZ098XPjfZonY5ynf1jndv456dypLiTxdfDcep/5eKrX
6+ooVV20x/ts/UfStSsevo2XX1rnruoB+/h+f/zRr8tLfJztXT6e8Ns6d8Jz
x4HOP7r/VnFp4uPmUaneAxy3fuq6sVQnXOG184duW/8wXhs/wUHjNb+D13/v
8T/+z4J/ryzj/eXT/n97PJiTNd6Dz/ye/IJ/dxub4gXjvHUh83LjuvOfKV9q
/5p4uvm58x+uA7QeB57TH91OeN7Vyx2/Jhw3H0+8PeG7+Xma95Lw3LgEbiXe
XuksD1VXSXx8ln8fpZ9U+cq9ddPG66SjpO9auU7PcW2qd/Z4ZNwmPcS8zfNH
rM+murekk8BDrZMY58yX+d14ye/GVXAbPGf7eA6vnNnxPl454X5qs3/Cc85r
v2F/Y/zGgs+OR2jze6p3sb5uvcV1LImP498Tbqf8Jv2V7WkdqqoeJeE27YTb
5ksJt83Dkl6e4vQuH6/0ljm8fDh6yqz+3eXbCbe7+G2/m/Ca7ZVOYpvmFySe
Yp3EeSbjNZZxeCcdFAsup3Fua7y2fou1HpJ0auOut5v3ejs4Cj5XbfB3XN+K
x+P5fGO53tWO5/SNxe984+zvkgXvE58H1+2vKh3Gfi/VNdqPJr085UHMw43b
yRrHra9U6yclvdx8J8Wx1XrwtpfC7ZTP3Me3L4Xj+/l2F7+r/GWlfxufK32k
Wteoqv9LeUvr2rbVOsJpngTjrso7GofN16p65VRHDa6YJ1vfAFfBs4ofg3f8
XuGmt4PP4DAWfAavB05+c3lu3zzDce8Pnttf+Hr43bzc/D3heMqT+vmzPdUp
Wj9x3tO8G+v+Zd2EtvmF8Zt2hdvOb5p3V3lOj8+Kd8/OT690k2S7+vd1cTvh
+HF8POH40+OTmm/7/SQ8T3lK9480nyb1P+N4Vy8xr0k4bv7dre/DWkd1nO46
P6x5o3WQpDsb97DGU/Nht9nP+2PZPp7D+X4+37ifby7P61unNr+zP5bjmq+b
t9vP2G8l/cXPFev6Guvo4L/r0rHG8bTuFP0prYNqvc75zyrvOaun7K1jSXx8
K54fheu34eHbeXq67r38POH6UThe1XdX+O1+aB6e9BT6fzc/ybjzukiuX0g6
tvNkzqMZJ8AReHeq7wDXzb+Ne8ZL4zR8OOFq4tVsH9f3rUUX/vbyfL51wm1+
H3i57uf9wXefFzw3n3dcwHbjO237OetLfs68D+s0xvlUp57mDYHnaX4n1vlP
6+bmI0lvMa5X8+k9zipcr/KfjPuEE0lfmcX1ipffhqdv11kqPE/+rMLxru6d
8DzpLH7/7ieJlyc9vNJVkh6eeJHx3Hw8rWtkHl7VcTsfZ/2kqt8Ap8Bv82Nw
FLyE92K9HfxlO5bjgNO0x31/e3lv317u/zvLdX5niVPW9ri/b5/Ow9/Rxvo8
jgPsX7COS7A8J/Dd+VrrTs4Dw9t5b+A5fpn3mvT0NG8ozfuk/xnPvS6OeYlx
fbZeJekx1bxO8/M0L2h2PmdXL69w/bZ43sf76jorXPf2Lj+v8D3x86S3WB83
rps/pHWpzcvNX9J6Uc5v+vtQWNcpWCc3vltvTbzceAGuW1cx/4SngmfgnvHX
OGkeTdv82fhL2/g9ru+7y/1+b3l+3z1Zfsfyd7bgv89P2/eRrOONLq93vON4
iLb1d96r8d31oSlfat6e8qbGd+M8/dv64lYdBttddzDh/Gw+dK/ucgxvvzR+
H1/X0uXvfq7G8SofOovr3fUBEz9P+rn1FvObNF8TvuT6cM8T8bhNennF052/
S3Uo4JB5qnULeDZ4CH7ThmeDp+C1txt/x3V85wy/bcdz+O6Cl99b7n+1yQ9w
fM43nuO6PeG/dSDrPjwP603Oxzq/7PpH83is69idX3V9Y6pzSnq8+6XXCa7W
a6m+v1Ctx2KcT7aaR1TND+3i+3Xzp5fXX7bidlc39/Pdy8u7+U/3L/e/hOPG
b9eJm4czPhJ+Oy4Gv53v9LgFr62bo8Mav83H0QHg4+AMPBM+Dm4578h2457x
GXyEPxunwWNwFzue16vL9b263N+rp+3jetffx3V/P+5vPOc8XA/X4TjB/geL
37Ju4/jE+VyeM/4S/+m6IvN13qv5OpZ+kPIuXvcW3u5+6TpH1ztW64dXOoxx
2+MyrddS1S9WPL3S07v4vY3P3mq+UMb5o3l40lkqHl7N00y47v7iusQ03944
bh3d/MS83OOiwnPXtTgvhvW8efA94bnrx4n/jePWka1zG8eMf+a3WPASXIdP
g7vm12wHt8fz+cFyPT84tcd1/mC5/++fcH281++ffh/P5fun/RLuc53wdSx+
gLbx3vEIz8V6E/tZt8evuu7TPJ73x/vk/dt6nTDXtaf5pPQ/+ql5etLdHZem
7/Vs/a4vFpxPunrF040vCe+xR+nsxtHb4Pv+vOhRuF7x8qPqzau8qPlHNz9q
3n6n+UFp3RTrLWnej3GdtufVO+9pXIdHYq2nGKfBLdrmu+bF5t3GVdrDH/3g
hMu0B479cLmeHy7v4bXluf3whPPj+f3whP/+e3Ae/MdyffgV/AwWf8R+8Hzn
a+3X2A6u4w/RrfCnvAevZ+C4yny+Wm8MHm+dDl2GfmY9hn6KBd9dvwWOJz0m
zT9iPHV19qrOcXZdxWTN35+uK9S6S8L5+/H9dnj+5PZuHuEczxOuJ/3FuF7h
OO3qu2XuV11c79YvWn8Bz9N3FVM+1HWLia97PSnXtYAb4Ak6r3UV81HzVucn
rZ/YwrvNr7HgM7gMbo/n8aMFz1Y77utHy/W9drL87uOB61hwH/+BNa/Hgvf2
S+C+dSTjvXGd5218f37Jr4LrWNfNmLfbul94vZi03nrCd+f5sc4XWZexTTp7
t94x5U9THbtxvTuf9NL51Pvx9tp1MVV9TM3bjfcVzvu5V/q647KE+47v3I/c
v6r6RtcDpHVtXVfg+kavx2Kd3XUPKT9qvu76aPDefB2envQW81LwDB4L/wYH
2Q4vNr5jwV/zb/i5cdu4P/Duxye8Zzt2XP9rZ36A43N+2lzHnXQd2sZ7tltP
Aufxf45nwH+eLzqO60DRa8D90V9Wncb5buvz1foEaR0C477nq2Ktv1uvMd67
bb5Ufc8+zV/qriOQ8CPx+ITzs7i/TX+/dj613i/hvu+7yjv7uSZen+YPp/V9
kl5T4X+aX+H+aV5vvPf6Luk7bfB8dHnr79W8f+szad6o+bzr9+CZzh/C512H
aH4ProOD8GMseA4eg99JhzG+j+fwk+V5/3h5fq+fLNvH8/nJyY7rX/0C/mPc
z49Of8d24z/8v7Lm+/aH+AHwH8tztQ7m/KzrLPHb+AHzfqznuXodeHSetH67
1+9N6z+meRvVfCfrOEmvNx9Leg7jOa3LW+F/V6/fyve34f618q/7620q/m+b
+L+fe8rHenvi/0m3p78kvbDi/2kd9LTOl3Uexo/zsub9XjeAcWu+D9+zPg9O
oBPgB1zXCL/Hgk/mreCaLXgPrwf3zefBdXDZvB18hqfTHud5fXk+r5/aWPzB
eA6vL/e97m9/QdyA9XnH/f74TFfCP3E/xBf2G84/OA/AcyWe4rnjBxwX4A/Q
43iPWMcFrsO0/mN93/OdiQOcr3UdPfErNtXTJ3+Q1vWt4oCk/6S6+Urv6c6L
Srw15SePjQOO5v+zfL/m/5Wt9J6E/ykeqPSepAsmvE+4n3i/dX3naxkPaX0w
8y4s8bjxnrbra9B1wHl4ouefGl/MS11/Dr7D743r4J31c/AP3DRPdxu8xYLr
475/erLjPb5+suA8dvSL1S+M+ziPH4griBNSXIA/cPyCHf7ltZMfwC84f0B8
QDxgnch1Pp6Plerwec9pflUX/4kr07oI8H7zf/Ma83/roEn/dxzgeMDj0nFA
pfNX82Bn6+qP0n/ux/+Kr18+r1vx/8T77Req59f1A139P61L1/UH3XUNjP9Y
6z+MF2y1Ho11WddXWvdN+I9uDF64PhD9wXXvxn10HvAMvgsOgn/goXHSfBtc
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
9jzeR0vdJvG+cd71/PBLcAe8dx0n1nle9Bz0fXi+14dD34Efg6fgPDgKroL3
/J3rhcB9zuP1q8Ftjs/+nBddhvOB1xyH++C84Pp4j2+dWeIe8h/gPPETOg44
b54/7mut10GHA+ddvwOvJ65znb7nA1IfQPw4/u58XWiv42Nen+ZvuW7HcbC/
I2Adx/y+0nEqPp9w/ij9PvH5p/Pbo3T843WchPddXl/x/FT3lHDffte4P6vn
p+9RVnld13XSn71OFTwHfs/4GP15zd8a7+FXxNeMTyz5W8Yz+TnX6cPvqOMZ
1/PaycIX4Y/gPRY9GQvuw/fBfeoQ75b6RHCfNnlM/MIj1fXjH8BX8Bc8B2ex
4C/8Gf0cHPb3C9CPwHf4u/Um/A94z/mIV7hO5y24n3GedT02Py+eIzhvHQec
xw+Py1m/Kwne0+a9gvfo9vQH4z18AZw3rwfvXbfj78QQn5KXon8b79FvjPPV
dyZTvab5mfHeuF/pOQnvk75Q8Xus8a7i9Qnf53j8Xl5f52u7PL+bx+3ivW21
3rPrOukHiScY79P6bl53kP4NvzevT3Wc8Hyv2wPeo686Dk91+67fgefDB8H7
ry51f+DKuJ61buf5RdcHn5zHRcdH10e3AA/BY3gv28f53zzp28Zpf8cSnAVf
OS7+gra/j2x+bl2JNjjvfCvH4TrxW8Q13Af3j3W9E8+N55r4PH7X3xEG17HW
b3i/vPfxnL9zlpd1HTD9K/F7f/eF/up1OuE1af1mLHzetpqHa7xP+G49p7u+
f+LzXf0+8XvjfeL3CV+fjvd78X2e5yf/VOF/FQ9Y1+f5peefdDav35PWc064
b55v/E/foTfPT+u1MX68vonXa2M8ouswbsm3ud4C/Z78HG30HXg/eAGegP/o
B+A++ULndV1HaD0a/QJcNN6Dn1j4MRa+Tpv94M9Y8BfLfvgBjgN+Ow7g+Eln
Yj+O++Ki04znstbbMI8NfE/6PDye52p+n9Zf5j3B4++kz/Ne/Z1g9D5/Jzjp
OPAM9Hqs+T28Hj7vuoQ03xYLP3K+Fj6V8D7hvsezbVfXSfiScD/pExXOH6Pn
XH5+VsX3Z3HfeJ/0Lz/XNI+rqt9Pen7Sd1y/Y34PP3F/pp8zDsB9eD7jxnoO
48vzc+FjjFf0HHDe6/LA71ynCS6YL/r7YE/izIpL4D545jgA/QJ9Z5x3XVcS
/Acvwe27RffBL4Cv7M/vxluOz3b4NvtbN+K4xAPOLxvfOT/Xyfk4D/eZ6izh
9dZvxvWef7eROlnPuyL/Ap/nfbrukjZ47/ys192HT7gO2PPG4fXVvFvXp1nX
sW5vnIffY12X083Pmt93119O/HFWxzd/Tfif7Da8P5rnz+N+5QcqvafKi1R1
nF2dp1qf2fU69M/E7437zt/C859f8l+MK+dvwX3zffgZfD/VaaLzgP/M1wUf
wH/0gPRdSHAHXIJ/glv4BXDt42UeKbzX68mAj+Alv+MXwHNvB8fN7/kdm/wI
luPz9/YT/O7jgvfkYclfeB5tWicH/0j9jfHd+RUser3XVwD3ea/m9fAA+oXn
3YL7aX196zleV83rKlvXwZrPG/e9rrJ1fOO94/FUf5/w3/y+q/NgjfeXwv85
vn89vJ/F/4T76bl0+X7Ce79X4737iXHf9fmuywf36dfwGa8niK6DZfykebdY
xp/X4zfv93rM4+/XeZbwfa/T8OKiC6AX+LvA1P3B+/ED8FPX84NzLyz1PbTB
QeKA9D15r0fgdWioA8V6XgBtf9eKOMDrhdrv8Hf2NxzH5/N94e/QafCL4DzP
y/nZ0S/W9fGdr8UP+3uLvE8sfh5+D74/WvJA1u9TnhZ9ET6CTd9hxLr+nnEB
D/L8WvP7tN6C8T59V6XCd9tu3X23/r7C92N1naNwfl7fn+X/XdyveP1efk9/
sS5Y1WsmHR+8t44P/0n524T7Xn851WvC3+B1/r4v4x8/4HX5Xc9pvRg/4Dp+
+D/r9sBjbY3/bPd6bmmdeSz7cRz8Bv6B31M8AX6D/+C+LbjuOhvOw/Wh21i/
QY/nuaTvnoDj1N+47pL4y+/D86r8ns3nX17qu0Z/W3UccJ5+5zpM6/fwevCd
fk38Cq67Xhmb8rbWc6r5teZnie9bxzUeGCcSvqd6kqRHV3jfxfke3l8L/6u8
7nz9fsL7xOeres2E9+YD5vnm9+b5Ce/N8437rtsB763vwLPg94xPcP5u0XVc
d+F6ffgeOE+9HnovuAH+wxuN++C91+UH919Y6jvRJ+D/8FrnfcF7toOT/I4O
Al8GTx0/uB7GeWPjPzoM/J3f8RvgPG2sj8v1cR3Ox/o5gPc8J+Il6zfp+7he
Bz/Nn/V3cukn9BvwPeE8/Y/+iE3fz7V+D94bz83rU919Nb/KvCytq5nys8YD
40YX7yvdJvH5y+Rrb8/vu3hf6Tn2p34PFZ9P660lXpDqctwv0zxb6zlY8lse
N55vm3R84zz4znbidSx1PP7OItY6P/oveA/OYNERsOaj4JcteDeOu64XMK57
ndcF3oOj4Kf9gPGe7eAx1jqL62hoJ93IuhPn4brHez9f19i6Dc8Bv4hOA68n
XoLH42exXgeHfIz5PH6evI71eeJF8D3V12PhIeYnaf17+r31edddWr8xvjtP
W62XY1x3/G7eV+nzXZyf1Wvc3sbnH46Ok3h9wvcun0+8fmtdjnkB/cp52VSX
k9bTMZ93nQ7xr9cXBO/hVa7bsX7vcYwF/+H14D08z99fBC9ctw9fhP+P57+u
vw++j/tf8Ys2/BU+C8+lDS6C5+b3bIfXg//gPNa4Ds8nDjB+ez1o51VdR8l5
iUPAd3R32twP27l/6108N3533Y3rbXgv+GPnYa3TuF8QDzofBI+HV4Dr7pf0
V9eZeV6h+Y7zsGk+VbUuctLljeeJx1u/qeouK30e29Vrtuo2czrOw+Hv6f6N
62n+WtLleX/Jnyf+bjx3G76R1se0XkP/dz0CeibjBV5v/gS+e/zBv6zjo9sz
nuHx5nXGdSx8/qtLXb51HXg8/B4cMo83nrluB3yjbbyHD2Ph6ebrWG/HP1jP
B+edJ8CP2K8kfu48NNbbeQ48F/QunpvbPFd0Gd6D8dzfLcGP877HcdY8q9cz
Nl9Hj6HtdS3pn+7P1feqjOeMny6eJ76OTfWUSZdJedeUfzWOd3l8wvkurt+W
t8/r7t28auLnXZ6ecJz+YDy3zodN9TXW3enX8HT6vb/jCd/BWofHWp9h3Hl+
FeM01V9axwEHrNPC+4j34YfWB7Dow+gItNGPzdvBbes11qmx8F3w1Pyd363v
g8O2/B1t6yZeF4LfOQ/X6bgEXQXc5v79vRHyGI57yHs4b+q6d/wyfBwLnuPP
0dWJ69J3BuELrouEZ7gOPs17reojjePWO9P6NozP6vuDVT7VOFHhd8If45Nx
rKu3b8Px49Yz6/LtJ6/3fH2bro5inm2/aj9sv13hNP2Ifoa1fm7+bbxOOrrX
t4HfpLoZcNs6i/UWxqnracBr6+vE4+bf4AX8m3yqeTc4bV3d86nAM+OacRIL
D6e+xLhtXAZXvb+/s5XOB/4SF7hNHtPrvbPddaPcN8/JuMzzhF/zvLHER7wf
50nww7xn82uvI0n/AZetn6S8Z8Jp6l7o98Zl6+LpOyKJbxunE79OfLvi10kn
qfKfCZeNb/fbhI9H17vMz1uq+PRRenf1/Si3XaeYvh+S1huz/o2lHxunrYt7
nQLrJs4veR0DrOvOjNeMa3g1Frw2ryYux4In5NnS+pVY9HFwyzwTCy/Fun6b
7fBZr8tiC64ab8Ft4zXH5e9dZ8J94F+sb2DZjzbPwd9vdB0Kz5PnbHzm/Zg3
o4Phn7H23/QHx2vWP+ALxmnzDXQQrxOWeHS3PiXp3Mbraj1B87auDmJ8Nk67
XfHpSg9JOsRl8Hp73bnvw/fZ1UG83e9lNl/p/mHcTnnMLu8G343n9H/juHUS
47lxHL5EnGsdnPHsunVwAPymDV4Qh4PX1kfAbVtwy9+hsN4Nv2a/u0U3N56D
n9Yf2O66GH437rMf+MvfW8+wn/F3csFj60LoHMZprOtKwG3iF3533Tj6h+eZ
kc/AP7vuxOsBmF+D1+bV4LfzksZx82z3966OXenZHqfV/KGE20kHSfhS4XjF
t2f1j/t59rXrUL5S4njCdeN7wvOE74mfV/66wnXzcOO6dTr3W+vgWPq/rb//
7flH1lUYl/7+n3Vvxnn6DiA4Dt9DL0X/dl0iFhwi/qft+ajgnXkrOO51ytEh
wFNwFtz1PErr5/gN6xbWbTiOz2/L7+bX4Lf1EOvX1JE4juG5pnXXwXHwm/fl
eZ68X/Db/hw8p39U8z4TDwe/zcPBcfNwx68pb2Q+Xs3/r9bttU5SreO4t65w
loc/vd3l45euN6lxvOLlfk4Vbicct+5l67jMeUzzc/crb0/zh9K6v17/1zzd
urjznOC5eTm8i3Hr+hTGNzwdPDCew9Ph5+gr4I31Fnim+abzcOM8ax26dRhw
07hr3Abn2Q5ew7P9nSLrPFyP8TjV1bC/18NP86uIW4zb+D/X+fh7eObhWOc3
PE8f/51w2+u1gNvOm9MGt82/0zyfxMOtb5uHd/l4xcsTH0/5sr04nnC94q1z
+H19XSX5m0pfOQq/U14z6SzuD+4v5gHG96TDWH8Bx1N9iuvIjePm54w/+JRx
nPFrfgae+7vI4Dj4DY6AL+CPeSSWfBu45bpDrxNmHDWOm7eD57TBf3iw9Q2O
Z/7MecFf4gZw2Lic8Nrbuc8Kt9FLjNfjulbdy/PtnZfmfWJ57+M9ntu0vqL7
lfOTiXfTn50nsg6e8Dvhtfl2Vedd6Sqz67AYh5IOPpu3THrKbXh4f/2VxLcT
/650lORXU17T+O33n76vYWv+Xenm6Tt79H/XqzBOwG/Xh1snr+b3V99ZNV5Y
TwFnzBOx4JPzc66rcNv1K9aXk+4MzoKbxk9bz4MBX+1PzJf9O3GF1zU2LtPm
d54TzxX/OO5n1UU8z8Z4nXTupIuk/GSq13bdNv3R/RTeYX3bPJvtVd1f0rs9
7rp6SeLXtI0jXb078eun49dWneR6eJ1wurJd3aSb3+yus2I8N+9ONvHuqs7Q
ugn4nepWrJt4nFXfxXZeM83f9HcPjOPgDG1w3OszWk+BdztvR9vr9Hq9P/AW
PAeXaRtnjcdJxzEPtuW6uS/wl+PR9n0772v/Zj7t/IP1a+shvL9U95fwmv5h
3E7fpcA6L5l07aruz+Mi4XbiR2nepPl0VaddWeNKF69n+XXFty+ji+zn2Ukf
SXi9FbcrvE56iXl3F8+TXpLiR/p9wmvrJI5fk86d8pfwMnDA9YSefw9eez6m
2+AT2803bcFV18sZt70eo3m8jwveert1HOOvfwd3Pf/FfsnrCXL/6btAfs6J
R1v38Pwr4inX+znP6PqR9P0469bm1+A0/Tbp2cbril+ndau6eG1+XfG2vTp2
Tx+o8fk2PHt+PdpZft3F7y5eG7eN1wm/E8+u1sFyntL93fzaOG28xiacTvN2
aFvPxoIXxhPP38FS9wCeY43f/g4eOAmuJh5u/cG/W4+gzf7WbYy74Ku/3+H1
QbzuI/v7/sFl+LN1Jj9X4hrXYXteI9bv13q084rGafoN/cvzZ4zLroOyDgIu
YytcrupFku6R9OmqbtvtpHukNrarV1f41uPVt+fT9+s5898JTc811Wf6vaV1
ZxNOp3yk+YF17VQ3Yv3adYDwHX9nyDoI49TrFXrdQsa742xbfnc9ib9DjeV3
2uCV5197nXPjufm661PMc9P6ia6/QLfhuvAztO1fEh57/wqH2W7eDA5X82Ow
XgfK9XrgcaVDJ75sHKZfWq+z3pHWFaGd8Jnt1XfarE+7bXyuxvtWvpzwuIfP
l5qfvr0epMLr5IcSn57l0ZUOMjuv0ric8o/Wp9O6gtb9unV9nn+DBZ89fs2n
0Tusc5rH+fuh4LVx2/wanMaab5ufgnfgp/UV81TrCeAw5+E4Pq+Pl/A54Tj3
6XVUnf/zei/puzjWlXk/1i8SDrt+w/XTXZ5s3pDy37SruryKH3fXeerW53Xr
O8zfLlXfcRt+fHm8TrjdxelK50jxj23qJ906PucNq3VfGTdeF9A8mnHn+mvG
q+Nc69JJn8b6uz/WQ9P8G+OW53Ow3fza9SXGQ+Mnfwe+gqNJ9+X4bPdxEu+v
4gPn+7hfnov1YyzP13oy78Xro6Z6Daz7AW38ufN/ST82/hqnq7rp9D0c8Lla
H6Sy1puTnpFwOeF04nnGnS4eP2xc3o/Tvv+9+FzhdKVH2yb92fjs/up4MOnP
Ca9p30nnSOsaM749zl1vDT5Y94DfpXoC69fww8THXT9i/un1ixLeezttLPiZ
js9+1mvA3yqP53xeum+va8rzdDzjuuYqz5f4svN+2ITP4K/x2jqF6zVS3Qb9
PtlUB530ZI/DpDe7TrriyVXd3V6deU7PSHh5KRyucbmrayRc9nP1+zAe0044
XK3nl3A45Tn8fUvzZeOx57eYL8Oj4c1Y69Ae18Zl43P6zgJ44u8VWg/xdu8P
fhk/jZuuLzMfdds4nb6vi/V50rwR67/mv/ZT3Df+jOeGTd9tp13hrfVj3rtx
t5rvbV6c8Lab3/M4SHnzpFtUeJx4cVWH0c37zeoVszzzNnz5cjpFN8+X+HDF
e+2vU30z7e78lLTuta3r5zyujL/mQ0lndn7euGxeZl3D/M28DtxJerTzh9Zf
XYdt3p3yYhzXeAjeW3ehbf6KdXyQ6lqSDsR+ad51wlXHM1jjLO/ffpr+snW9
/0oPdr9PeRWPH+sOCWcr3E08KuFuVx+ueO2x+brr5/Pm7i/XVaTn28XZVPdW
rYdq3E14m3DX+luKB81/Ew4z/rDO83n+N+O7wmVwwnnAxJPNj+F/qa7LuJr2
T7qH82Dm3+afWM/HMD81vtqfsJ/v33k1rJ+/9Vz7Td6j62qMs/BZ46zr07yO
kf1/0hO664tW86y93k3it7PrZCS8rXC2i7uzPPbJv7uVzpvxdxZfuzyW7aku
wrhbrW9XfZfL8VfSEyprvGUc+bvr1oE9Lp2vc7vanniw833GYVvwyvpxaps3
Om+V/q76PdUlGG/NU12vkNZbxia+WukD4Kj9Kdut/1f1ZkkvqHhB4rEVnlq3
reoeunpBqkOt8mgJT6u82jb+erRu0Ndlj9YLjKddfbbS6at6hpQfSOtbuF+7
v6fvmTvuq9afc/xoXnunvMqd8nDGV38/13hqXDHumP9VdRbWi41/SbewLmoc
tS7qv6/mEyde6voCP7cU//u9mJfa2p86/rEu0NVbUz1CV4dNeoD5qcfVbD1C
pb86b1Ph51F89X4cfDh6bBdPE64mO1u/m3A18dX03ZQun+3qtowf6waMN2zC
29Q27tI2zla6gnHH+JT4ntf/N54Z79J3X4yP/p5p+ruKh5pnmof6eVk39XM1
jjr+SPG+cTTlsSr+2V3nIc37rPC0ivu7tours/msJ+3WecSX5qvXw9EKV6t5
a916ru56mglPU/1Lhaep7jHVrSed1utxJr0g5c3AgcTDUh484WiqJzUOJ35o
3LMO7PMaN318zyuxLmo8dJyecJLtVRxhf+i24/iq3qqa1+v+mvIH3q+7HkOV
l6p00y5uzuLovjzVtfNTNV7PxvUpvk95qUqPSfpptb5OpadW+axZXaBaB9B5
L+MqNtXdpvqvhBvmY+BP+l53wiv/nY/nPLrzZ+l74BX+VudPujK4WPkbW+ve
ySb9M82zTXn8bryeeGY375Ty+4wnxo95SxU3VrjJ9m7eKeFol99dBy/n9dB0
f+l5VHjp559wNPnDFN/P8tGErwk/q3XeU162WtfMcX/C0YqPYh3Xp7y18yyu
s026YaozSLpBhaPpetL3f7DWN5KfSfkhx+OOAyp9M8XhlR7U1TXTunqJJyS9
cy+/dDvxor15pH066O1xMuFmeg5dvtmtO63Wm/F7r/TxSi/Fpv7s8VDhZaqv
quL3xD8rHppwM303yfG8cdZ5qsT3/Pc+n/HO+yfe7OOYH6b7djyd/I3jbeOk
8bGqT3L8XcUvXT2z8vOpbtQ8smu78fds/WjCxzl+WeHa5XAzXV+Fl4ln+rn5
uSZb6ZuprrRqV/PqttZFJVvhp8dfyisZR6txn3ATXDEO3SmON84Zr6r9bVOc
7L83/qV4Oq1P5eeReGLlj1Iex/Xyqd7I/SPpPrO45/5Z1XV28z1VnJ34ZBrf
3Xj7frzcG38fjZd9nKzut8sru3qmcdLtilcmnEy/V3F6qt+v9E3zjfS9k+p7
yWmcV/NbU9yZ9E/jE/t7ndMKd7HGvQoPjfvWE6v8WNIXU1xt/9Sdr5n4YxVf
d3lita5JhZPd+LrCyYo3zvLIY3Dy2nmdrzTxsY+XlZ7bxc2qPim9b/eHbvye
+l/CySo/lPJBiaekuvuK95h/Ot5MdU4pfgevUn1/4m2unzK+JfyueKL9QMqL
Oc+S4mXXNaR63RRfp7xMqmvr6uJJZ7Qf7643MouT3Ti70h/T9oQfD0uX7OuV
VZx9NL9M78Xvz+3EM2lX/DLlfbrxd6pHot39vm/ileY3KZ+Q8j8V/0x46r83
Lqb433+Xjletf5RwLukUSTdMuJd4Yqo3T3pjNw9dxdVJF7KtcHBvXqayR/HF
Y+Pr6+dtntye8vZ9XOzqvpVemXDR+FjNH5qdF298NB6aL3bricxnqryOf/d+
qa6zshV+GZer74ZUdTQJ55M/MN9LvDDph5VNeFjhoG2lG1a2wr0KBxP+det1
ZnHvsnh4K544zxsrPrk1ru7iZPJ/5omz+ZqKN1b5mkqHnJ0PlOqGKv0y4YzX
kTDeGqfcTniX9vd1pPprP4f0XKzfpuNV/K+rE87WJXZ1Q+NfNx5O22f5YFc3
nM1LP1tx8v68TIWXiR924+m9+W3zxCq/neLnKu5JuJis89hub62vrHhnwtkU
byYcte0er5q/V+FghZ+zvC/5rYSHSQdMuFfFvdXv7p/d/Enig7N4WI3bCvce
Zly8nxd2eeLWeLrLD5NN/SHhYIqnq3xfipM9XrBsNw6meY8prk78sduucKfC
y8qm/FF1vgr3jVsVvvn3Lt5t1QFT3FDFwd067ZQXTDzQ42WW9+2Ne3s4eGue
19cNq/vrxsPJ71R5/wrvEr6lfEmlU1f1Yca1hG/eTjvhHTbhhut6sIlXVvwp
8cQuHqX9qrxD5QdmrfHL7UrPmOVxia/N1sF087xH4dqT+2c+8jD5XF+3q+LS
hFNdHtblZVX94CxOpX5Z+eGKr1Xz+rv8rYpn+ftq/avu74kfVXiTriNtr3Cr
ej7mW7PrzZpPVet8VfX71faj4syj8w4V75jDq9vxqLnrr/WyWZyq3muFT7ZV
nFjh0ywupbqValx5nHatx3ka76md4q3ueX28Lt74uRh/0nOr9PxKH3A9SMKd
qo4++c0uHiW9K/n7rt5/DD+61HyKeVyq8Cnh8V48sj0Kj6o8Z/KjqX64axNv
quaze3xWf5/224s3CX+q486ub9Ktr6jm+Xfjttk4bSsfMg7Rrvr9pXhRD3ce
Tl1awqGEOwmH9uLO7PtO+cXUz5K/rPp3lYfs6hyzf5942iwuzvK27vGMb924
Kv1e6T4Vvvj3rt+q6sC7PGdWL9qLN9t4z9G60HG8ZiuudOtakz6U4rMu/0n9
sNIzK54/a7v5ou44747fCk+q41R8JuHibB1UVQdQ8Zaurlzpzd1+mnBkVt/p
jb/Z/Nnt9OZZ3lLhy2w8NVsPUOFLFWdXdVSz+bbq9626g/lTFX9VeDW7f4UP
Ca8q/PDvXdyo3kvlX6r+4H7VxZNuPLRVjzF+zMVFl46H5nlNxWO6es3Tn2PO
y3f55Vb8sU1+reqv3TxHtw5gLz/aWy9Y8YqEP8aVtH+FnxW+pDinynNW8/+7
8U83HqpwZRZvuvjTw53b40oXZy4dR5lfprj1KLypeE/VT2fjeo+TrbgzO149
brvH6Z5/lo9UvDHpJt35It33m3DE7a18JemU1XiZxZGnb78VnlxPl9mKM9V7
26vrdHGni0cV7lTzWarxX43nLl51ecJRfKOKK7v4XOWdK76a/M7R8c9WflLh
ytw4PlpXqfBiPh6axZMujszqNXvz4bP4UvEY2rPjoevPu/qOj9s9XsKPrs7R
xYVq/lVXJ9uLF91+shUv3N+3xS/Xrq87Ls6ZxZGEJ1vjoLR9qw48y1e6/bNb
tzybp0r8omu75+nqP7PxRsXbqniE7VvfW3r/s7jR5dVdXrEPP66NDzVezOJf
hRt7+cn9+H3uD/byDPcv+63K71VxTXe8pbyFeU0Xr2bxo3t9XV2ii78VT6jw
v+IL3Xi4woUKD+bij2vhQ3XceV1jK7+oeMVWnpHef8UftuofVX/v6hzev+Id
XZyZrZfoXl83/krjOrVtq/fSjRMqHrBXv7y/3/7ixxVH40H1nNP7S+9xqy7R
5Q+z/q0aT1vHudvGqb22ez9b8cDbu+P/WjrCrB45xwe6uuFDxYNav9yKD0fp
m3vjh714UOmZW/FiL+5svY7u+bpxVqX37LXVuO76/e44v78fp/Fya79fjft5
HeGo8b1VT0z7V/2s66eqcWF/XMURadzMjrNZXOjy8706fhWndd/fUeN0br+H
yte3xv99/330ON5qU785Kq6f7f+zfq+q69tqu/dbjb/ZcVr5166/7Y6/2f0q
f9UbJ9ePr7f60dlxye/d/OnsuNzb77u8u8sbt46n9PfVeY7irV3/mNqpH3T9
4LZx9az6y+vz3Nk4d6+/PFofmx0He/33pa+j+/y64/DJv780H33o4/H6cWW1
vRpne8df6l9b/37vcWd5316ddfb6un6t57f8nqv6hWd1XM3zzK7d69+6fmx2
fHX92t64c6+frcbdXrxgv1kcq/jIrJ3tT3Pj59bjqu+vjh5X1Tjz9tn3vdW/
bT3+1vNW++29//vHVx/fLsvftuL9rf3R0f5pPU71XOf8f36Ps++929+q4x01
3mbjlaPGVXUde+Oh64yvh+KHqnF0OX+VxlV6/kf5s2p8HD0uq366t/9vvY+0
fy/erd/ftvHwrPiLed2hem7d8bB1XHR1i67/2tp/jxqv3eub9QPH9odnxc7G
SXv7ff/vqvczOy66/eXY8dH/DlB3fHX/btt1/KL290vpAsfzodTPq/al7Sze
Ho3L1X1vfZ7b+vez1v+vPZ5mx0m93za8P86PbL2+J+329bCOwenPWr/d6q+O
4/Gz7+/Y/nZ8XLLv+BWPvHV/ubXdyruO9nvbechR/fA69tbv+9b9ah7vbvue
Lv3+P6v949L9oPt8u8991n90z/dZee9bn//e97b1+n5R3sve+/is+7HP7ef2
c3sL+/8BkcIwUg==
     "]}], {{0, 0}, {296, 296}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellLabel->
  "Out[745]=",ExpressionUUID->"cf51d6be-b558-4390-ad5b-a01cd5196177"]
}, Open  ]],

Cell["Pretty cool, right?", "Text",ExpressionUUID->"059b4980-a54f-47a3-aeef-24ad94075258"],

Cell["\<\
We\[CloseCurlyQuote]ve reached the end of decimating an image. Up next is \
fitting the image data to a function. \
\>", "Text",ExpressionUUID->"6c25b24a-8f2b-4f28-9363-68e8e47d9382"],

Cell[BoxData[
 RowBox[{"CellPrint", "@", 
  RowBox[{"Cell", "[", 
   RowBox[{"\"\<Fitting An Image\>\"", ",", "\"\<Chapter\>\"", 
    RowBox[{"(*", 
     RowBox[{"format", " ", "style", " ", "option"}], "*)"}], ",", 
    RowBox[{"CellTags", "\[Rule]", 
     RowBox[{"{", "\"\<fitim\>\"", "}"}]}]}], "]"}]}]], "Input",
 CellLabel->
  "In[746]:=",ExpressionUUID->"7300c21d-98b8-4239-8480-e57961de0e1f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fitting An Image", "Chapter",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellTags->"fitim",ExpressionUUID->"b5098fa8-54ba-4703-9fd4-ddc8fddd5247"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Home:  \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Table of Contents\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<toc\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Before:\>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Code Used to Decimate\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<decicode\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<After: \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Working With Multiple Images\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<work1\>\""}], 
      "}"}]}], "]"}]}], "]"}]}], "Input",
 CellLabel->
  "In[747]:=",ExpressionUUID->"b156f7e6-f68c-46cc-a515-f45841d84a11"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Home:  \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Table of Contents\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["iqxbm_shm", 3, 1]], 41], "toc"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Home:  ", 
   Hyperlink["Table of Contents", {
     NotebookObject[
      FrontEndObject[
       LinkObject["iqxbm_shm", 3, 1]], 41], "toc"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[747]:=",ExpressionUUID->"c2d0de70-f32b-43b6-adc3-bf51ab6450eb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Before:\"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Code Used to Decimate\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["iqxbm_shm", 3, 1]], 41], "decicode"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Before:", 
   Hyperlink["Code Used to Decimate", {
     NotebookObject[
      FrontEndObject[
       LinkObject["iqxbm_shm", 3, 1]], 41], "decicode"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[747]:=",ExpressionUUID->"1ba68b6c-1bab-4ea7-9156-00ade20d4400"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"After: \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Working With Multiple Images\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["iqxbm_shm", 3, 1]], 41], "work1"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["After: ", 
   Hyperlink["Working With Multiple Images", {
     NotebookObject[
      FrontEndObject[
       LinkObject["iqxbm_shm", 3, 1]], 41], "work1"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[747]:=",ExpressionUUID->"0ffe7f17-741d-4744-9672-81005e3a7f26"]
}, Open  ]]
}, Open  ]],

Cell["\<\
FindingSpotSize is responsible for fitting decimated image data to a 3D \
gaussian. It does this in three steps. It takes in image data and outputs a \
fitted spot size. The first step is using TotallyDecimate to decimate the \
image. The second step is using GaussianBeamfit to fit the image.\
\>", "Text",ExpressionUUID->"f57c07b3-efb8-4574-9882-32a3baee9316"],

Cell["\<\
GaussianBeamFit first uses SpotSizeGuesser to have good initial conditions. \
It then uses NonlinearModelFit to perform the fit calculations. \
GaussianBeamFit then outputs a fitted function. Arguments are supplied to \
NonlinearModelFit as follows:\
\>", "Text",ExpressionUUID->"7a1569b1-b699-40b5-ad88-1636306f9a4e"],

Cell["\<\
NonlinearModelFit[image data, {equation to fit image to}, {guesses for each \
parameter as a list of lists},{list of independent variables in order as they \
appear in image data so: height,width}]\
\>", "Program",ExpressionUUID->"61ef7a54-b815-44f2-9217-0c845f01d6c2"],

Cell["\<\
The third step is converting from pixel units to real world units \
(millimeters). 

In the end we get values for the spot size in the height and width directions \
and their respective standard errors. \
\>", "Text",ExpressionUUID->"3b0c92ae-4314-4823-a9f2-24b7d3ea7c19"],

Cell["\<\
So  we\[CloseCurlyQuote]ve done everything we need to do to one single image. \
Now we need to focus on working with multiple images, and how we use multiple \
images to determine the minimum waist and its position. \
\>", "Text",ExpressionUUID->"a012d824-c368-475b-b41b-97bf0aa7fae1"],

Cell[BoxData[
 RowBox[{"CellPrint", "@", 
  RowBox[{"Cell", "[", 
   RowBox[{"\"\<Working with Multiple Images\>\"", ",", "\"\<Chapter\>\"", 
    RowBox[{"(*", 
     RowBox[{"format", " ", "style", " ", "option"}], "*)"}], ",", 
    RowBox[{"CellTags", "\[Rule]", 
     RowBox[{"{", "\"\<work1\>\"", "}"}]}]}], "]"}]}]], "Input",
 CellLabel->
  "In[750]:=",ExpressionUUID->"fb1c8dba-fc14-4010-b345-778ccff4678c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Working with Multiple Images", "Chapter",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellTags->"work1",ExpressionUUID->"4397951d-acfa-43ce-98ba-f015ac6fad23"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Home:  \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Table of Contents\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<toc\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Before:\>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Fitting An Image\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<fitim\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<After: \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<\>\""}], "}"}]}], 
    "]"}]}], "]"}]}], "Input",
 CellLabel->
  "In[751]:=",ExpressionUUID->"58e243ff-7979-4558-9528-dbb227bd80a2"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Home:  \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Table of Contents\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["iqxbm_shm", 3, 1]], 41], "toc"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Home:  ", 
   Hyperlink["Table of Contents", {
     NotebookObject[
      FrontEndObject[
       LinkObject["iqxbm_shm", 3, 1]], 41], "toc"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[751]:=",ExpressionUUID->"a2b1f7b4-7b10-4462-ae0a-e68b6dc38521"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Before:\"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Fitting An Image\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["iqxbm_shm", 3, 1]], 41], "fitim"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Before:", 
   Hyperlink["Fitting An Image", {
     NotebookObject[
      FrontEndObject[
       LinkObject["iqxbm_shm", 3, 1]], 41], "fitim"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[751]:=",ExpressionUUID->"97a5e601-981a-47f5-b886-7a8c2792e558"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"After: \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["iqxbm_shm", 3, 1]], 41], ""},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["After: ", 
   Hyperlink["", {
     NotebookObject[
      FrontEndObject[
       LinkObject["iqxbm_shm", 3, 1]], 41], ""}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[751]:=",ExpressionUUID->"0adbd9dc-c58c-46a3-9f96-3d83514be465"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s now talk about how folders need to be organized to \
work with my program (and also Roshan\[CloseCurlyQuote]s MATLAB program). We \
decided to use an organizational method that works with both programs. \
\>", "Text",ExpressionUUID->"338108f6-1751-4350-a91d-03523be7d85d"],

Cell["\<\
There is a folder located in the documentation folder titled: test folder. 

Open it. \
\>", "Text",ExpressionUUID->"d9b7f641-7264-48a0-ad04-682572cbc7aa"],

Cell["\<\
Inside this folder is an acceptable way to organize the data. Images are \
numbered. There is also a text file. Open the text file titled \
\[OpenCurlyDoubleQuote]zpos.txt\[CloseCurlyDoubleQuote] now. I would see \
Roshan\[CloseCurlyQuote]s documentation on acceptable naming conventions. If \
I recall correctly, my implementation is more flexible than his, so default \
to meeting his programs needs. (This is not Roshan\[CloseCurlyQuote]s fault; \
Mathematica includes easily implementable parsing functions whereas MATLAB \
does not...at least I think that is the case). 

In the text file: There are two columns. The left column is the image number \
that the position is of. The right column is the position. If I recall \
correctly, only record measurements in millimeters (mainly due to that being \
what the plots are formatted for). 

There is also a Mathematica notebook titled Analysis Template. Open that, but \
put it aside for the moment. \
\>", "Text",ExpressionUUID->"89136ede-18ec-4cda-bde5-582f6108823e"],

Cell["\<\
So now I\[CloseCurlyQuote]m going to make a giant leap in topic to the \
FindingMinimumwithTable function. Inside this function a lot of magic \
happens. Let\[CloseCurlyQuote]s take a look at how to use this function. \
\>", "Text",ExpressionUUID->"a746a3d5-86e8-4053-9ebf-0acc413f1f91"],

Cell["FindBeamMinimumwT[path to folder, wavelength of light in mm]", "Program",ExpressionUUID->"461aa75d-0312-4359-9826-29542723b95b"],

Cell["\<\
The function returns three things in a list in this order: the waist \
(smallest spot size) and position for height, the waist and position for \
width, and a table of values. \
\>", "Text",ExpressionUUID->"a467a842-044b-4abf-bf27-ed63dc241d9d"],

Cell["\<\
What I haven\[CloseCurlyQuote]t told you yet is that an entirely different \
fitting function is being done. See what happens is: 

Each image gets fitted to determine its spot size. 
The data from each is collected and put into a new fitting equation. 
This fitting equation determines the waist and waist position.\
\>", "Text",ExpressionUUID->"37053555-10f8-475a-97ee-9f08497654fc"],

Cell["\<\
Let\[CloseCurlyQuote]s now head on over to Analysis Template notebook to see \
the function in action. Go ahead and run the whole notebook. It\
\[CloseCurlyQuote]ll take it a few minutes to do the analysis of the images \
in the test folder. Grab a snack while you wait. A progress bar appears to \
show you how many images have already been analyzed. Once you have done all \
of that come back here. \
\>", "Text",ExpressionUUID->"17947d82-a42f-4800-ba39-501f50340cad"],

Cell[BoxData[
 RowBox[{"CellPrint", "@", 
  RowBox[{"Cell", "[", 
   RowBox[{"\"\<The End...?\>\"", ",", "\"\<Chapter\>\"", 
    RowBox[{"(*", 
     RowBox[{"format", " ", "style", " ", "option"}], "*)"}], ",", 
    RowBox[{"CellTags", "\[Rule]", 
     RowBox[{"{", "\"\<ending\>\"", "}"}]}]}], "]"}]}]], "Input",
 CellLabel->
  "In[754]:=",ExpressionUUID->"cc00352c-463a-4322-bc0b-c7d2ec1e7a3c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The End...?", "Chapter",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellTags->"ending",ExpressionUUID->"85cad0ba-7b3c-4fbf-9670-cd54985bbce0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Home:  \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Table of Contents\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<toc\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Before:\>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Working with Multiple Images\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<work1\>\""}], 
      "}"}]}], "]"}]}], "]"}]}], "Input",
 CellLabel->
  "In[755]:=",ExpressionUUID->"a0c1f419-17d5-44ab-8203-eaeeb30c0472"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Home:  \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Table of Contents\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["iqxbm_shm", 3, 1]], 41], "toc"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Home:  ", 
   Hyperlink["Table of Contents", {
     NotebookObject[
      FrontEndObject[
       LinkObject["iqxbm_shm", 3, 1]], 41], "toc"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[755]:=",ExpressionUUID->"e97a5f5d-740d-434a-b528-d2c27e2f9452"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Before:\"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Working with Multiple Images\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["iqxbm_shm", 3, 1]], 41], "work1"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Before:", 
   Hyperlink["Working with Multiple Images", {
     NotebookObject[
      FrontEndObject[
       LinkObject["iqxbm_shm", 3, 1]], 41], "work1"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[755]:=",ExpressionUUID->"9f8fb7e4-070a-4a95-9048-6a27f3b3c28b"]
}, Open  ]]
}, Open  ]],

Cell["\<\
So we\[CloseCurlyQuote]ve come to the end my friend. This documentation is \
not perfect but as H.G. Wells once said: \
\>", "Text",ExpressionUUID->"187d0c9b-27f4-4cd3-ae7c-203a26017783"],

Cell["\<\
\[OpenCurlyDoubleQuote]Perfection is the mere repudiation of that ineluctable \
marginal inexactitude which is the mysterious inmost quality of Being.\
\[CloseCurlyDoubleQuote] \
\>", "Text",ExpressionUUID->"bc497686-46d7-4930-aa26-6eb5960005bd"],

Cell["With that I bid you farewell. ", "Text",ExpressionUUID->"3d9e356c-114a-4fe6-a498-67f24a012084"],

Cell["\<\
There is still a lot that needs to be done. So why are you still reading this?\
\>", "Text",ExpressionUUID->"80995685-a225-4009-b657-094d1483bdee"],

Cell["Also, \[OpenCurlyDoubleQuote]Do... or do not, there is no try.\
\[CloseCurlyDoubleQuote] - Yoda", "Text",ExpressionUUID->"2b45cab9-dce5-4190-\
9b04-c7813feb6cd8"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{720, 770},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
SpellingDictionaries->{"CorrectWords"->{
 "maximumintensity", "widthcenter", "heightcenter", "wspotsize", "hspotsize", 
  "backgroundintensity"}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Notebook"], Background -> GrayLevel[0.99]], 
   Cell[
    StyleData["Input"], Background -> RGBColor[1, 1, 0.85]], 
   Cell[
    StyleData["Output"], Background -> RGBColor[0.88, 1, 0.88]], 
   Cell[
    StyleData["Text"], Background -> RGBColor[0.94, 0.91, 0.88]], 
   Cell[
    StyleData["Chapter"], Background -> GrayLevel[0.9]]}, Visible -> False, 
  FrontEndVersion -> "12.0 for Mac OS X x86 (64-bit) (April 8, 2019)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "toc"->{
  Cell[3660, 101, 157, 3, 85, "Chapter",ExpressionUUID->"96a9d4bd-a86b-444e-a8b6-27684914a10b",
   CellTags->"toc"]},
 "intro"->{
  Cell[10823, 297, 154, 3, 85, "Chapter",ExpressionUUID->"19210f7a-a979-4c7b-82d2-5a6dc923265f",
   CellTags->"intro"]},
 "links"->{
  Cell[17185, 446, 168, 3, 51, "Text",ExpressionUUID->"cf98a6d9-838d-4c3d-9fe7-5884dee804bc",
   CellTags->"links"]},
 "intro2"->{
  Cell[28223, 732, 184, 3, 19, "Chapter",ExpressionUUID->"27d308e8-46a4-453f-98f7-6e169704eb4c",
   CellTags->"intro2"]},
 "intro3"->{
  Cell[39140, 994, 183, 3, 85, "Chapter",ExpressionUUID->"a9c0e406-cd07-4404-bc7e-08daacda4df1",
   CellTags->"intro3"]},
 "camera"->{
  Cell[51429, 1326, 162, 3, 19, "Chapter",ExpressionUUID->"58444b99-f302-4ae2-be44-4790257b1960",
   CellTags->"camera"]},
 "deci"->{
  Cell[60039, 1567, 161, 3, 85, "Chapter",ExpressionUUID->"f6fc9c31-617a-4703-b2ac-3cc0c2ba780d",
   CellTags->"deci"]},
 "mod"->{
  Cell[77742, 2018, 157, 3, 19, "Chapter",ExpressionUUID->"3c4f77d7-200e-432f-adc4-59c7be8d2f4b",
   CellTags->"mod"]},
 "Info6773732883974-3918236"->{
  Cell[81885, 2139, 1285, 23, 92, "Print",ExpressionUUID->"f1304859-156a-4119-944c-204b4833566e",
   CellTags->"Info6773732883974-3918236"]},
 "decicode"->{
  Cell[98546, 2597, 166, 3, 85, "Chapter",ExpressionUUID->"9b507183-d280-4650-b4c3-87369bb62bef",
   CellTags->"decicode"]},
 "Info6963732883975-3918236"->{
  Cell[102166, 2707, 288, 5, 69, "Print",ExpressionUUID->"e8e19916-9709-477e-a0e2-8e6da4fe50df",
   CellTags->"Info6963732883975-3918236"]},
 "Info6983732883976-3918236"->{
  Cell[108520, 2863, 1342, 23, 19, "Print",ExpressionUUID->"08aaabac-2f37-4852-8fa5-ff0c74ac0e8b",
   CellTags->"Info6983732883976-3918236"]},
 "Info7353732883979-3918236"->{
  Cell[729312, 18759, 232, 4, 19, "Print",ExpressionUUID->"9440c20a-d6ee-4275-a566-520676b00a57",
   CellTags->"Info7353732883979-3918236"]},
 "fitim"->{
  Cell[868757, 21239, 158, 3, 27, "Chapter",ExpressionUUID->"b5098fa8-54ba-4703-9fd4-ddc8fddd5247",
   CellTags->"fitim"]},
 "work1"->{
  Cell[873736, 21380, 170, 3, 27, "Chapter",ExpressionUUID->"4397951d-acfa-43ce-98ba-f015ac6fad23",
   CellTags->"work1"]},
 "ending"->{
  Cell[880103, 21550, 154, 3, 85, "Chapter",ExpressionUUID->"85cad0ba-7b3c-4fbf-9670-cd54985bbce0",
   CellTags->"ending"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"toc", 884081, 21667},
 {"intro", 884211, 21670},
 {"links", 884344, 21673},
 {"intro2", 884475, 21676},
 {"intro3", 884610, 21679},
 {"camera", 884745, 21682},
 {"deci", 884879, 21685},
 {"mod", 885010, 21688},
 {"Info6773732883974-3918236", 885162, 21691},
 {"decicode", 885319, 21694},
 {"Info6963732883975-3918236", 885476, 21697},
 {"Info6983732883976-3918236", 885649, 21700},
 {"Info7353732883979-3918236", 885824, 21703},
 {"fitim", 885978, 21706},
 {"work1", 886114, 21709},
 {"ending", 886251, 21712}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 181, 3, 98, "Title",ExpressionUUID->"7e3262c5-9f7f-4b44-a470-af60231a8f8d"],
Cell[764, 27, 159, 3, 46, "Input",ExpressionUUID->"8d2f2eb8-9256-4415-9c6b-a431d4085b29"],
Cell[926, 32, 557, 10, 132, "Text",ExpressionUUID->"e1b469e4-6436-41c7-a4d0-253e3fa660fa"],
Cell[1486, 44, 1747, 42, 215, "Input",ExpressionUUID->"29efaa39-b990-4be4-ab45-17160ca215a7"],
Cell[3236, 88, 399, 9, 68, "Input",ExpressionUUID->"9bd065bc-c410-410e-9a91-c2c5a7ce329c"],
Cell[CellGroupData[{
Cell[3660, 101, 157, 3, 85, "Chapter",ExpressionUUID->"96a9d4bd-a86b-444e-a8b6-27684914a10b",
 CellTags->"toc"],
Cell[3820, 106, 288, 4, 97, "Text",ExpressionUUID->"81b3aa75-5e48-4a6d-ae3a-944eb0e22b37"],
Cell[CellGroupData[{
Cell[4133, 114, 3392, 81, 446, "Input",ExpressionUUID->"473e2580-5be6-4a37-bf8a-e2f5df76988e"],
Cell[7528, 197, 2847, 83, 305, "Output",ExpressionUUID->"63111185-5b1f-4420-995d-0e2737a7a079"]
}, Open  ]],
Cell[10390, 283, 396, 9, 68, "Input",ExpressionUUID->"57eb3855-8ab7-43cb-9e80-3c10aabbd1eb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10823, 297, 154, 3, 85, "Chapter",ExpressionUUID->"19210f7a-a979-4c7b-82d2-5a6dc923265f",
 CellTags->"intro"],
Cell[CellGroupData[{
Cell[11002, 304, 683, 18, 110, "Input",ExpressionUUID->"f170d4db-2f3f-469f-af04-8ecbf1c75967"],
Cell[CellGroupData[{
Cell[11710, 326, 559, 16, 26, "Print",ExpressionUUID->"576fd4ed-67db-4bd8-9249-6ced4ab1e00b"],
Cell[12272, 344, 569, 16, 26, "Print",ExpressionUUID->"c907aa72-42f0-4a6f-b961-e761a8868ad6"]
}, Open  ]]
}, Open  ]],
Cell[12868, 364, 2698, 39, 741, "Text",ExpressionUUID->"367d294c-445f-49ae-8637-d6c30262599b"],
Cell[15569, 405, 1613, 39, 341, "Input",ExpressionUUID->"7d55376d-a580-4bdc-8e1f-b8078fedd3f0"],
Cell[17185, 446, 168, 3, 51, "Text",ExpressionUUID->"cf98a6d9-838d-4c3d-9fe7-5884dee804bc",
 CellTags->"links"],
Cell[17356, 451, 1120, 33, 129, "Output",ExpressionUUID->"1be788e5-6fe8-474a-979e-468e990621dd"],
Cell[CellGroupData[{
Cell[18501, 488, 410, 10, 68, "Input",ExpressionUUID->"d7f90fec-3d60-4359-b369-4f57c062cbd0"],
Cell[18914, 500, 625, 17, 26, "Print",ExpressionUUID->"5f8fcd9a-b34b-4ae4-bc75-1fe569fb9ed6"]
}, Open  ]],
Cell[19554, 520, 502, 7, 120, "Text",ExpressionUUID->"c665ad7d-41f3-4ad5-95ae-bda29dfd5276"],
Cell[20059, 529, 612, 9, 189, "Text",ExpressionUUID->"3ea58f41-44c9-4f02-8a02-4fdb07726dff"],
Cell[CellGroupData[{
Cell[20696, 542, 186, 4, 46, "Input",ExpressionUUID->"ce4626d2-4cc0-4578-8e0b-cbc89356b6e2"],
Cell[20885, 548, 175, 3, 50, "Output",ExpressionUUID->"650a6511-7363-44f9-9e14-a1689d41ce8f"]
}, Open  ]],
Cell[21075, 554, 1640, 30, 488, "Text",ExpressionUUID->"2a8a608b-c798-4562-a7c4-ebe5bf259346"],
Cell[22718, 586, 822, 13, 19, "Text",ExpressionUUID->"0cf8570c-8f60-4db5-a703-501ac880b417"],
Cell[CellGroupData[{
Cell[23565, 603, 148, 3, 19, "Input",ExpressionUUID->"330c812f-e306-4dd1-8742-1cb5a8756e3a"],
Cell[23716, 608, 175, 3, 19, "Output",ExpressionUUID->"1821441e-0e33-4be6-a52c-c63bb8195494"]
}, Open  ]],
Cell[23906, 614, 319, 5, 19, "Text",ExpressionUUID->"07bdaac6-dc5e-4eed-9ee9-d34c94b718b7"],
Cell[CellGroupData[{
Cell[24250, 623, 127, 2, 19, "Input",ExpressionUUID->"0dc598d7-f10c-48d4-a8c3-425cb74df85d"],
Cell[24380, 627, 148, 2, 19, "Output",ExpressionUUID->"af9b348e-1884-4dbc-9172-a8956e512341"]
}, Open  ]],
Cell[24543, 632, 1253, 23, 19, "Text",ExpressionUUID->"cef27f20-e843-43ba-9ce0-f6483cc7cbee"],
Cell[CellGroupData[{
Cell[25821, 659, 143, 3, 19, "Input",ExpressionUUID->"95134ce1-41e6-46d4-9a3c-f717c82de983"],
Cell[25967, 664, 374, 10, 19, "Message",ExpressionUUID->"1ae0d014-9d49-4f7f-9cbe-d948950285e0"],
Cell[26344, 676, 379, 9, 19, "Message",ExpressionUUID->"5c9a2a89-790f-4f47-b82d-ae63e28222fc"],
Cell[26726, 687, 390, 10, 19, "Message",ExpressionUUID->"78026afc-3e89-4e74-923f-33aedb80106c"],
Cell[27119, 699, 405, 9, 19, "Message",ExpressionUUID->"68c01b37-677b-4144-8b5c-14de04ce5bb4"]
}, Open  ]],
Cell[27539, 711, 209, 3, 19, "Text",ExpressionUUID->"6ab985ff-7941-4881-88b2-d9b5fd4650c6"],
Cell[27751, 716, 435, 11, 19, "Input",ExpressionUUID->"58548d3e-a1fe-4bca-a0d4-f04a891e900f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28223, 732, 184, 3, 19, "Chapter",ExpressionUUID->"27d308e8-46a4-453f-98f7-6e169704eb4c",
 CellTags->"intro2"],
Cell[CellGroupData[{
Cell[28432, 739, 977, 26, 19, "Input",ExpressionUUID->"e6fbdeb4-5034-4c59-bc5e-467d1d197f42"],
Cell[CellGroupData[{
Cell[29434, 769, 559, 16, 19, "Print",ExpressionUUID->"2a328df8-cc95-4acf-9d35-376ff32e8723"],
Cell[29996, 787, 553, 16, 19, "Print",ExpressionUUID->"87f31aab-2553-4e31-8a6f-b0284ff9e3c5"],
Cell[30552, 805, 569, 16, 19, "Print",ExpressionUUID->"64bdbf5e-50ef-401d-9f95-51c01e73afb2"]
}, Open  ]]
}, Open  ]],
Cell[31148, 825, 5292, 89, 19, "Text",ExpressionUUID->"26a7aac9-42c0-4e85-ac46-f08b2d108bcf"],
Cell[CellGroupData[{
Cell[36465, 918, 737, 19, 131, "Input",ExpressionUUID->"21df25e2-3960-4514-9ec8-9f36dd921d01"],
Cell[37205, 939, 1254, 31, 59, "Output",ExpressionUUID->"dcb69e4d-eefa-4a7e-913a-80f2c2a52270"],
Cell[38462, 972, 197, 4, 50, "Output",ExpressionUUID->"f7c45869-86f5-4917-b10c-d8ac9e5f04f8"]
}, Open  ]],
Cell[38674, 979, 429, 10, 68, "Input",ExpressionUUID->"79eef98c-c896-46e8-879a-c1b7e5f84d8a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39140, 994, 183, 3, 85, "Chapter",ExpressionUUID->"a9c0e406-cd07-4404-bc7e-08daacda4df1",
 CellTags->"intro3"],
Cell[CellGroupData[{
Cell[39348, 1001, 985, 26, 152, "Input",ExpressionUUID->"3b8d3c4c-ab7c-4251-984b-c4f8fae9239d"],
Cell[CellGroupData[{
Cell[40358, 1031, 559, 16, 26, "Print",ExpressionUUID->"24d3963b-8516-47b3-bc30-4432f5010b88"],
Cell[40920, 1049, 569, 16, 26, "Print",ExpressionUUID->"57e4cb06-186c-4fa1-991e-5de6bf80f2bc"],
Cell[41492, 1067, 569, 16, 26, "Print",ExpressionUUID->"a8aa064c-39bd-4c61-b055-d67d20b9371f"]
}, Open  ]]
}, Open  ]],
Cell[42088, 1087, 822, 13, 235, "Text",ExpressionUUID->"0326d5f7-9ef2-47ec-8237-b7bca7a2ca8a"],
Cell[CellGroupData[{
Cell[42935, 1104, 2269, 53, 19, "Input",ExpressionUUID->"2fb3a0a7-1400-4188-97e1-85b140b1a7c0"],
Cell[45207, 1159, 2047, 48, 19, "Output",ExpressionUUID->"c99ae1bb-c3f3-4f5f-9178-33ce32c35653"],
Cell[47257, 1209, 198, 4, 19, "Output",ExpressionUUID->"f6d2b190-95d1-4866-b922-a0badb7989ba"]
}, Open  ]],
Cell[47470, 1216, 3515, 94, 19, "Text",ExpressionUUID->"bbe5752d-4025-4e84-9c60-303875aa88ec"],
Cell[50988, 1312, 404, 9, 19, "Input",ExpressionUUID->"50cba043-94b0-4f1e-af91-3157ac83d249"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51429, 1326, 162, 3, 19, "Chapter",ExpressionUUID->"58444b99-f302-4ae2-be44-4790257b1960",
 CellTags->"camera"],
Cell[CellGroupData[{
Cell[51616, 1333, 984, 26, 19, "Input",ExpressionUUID->"d0524762-b6bc-48bc-a839-d8573860494c"],
Cell[CellGroupData[{
Cell[52625, 1363, 559, 16, 19, "Print",ExpressionUUID->"2aa85f4a-23cf-44e6-97c3-90f398fdc951"],
Cell[53187, 1381, 569, 16, 19, "Print",ExpressionUUID->"a7863fce-bd6d-4299-b7dd-b84898a98fa2"],
Cell[53759, 1399, 567, 16, 19, "Print",ExpressionUUID->"b848d373-06c9-4435-93c8-ed44248309bf"]
}, Open  ]]
}, Open  ]],
Cell[54353, 1419, 1396, 29, 19, "Text",ExpressionUUID->"c32e4e7a-54d4-4fde-b20e-d7112b5628a3"],
Cell[CellGroupData[{
Cell[55774, 1452, 746, 19, 19, "Input",ExpressionUUID->"799dbbd3-9306-4797-8188-439fb91f81b8"],
Cell[56523, 1473, 1284, 32, 19, "Output",ExpressionUUID->"68b5bb19-a913-422a-b075-b50f4f45a0ac"],
Cell[57810, 1507, 198, 4, 19, "Output",ExpressionUUID->"6ebfc422-ef45-4958-8b08-eeb95b2152cc"]
}, Open  ]],
Cell[58023, 1514, 585, 8, 19, "Text",ExpressionUUID->"03841e15-e54a-4862-b365-e60b851b5c8d"],
Cell[CellGroupData[{
Cell[58633, 1526, 280, 7, 89, "Input",ExpressionUUID->"457e299c-d6cd-4fd1-93ba-fba8cb124ff2"],
Cell[58916, 1535, 250, 7, 52, "Output",ExpressionUUID->"f1458f89-9e24-4876-802f-498c32c17adb"]
}, Open  ]],
Cell[59181, 1545, 415, 6, 120, "Text",ExpressionUUID->"1a1811cf-2089-4ccf-bfa9-3bfb67afd4bc"],
Cell[59599, 1553, 403, 9, 68, "Input",ExpressionUUID->"20b90f28-492e-4bf5-bae9-f2b81b28aaf8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60039, 1567, 161, 3, 85, "Chapter",ExpressionUUID->"f6fc9c31-617a-4703-b2ac-3cc0c2ba780d",
 CellTags->"deci"],
Cell[CellGroupData[{
Cell[60225, 1574, 989, 26, 152, "Input",ExpressionUUID->"d2b663a0-30d7-4c1f-9fce-b58628b1b028"],
Cell[CellGroupData[{
Cell[61239, 1604, 559, 16, 26, "Print",ExpressionUUID->"826310ab-f120-4e2c-a6bc-2f326ee2a874"],
Cell[61801, 1622, 569, 16, 26, "Print",ExpressionUUID->"6c11e047-add0-44ec-9db3-5d49d80314d4"],
Cell[62373, 1640, 577, 16, 26, "Print",ExpressionUUID->"092931ba-b421-49f5-9977-431a396920be"]
}, Open  ]]
}, Open  ]],
Cell[62977, 1660, 440, 6, 120, "Text",ExpressionUUID->"d689d1a9-873b-495c-bcc6-135aa13a9460"],
Cell[63420, 1668, 1020, 19, 419, "Text",ExpressionUUID->"60a2e22f-8b06-4833-9eca-522164bf4c75"],
Cell[64443, 1689, 224, 3, 19, "Text",ExpressionUUID->"03b662bd-513a-4ddc-b3f3-b2fd09f9b451"],
Cell[64670, 1694, 682, 12, 19, "Text",ExpressionUUID->"3862630d-9649-4abc-9338-bda01398d32d"],
Cell[65355, 1708, 582, 14, 19, "Input",ExpressionUUID->"5d2a305d-f2da-48a1-8359-585014ebc490"],
Cell[65940, 1724, 352, 5, 19, "Text",ExpressionUUID->"38ffcf31-df78-4b5a-aca1-6044fc4ec1f2"],
Cell[CellGroupData[{
Cell[66317, 1733, 363, 8, 19, "Input",ExpressionUUID->"ae8f37d1-bbc6-4657-bb0d-a1d86fa41566"],
Cell[66683, 1743, 2610, 59, 19, "Output",ExpressionUUID->"a8cfa4b7-d64f-4d09-872b-2d37fd4f3a4d"]
}, Open  ]],
Cell[69308, 1805, 206, 3, 19, "Text",ExpressionUUID->"0beb34b8-9899-497f-a407-9aab1dc52741"],
Cell[69517, 1810, 368, 10, 19, "Input",ExpressionUUID->"1093e79d-8257-4238-8389-b265c450f9c7"],
Cell[CellGroupData[{
Cell[69910, 1824, 162, 3, 19, "Input",ExpressionUUID->"21b688a1-45b7-4cc7-a4da-ecc004415cdf"],
Cell[70075, 1829, 756, 22, 19, "Output",ExpressionUUID->"711f75df-316f-4396-8941-abd6e06e30f1"]
}, Open  ]],
Cell[70846, 1854, 147, 2, 19, "Text",ExpressionUUID->"365f8cea-1d52-4330-b2bc-2cf208e776cc"],
Cell[CellGroupData[{
Cell[71018, 1860, 372, 8, 19, "Input",ExpressionUUID->"bbfab33e-35f6-4fe6-8bb4-68bb7217d4a1"],
Cell[71393, 1870, 1552, 39, 19, "Output",ExpressionUUID->"18124e4e-4318-49ec-b01c-3d19235e2899"]
}, Open  ]],
Cell[72960, 1912, 570, 8, 19, "Text",ExpressionUUID->"86bc1f6d-4634-428b-a2f7-8b1004e1a401"],
Cell[73533, 1922, 513, 7, 19, "Text",ExpressionUUID->"d748072d-fb83-4628-84d8-3d6d085d064f"],
Cell[74049, 1931, 537, 9, 19, "Text",ExpressionUUID->"316fb411-5ffb-400c-974e-889230e7983d"],
Cell[74589, 1942, 2049, 49, 19, "Text",ExpressionUUID->"4a56aaf5-fe49-4984-b119-13cedecbb216"],
Cell[76641, 1993, 662, 9, 19, "Text",ExpressionUUID->"f65646d2-9f52-4c30-a8a8-5465cdb1db3e"],
Cell[77306, 2004, 399, 9, 19, "Input",ExpressionUUID->"a2566440-3398-4591-986a-ad39e8a5993c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77742, 2018, 157, 3, 19, "Chapter",ExpressionUUID->"3c4f77d7-200e-432f-adc4-59c7be8d2f4b",
 CellTags->"mod"],
Cell[CellGroupData[{
Cell[77924, 2025, 987, 26, 19, "Input",ExpressionUUID->"4adafa31-0342-4cdd-8ba3-aac3412da0de"],
Cell[CellGroupData[{
Cell[78936, 2055, 559, 16, 19, "Print",ExpressionUUID->"42b45433-1d82-4fed-87ea-269e1431b608"],
Cell[79498, 2073, 567, 16, 19, "Print",ExpressionUUID->"5fec46cb-c486-450a-a824-ca5904f3a307"],
Cell[80068, 2091, 575, 16, 19, "Print",ExpressionUUID->"0062d421-88df-46a7-a017-d23748dfd57c"]
}, Open  ]]
}, Open  ]],
Cell[80670, 2111, 423, 6, 19, "Text",ExpressionUUID->"23fb5982-080c-4e1e-bfd6-9951e3958d93"],
Cell[81096, 2119, 365, 5, 19, "Text",ExpressionUUID->"b68e00b0-0327-4656-a11f-99e64a8510e1"],
Cell[81464, 2126, 261, 4, 19, "Text",ExpressionUUID->"ce833934-b21c-4e35-8b5d-a48dca50b3e4"],
Cell[CellGroupData[{
Cell[81750, 2134, 132, 3, 19, "Input",ExpressionUUID->"8a4169f8-f5b4-4bbb-a6de-931c2d73d60f"],
Cell[81885, 2139, 1285, 23, 92, "Print",ExpressionUUID->"f1304859-156a-4119-944c-204b4833566e",
 CellTags->"Info6773732883974-3918236"]
}, Open  ]],
Cell[83185, 2165, 157, 2, 51, "Text",ExpressionUUID->"c90a61ac-4924-4a2d-9a93-a80f2ee0ca09"],
Cell[83345, 2169, 232, 3, 74, "Text",ExpressionUUID->"839aa269-f855-46cd-a3db-202d27c29963"],
Cell[83580, 2174, 261, 7, 74, "Text",ExpressionUUID->"b0227ea5-3121-4832-86ad-fb0ab8de5081"],
Cell[CellGroupData[{
Cell[83866, 2185, 132, 3, 46, "Input",ExpressionUUID->"2fdd3554-382e-41d8-8669-b05d3235f2f4"],
Cell[84001, 2190, 111, 2, 50, "Output",ExpressionUUID->"00f60286-34d7-434a-8470-34b113022347"]
}, Open  ]],
Cell[84127, 2195, 560, 9, 189, "Text",ExpressionUUID->"4a6a85fd-e8b9-4ded-b52e-6bd2a562d676"],
Cell[CellGroupData[{
Cell[84712, 2208, 379, 10, 68, "Input",ExpressionUUID->"40d9a09d-3c8d-4b04-bb9b-ed47b4c97367"],
Cell[85094, 2220, 175, 3, 24, "Print",ExpressionUUID->"62376483-9937-4ad2-b380-30b0a55168bb"]
}, Open  ]],
Cell[85284, 2226, 250, 4, 74, "Text",ExpressionUUID->"15198ecc-5afb-4265-be46-3d97626f829a"],
Cell[CellGroupData[{
Cell[85559, 2234, 110, 2, 46, "Input",ExpressionUUID->"58262253-0b43-49d4-b9b2-e9aba4b11626"],
Cell[85672, 2238, 111, 2, 50, "Output",ExpressionUUID->"75bd4ecf-872d-40fa-ae73-0dcce8950cf5"]
}, Open  ]],
Cell[85798, 2243, 312, 4, 19, "Text",ExpressionUUID->"fc49c149-9a24-4909-9c9c-eb70fd678fc1"],
Cell[CellGroupData[{
Cell[86135, 2251, 263, 8, 19, "Input",ExpressionUUID->"f8cfafa6-de75-48f4-9506-73bd2535eab4"],
Cell[86401, 2261, 112, 2, 19, "Output",ExpressionUUID->"8ca4103a-b00a-4cb8-b12c-0c7ea256769e"]
}, Open  ]],
Cell[86528, 2266, 105, 0, 19, "Text",ExpressionUUID->"ddd84b80-6ac7-48e6-8b9f-e6b1968171f1"],
Cell[86636, 2268, 233, 3, 67, "Program",ExpressionUUID->"06c808af-afd9-413e-9dca-213ad7b1926c"],
Cell[86872, 2273, 279, 4, 74, "Text",ExpressionUUID->"1d4156db-8e04-4211-82ea-8758c8a659ce"],
Cell[CellGroupData[{
Cell[87176, 2281, 430, 13, 46, "Input",ExpressionUUID->"a02eed41-8274-45a1-9849-a63091068e67"],
Cell[87609, 2296, 167, 4, 50, "Output",ExpressionUUID->"ba878bab-8a7a-443c-9f0a-e6c619e2acb7"]
}, Open  ]],
Cell[87791, 2303, 355, 7, 97, "Text",ExpressionUUID->"b850a529-d7ad-46a0-876c-514083ebbaba"],
Cell[88149, 2312, 406, 7, 97, "Text",ExpressionUUID->"de3e7657-c096-4d97-a762-e8750ab48092"],
Cell[CellGroupData[{
Cell[88580, 2323, 385, 12, 46, "Input",ExpressionUUID->"92cd3bac-77cf-4e46-a72c-aca392780d41"],
Cell[88968, 2337, 166, 4, 50, "Output",ExpressionUUID->"a04fdd41-5871-48b4-9769-aef8f1543747"]
}, Open  ]],
Cell[89149, 2344, 510, 7, 143, "Text",ExpressionUUID->"7969209e-249f-440d-9a00-4799c956cfb3"],
Cell[CellGroupData[{
Cell[89684, 2355, 420, 13, 46, "Input",ExpressionUUID->"17258ee3-3a24-4e71-909b-f6ba35a8eb3e"],
Cell[90107, 2370, 166, 4, 50, "Output",ExpressionUUID->"71a62a33-a497-4cfe-bfba-7b14669cd150"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90310, 2379, 110, 2, 46, "Input",ExpressionUUID->"0bcf64e6-1c0f-4d97-ae81-111bb29e4bb1"],
Cell[90423, 2383, 111, 2, 19, "Output",ExpressionUUID->"adc28a5c-3b20-4d0d-af61-9cd2b6d7fce9"]
}, Open  ]],
Cell[90549, 2388, 76, 0, 19, "Text",ExpressionUUID->"4961e4bb-f8d6-40c0-b054-8266a03d358e"],
Cell[CellGroupData[{
Cell[90650, 2392, 213, 6, 19, "Input",ExpressionUUID->"42cc9a2b-e1dc-4080-8f24-9688a999107e"],
Cell[90866, 2400, 111, 2, 19, "Output",ExpressionUUID->"d9c87be2-0b28-4244-b851-9684eff358b1"]
}, Open  ]],
Cell[90992, 2405, 88, 0, 19, "Text",ExpressionUUID->"31fc073a-dc48-41ad-a63f-1e3199e6d6f7"],
Cell[CellGroupData[{
Cell[91105, 2409, 214, 6, 19, "Input",ExpressionUUID->"fde4fae4-025c-42b5-b766-d0f3a24ec856"],
Cell[91322, 2417, 111, 2, 19, "Output",ExpressionUUID->"9910fe0b-7b3a-4fd4-ba17-d4d01666f20f"]
}, Open  ]],
Cell[91448, 2422, 231, 4, 19, "Text",ExpressionUUID->"bf8a3cc5-1f7f-43a1-a822-1a49dd85b800"],
Cell[91682, 2428, 418, 6, 19, "Text",ExpressionUUID->"e23f885d-49f8-4143-9301-b0b9dfdbd805"],
Cell[92103, 2436, 462, 14, 19, "Input",ExpressionUUID->"9d0aed51-7580-4cab-bbef-dd1e813d25e4"],
Cell[CellGroupData[{
Cell[92590, 2454, 140, 3, 19, "Input",ExpressionUUID->"77874d21-b1ee-48db-a359-f492a9e88c44"],
Cell[92733, 2459, 156, 4, 19, "Output",ExpressionUUID->"b3580087-7ab0-4480-b78e-b83579cea650"]
}, Open  ]],
Cell[92904, 2466, 292, 4, 19, "Text",ExpressionUUID->"f22da23c-bd53-48a9-8128-5669d6250bd0"],
Cell[93199, 2472, 88, 0, 19, "Program",ExpressionUUID->"419870ec-35c4-468c-b4f5-4d4b051e5951"],
Cell[93290, 2474, 191, 3, 19, "Text",ExpressionUUID->"97cd3542-5cd0-4bab-928f-b84b502506f9"],
Cell[93484, 2479, 81, 0, 19, "Text",ExpressionUUID->"e1bce7a8-50f9-4e79-ada4-702af6512634"],
Cell[93568, 2481, 76, 0, 19, "Program",ExpressionUUID->"090a2fcb-a8e3-46ce-8f6d-f4c52e620bef"],
Cell[93647, 2483, 77, 0, 19, "Text",ExpressionUUID->"5150e56e-7c0a-4a2c-af99-4d1d00ec39a7"],
Cell[93727, 2485, 90, 0, 19, "Program",ExpressionUUID->"d596a9e4-a6d3-4701-8e95-b34c08174be0"],
Cell[93820, 2487, 169, 2, 19, "Text",ExpressionUUID->"3cff6871-3811-40d3-91d4-22f66eebbc88"],
Cell[93992, 2491, 186, 5, 19, "Input",ExpressionUUID->"1b9a88da-8845-46d1-92f3-9743c610da8d"],
Cell[CellGroupData[{
Cell[94203, 2500, 137, 3, 19, "Input",ExpressionUUID->"4ba75595-51b6-43d1-97ad-ef1a5252717a"],
Cell[94343, 2505, 112, 2, 19, "Output",ExpressionUUID->"eeca15c3-6241-4ba5-bc21-e6432e7886aa"]
}, Open  ]],
Cell[94470, 2510, 201, 3, 19, "Text",ExpressionUUID->"a38b4d80-1182-4cae-ac26-580526d27225"],
Cell[94674, 2515, 101, 0, 19, "Program",ExpressionUUID->"0f234d5a-b533-47f3-8976-be260e045329"],
Cell[94778, 2517, 349, 5, 19, "Text",ExpressionUUID->"3f20c280-9182-4f3e-9c5b-6a69ea9cf5d4"],
Cell[95130, 2524, 112, 0, 19, "Program",ExpressionUUID->"ec38805d-10cd-4c90-aeca-370470c2d8db"],
Cell[95245, 2526, 368, 5, 19, "Text",ExpressionUUID->"68659b82-bc9f-4c94-8be5-a04ce5edb287"],
Cell[95616, 2533, 122, 0, 50, "Program",ExpressionUUID->"7471452e-8758-49e2-953e-1a37329e9682"],
Cell[95741, 2535, 820, 13, 212, "Text",ExpressionUUID->"5912ab1d-558c-43dc-ac05-82fa6fe5ee5f"],
Cell[96564, 2550, 147, 2, 50, "Program",ExpressionUUID->"a6b5ff32-af7d-4737-87b3-659ec90c4c4a"],
Cell[96714, 2554, 264, 4, 74, "Text",ExpressionUUID->"2388f84d-02c1-4a97-a746-cc729060dd8f"],
Cell[96981, 2560, 161, 3, 50, "Program",ExpressionUUID->"952b5fd3-7d6c-4264-8f74-9e079eed71f2"],
Cell[97145, 2565, 513, 7, 120, "Text",ExpressionUUID->"6435367e-5d85-4560-a802-fc0becbae310"],
Cell[97661, 2574, 437, 7, 120, "Text",ExpressionUUID->"517cf99a-304c-4205-be2c-00ae88e1cfa4"],
Cell[98101, 2583, 408, 9, 68, "Input",ExpressionUUID->"a2df2f77-df3b-405d-8718-92007b39c839"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98546, 2597, 166, 3, 85, "Chapter",ExpressionUUID->"9b507183-d280-4650-b4c3-87369bb62bef",
 CellTags->"decicode"],
Cell[CellGroupData[{
Cell[98737, 2604, 976, 26, 19, "Input",ExpressionUUID->"2f1658d1-6d0d-4375-9b01-0a674272ecbf"],
Cell[CellGroupData[{
Cell[99738, 2634, 559, 16, 19, "Print",ExpressionUUID->"7efb22bb-a90e-4a82-8d7d-c5a04d23294b"],
Cell[100300, 2652, 559, 16, 19, "Print",ExpressionUUID->"ae5b2ed4-6292-4e3b-8cd2-734260a6bfff"],
Cell[100862, 2670, 561, 16, 19, "Print",ExpressionUUID->"2e4efd75-e0d2-4a02-996d-c0ec7897cd43"]
}, Open  ]]
}, Open  ]],
Cell[101450, 2690, 547, 8, 143, "Text",ExpressionUUID->"ce076bc9-267b-40f2-873f-cc67f34507d5"],
Cell[CellGroupData[{
Cell[102022, 2702, 141, 3, 46, "Input",ExpressionUUID->"2c76f4f2-5bd8-4ca1-a993-d5dfb5eb846d"],
Cell[102166, 2707, 288, 5, 69, "Print",ExpressionUUID->"e8e19916-9709-477e-a0e2-8e6da4fe50df",
 CellTags->"Info6963732883975-3918236"]
}, Open  ]],
Cell[CellGroupData[{
Cell[102491, 2717, 2119, 54, 320, "Input",ExpressionUUID->"85a21294-f5da-4552-afb7-95c7b717bdf2"],
Cell[104613, 2773, 2931, 63, 442, "Output",ExpressionUUID->"48bcd761-187e-494e-a206-04c977b855b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107581, 2841, 79, 0, 19, "Section",ExpressionUUID->"c6012fc3-6878-4f54-a815-b07a4549e5d2"],
Cell[107663, 2843, 697, 11, 19, "Text",ExpressionUUID->"1b809259-61f8-4e4d-9e47-f1debe345bea"],
Cell[CellGroupData[{
Cell[108385, 2858, 132, 3, 19, "Input",ExpressionUUID->"f07ce19e-680b-4082-825b-25c5474a423d"],
Cell[108520, 2863, 1342, 23, 19, "Print",ExpressionUUID->"08aaabac-2f37-4852-8fa5-ff0c74ac0e8b",
 CellTags->"Info6983732883976-3918236"]
}, Open  ]],
Cell[109877, 2889, 125, 0, 19, "Text",ExpressionUUID->"7c4b07be-b56b-4e08-bf41-94d63306ae23"],
Cell[110005, 2891, 96, 0, 19, "Program",ExpressionUUID->"9a679cf4-56bc-4301-8ec8-efa47ff22c94"],
Cell[110104, 2893, 376, 5, 19, "Text",ExpressionUUID->"05dabb15-4b78-4e9b-8aca-6a8fc52cb552"],
Cell[110483, 2900, 106, 0, 19, "Program",ExpressionUUID->"3141dcbc-81f7-4b9d-91ae-96537b2d915d"],
Cell[110592, 2902, 165, 3, 19, "Text",ExpressionUUID->"f1a7f0f0-b8ad-491f-963b-6b98d2a1e2e1"],
Cell[110760, 2907, 103, 0, 19, "Text",ExpressionUUID->"15cb2947-4740-4bec-93b1-a5ad71c3bcae"],
Cell[CellGroupData[{
Cell[110888, 2911, 197, 4, 19, "Input",ExpressionUUID->"d6510856-09e4-4d5b-aa24-9cd9dfa72309"],
Cell[111088, 2917, 26436, 438, 19, "Output",ExpressionUUID->"f49cb1da-a057-4f2d-93b2-97ea96d852e5"]
}, Open  ]],
Cell[137539, 3358, 183, 3, 19, "Text",ExpressionUUID->"26b99415-b235-4558-b517-894b52991431"],
Cell[CellGroupData[{
Cell[137747, 3365, 236, 6, 19, "Input",ExpressionUUID->"528f3836-d02e-46cc-9228-b7460923fdf3"],
Cell[137986, 3373, 7422, 199, 19, "Output",ExpressionUUID->"2c7a84d0-82fe-4476-8361-63774b4ceafd"]
}, Open  ]],
Cell[145423, 3575, 387, 8, 19, "Text",ExpressionUUID->"bb4c2e85-c7fe-4870-958b-448c004380ee"],
Cell[CellGroupData[{
Cell[145835, 3587, 99, 0, 19, "Subsection",ExpressionUUID->"65600bba-2dda-4711-bc58-7bb313647021"],
Cell[145937, 3589, 248, 4, 19, "Text",ExpressionUUID->"f5a853cc-723e-4e96-81b2-a355a930d8b0"],
Cell[146188, 3595, 107, 0, 19, "Program",ExpressionUUID->"854a7cf5-8e98-494e-8a58-cd7f4533dbd4"],
Cell[146298, 3597, 265, 4, 19, "Text",ExpressionUUID->"83eaae71-c94c-409b-822c-11c8d5f81ed6"],
Cell[146566, 3603, 112, 0, 19, "Program",ExpressionUUID->"c937d424-582c-44c3-810b-933b748c1740"],
Cell[146681, 3605, 461, 6, 19, "Text",ExpressionUUID->"7edb909c-1cd3-41a9-bf11-2371120b5e00"],
Cell[147145, 3613, 76, 0, 19, "Program",ExpressionUUID->"630dbe0f-53e4-43ce-abc9-a3bf86f20878"],
Cell[147224, 3615, 259, 4, 19, "Text",ExpressionUUID->"a4d6e6c4-a0ff-4f4d-812e-4aa3b820d32a"],
Cell[147486, 3621, 87, 0, 19, "Program",ExpressionUUID->"375e9a03-41f9-41d6-abbe-ca451bcda388"],
Cell[147576, 3623, 146, 2, 19, "Text",ExpressionUUID->"d8c36dfc-dba7-44f6-ab8d-52276a6a8763"],
Cell[CellGroupData[{
Cell[147747, 3629, 217, 4, 19, "Input",ExpressionUUID->"a68558f4-61cb-4dfc-8ed5-8214747f132c"],
Cell[147967, 3635, 149, 2, 19, "Output",ExpressionUUID->"80babdf9-8546-49b7-b23e-4c4ddfa5dfcc"]
}, Open  ]],
Cell[148131, 3640, 88, 0, 19, "Text",ExpressionUUID->"99aa47b5-efb9-49f0-a98c-823d675929a0"],
Cell[CellGroupData[{
Cell[148244, 3644, 255, 6, 46, "Input",ExpressionUUID->"3eb7d726-5421-4feb-9052-9ec4f320e7dc"],
Cell[148502, 3652, 149, 2, 50, "Output",ExpressionUUID->"0dff5a01-afca-4884-9402-5aed81d53c06"]
}, Open  ]],
Cell[148666, 3657, 327, 5, 97, "Text",ExpressionUUID->"3fb82b47-3be4-4f37-9ee9-3da98621b3f2"],
Cell[CellGroupData[{
Cell[149018, 3666, 164, 3, 46, "Input",ExpressionUUID->"60f4da74-156b-43b1-ac00-f271dc75933c"],
Cell[149185, 3671, 184, 3, 50, "Output",ExpressionUUID->"656b1e78-e2d5-4481-902d-b59dac384844"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[149418, 3680, 127, 0, 54, "Subsection",ExpressionUUID->"62fb76ca-26f1-4f55-83bd-c5436dcefb52"],
Cell[149548, 3682, 1638, 31, 468, "Text",ExpressionUUID->"9ae52093-8247-4704-afee-e8b80a57964d"],
Cell[151189, 3715, 333, 10, 46, "Input",ExpressionUUID->"28c83ebc-42b6-4494-89a0-167619f3746a"],
Cell[151525, 3727, 363, 11, 46, "Input",ExpressionUUID->"f965aa4a-c8c2-4ec9-bf70-50c8682878d0"],
Cell[151891, 3740, 315, 10, 46, "Input",ExpressionUUID->"77f0f09c-e42c-41b7-bd70-4a8c6c571be8"],
Cell[CellGroupData[{
Cell[152231, 3754, 507, 13, 68, "Input",ExpressionUUID->"6074535e-a3da-4116-a023-a0974beeeff8"],
Cell[152741, 3769, 449779, 12059, 99, "Output",ExpressionUUID->"9ad327f2-0944-472e-87f1-2e4936220fbd"]
}, Open  ]],
Cell[602535, 15831, 777, 10, 212, "Text",ExpressionUUID->"0a83e3b7-5462-4104-bc38-f4056a8cc4e6"],
Cell[603315, 15843, 677, 10, 235, "Text",ExpressionUUID->"8435920d-b28c-40e8-ab40-8832e5be1987"],
Cell[CellGroupData[{
Cell[604017, 15857, 427, 13, 19, "Input",ExpressionUUID->"962825b3-de2e-4d73-a5ae-dce7ed321922"],
Cell[604447, 15872, 40221, 1092, 19, "Output",ExpressionUUID->"b40dd363-d686-422e-9cd0-ebaef895e040"]
}, Open  ]],
Cell[644683, 16967, 888, 24, 19, "Text",ExpressionUUID->"0df18ac1-703e-4ad2-a045-77978cb42740"],
Cell[CellGroupData[{
Cell[645596, 16995, 425, 13, 19, "Input",ExpressionUUID->"a67b9d6a-aad0-4a1d-a3a2-6d236be67550"],
Cell[646024, 17010, 1106, 24, 19, "Output",ExpressionUUID->"327699d8-bcc3-4628-821e-6f51b6a3aa7d"]
}, Open  ]],
Cell[647145, 17037, 216, 3, 19, "Text",ExpressionUUID->"c906933a-4680-4262-a2ee-5bf4bc0b8618"]
}, Open  ]],
Cell[CellGroupData[{
Cell[647398, 17045, 161, 2, 19, "Subsection",ExpressionUUID->"a17166f7-a9d9-4f0b-aa4a-79d7b8a964ca"],
Cell[647562, 17049, 331, 5, 19, "Text",ExpressionUUID->"4637a3ac-6848-48f8-af40-08057d8ebaab"],
Cell[647896, 17056, 142, 2, 19, "Text",ExpressionUUID->"162359fd-2b5b-4742-ba5e-2bfc2a2a3ec6"],
Cell[648041, 17060, 125, 0, 19, "Program",ExpressionUUID->"4d7ac9a6-4a4e-42a7-96bc-5177c4e275aa"],
Cell[648169, 17062, 113, 0, 19, "Text",ExpressionUUID->"4fe0a6e4-1925-4836-95e1-b13dc56b5016"],
Cell[648285, 17064, 94, 0, 19, "Program",ExpressionUUID->"78ea8839-2e96-4cce-a28d-f30c70685106"],
Cell[648382, 17066, 264, 4, 19, "Text",ExpressionUUID->"c42e2c5d-722c-4ed4-ae5b-525d8c0acf28"],
Cell[CellGroupData[{
Cell[648671, 17074, 413, 11, 19, "Input",ExpressionUUID->"952375f1-40ad-44dd-9759-54cede7c70d9"],
Cell[649087, 17087, 111, 2, 19, "Output",ExpressionUUID->"fac0ee9d-4b10-4c40-a061-79eea2eb7eaa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[649235, 17094, 483, 14, 19, "Input",ExpressionUUID->"e34b4b8d-0391-4f8f-871f-5d7b570e3a05"],
Cell[649721, 17110, 111, 2, 19, "Output",ExpressionUUID->"a7757a6e-b923-42a4-95b9-1879d3c9818e"]
}, Open  ]],
Cell[649847, 17115, 142, 2, 19, "Text",ExpressionUUID->"27c3c5e8-7af0-4d4d-ae28-e09ad08cced2"],
Cell[649992, 17119, 82, 0, 19, "Program",ExpressionUUID->"fc8bba12-0976-46ae-9a07-f4f31da2343b"],
Cell[650077, 17121, 92, 0, 19, "Text",ExpressionUUID->"d73ad6ed-7eb8-45be-9fa7-30cd3974ffac"],
Cell[650172, 17123, 83, 0, 19, "Program",ExpressionUUID->"151a0d8a-55a3-49b6-adc3-7c39c5e92d1c"],
Cell[650258, 17125, 150, 2, 19, "Text",ExpressionUUID->"98d71b2a-65e3-4477-9f4a-eec54ef3e1d6"],
Cell[650411, 17129, 77, 0, 19, "Program",ExpressionUUID->"4b98213a-8b76-4e76-bf4d-a9e59001e5af"],
Cell[650491, 17131, 119, 0, 19, "Text",ExpressionUUID->"6baa58aa-5220-4c47-afc9-f6e943962046"],
Cell[650613, 17133, 424, 7, 19, "Text",ExpressionUUID->"7c2717ef-ae07-4db7-a513-b7096d618a20"],
Cell[CellGroupData[{
Cell[651062, 17144, 217, 6, 19, "Input",ExpressionUUID->"efc75e52-a592-4986-9b77-b0ff919ca74e"],
Cell[651282, 17152, 111, 2, 19, "Output",ExpressionUUID->"6686b6ee-8b9a-4ffe-b6ec-9dfcb00d788a"]
}, Open  ]],
Cell[651408, 17157, 480, 7, 19, "Text",ExpressionUUID->"18f9373b-3598-4930-ac0a-fa9f8e80cf72"],
Cell[CellGroupData[{
Cell[651913, 17168, 242, 7, 19, "Input",ExpressionUUID->"596a7d90-f58e-49b7-9c5e-30722f020e7f"],
Cell[652158, 17177, 156, 4, 19, "Output",ExpressionUUID->"9b8c84f5-be21-4acf-a6ee-53aec8116b7b"]
}, Open  ]],
Cell[652329, 17184, 219, 3, 19, "Text",ExpressionUUID->"0493f2ba-0940-40bd-b9e6-768eaed64a95"],
Cell[652551, 17189, 244, 8, 19, "Input",ExpressionUUID->"c91384af-f935-44df-ad5c-c4442cffe2e9"],
Cell[652798, 17199, 178, 3, 19, "Text",ExpressionUUID->"e65d0c5e-16c0-4457-97d8-44560f785acc"],
Cell[CellGroupData[{
Cell[653001, 17206, 320, 10, 19, "Input",ExpressionUUID->"e28d9277-e5b8-4f5c-9d0d-4108fafd8fa5"],
Cell[653324, 17218, 698, 20, 19, "Output",ExpressionUUID->"f890ba8a-e0ac-4f98-8090-d57986dd6e6f"]
}, Open  ]],
Cell[654037, 17241, 492, 7, 19, "Text",ExpressionUUID->"586246eb-7b66-4338-a3f7-04403a6555b2"],
Cell[CellGroupData[{
Cell[654554, 17252, 189, 5, 19, "Input",ExpressionUUID->"283623b6-5932-4205-bf10-77f9061c3433"],
Cell[654746, 17259, 112, 2, 19, "Output",ExpressionUUID->"ebdcc42f-d9b2-4bc4-86c7-e87a18fa2962"]
}, Open  ]],
Cell[654873, 17264, 115, 0, 19, "Text",ExpressionUUID->"e396161d-7a52-46d8-912a-d832525616cf"],
Cell[CellGroupData[{
Cell[655013, 17268, 189, 5, 19, "Input",ExpressionUUID->"9f196d66-16af-408d-9bd7-e351d2fdd6c2"],
Cell[655205, 17275, 112, 2, 19, "Output",ExpressionUUID->"3b59084a-7bd1-4e81-8bca-36ad5e39800c"]
}, Open  ]],
Cell[655332, 17280, 96, 0, 19, "Text",ExpressionUUID->"31f928d9-dfd1-4b7a-94b6-8a2c939f497a"],
Cell[CellGroupData[{
Cell[655453, 17284, 147, 3, 19, "Input",ExpressionUUID->"583629c7-0fa1-4704-90d9-1388d2b8e85c"],
Cell[655603, 17289, 698, 20, 19, "Output",ExpressionUUID->"5e04e3d2-82e6-4d5b-b899-1c75f51f66d2"]
}, Open  ]],
Cell[656316, 17312, 300, 4, 19, "Text",ExpressionUUID->"0fb902dc-f718-4531-bef1-9c2bd032677a"],
Cell[CellGroupData[{
Cell[656641, 17320, 190, 5, 19, "Input",ExpressionUUID->"ed9feea1-31ee-4bda-aa26-e5d620430b04"],
Cell[656834, 17327, 169, 4, 19, "Output",ExpressionUUID->"40cca1d6-ef98-42fd-88ce-83c4568932d3"]
}, Open  ]],
Cell[657018, 17334, 93, 0, 19, "Text",ExpressionUUID->"3bdec2a5-d23c-43d0-80bc-ad43a31c09dc"],
Cell[CellGroupData[{
Cell[657136, 17338, 191, 5, 19, "Input",ExpressionUUID->"4d77c0b5-fa33-4fe8-a2ae-79c1ea5415e2"],
Cell[657330, 17345, 169, 4, 19, "Output",ExpressionUUID->"cfee664f-6997-4f50-8b44-150ac2b956b2"]
}, Open  ]],
Cell[657514, 17352, 94, 0, 19, "Text",ExpressionUUID->"fd0093a0-76b5-414f-8546-8e643ff9c588"],
Cell[CellGroupData[{
Cell[657633, 17356, 215, 6, 19, "Input",ExpressionUUID->"b0d15d27-a15b-421c-a7c8-874badaa2530"],
Cell[657851, 17364, 169, 4, 19, "Output",ExpressionUUID->"b741eb1b-88b0-4442-bb5e-a6822a2fe58c"]
}, Open  ]],
Cell[658035, 17371, 144, 2, 19, "Text",ExpressionUUID->"c410f479-5970-4cbb-b8ba-b674918dac25"],
Cell[CellGroupData[{
Cell[658204, 17377, 215, 6, 19, "Input",ExpressionUUID->"54202c1d-05dd-4de7-b007-1ebf7e4cd85b"],
Cell[658422, 17385, 158, 4, 19, "Output",ExpressionUUID->"815fcc3e-65d4-4a2d-8682-3f6dcff823e4"]
}, Open  ]],
Cell[658595, 17392, 127, 0, 19, "Text",ExpressionUUID->"a4191605-e0c4-46f9-89d8-89052d5fe70b"],
Cell[CellGroupData[{
Cell[658747, 17396, 225, 6, 19, "Input",ExpressionUUID->"ab738b43-e936-40a5-aa8a-85074770fe83"],
Cell[658975, 17404, 726, 22, 19, "Output",ExpressionUUID->"0c99dabb-014b-413b-b0ec-3c891e4c27fe"]
}, Open  ]],
Cell[659716, 17429, 74, 0, 19, "Text",ExpressionUUID->"e58cbc4c-3aba-4bd3-99e4-df4743690583"],
Cell[CellGroupData[{
Cell[659815, 17433, 226, 6, 19, "Input",ExpressionUUID->"814ecbb0-8551-47fd-af41-cc8e2f163432"],
Cell[660044, 17441, 726, 22, 19, "Output",ExpressionUUID->"25f41c8e-873d-4c0d-8887-7848f8eaf46a"]
}, Open  ]],
Cell[660785, 17466, 74, 0, 19, "Text",ExpressionUUID->"a791d087-b190-45a7-b674-b3caffc9891d"],
Cell[CellGroupData[{
Cell[660884, 17470, 254, 8, 19, "Input",ExpressionUUID->"662be444-7b67-4de9-bae5-ec7478a7dac4"],
Cell[661141, 17480, 726, 22, 19, "Output",ExpressionUUID->"235cfee8-afef-4405-b139-4c39d2f89555"]
}, Open  ]],
Cell[661882, 17505, 344, 6, 19, "Text",ExpressionUUID->"011a1b0f-ef0b-49ca-8e44-8681f17e01de"],
Cell[662229, 17513, 87, 0, 19, "Text",ExpressionUUID->"8182bec4-5028-4c28-ab2b-b3c27931d593"],
Cell[CellGroupData[{
Cell[662341, 17517, 283, 9, 19, "Input",ExpressionUUID->"c5858426-ccca-428d-81a0-b95f0f8372cd"],
Cell[662627, 17528, 254, 8, 19, "Output",ExpressionUUID->"8d66ebfa-8998-4087-bc71-550d6be8450e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[662918, 17541, 144, 3, 19, "Input",ExpressionUUID->"f1de9219-5b9a-4ff6-82cf-861ec0f838a7"],
Cell[663065, 17546, 682, 20, 19, "Output",ExpressionUUID->"d05e5aaa-dca5-483e-99a3-bd5258e220a4"]
}, Open  ]],
Cell[663762, 17569, 183, 3, 19, "Text",ExpressionUUID->"c2bcf606-b9b7-43b1-bda1-47ae8345703f"],
Cell[CellGroupData[{
Cell[663970, 17576, 167, 4, 19, "Input",ExpressionUUID->"6aa10e09-bddc-4816-8b64-1a9d059ecc96"],
Cell[664140, 17582, 682, 20, 19, "Output",ExpressionUUID->"aeed4a78-d6f1-4d6d-8574-f183255864e3"]
}, Open  ]],
Cell[664837, 17605, 100, 0, 19, "Text",ExpressionUUID->"45025395-10ec-40ef-bb20-97bcd7060057"],
Cell[CellGroupData[{
Cell[664962, 17609, 240, 8, 19, "Input",ExpressionUUID->"647add77-dd91-40f5-8756-cfb2a6373ffa"],
Cell[665205, 17619, 682, 20, 19, "Output",ExpressionUUID->"28cc0c03-a376-4a75-ba70-33abcbd7b8a0"]
}, Open  ]],
Cell[665902, 17642, 186, 3, 19, "Text",ExpressionUUID->"91af0f3c-fb35-47b7-8026-82cbb62ed13c"],
Cell[CellGroupData[{
Cell[666113, 17649, 167, 4, 19, "Input",ExpressionUUID->"34ecfb49-f76a-458b-918c-3d5cad27da0b"],
Cell[666283, 17655, 801, 24, 19, "Output",ExpressionUUID->"60dfc500-d734-493c-8f15-5842ed63f879"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[667133, 17685, 120, 0, 19, "Subsection",ExpressionUUID->"da5468ba-9a01-4ff0-97af-7118903906b2"],
Cell[667256, 17687, 275, 4, 19, "Text",ExpressionUUID->"80820944-3be5-4456-aff0-f418150e2c88"],
Cell[667534, 17693, 89, 0, 19, "Program",ExpressionUUID->"99d242fd-dff2-4559-a365-3ab0b0b674fc"],
Cell[667626, 17695, 74, 0, 19, "Text",ExpressionUUID->"1328a864-5546-4a0b-b5f0-0744db3f3a13"],
Cell[667703, 17697, 87, 0, 19, "Program",ExpressionUUID->"25daf22f-a1d8-4dfd-a294-98cfdf4e204d"],
Cell[667793, 17699, 179, 3, 19, "Text",ExpressionUUID->"97b18093-f2e6-47b3-9a65-42f607e98e79"],
Cell[667975, 17704, 333, 5, 19, "Text",ExpressionUUID->"3312a74d-e27e-4e63-8390-7152cdcfd0da"],
Cell[668311, 17711, 387, 11, 19, "Input",ExpressionUUID->"a68ee8e8-7fb1-43db-9889-eb47186f60f9"],
Cell[668701, 17724, 259, 4, 19, "Text",ExpressionUUID->"c25da662-13b5-4947-a773-3a907e747e30"],
Cell[CellGroupData[{
Cell[668985, 17732, 218, 5, 19, "Input",ExpressionUUID->"3183c3e5-d538-4cfd-a3a4-9cac633769e0"],
Cell[669206, 17739, 32594, 543, 19, "Output",ExpressionUUID->"acd7029e-bdf3-4a22-bf56-fe4ec5419aa2"]
}, Open  ]],
Cell[701815, 18285, 355, 5, 19, "Text",ExpressionUUID->"3819b8a9-e204-4968-99bf-218974692e61"],
Cell[CellGroupData[{
Cell[702195, 18294, 197, 4, 19, "Input",ExpressionUUID->"5e336eb0-2029-4372-9d46-7b8dcab3357a"],
Cell[702395, 18300, 26436, 438, 19, "Output",ExpressionUUID->"3a4c3d37-6294-49a7-9976-d64583a0686f"]
}, Open  ]],
Cell[728846, 18741, 163, 3, 19, "Text",ExpressionUUID->"e3a4663a-4520-4d0d-9648-9dc3c46c979b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[729058, 18750, 87, 0, 19, "Section",ExpressionUUID->"f3df1930-f061-485f-a1c7-bb5afd4ee5f7"],
Cell[CellGroupData[{
Cell[729170, 18754, 139, 3, 19, "Input",ExpressionUUID->"3054946f-4b2f-436b-b5f1-5c54a5c5b4a4"],
Cell[729312, 18759, 232, 4, 19, "Print",ExpressionUUID->"9440c20a-d6ee-4275-a566-520676b00a57",
 CellTags->"Info7353732883979-3918236"]
}, Open  ]],
Cell[729559, 18766, 2618, 41, 19, "Text",ExpressionUUID->"9f0c40d5-7c96-4b92-88dd-b2cc6e98abc0"],
Cell[CellGroupData[{
Cell[732202, 18811, 435, 11, 19, "Input",ExpressionUUID->"65273bfc-3ab6-42f5-85fc-7737d0a12443"],
Cell[732640, 18824, 217, 5, 19, "Output",ExpressionUUID->"32673e78-00e4-45b1-ad2d-d30f5f4f3d0e"],
Cell[732860, 18831, 231, 6, 19, "Output",ExpressionUUID->"b58235ce-3bbe-489d-b1d0-ff2fe8f1e5a4"]
}, Open  ]],
Cell[733106, 18840, 3168, 43, 19, "Text",ExpressionUUID->"cc98be94-ecfe-4b48-8250-7c25061941fc"],
Cell[736277, 18885, 203, 3, 19, "Text",ExpressionUUID->"7b15bb7f-b627-4ea2-87ab-686d2c6bf1bd"],
Cell[736483, 18890, 6835, 156, 19, "Input",ExpressionUUID->"c4f8a723-144f-4181-a14a-24428b558de8",
 Evaluatable->False],
Cell[743321, 19048, 248, 4, 19, "Text",ExpressionUUID->"9901ae9e-ebc0-4af5-8e5c-db569bfb2f8c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[743606, 19057, 92, 0, 19, "Section",ExpressionUUID->"daf30052-a7d4-4007-af91-f1dbb84ddc74"],
Cell[743701, 19059, 556, 8, 19, "Text",ExpressionUUID->"e78f6f9d-632a-445c-a0f2-68c2fa8ccf74"]
}, Open  ]],
Cell[CellGroupData[{
Cell[744294, 19072, 86, 0, 19, "Section",ExpressionUUID->"2c2d5fb2-f3af-41f5-be18-01acca97c5d6"],
Cell[744383, 19074, 488, 10, 19, "Text",ExpressionUUID->"999a598a-6497-40e4-92a2-6eb6cf37d8f4"],
Cell[744874, 19086, 1424, 42, 19, "Input",ExpressionUUID->"57b06774-08a4-47d9-9709-e2247c8dfe0d"],
Cell[746301, 19130, 272, 6, 19, "Text",ExpressionUUID->"01116ca3-c2f1-44c9-9291-c47e43127fd3"],
Cell[746576, 19138, 388, 11, 19, "Input",ExpressionUUID->"da52314b-4d8e-4bf8-b4a7-4175f012f990"],
Cell[746967, 19151, 195, 5, 19, "Input",ExpressionUUID->"8ae3facd-a671-4614-a9d2-e55f98bed3be"],
Cell[747165, 19158, 301, 4, 19, "Text",ExpressionUUID->"3e7e6b73-3421-4dc3-9d89-35d6db327930"],
Cell[CellGroupData[{
Cell[747491, 19166, 223, 5, 19, "Input",ExpressionUUID->"b35ee3c2-63d4-49be-b7cf-25ecf86663d8"],
Cell[747717, 19173, 39025, 648, 19, "Output",ExpressionUUID->"bf91b383-9533-4b4f-9ba4-8f0b81bdf3b8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[786779, 19826, 217, 5, 19, "Input",ExpressionUUID->"f6dd8d99-a588-45f7-8525-3733d2e0ae60"],
Cell[786999, 19833, 2277, 46, 19, "Output",ExpressionUUID->"82e4b631-b80a-4311-82f4-9cc2060f9210"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[789325, 19885, 86, 0, 19, "Section",ExpressionUUID->"d50a7f2d-04bb-4ede-b6af-d46ade825dd8"],
Cell[789414, 19887, 855, 15, 19, "Text",ExpressionUUID->"0cd47980-ab73-439f-adda-6e473c856bb3"],
Cell[790272, 19904, 291, 8, 19, "Input",ExpressionUUID->"d8695760-9cb2-41bf-9acd-4225f29a561f"],
Cell[790566, 19914, 145, 2, 19, "Text",ExpressionUUID->"9454f54b-e1c1-4f8e-bfe1-6f4521ae083b"],
Cell[CellGroupData[{
Cell[790736, 19920, 223, 5, 19, "Input",ExpressionUUID->"c7a1707c-563e-4238-bee3-0a521840ac3b"],
Cell[790962, 19927, 39025, 648, 19, "Output",ExpressionUUID->"2007b58a-012f-4f0a-b40e-072e6f7487d9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[830024, 20580, 225, 5, 19, "Input",ExpressionUUID->"eedc17f4-3cb5-4414-b129-a53f7f574eee"],
Cell[830252, 20587, 37752, 627, 19, "Output",ExpressionUUID->"cf51d6be-b558-4390-ad5b-a01cd5196177"]
}, Open  ]],
Cell[868019, 21217, 90, 0, 19, "Text",ExpressionUUID->"059b4980-a54f-47a3-aeef-24ad94075258"],
Cell[868112, 21219, 193, 3, 19, "Text",ExpressionUUID->"6c25b24a-8f2b-4f28-9363-68e8e47d9382"],
Cell[868308, 21224, 400, 9, 19, "Input",ExpressionUUID->"7300c21d-98b8-4239-8480-e57961de0e1f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[868757, 21239, 158, 3, 27, "Chapter",ExpressionUUID->"b5098fa8-54ba-4703-9fd4-ddc8fddd5247",
 CellTags->"fitim"],
Cell[CellGroupData[{
Cell[868940, 21246, 997, 26, 19, "Input",ExpressionUUID->"b156f7e6-f68c-46cc-a515-f45841d84a11"],
Cell[CellGroupData[{
Cell[869962, 21276, 559, 16, 19, "Print",ExpressionUUID->"c2d0de70-f32b-43b6-adc3-bf51ab6450eb"],
Cell[870524, 21294, 577, 16, 19, "Print",ExpressionUUID->"1ba68b6c-1bab-4ea7-9156-00ade20d4400"],
Cell[871104, 21312, 585, 16, 19, "Print",ExpressionUUID->"0ffe7f17-741d-4744-9672-81005e3a7f26"]
}, Open  ]]
}, Open  ]],
Cell[871716, 21332, 372, 5, 19, "Text",ExpressionUUID->"f57c07b3-efb8-4574-9882-32a3baee9316"],
Cell[872091, 21339, 328, 5, 19, "Text",ExpressionUUID->"7a1569b1-b699-40b5-ad88-1636306f9a4e"],
Cell[872422, 21346, 279, 4, 19, "Program",ExpressionUUID->"61ef7a54-b815-44f2-9217-0c845f01d6c2"],
Cell[872704, 21352, 282, 6, 19, "Text",ExpressionUUID->"3b0c92ae-4314-4823-a9f2-24b7d3ea7c19"],
Cell[872989, 21360, 295, 4, 19, "Text",ExpressionUUID->"a012d824-c368-475b-b41b-97bf0aa7fae1"],
Cell[873287, 21366, 412, 9, 19, "Input",ExpressionUUID->"fb1c8dba-fc14-4010-b345-778ccff4678c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[873736, 21380, 170, 3, 27, "Chapter",ExpressionUUID->"4397951d-acfa-43ce-98ba-f015ac6fad23",
 CellTags->"work1"],
Cell[CellGroupData[{
Cell[873931, 21387, 954, 26, 19, "Input",ExpressionUUID->"58e243ff-7979-4558-9528-dbb227bd80a2"],
Cell[CellGroupData[{
Cell[874910, 21417, 559, 16, 19, "Print",ExpressionUUID->"a2b1f7b4-7b10-4462-ae0a-e68b6dc38521"],
Cell[875472, 21435, 561, 16, 19, "Print",ExpressionUUID->"97a5e601-981a-47f5-b886-7a8c2792e558"],
Cell[876036, 21453, 519, 16, 26, "Print",ExpressionUUID->"0adbd9dc-c58c-46a3-9f96-3d83514be465"]
}, Open  ]]
}, Open  ]],
Cell[876582, 21473, 305, 4, 97, "Text",ExpressionUUID->"338108f6-1751-4350-a91d-03523be7d85d"],
Cell[876890, 21479, 165, 4, 97, "Text",ExpressionUUID->"d9b7f641-7264-48a0-ad04-682572cbc7aa"],
Cell[877058, 21485, 1033, 17, 327, "Text",ExpressionUUID->"89136ede-18ec-4cda-bde5-582f6108823e"],
Cell[878094, 21504, 297, 4, 74, "Text",ExpressionUUID->"a746a3d5-86e8-4053-9ebf-0acc413f1f91"],
Cell[878394, 21510, 134, 0, 50, "Program",ExpressionUUID->"461aa75d-0312-4359-9826-29542723b95b"],
Cell[878531, 21512, 255, 4, 74, "Text",ExpressionUUID->"a467a842-044b-4abf-bf27-ed63dc241d9d"],
Cell[878789, 21518, 395, 7, 166, "Text",ExpressionUUID->"37053555-10f8-475a-97ee-9f08497654fc"],
Cell[879187, 21527, 480, 7, 120, "Text",ExpressionUUID->"17947d82-a42f-4800-ba39-501f50340cad"],
Cell[879670, 21536, 396, 9, 68, "Input",ExpressionUUID->"cc00352c-463a-4322-bc0b-c7d2ec1e7a3c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[880103, 21550, 154, 3, 85, "Chapter",ExpressionUUID->"85cad0ba-7b3c-4fbf-9670-cd54985bbce0",
 CellTags->"ending"],
Cell[CellGroupData[{
Cell[880282, 21557, 691, 18, 110, "Input",ExpressionUUID->"a0c1f419-17d5-44ab-8203-eaeeb30c0472"],
Cell[CellGroupData[{
Cell[880998, 21579, 559, 16, 26, "Print",ExpressionUUID->"e97a5f5d-740d-434a-b528-d2c27e2f9452"],
Cell[881560, 21597, 585, 16, 26, "Print",ExpressionUUID->"9f8fb7e4-070a-4a95-9048-6a27f3b3c28b"]
}, Open  ]]
}, Open  ]],
Cell[882172, 21617, 197, 3, 74, "Text",ExpressionUUID->"187d0c9b-27f4-4cd3-ae7c-203a26017783"],
Cell[882372, 21622, 256, 4, 74, "Text",ExpressionUUID->"bc497686-46d7-4930-aa26-6eb5960005bd"],
Cell[882631, 21628, 101, 0, 51, "Text",ExpressionUUID->"3d9e356c-114a-4fe6-a498-67f24a012084"],
Cell[882735, 21630, 157, 2, 51, "Text",ExpressionUUID->"80995685-a225-4009-b657-094d1483bdee"],
Cell[882895, 21634, 168, 2, 51, "Text",ExpressionUUID->"2b45cab9-dce5-4190-9b04-c7813feb6cd8"]
}, Open  ]]
}, Open  ]]
}
]
*)

