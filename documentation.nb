(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1196170,      27097]
NotebookOptionsPosition[   1151074,      26371]
NotebookOutlinePosition[   1154074,      26453]
CellTagsIndexPosition[   1153692,      26437]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Beam Profiling Documentation",
 FontWeight->"SemiBold",
 FontColor->RGBColor[0., 0., 0.]]], "Title",ExpressionUUID->"7e3262c5-9f7f-\
4b44-a470-af60231a8f8d"],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellOpen->False,
 CellLabel->
  "In[128]:=",ExpressionUUID->"8d2f2eb8-9256-4415-9c6b-a431d4085b29"],

Cell[TextData[StyleBox["ATTENTION: Every time you use open this notebook, \
evaluate the whole notebook first: Evaluation \[Rule] Evaluate Notebook. If \
you do not do this, intra-document links will not work. Every time you run \
another notebook (especially those with \
ClearAll[\[OpenCurlyDoubleQuote]Global`*\[CloseCurlyDoubleQuote]], rerun this \
entire notebook.",
 FontSize->18,
 FontWeight->"Bold",
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellDingbat->"\[HappySmiley]",
 ShowCellTags->False,ExpressionUUID->"e1b469e4-6436-41c7-a4d0-253e3fa660fa"],

Cell[BoxData[
 StyleBox[
  RowBox[{"SetOptions", "[", 
   RowBox[{
    RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
    RowBox[{"StyleDefinitions", "\[Rule]", 
     RowBox[{"Notebook", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cell", "[", 
          RowBox[{"StyleData", "[", 
           RowBox[{"StyleDefinitions", "\[Rule]", "\"\<Default.nb\>\""}], 
           "]"}], "]"}], ",", 
         RowBox[{"Cell", "[", 
          RowBox[{
           RowBox[{"StyleData", "[", "\"\<Notebook\>\"", "]"}], ",", 
           RowBox[{"Background", "\[Rule]", 
            RowBox[{"GrayLevel", "[", "0.99", "]"}]}]}], "]"}], ",", 
         RowBox[{"Cell", "[", 
          RowBox[{
           RowBox[{"StyleData", "[", "\"\<Input\>\"", "]"}], ",", 
           RowBox[{"Background", "\[Rule]", "LightYellow"}]}], "]"}], ",", 
         RowBox[{"Cell", "[", 
          RowBox[{
           RowBox[{"StyleData", "[", "\"\<Output\>\"", "]"}], ",", 
           RowBox[{"Background", "\[Rule]", "LightGreen"}]}], "]"}], ",", 
         RowBox[{"Cell", "[", 
          RowBox[{
           RowBox[{"StyleData", "[", "\"\<Text\>\"", "]"}], ",", 
           RowBox[{"Background", "\[Rule]", "LightBrown"}]}], "]"}], ",", 
         RowBox[{"Cell", "[", 
          RowBox[{
           RowBox[{"StyleData", "[", "\"\<Chapter\>\"", "]"}], ",", 
           RowBox[{"Background", "\[Rule]", 
            RowBox[{"GrayLevel", "[", ".9", "]"}]}]}], "]"}]}], "}"}], ",", 
       RowBox[{
       "StyleDefinitions", "\[Rule]", 
        "\"\<PrivateStylesheetFormatting.nb\>\""}]}], "]"}]}]}], "]"}],
  FontColor->GrayLevel[0]]], "Input",
 CellOpen->False,
 FontColor->GrayLevel[1],
 CellLabel->
  "In[129]:=",ExpressionUUID->"29efaa39-b990-4be4-ab45-17160ca215a7"],

Cell[BoxData[
 RowBox[{"CellPrint", "@", 
  RowBox[{"Cell", "[", 
   RowBox[{"\"\<Table of Contents\>\"", ",", "\"\<Chapter\>\"", 
    RowBox[{"(*", 
     RowBox[{"format", " ", "style", " ", "option"}], "*)"}], ",", 
    RowBox[{"CellTags", "\[Rule]", 
     RowBox[{"{", "\"\<toc\>\"", "}"}]}]}], "]"}]}]], "Input",
 CellOpen->False,
 CellLabel->
  "In[130]:=",ExpressionUUID->"9bd065bc-c410-410e-9a91-c2c5a7ce329c"],

Cell[CellGroupData[{

Cell["Table of Contents", "Chapter",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellTags->"toc",ExpressionUUID->"f5d199af-8ad5-43c5-96d1-908941c86a59"],

Cell["\<\
Click on any of the links below to jump to that section. At each section \
there will be a link: back to the table of contents, to beginning of the \
section before, and to the beginning of the section after. \
\>", "Text",ExpressionUUID->"81b3aa75-5e48-4a6d-ae3a-944eb0e22b37"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Framed", "[", 
  RowBox[{
   RowBox[{"Column", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<Table of Contents\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<toc\>\""}], 
         "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<Introduction\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<intro\>\""}], 
         "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<Links to Helpful Websites\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<links\>\""}], 
         "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<Introduction Part 2 (Properties of beams)\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<intro2\>\""}], 
         "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<Introduction Part 3 (Gaussian Beam Math)\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<intro3\>\""}], 
         "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<The Thorlabs Camera\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<camera\>\""}], 
         "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<The Need to Decimate\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<deci\>\""}], 
         "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<What is a Module?\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<mod\>\""}], 
         "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<Code Used to Decimate\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<decicode\>\""}],
          "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<Fitting an Image\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<fitim\>\""}], 
         "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<Working with Multiple Images\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<work1\>\""}], 
         "}"}]}], "]"}], ",", 
      RowBox[{"Hyperlink", "[", 
       RowBox[{"\"\<The End...?\>\"", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<ending\>\""}], 
         "}"}]}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "}"}], "]"}], ",", 
   RowBox[{"RoundingRadius", "\[Rule]", "5"}]}], "]"}]], "Input",
 CellOpen->False,
 CellLabel->
  "In[131]:=",ExpressionUUID->"473e2580-5be6-4a37-bf8a-e2f5df76988e"],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      TemplateBox[{"\"Table of Contents\"",{
         NotebookObject[
          FrontEndObject[
           LinkObject["5z372_shm", 3, 1]], 44], "toc"},ButtonData},
       "HyperlinkDefault"]},
     {
      TemplateBox[{"\"Introduction\"",{
         NotebookObject[
          FrontEndObject[
           LinkObject["5z372_shm", 3, 1]], 44], "intro"},ButtonData},
       "HyperlinkDefault"]},
     {
      TemplateBox[{"\"Links to Helpful Websites\"",{
         NotebookObject[
          FrontEndObject[
           LinkObject["5z372_shm", 3, 1]], 44], "links"},ButtonData},
       "HyperlinkDefault"]},
     {
      TemplateBox[{"\"Introduction Part 2 (Properties of beams)\"",{
         NotebookObject[
          FrontEndObject[
           LinkObject["5z372_shm", 3, 1]], 44], "intro2"},ButtonData},
       "HyperlinkDefault"]},
     {
      TemplateBox[{"\"Introduction Part 3 (Gaussian Beam Math)\"",{
         NotebookObject[
          FrontEndObject[
           LinkObject["5z372_shm", 3, 1]], 44], "intro3"},ButtonData},
       "HyperlinkDefault"]},
     {
      TemplateBox[{"\"The Thorlabs Camera\"",{
         NotebookObject[
          FrontEndObject[
           LinkObject["5z372_shm", 3, 1]], 44], "camera"},ButtonData},
       "HyperlinkDefault"]},
     {
      TemplateBox[{"\"The Need to Decimate\"",{
         NotebookObject[
          FrontEndObject[
           LinkObject["5z372_shm", 3, 1]], 44], "deci"},ButtonData},
       "HyperlinkDefault"]},
     {
      TemplateBox[{"\"What is a Module?\"",{
         NotebookObject[
          FrontEndObject[
           LinkObject["5z372_shm", 3, 1]], 44], "mod"},ButtonData},
       "HyperlinkDefault"]},
     {
      TemplateBox[{"\"Code Used to Decimate\"",{
         NotebookObject[
          FrontEndObject[
           LinkObject["5z372_shm", 3, 1]], 44], "decicode"},ButtonData},
       "HyperlinkDefault"]},
     {
      TemplateBox[{"\"Fitting an Image\"",{
         NotebookObject[
          FrontEndObject[
           LinkObject["5z372_shm", 3, 1]], 44], "fitim"},ButtonData},
       "HyperlinkDefault"]},
     {
      TemplateBox[{"\"Working with Multiple Images\"",{
         NotebookObject[
          FrontEndObject[
           LinkObject["5z372_shm", 3, 1]], 44], "work1"},ButtonData},
       "HyperlinkDefault"]},
     {
      TemplateBox[{"\"The End...?\"",{
         NotebookObject[
          FrontEndObject[
           LinkObject["5z372_shm", 3, 1]], 44], "ending"},ButtonData},
       "HyperlinkDefault"]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"],
  RoundingRadius->5,
  StripOnInput->False]], "Output",
 CellLabel->
  "Out[131]=",ExpressionUUID->"9fad301d-16a9-4c7a-9002-b68396e0adc1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"CellPrint", "@", 
  RowBox[{"Cell", "[", 
   RowBox[{"\"\<Introduction\>\"", ",", "\"\<Chapter\>\"", 
    RowBox[{"(*", 
     RowBox[{"format", " ", "style", " ", "option"}], "*)"}], ",", 
    RowBox[{"CellTags", "\[Rule]", 
     RowBox[{"{", "\"\<intro\>\"", "}"}]}]}], "]"}]}]], "Input",
 CellOpen->False,
 CellLabel->
  "In[132]:=",ExpressionUUID->"57eb3855-8ab7-43cb-9e80-3c10aabbd1eb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Introduction", "Chapter",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellTags->"intro",ExpressionUUID->"dbdb8db6-923e-4aaf-a43b-7973e5abb20f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Before:\>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Table of Contents\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<toc\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<After: \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Introduction Part 2\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<intro2\>\""}], 
      "}"}]}], "]"}]}], "]"}]}], "Input",
 CellOpen->False,
 CellLabel->
  "In[133]:=",ExpressionUUID->"f170d4db-2f3f-469f-af04-8ecbf1c75967"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Before:\"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Table of Contents\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["5z372_shm", 3, 1]], 44], "toc"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Before:", 
   Hyperlink["Table of Contents", {
     NotebookObject[
      FrontEndObject[
       LinkObject["5z372_shm", 3, 1]], 44], "toc"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[133]:=",ExpressionUUID->"ea6f74fd-56ad-412c-a8d0-dffda5563740"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"After: \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Introduction Part 2\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["5z372_shm", 3, 1]], 44], "intro2"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["After: ", 
   Hyperlink["Introduction Part 2", {
     NotebookObject[
      FrontEndObject[
       LinkObject["5z372_shm", 3, 1]], 44], "intro2"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[133]:=",ExpressionUUID->"19ddb79f-a70e-42a1-a1db-88ea217306b7"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 StyleBox["Hi",
  FontWeight->"Bold"],
 ". It\[CloseCurlyQuote]s nice to meet you. Let\[CloseCurlyQuote]s get down \
to business. The contents of this notebook will help you learn what it takes \
to profile a laser beam. Put simply, profiling a beam means determining \
certain properties of the beam. I\[CloseCurlyQuote]ll tell you about these \
mysterious properties later on. For now I have some introductory things to \
talk to you about. \n\nIf you are new to Mathematica read the following. If \
you are not new to Mathematica, ",
 StyleBox["STILL",
  FontWeight->"Bold"],
 " read the following:\nI am not going to tell you about basic Mathematica \
syntax. That is beyond the scope of this notebook. However, I will be \
documenting each line of code, telling you what it does and sometimes how it \
does what it does. I bet you all my bitcoins (zero bitcoins) that there will \
be function/syntax that you have not seen. Don\[CloseCurlyQuote]t freak out \
when you gaze upon such bewildering code. Reread the code a few times, and if \
you still do not understand, look up the information online. \n\nA specific \
website that I find helpful is Mathematica Stack Exchange. It is a question \
and answers forum. Directly below in the green cells are links to questions \
and answers that I found helpful when creating this program. I am also \
listing links to some official Mathematica documentation pages. Now you must \
understand that official Mathematica documentation is generally not helpful \
(it either overloads you with too much or undercuts you with too little). \
(However, once in a while I find something on there that is helpful). Some of \
the following links are about (random) things I found interesting. I\
\[CloseCurlyQuote]m not going to bother organizing these links into those \
three categories, not because I\[CloseCurlyQuote]m lazy, but because I don\
\[CloseCurlyQuote]t remember that much about them. Come back to this list if \
you run into confusing code later on, or if you feel like going on an \
adventure. \n\nThe first two links are to the homepages of Mathematica Stack \
Exchange and Wolfram Documentation, respectively. The third link is to a \
Mathematica Stack Exchange page hosting a bunch of links to different \
questions (and it is organized unlike my list) that might help you out a lot. \
The forth link is a collection of links to a google doc that I created \
(because I didn\[CloseCurlyQuote]t want to type 3 pages of urls in \
Mathematica). You can get a sense of what the urls are about in the google \
doc by looking at the text near the end of the url. "
}], "Text",ExpressionUUID->"367d294c-445f-49ae-8637-d6c30262599b"],

Cell[BoxData[{
 RowBox[{"CellPrint", "@", 
  RowBox[{"Cell", "[", 
   RowBox[{"\"\<Links to Helpful Sites/Pages:\>\"", ",", "\"\<Text\>\"", 
    RowBox[{"(*", 
     RowBox[{"format", " ", "style", " ", "option"}], "*)"}], ",", 
    RowBox[{"CellTags", "\[Rule]", 
     RowBox[{"{", "\"\<links\>\"", "}"}]}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Framed", "[", 
  RowBox[{
   RowBox[{"Column", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Hyperlink", "[", 
       RowBox[{
       "\"\<Mathematica Stack Exchange\>\"", ",", 
        "\"\<https://mathematica.stackexchange.com\>\""}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Hyperlink", "[", 
       RowBox[{
       "\"\<Wolfram Language and System Documentation Center\>\"", ",", 
        "\"\<http://reference.wolfram.com/language/\>\""}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Hyperlink", "[", 
       RowBox[{
       "\"\<Where can I find examples of good Mathematica programming \
practice?\>\"", ",", 
        "\"\<https://mathematica.stackexchange.com/questions/18/where-can-i-\
find-examples-of-good-mathematica-programming-practice/\>\""}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Hyperlink", "[", 
       RowBox[{
       "\"\<All Other Links\>\"", ",", 
        "\"\<https://docs.google.com/document/d/\
12XCEQh0dlDfbduIREJF1CPT0YKD78AzRL2Te7JkuUcw/edit?usp=sharing\>\""}], "]"}]}],
      "}"}], "]"}], ",", 
   RowBox[{"RoundingRadius", "\[Rule]", "5"}]}], "]"}]}], "Input",
 CellOpen->False,
 CellLabel->
  "In[135]:=",ExpressionUUID->"7d55376d-a580-4bdc-8e1f-b8078fedd3f0"],

Cell["Links to Helpful Sites/Pages:", "Text",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellTags->"links",ExpressionUUID->"de8484a6-f6c8-4b36-b913-10b836142d7a"],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      TemplateBox[{
       "\"Mathematica Stack Exchange\"",
        "https://mathematica.stackexchange.com"},
       "HyperlinkURL"]},
     {
      TemplateBox[{
       "\"Wolfram Language and System Documentation Center\"",
        "http://reference.wolfram.com/language/"},
       "HyperlinkURL"]},
     {
      TemplateBox[{
       "\"Where can I find examples of good Mathematica programming practice?\
\"","https://mathematica.stackexchange.com/questions/18/where-can-i-find-\
examples-of-good-mathematica-programming-practice/"},
       "HyperlinkURL"]},
     {
      TemplateBox[{
       "\"All Other Links\"",
        "https://docs.google.com/document/d/\
12XCEQh0dlDfbduIREJF1CPT0YKD78AzRL2Te7JkuUcw/edit?usp=sharing"},
       "HyperlinkURL"]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"],
  RoundingRadius->5,
  StripOnInput->False]], "Output",
 CellLabel->
  "Out[136]=",ExpressionUUID->"6e61f010-ceea-4552-809b-297b4056cc2f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Print", "[", 
  RowBox[{"\"\<To Go Back to the TOC click this link:\>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Table of Contents\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<toc\>\""}], 
      "}"}]}], "]"}]}], "]"}]], "Input",
 CellOpen->False,
 CellLabel->
  "In[137]:=",ExpressionUUID->"d7f90fec-3d60-4359-b369-4f57c062cbd0"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"To Go Back to the TOC click this link:\"\>", 
   "\[InvisibleSpace]", 
   TemplateBox[{"\"Table of Contents\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["5z372_shm", 3, 1]], 44], "toc"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["To Go Back to the TOC click this link:", 
   Hyperlink["Table of Contents", {
     NotebookObject[
      FrontEndObject[
       LinkObject["5z372_shm", 3, 1]], 44], "toc"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[137]:=",ExpressionUUID->"a5407e9f-fe71-4c02-b048-447e22edfafd"]
}, Open  ]],

Cell["\<\
As you have probably noticed by now, there is a color scheme to this \
notebook. In its current state: the notebook\[CloseCurlyQuote]s background is \
a very light gray, the title of each section is a dark gray, all text cells \
are a light brown, all input (what I refer to as the \
\[OpenCurlyDoubleQuote]code\[CloseCurlyDoubleQuote]) cells are light yellow, \
and all output cells are green. That is the way I set it up.\
\>", "Text",ExpressionUUID->"c665ad7d-41f3-4ad5-95ae-bda29dfd5276"],

Cell["\<\
You also need to be aware of: File/folder paths. What is a file path you may \
ask? The green output below is a file path. In laymen\[CloseCurlyQuote]s \
terms, it is the path your computer takes to get to a file. (Path and \
Directory are interchangeable terms.) File paths are important for when you \
want to tell Mathematica where to look for something, which will be happening \
quite a bit in this document. Let\[CloseCurlyQuote]s see an example: 

To get the current Notebook Path/Directory, use the following code in yellow. \
\>", "Text",ExpressionUUID->"3ea58f41-44c9-4f02-8a02-4fdb07726dff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"currentdirectory", "=", 
  RowBox[{"NotebookDirectory", "[", "]"}]}]], "Input",
 CellLabel->
  "In[138]:=",ExpressionUUID->"ce4626d2-4cc0-4578-8e0b-cbc89356b6e2"],

Cell[BoxData["\<\"/Users/efm/Documents/Jobs June \
2019/git/beamprofiler/documentation/\"\>"], "Output",
 CellLabel->
  "Out[138]=",ExpressionUUID->"42e3f27c-bfd3-422e-9126-e1d4226cc426"]
}, Open  ]],

Cell[TextData[{
 "Now let\[CloseCurlyQuote]s say that you want the path to a file on your \
computer, not this current notebook. \n\nIf you are using a Mac you\
\[CloseCurlyQuote]re in luck (also good choice). You can easily copy the path \
of a file AND a folder. To do so: select the folder or file in Finder so that \
it is highlighted, and then press at the same time (simultaneously) these \
three buttons: ",
 StyleBox["option",
  FontSlant->"Italic"],
 " ",
 StyleBox["command",
  FontSlant->"Italic"],
 " ",
 StyleBox["c",
  FontSlant->"Italic"],
 ". This will copy the path. When pasting into Mathematica you need to \
enclose the path with quotes, effectively making it a string of characters.\n\
\nIf you are on a Windows computer, consider buying a Mac for your next \
laptop, because the only reliable way I know of for Windows is unintuitive. \
If you need the path of a only a file (not a folder) go to: Insert \
\[Rule]File Path. To get the path of a folder, select a file in the folder \
and then manually delete the file name off the end of the path. \n\n",
 StyleBox["Warning",
  FontWeight->"Bold"],
 ": File paths are written differently in macOS and Windows. (No one knows \
why Windows incorrectly represents file paths.) \n\nWhen importing files via \
a file path, the type of file (.jpeg, .pdf) needs to be at the end of the \
path. So make sure your computer displays file types at the end of file \
names. If it does not, look up how to do that. Because again, you need to \
include file type extensions at the end of file names in Mathematica. "
}], "Text",ExpressionUUID->"2a8a608b-c798-4562-a7c4-ebe5bf259346"],

Cell[TextData[{
 "There is one last thing I need to tell you. I created a package. A package \
is a group of functions that someone has coded to make it easier to do your \
job. These functions work like regular Mathematica functions.  This package I \
created is called: FindingSpotSize. It is a folder containing files, each of \
which contains one function. Ignore what the name means for now. \n\n",
 StyleBox["ATTENTION",
  FontWeight->"Bold"],
 ": The package does everything the rest of this documentation talks about, \
but allows you to do it in just a few lines of code. So \
we\[CloseCurlyQuote]re going to install it right now. To do this go to the \
folder that this documentation is in; that is to say go to the folder that \
has a path of: "
}], "Text",ExpressionUUID->"0cf8570c-8f60-4db5-a703-501ac880b417"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NotebookDirectory", "[", "]"}]], "Input",
 CellLabel->
  "In[139]:=",ExpressionUUID->"330c812f-e306-4dd1-8742-1cb5a8756e3a"],

Cell[BoxData["\<\"/Users/efm/Documents/Jobs June \
2019/git/beamprofiler/documentation/\"\>"], "Output",
 CellLabel->
  "Out[139]=",ExpressionUUID->"1b3d6f9f-8b55-44be-ae3c-bdc2fe5b9aba"]
}, Open  ]],

Cell["\<\
Locate a folder called FindingSpotSize and copy it. Now you need to locate \
what is called your User Base Directory using the following line of code. If \
you evaluated the notebook in the beginning, the path should already be \
outputted.\
\>", "Text",ExpressionUUID->"07bdaac6-dc5e-4eed-9ee9-d34c94b718b7"],

Cell[CellGroupData[{

Cell[BoxData["$UserBaseDirectory"], "Input",
 CellLabel->
  "In[140]:=",ExpressionUUID->"0dc598d7-f10c-48d4-a8c3-425cb74df85d"],

Cell[BoxData["\<\"/Users/efm/Library/Mathematica\"\>"], "Output",
 CellLabel->
  "Out[140]=",ExpressionUUID->"d234810e-e237-4702-8f94-1c4c5c1abfa1"]
}, Open  ]],

Cell["\<\
Locate this folder. There should be a folder inside of it called \
\[OpenCurlyDoubleQuote]Applications\[CloseCurlyDoubleQuote]. Enter this \
folder. Inside \[OpenCurlyDoubleQuote]Applications\[CloseCurlyDoubleQuote] is \
where you will paste my package. If done correctly on a Mac, the final path \
of my package in your Mathematica should look similar to: \
/Users/username/Library/Mathematica/Applications/FindingSpotSize. I\
\[CloseCurlyQuote]ll talk about using the package later on. 

But to make sure you installed it correctly, we are going to load the package \
into this Mathematica notebook, which will allow us to use its tools.

We are going to tell the notebook to go and get the package. << is shorthand \
for the Get command. You are going to see some warnings (4 probably, titled: \
Needs, Needs, Needs, General) but you can ignore those. 

If you see an error message: \[OpenCurlyDoubleQuote]Get: Cannot open \
FindingSpotSize\[CloseCurlyDoubleQuote]
Then you have not copied the FindingSpotSize folder correctly to the \
specified folder. Make sure to not rename the folder. 

Rerun the entire notebook once you have copied the folder into Applications. \
\
\>", "Text",ExpressionUUID->"cef27f20-e843-43ba-9ce0-f6483cc7cbee"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"<<", "FindingSpotSize`"}]], "Input",
 CellLabel->
  "In[141]:=",ExpressionUUID->"95134ce1-41e6-46d4-9a3c-f717c82de983"],

Cell[BoxData[
 TemplateBox[{
  "Needs","nocont",
   "\"Context \
\\!\\(\\*RowBox[{\\\"\\\\\\\"FindingSpotSize`Coordify`\\\\\\\"\\\"}]\\) was \
not created when Needs was evaluated.\"",2,141,5,28561798149187822138,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->
  "During evaluation of \
In[141]:=",ExpressionUUID->"5bccf09f-33b4-409c-b365-cb82467c4ec4"],

Cell[BoxData[
 TemplateBox[{
  "Needs","nocont",
   "\"Context \\!\\(\\*RowBox[{\\\"\\\\\\\"FindingSpotSize`GaussianBeamFit`\\\
\\\\\"\\\"}]\\) was not created when Needs was evaluated.\"",2,141,6,
   28561798149187822138,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->
  "During evaluation of \
In[141]:=",ExpressionUUID->"5bb9541d-6c40-46b3-81ff-ee0109cfc277"],

Cell[BoxData[
 TemplateBox[{
  "Needs","nocont",
   "\"Context \
\\!\\(\\*RowBox[{\\\"\\\\\\\"FindingSpotSize`AutoCroppingSuperRevised`\\\\\\\"\
\\\"}]\\) was not created when Needs was evaluated.\"",2,141,7,
   28561798149187822138,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->
  "During evaluation of \
In[141]:=",ExpressionUUID->"90c8e917-00e9-4ebe-873c-2bcc196a48ae"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Needs\\\", \\\"::\\\", \
\\\"nocont\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"",2,141,8,28561798149187822138,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellLabel->
  "During evaluation of \
In[141]:=",ExpressionUUID->"d2427018-f357-45a6-9cd3-ca18326c7f48"]
}, Open  ]],

Cell["\<\
Congrats! You made it through Introduction Part 1. You only have 90% of the \
documentation left! Move on to Introduction Part 2. \
\>", "Text",ExpressionUUID->"6ab985ff-7941-4881-88b2-d9b5fd4650c6"],

Cell[BoxData[
 RowBox[{"CellPrint", "@", 
  RowBox[{"Cell", "[", 
   RowBox[{
   "\"\<Introduction Part 2 (Properties of Beams)\>\"", ",", 
    "\"\<Chapter\>\"", 
    RowBox[{"(*", 
     RowBox[{"format", " ", "style", " ", "option"}], "*)"}], ",", 
    RowBox[{"CellTags", "\[Rule]", 
     RowBox[{"{", "\"\<intro2\>\"", "}"}]}]}], "]"}]}]], "Input",
 CellOpen->False,
 CellLabel->
  "In[142]:=",ExpressionUUID->"58548d3e-a1fe-4bca-a0d4-f04a891e900f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Introduction Part 2 (Properties of Beams)", "Chapter",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellTags->"intro2",ExpressionUUID->"30a89eab-7d48-44fe-a170-d9fa680a7f24"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Home:  \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Table of Contents\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<toc\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Before:\>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Introduction\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<intro\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<After: \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Introduction Part 3\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<intro3\>\""}], 
      "}"}]}], "]"}]}], "]"}]}], "Input",
 CellOpen->False,
 CellLabel->
  "In[143]:=",ExpressionUUID->"e6fbdeb4-5034-4c59-bc5e-467d1d197f42"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Home:  \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Table of Contents\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["5z372_shm", 3, 1]], 44], "toc"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Home:  ", 
   Hyperlink["Table of Contents", {
     NotebookObject[
      FrontEndObject[
       LinkObject["5z372_shm", 3, 1]], 44], "toc"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[143]:=",ExpressionUUID->"4b54bfe8-2a96-420a-9082-eeb22d1f41d3"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Before:\"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Introduction\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["5z372_shm", 3, 1]], 44], "intro"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Before:", 
   Hyperlink["Introduction", {
     NotebookObject[
      FrontEndObject[
       LinkObject["5z372_shm", 3, 1]], 44], "intro"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[143]:=",ExpressionUUID->"538bacb2-5de4-49e9-9c8b-c31d8ab8c7f1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"After: \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Introduction Part 3\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["5z372_shm", 3, 1]], 44], "intro3"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["After: ", 
   Hyperlink["Introduction Part 3", {
     NotebookObject[
      FrontEndObject[
       LinkObject["5z372_shm", 3, 1]], 44], "intro3"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[143]:=",ExpressionUUID->"618180b4-39d3-44d0-9e19-6570ea5532f3"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "I mentioned profiling a laser beam earlier. Profiling a beam means \
determining certain properties about it. Once we know these properties we can \
do things with the beam. The properties that we are interested in are called: \
beam waist and the beam waist position. Dr. Marcus probably told you to read \
some optics textbook. I came onto the project knowing nothing about laser \
beams and I found the textbook to not be too helpful. It was pretty heavy \
with the math and did not have very clear explanations on what was happening. \
Once I eventually learned what was going on, I decided to write my own little \
description of laser beams. That is what you will now be reading. \n\nHere \
are some things you should know: First, we are making assumptions about the \
laser beam we are working with. We assume the laser beams are Gaussian laser \
beams. What the name means at the moment is not that important. What is \
important is that by assuming they are Gaussian, we are assuming that they \
are perfectly created laser beams. However, nothing is perfect, so there are \
differences in what we theorize and what we actually see. \n\nSecond, \
whenever we talk about the cross sectional size of a beam, we are not talking \
about the distance from the center of the beam to its physical edges. Why is \
this? Its hard to define physical edges to a laser beam because the light \
doesn\[CloseCurlyQuote]t just stop at a specific radius. If you shine a laser \
beam on a flat surface it might appear to you that at some radius away from \
what you perceive to be the center there is a distinct radius where the light \
stops existing. However, it doesn\[CloseCurlyQuote]t really stop existing \
beyond that radius, its just that you cannot see the faint light beyond that \
radius. So, it makes more sense to use some other measurement to determine \
the size of the beam. Thus, as is usually the case, people turned to math.\n\n\
If I ask you for the size of the beam, I am asking you to tell me what the \
spot size of the beam is at that given location. (take away: size=spot size). \
The spot size is a measurement that is easily described and can be agreed \
upon by different scientists. \n\nSpot size is...\n\n...the distance from the \
center of the beam...\n\n...to where the intensity of the light...\n\n...has \
dropped by one standard deviation. \n\nIf the intensity of the light at the \
center of the beam has a value ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    SubscriptBox["I", "0"],
    FontSize->24], TraditionalForm]],ExpressionUUID->
  "d3a41267-b2c6-49c1-afa4-bf1756f9e19f"],
 ", then the intensity of light one standard deviation away from this max \
value has an intensity of ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FractionBox[
     SubscriptBox["I", "0"], 
     SuperscriptBox["\[ExponentialE]", "2"]],
    FontSize->24], TraditionalForm]],ExpressionUUID->
  "ae973a42-941f-4cb9-a2ad-1b1399960cb2"],
 ", where \[ExponentialE]=2.718.\nThird:\n\n...the beam waist of a laser beam \
is...\n\n...the smallest spot size the beam has along its axis of \
propagation. \n\nThe beam waist is usually represented as ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["w", "0"], TraditionalForm]],ExpressionUUID->
  "62d7ee82-5c5f-4a67-995c-9ac9a7e4dda9"],
 " or \[Sigma] . The location of the beam waist  is usually represented as ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["z", "0"], TraditionalForm]],ExpressionUUID->
  "3d400184-e36f-47eb-a87a-94a72da1198c"],
 ". \n\nIt is common to say that the axis the beam propagates along is the z \
axis, this explains why the beam waist position is represented as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["z", "0"], ".", " "}], TraditionalForm]],ExpressionUUID->
  "8513ab7d-be94-4244-bb80-2ef51952c6cd"],
 "\n\nForth, laser beam light wants to disperse. The more compact you make a \
laser beam, the more desperately it wants to disperse.\n\nIf you were to \
continually decrease the beam waist  (such as putting the laser beam through \
lens of different magnifications), you would notice that the light diverges \
more quickly after the beam waist position (ie the spot size gets bigger more \
quickly).  \n\nFifth, I am by no means an expert on Gaussian laser beams. If \
you notice anything wrong in this documentation please correct it.\n\nBelow, \
I've attached the first page of a document I wrote. Click \
\[OpenCurlyDoubleQuote]view document\[CloseCurlyDoubleQuote] to view it and \
when you are done click \[OpenCurlyDoubleQuote]close document\
\[CloseCurlyDoubleQuote] to close it. You can view the full document in the \
folder that this notebook is in. The document is titled: testdoctry.pdf. Most \
of it is just restating what I said above but it also contains some graphics \
that might help you understand what is going on with Gaussian beam \
propagation. If I were you, I would only focus on the first page of the \
document as the last two pages are not important yet (and frankly I haven\
\[CloseCurlyQuote]t reviewed them). After you view the document move on to \
Introduction Part 3. You might have to side scroll inside this notebook to \
view the other pages of the document. \n\nIf you have been reading this \
notebook non-stop from the beginning, right now would be a good time to take \
a break. "
}], "Text",ExpressionUUID->"26a7aac9-42c0-4e85-ac46-f08b2d108bcf"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ButtonBar", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\"\<View document\>\"", "\[RuleDelayed]", 
     RowBox[{"Expression", "[", 
      RowBox[{
       RowBox[{"doc", "=", 
        RowBox[{"Import", "[", 
         RowBox[{"currentdirectory", "<>", "\"\<testdoctry.pdf\>\""}], 
         "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Pages\>\"", ",", "1"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"\"\<close document\>\"", "\[RuleDelayed]", 
     RowBox[{"Expression", "[", 
      RowBox[{"Clear", "[", "doc", "]"}], "]"}]}]}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dynamic", "[", "doc", "]"}]}], "Input",
 CellOpen->False,
 CellLabel->
  "In[146]:=",ExpressionUUID->"21df25e2-3960-4514-9ec8-9f36dd921d01"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     ButtonBox["\<\"View document\"\>",
      Appearance->{"AbuttingRight"},
      ButtonFunction:>Expression[$CellContext`doc = Import[
          StringJoin[$CellContext`currentdirectory, "testdoctry.pdf"]], {
        "Pages", 1}],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox["\<\"close document\"\>",
      Appearance->{"AbuttingLeft"},
      ButtonFunction:>Expression[
        Clear[$CellContext`doc]],
      Evaluator->Automatic,
      Method->"Preemptive"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  ButtonBar[{"View document" :> Expression[$CellContext`doc = Import[
        StringJoin[$CellContext`currentdirectory, "testdoctry.pdf"]], {
      "Pages", 1}], "close document" :> Expression[
      Clear[$CellContext`doc]]}, Appearance -> {Automatic}]]], "Output",
 CellLabel->
  "Out[146]=",ExpressionUUID->"5fa260ed-58bb-41a1-b894-dfa096ce8104"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`doc, StandardForm],
  ImageSizeCache->{23., {1., 10.}}]], "Output",
 CellLabel->
  "Out[147]=",ExpressionUUID->"b8146ac8-97c6-479c-a665-aa933e1a02e9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"CellPrint", "@", 
  RowBox[{"Cell", "[", 
   RowBox[{
   "\"\<Introduction Part 3 (Gaussian beam Math)\>\"", ",", "\"\<Chapter\>\"", 
    RowBox[{"(*", 
     RowBox[{"format", " ", "style", " ", "option"}], "*)"}], ",", 
    RowBox[{"CellTags", "\[Rule]", 
     RowBox[{"{", "\"\<intro3\>\"", "}"}]}]}], "]"}]}]], "Input",
 CellOpen->False,
 CellLabel->
  "In[148]:=",ExpressionUUID->"79eef98c-c896-46e8-879a-c1b7e5f84d8a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Introduction Part 3 (Gaussian beam Math)", "Chapter",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellTags->"intro3",ExpressionUUID->"f19034c1-a5ab-4023-b113-d6ae69ad64da"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Home:  \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Table of Contents\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<toc\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Before:\>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Introduction Part 2\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<intro2\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<After: \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<The Thorlabs Camera\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<camera\>\""}], 
      "}"}]}], "]"}]}], "]"}]}], "Input",
 CellOpen->False,
 CellLabel->
  "In[149]:=",ExpressionUUID->"3b8d3c4c-ab7c-4251-984b-c4f8fae9239d"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Home:  \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Table of Contents\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["5z372_shm", 3, 1]], 44], "toc"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Home:  ", 
   Hyperlink["Table of Contents", {
     NotebookObject[
      FrontEndObject[
       LinkObject["5z372_shm", 3, 1]], 44], "toc"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[149]:=",ExpressionUUID->"bce64b8c-dc17-49ef-acad-b0611d830387"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Before:\"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Introduction Part 2\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["5z372_shm", 3, 1]], 44], "intro2"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Before:", 
   Hyperlink["Introduction Part 2", {
     NotebookObject[
      FrontEndObject[
       LinkObject["5z372_shm", 3, 1]], 44], "intro2"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[149]:=",ExpressionUUID->"6aba4f2a-1e73-4399-8942-a3a45663621e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"After: \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"The Thorlabs Camera\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["5z372_shm", 3, 1]], 44], "camera"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["After: ", 
   Hyperlink["The Thorlabs Camera", {
     NotebookObject[
      FrontEndObject[
       LinkObject["5z372_shm", 3, 1]], 44], "camera"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[149]:=",ExpressionUUID->"d08e3f76-5049-45e8-aab9-2786033f9827"]
}, Open  ]]
}, Open  ]],

Cell[TextData[{
 "The time has come to learn the math used to described Gaussian laser beams. \
We will describe a laser beam through its intensity values at certain points \
in space along its axis of propagation. Using an equation with an x and y \
variable, you can describe how the intensity of a laser beam changes on a \
plane at a particular location in space along its axis of propagation. \n\n",
 StyleBox["ATTENTION",
  FontWeight->"Bold"],
 ": I got in the habit of thinking of the x variable as width and the y \
variable as height. You might want to do the same. To view a 3D plot \
representing intensity of a laser beam as a function of position in a plane \
click the \[OpenCurlyDoubleQuote]view plot\[CloseCurlyDoubleQuote] button. \
Close the plot when you\[CloseCurlyQuote]re done as that will make this \
notebook run faster. "
}], "Text",ExpressionUUID->"0326d5f7-9ef2-47ec-8237-b7bca7a2ca8a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ButtonBar", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<View plot\>\"", "\[RuleDelayed]", 
      RowBox[{"Expression", "[", 
       RowBox[{
        RowBox[{"plot", "=", 
         RowBox[{"Plot3D", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"255", " ", "*", " ", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               FractionBox[
                RowBox[{"-", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{"widthpos", "-", "80"}], ")"}], "2"]}], 
                SuperscriptBox["30", "2"]], "-", 
               FractionBox[
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{"heightpos", "-", "64"}], ")"}], "2"], 
                SuperscriptBox["30", "2"]]}]]}], "+", "0"}], ",", 
           RowBox[{"{", 
            RowBox[{"widthpos", ",", "1", ",", "160"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"heightpos", ",", "1", ",", "128"}], "}"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"MeshStyle", "\[Rule]", "None"}], ",", 
           RowBox[{"ColorFunction", "\[Rule]", "GrayLevel"}], ",", 
           RowBox[{"ViewAngle", "\[Rule]", ".6"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
            RowBox[{"Directive", "[", 
             RowBox[{"Bold", ",", " ", "Black", ",", "12"}], "]"}]}], ",", 
           RowBox[{"PlotRangePadding", "\[Rule]", "None"}], ",", 
           RowBox[{"PlotPoints", "\[Rule]", "5"}], ",", 
           RowBox[{"AxesLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
             "\"\<width\>\"", ",", "\"\<height\>\"", ",", 
              "\"\<Intensity\>\""}], "}"}]}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Pages\>\"", ",", "1"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"\"\<Close plot\>\"", "\[RuleDelayed]", 
      RowBox[{"Expression", "[", 
       RowBox[{"Clear", "[", "plot", "]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"Method", "\[Rule]", "\"\<Preemptive\>\""}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dynamic", "[", "plot", "]"}]}], "Input",
 CellLabel->
  "In[152]:=",ExpressionUUID->"2fb3a0a7-1400-4188-97e1-85b140b1a7c0"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     ButtonBox["\<\"View plot\"\>",
      Appearance->{"AbuttingRight"},
      ButtonFunction:>
       Expression[$CellContext`plot = 
        Plot3D[255 
           E^(-($CellContext`widthpos - 80)^2/
              30^2 - ($CellContext`heightpos - 64)^2/30^2) + 
          0, {$CellContext`widthpos, 1, 160}, {$CellContext`heightpos, 1, 
           128}, PlotRange -> All, MeshStyle -> None, ColorFunction -> 
          GrayLevel, ViewAngle -> 0.6, LabelStyle -> 
          Directive[Bold, Black, 12], PlotRangePadding -> None, PlotPoints -> 
          5, AxesLabel -> {"width", "height", "Intensity"}], {"Pages", 1}],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox["\<\"Close plot\"\>",
      Appearance->{"AbuttingLeft"},
      ButtonFunction:>Expression[
        Clear[$CellContext`plot]],
      Evaluator->Automatic,
      Method->"Preemptive"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  ButtonBar[{
   "View plot" :> 
    Expression[$CellContext`plot = 
      Plot3D[255 
         E^(-($CellContext`widthpos - 80)^2/
            30^2 - ($CellContext`heightpos - 64)^2/30^2) + 
        0, {$CellContext`widthpos, 1, 160}, {$CellContext`heightpos, 1, 128}, 
        PlotRange -> All, MeshStyle -> None, ColorFunction -> GrayLevel, 
        ViewAngle -> 0.6, LabelStyle -> Directive[Bold, Black, 12], 
        PlotRangePadding -> None, PlotPoints -> 5, 
        AxesLabel -> {"width", "height", "Intensity"}], {"Pages", 1}], 
    "Close plot" :> Expression[
      Clear[$CellContext`plot]]}, Method -> "Preemptive", 
   Appearance -> {Automatic}]]], "Output",
 CellLabel->
  "Out[152]=",ExpressionUUID->"9b6a162b-db76-432f-9270-d79b55ae0844"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`plot, StandardForm],
  ImageSizeCache->{31., {3., 10.}}]], "Output",
 CellLabel->
  "Out[153]=",ExpressionUUID->"29d76e4d-dc9d-44bb-b4fc-3d9b949171d6"]
}, Open  ]],

Cell[TextData[{
 "The equation we use to described the Intensity of a laser beam in a 2D \
plane is below. \n\n\t\t\t",
 Cell[BoxData[
  FormBox[
   StyleBox[
    FrameBox[
     RowBox[{
      StyleBox[
       RowBox[{"Intensity", "(", 
        RowBox[{
         StyleBox[
          RowBox[{"width", " ", "position"}],
          FontColor->RGBColor[1, 0, 0]], ",", 
         StyleBox[
          RowBox[{"height", " ", "position"}],
          FontColor->RGBColor[1, 0, 0]]}], ")"}],
       FontSize->18], 
      StyleBox["=",
       FontSize->18], 
      RowBox[{
       RowBox[{
        StyleBox["maximumintensity",
         FontSize->18], 
        StyleBox[" ",
         FontSize->18], "*", " ", 
        SuperscriptBox["\[ExponentialE]", 
         SuperscriptBox[" ", 
          StyleBox[
           SuperscriptBox[" ", 
            SuperscriptBox[" ", 
             StyleBox[
              RowBox[{
               FractionBox[
                RowBox[{"-", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    StyleBox["widthposition",
                    FontWeight->"Bold",
                    FontColor->RGBColor[1, 0, 0]], "-", "widthcenter"}], 
                   ")"}], "2"]}], 
                SuperscriptBox["wwaist", "2"]], "-", 
               FractionBox[
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   StyleBox["heightposition",
                    FontWeight->"Bold",
                    FontColor->RGBColor[1, 0, 0]], "-", "heightcenter"}], 
                  ")"}], "2"], 
                SuperscriptBox["hwaist", "2"]]}],
              FontSize->18]]],
           FontSize->18]]]}], " ", 
       StyleBox["+",
        FontSize->18], 
       StyleBox["backgroundintensity",
        FontSize->18], 
       StyleBox[" ",
        FontSize->18]}]}]],
    Background->RGBColor[0.9, 1, 1]], TraditionalForm]],
  TextAlignment->Center,ExpressionUUID->
  "eb8354b6-dd0b-4264-9259-fc229d5da580"],
 "\nThe equation below allows for a non circular (potentially elliptical) \
laser beam by having separate width and height terms (major and minor axis \
terms). \[ExponentialE]=2.71828. The variables are in red. The constants in \
the equation are: ",
 StyleBox[" \n\t\t\t\t\t\t\t\t\t\t\t", "ItemNumbered"],
 StyleBox[Cell[BoxData[{
  FormBox[
   StyleBox[
    RowBox[{
    "maximumintensity", ",", " ", "\[IndentingNewLine]", "widthcenter", ",", 
     "\[IndentingNewLine]", "heightcenter", ",", "\[IndentingNewLine]", 
     "wwaist", ",", "\[IndentingNewLine]", "hwaist", ",", " ", 
     "\[IndentingNewLine]", "and", " "}], "Text"], 
   TraditionalForm], "\[IndentingNewLine]", 
  FormBox[
   StyleBox[
    RowBox[{"backgroundintensity", ".", " "}], "Text"], TraditionalForm]}], 
  "ItemNumbered",
  TextAlignment->Center,ExpressionUUID->
  "cf0c69cc-c2df-445e-8812-a7e50434b702"], "ItemNumbered"],
 "\n\n",
 StyleBox["Maximumintensity",
  IgnoreSpellCheck->True,
  FontWeight->"Bold"],
 " is the max intensity of the beam, which is located at the center. The ",
 StyleBox["widthcenter",
  FontWeight->"Bold"],
 " and ",
 StyleBox["heightcenter",
  FontWeight->"Bold"],
 " are the x and y coordinates of the beam\[CloseCurlyQuote]s center, \
respectively. ",
 StyleBox["wwaist",
  FontWeight->"Bold"],
 " and ",
 StyleBox["hwaist",
  FontWeight->"Bold"],
 " are the beam waists in a direction parallel to the width and height axes, \
respectively. ",
 StyleBox["Backgroudintensity",
  IgnoreSpellCheck->True,
  FontWeight->"Bold"],
 " is the intensity of background noise. \n\nNow we need to learn about the \
Thorlabs Camera."
}], "Text",ExpressionUUID->"bbe5752d-4025-4e84-9c60-303875aa88ec"],

Cell[BoxData[
 RowBox[{"CellPrint", "@", 
  RowBox[{"Cell", "[", 
   RowBox[{"\"\<The Thorlabs Camera\>\"", ",", "\"\<Chapter\>\"", 
    RowBox[{"(*", 
     RowBox[{"format", " ", "style", " ", "option"}], "*)"}], ",", 
    RowBox[{"CellTags", "\[Rule]", 
     RowBox[{"{", "\"\<camera\>\"", "}"}]}]}], "]"}]}]], "Input",
 CellOpen->False,
 CellLabel->
  "In[154]:=",ExpressionUUID->"50cba043-94b0-4f1e-af91-3157ac83d249"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Thorlabs Camera", "Chapter",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellTags->"camera",ExpressionUUID->"2ea7d7fe-f123-49f0-a4a6-18738e23fdc7"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Home:  \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Table of Contents\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<toc\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Before:\>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Introduction Part 3\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<intro3\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<After: \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<The Need to Decimate\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<deci\>\""}], 
      "}"}]}], "]"}]}], "]"}]}], "Input",
 CellOpen->False,
 CellLabel->
  "In[155]:=",ExpressionUUID->"d0524762-b6bc-48bc-a839-d8573860494c"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Home:  \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Table of Contents\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["5z372_shm", 3, 1]], 44], "toc"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Home:  ", 
   Hyperlink["Table of Contents", {
     NotebookObject[
      FrontEndObject[
       LinkObject["5z372_shm", 3, 1]], 44], "toc"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[155]:=",ExpressionUUID->"aa9aa95f-9efc-4776-81cf-304adff94998"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Before:\"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Introduction Part 3\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["5z372_shm", 3, 1]], 44], "intro3"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Before:", 
   Hyperlink["Introduction Part 3", {
     NotebookObject[
      FrontEndObject[
       LinkObject["5z372_shm", 3, 1]], 44], "intro3"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[155]:=",ExpressionUUID->"7f117dd9-9aad-45b7-bad1-be7c7a1f38da"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"After: \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"The Need to Decimate\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["5z372_shm", 3, 1]], 44], "deci"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["After: ", 
   Hyperlink["The Need to Decimate", {
     NotebookObject[
      FrontEndObject[
       LinkObject["5z372_shm", 3, 1]], 44], "deci"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[155]:=",ExpressionUUID->"598eb711-2be8-4c29-9efb-4daad3d78b12"]
}, Open  ]]
}, Open  ]],

Cell["\<\
I\[CloseCurlyQuote]ve told you about a lot of things so far, but I haven\
\[CloseCurlyQuote]t told you what we\[CloseCurlyQuote]re actually doing. Well \
here it goes (drum roll please): 

You will take pictures of the laser beam at different z (axis of propagation) \
position...

...and then use the tools I have provided in my package...

...to find the beam waist and beam waist\[CloseCurlyQuote]s position of the \
laser beam. 

After you know these two parameters you will be able to correctly manipulate \
the beam with lenses. We have a lot more to cover before you are ready to do \
that though. 

How do my tools determine the beam waist and beam waist position? They do \
what is called fitting the 3D intensity equation covered in the previous \
section to each of the images (or more specifically to the image data). 

But we are not going to focus on fitting just yet because we have to talk \
about the camera you will be using to take images. 

I\[CloseCurlyQuote]ve included the spec sheet for the camera below and you \
can access it via the buttons.  The only pieces of information you should \
care about right now are that: images taken with the camera have dimensions \
of 1280 pixels by 1024 pixels, and that each pixel is square and each pixel \
has a side dimension of 5.2 micrometers (microns) (\[Mu]m). \
\>", "Text",ExpressionUUID->"c32e4e7a-54d4-4fde-b20e-d7112b5628a3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ButtonBar", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\"\<View document\>\"", "\[RuleDelayed]", 
     RowBox[{"Expression", "[", 
      RowBox[{
       RowBox[{"doc2", "=", 
        RowBox[{"Import", "[", 
         RowBox[{"currentdirectory", "<>", "\"\<cameraspecsfinal.pdf\>\""}], 
         "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Pages\>\"", ",", "1"}], "}"}]}], "]"}]}], ",", 
    RowBox[{"\"\<close document\>\"", "\[RuleDelayed]", 
     RowBox[{"Expression", "[", 
      RowBox[{"Clear", "[", "doc2", "]"}], "]"}]}]}], "}"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dynamic", "[", "doc2", "]"}]}], "Input",
 CellOpen->False,
 CellLabel->
  "In[158]:=",ExpressionUUID->"799dbbd3-9306-4797-8188-439fb91f81b8"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     ButtonBox["\<\"View document\"\>",
      Appearance->{"AbuttingRight"},
      ButtonFunction:>Expression[$CellContext`doc2 = Import[
          
          StringJoin[$CellContext`currentdirectory, 
           "cameraspecsfinal.pdf"]], {"Pages", 1}],
      Evaluator->Automatic,
      Method->"Preemptive"], 
     ButtonBox["\<\"close document\"\>",
      Appearance->{"AbuttingLeft"},
      ButtonFunction:>Expression[
        Clear[$CellContext`doc2]],
      Evaluator->Automatic,
      Method->"Preemptive"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[0.]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  ButtonBar[{"View document" :> Expression[$CellContext`doc2 = Import[
        StringJoin[$CellContext`currentdirectory, "cameraspecsfinal.pdf"]], {
      "Pages", 1}], "close document" :> Expression[
      Clear[$CellContext`doc2]]}, Appearance -> {Automatic}]]], "Output",
 CellLabel->
  "Out[158]=",ExpressionUUID->"f6c06673-8d63-4551-9a70-e73b6f2a36a7"],

Cell[BoxData[
 DynamicBox[ToBoxes[$CellContext`doc2, StandardForm],
  ImageSizeCache->{31., {1., 10.}}]], "Output",
 CellLabel->
  "Out[159]=",ExpressionUUID->"97f0687d-bad8-4fa5-8c62-8ce319d02fe7"]
}, Open  ]],

Cell["\<\
In order to take pictures with the camera you will need to use the Thorlab \
Thorcam software. Here is some bad news. Thorcam software only runs on \
Windows, not macOS! If you have a Mac, you will need to either install a boot \
camp partition or use a virtual machine with usb device pass through. You\
\[CloseCurlyQuote]ll have to look up how to do both of those if you have a \
Mac. The link to the Thorcam software is below. With that sad news still \
fresh in your mind, continue on to next section. \
\>", "Text",ExpressionUUID->"03841e15-e54a-4862-b365-e60b851b5c8d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Thorcam Software\>\"", ",", 
   "\"\<https://www.thorlabs.com/software_pages/ViewSoftwarePage.cfm?Code=\
ThorCam\>\""}], "]"}]], "Input",
 CellOpen->False,
 CellLabel->
  "In[160]:=",ExpressionUUID->"457e299c-d6cd-4fd1-93ba-fba8cb124ff2"],

Cell[BoxData[
 TemplateBox[{
  "\"Thorcam Software\"",
   "https://www.thorlabs.com/software_pages/ViewSoftwarePage.cfm?Code=\
ThorCam"},
  "HyperlinkURL"]], "Output",
 CellLabel->
  "Out[160]=",ExpressionUUID->"7ac037a8-7814-4972-9223-7e870a898313"]
}, Open  ]],

Cell["\<\
I intended to tell you how to use the Thorlabs software in this brown text \
box but I ran out of time. Maybe one day (probably never) \
I\[CloseCurlyQuote]ll fill in this section, but for now, \
it\[CloseCurlyQuote]ll be up to you to figure that out. I am attempting to \
tell you how to do everything else so please be understanding. \
\>", "Text",ExpressionUUID->"1a1811cf-2089-4ccf-bfa9-3bfb67afd4bc"],

Cell[BoxData[
 RowBox[{"CellPrint", "@", 
  RowBox[{"Cell", "[", 
   RowBox[{"\"\<The Need to Decimate\>\"", ",", "\"\<Chapter\>\"", 
    RowBox[{"(*", 
     RowBox[{"format", " ", "style", " ", "option"}], "*)"}], ",", 
    RowBox[{"CellTags", "\[Rule]", 
     RowBox[{"{", "\"\<deci\>\"", "}"}]}]}], "]"}]}]], "Input",
 CellOpen->False,
 CellLabel->
  "In[161]:=",ExpressionUUID->"20b90f28-492e-4bf5-bae9-f2b81b28aaf8"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The Need to Decimate", "Chapter",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellTags->"deci",ExpressionUUID->"a5b45c8e-329a-4bee-abe9-073eb097d5eb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Home:  \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Table of Contents\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<toc\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Before:\>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<The Thorlabs Camera\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<camera\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<After: \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Code Used to Decimate\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<decicode\>\""}], 
      "}"}]}], "]"}]}], "]"}]}], "Input",
 CellOpen->False,
 CellLabel->
  "In[162]:=",ExpressionUUID->"d2b663a0-30d7-4c1f-9fce-b58628b1b028"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Home:  \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Table of Contents\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["5z372_shm", 3, 1]], 44], "toc"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Home:  ", 
   Hyperlink["Table of Contents", {
     NotebookObject[
      FrontEndObject[
       LinkObject["5z372_shm", 3, 1]], 44], "toc"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[162]:=",ExpressionUUID->"019a7d02-113d-48d2-ae8b-6b6b0760ca19"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Before:\"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"The Thorlabs Camera\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["5z372_shm", 3, 1]], 44], "camera"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Before:", 
   Hyperlink["The Thorlabs Camera", {
     NotebookObject[
      FrontEndObject[
       LinkObject["5z372_shm", 3, 1]], 44], "camera"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[162]:=",ExpressionUUID->"371fa625-013d-4cd3-b74a-b6c86fafd700"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"After: \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Code Used to Decimate\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["5z372_shm", 3, 1]], 44], "decicode"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["After: ", 
   Hyperlink["Code Used to Decimate", {
     NotebookObject[
      FrontEndObject[
       LinkObject["5z372_shm", 3, 1]], 44], "decicode"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[162]:=",ExpressionUUID->"f3368446-4e7e-4842-b56b-7aa20d5aaf1e"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Image files taken with the Thorlab camera contain way more data than we need. \
The average picture from it contains about 1.3 million pixels. We only want \
tens of thousands of pixels so that our computations don\[CloseCurlyQuote]t \
take forever to run. Just think of it like this:  Two million dollars is a \
lot more than 10 thousand dollars...a lot more. \
\>", "Text",ExpressionUUID->"d689d1a9-873b-495c-bcc6-135aa13a9460"],

Cell["\<\
So how do we get from 1.3 million pixels to tens of thousands of pixels. We \
do something called decimation. When you decimate an image, you pick out the \
key pieces of information and throw out all the rest. 

When we are decimating an image we need to choose by how much we decimate it \
by and what method you will use to decimate. You have to ask yourself, do I \
want to turn that 1.3 million pixels into 100,000 pixels, 10,000 pixels or \
1,000 pixels? You generally want as many as your computer can reasonable \
handle. 

Two different ways to decimate an image are demonstrated in this \
documentation (and these same two ways are used by my tools). The two ways \
are: automatic cropping and downsampling.

Automatic cropping, automatically crops the image to contain just the laser \
beam and just a little bit of the background. 

Downsampling is a little more difficult to explain and better seen in an \
example. So here\[CloseCurlyQuote]s the example of downsampling:\
\>", "Text",ExpressionUUID->"60a2e22f-8b06-4833-9eca-522164bf4c75"],

Cell["\<\
If you have not taken a linear algebra course: a matrix is a grid of numbers. \
Representing data in such a grid allows for some very cool math. \
\>", "Text",ExpressionUUID->"03b662bd-513a-4ddc-b3f3-b2fd09f9b451"],

Cell["\<\
Consider the matrix of values below. This matrix of values could represent \
pixel intensity values from an image sensor. That\[CloseCurlyQuote]s right \
folks, that camera on your phone contains an image sensor. And on this image \
sensor is a grid of pixels. And each pixel records a value (or a set of \
values). 

Each number represents a value of the intensity of light that hit that pixel. 

In just this example, 0 means the pixel registered light hitting it (so this \
pixel will be white), and 1 means the pixel did not register light (so this \
pixel will be black). This is an 8 by 8 matrix. \
\>", "Text",ExpressionUUID->"3862630d-9649-4abc-9338-bda01398d32d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"examplearray", "=", 
   RowBox[{"(", GridBox[{
      {"1", "1", "0", "0", "1", "1", "0", "0"},
      {"1", "1", "0", "0", "1", "1", "0", "0"},
      {"0", "0", "1", "1", "0", "0", "1", "1"},
      {"0", "0", "1", "1", "0", "0", "1", "1"},
      {"1", "1", "0", "0", "1", "1", "0", "0"},
      {"1", "1", "0", "0", "1", "1", "0", "0"},
      {"0", "0", "1", "1", "0", "0", "1", "1"},
      {"0", "0", "1", "1", "0", "0", "1", "1"}
     }], ")"}]}], ";"}]], "Input",
 CellLabel->
  "In[165]:=",ExpressionUUID->"5d2a305d-f2da-48a1-8359-585014ebc490"],

Cell["\<\
An image produced by this matrix of values would look like the grid of pixels \
below. The tick marks are aligned with the center point of each pixel. I\
\[CloseCurlyQuote]ve included red grid lines that represent the edges of \
pixels so that you can make out each pixel. \
\>", "Text",ExpressionUUID->"38ffcf31-df78-4b5a-aca1-6044fc4ec1f2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"examplearray", ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Mesh", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", "All"}], ",", 
   RowBox[{"MeshStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"Thickness", "[", ".01", "]"}], ",", "Red"}], "]"}], "}"}]}], 
   ",", 
   RowBox[{"PlotRangePadding", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellLabel->
  "In[166]:=",ExpressionUUID->"ae8f37d1-bbc6-4657-bb0d-a1d86fa41566"],

Cell[BoxData[
 GraphicsBox[{
   RasterBox[{{1, 1, 0, 0, 1, 1, 0, 0}, {1, 1, 0, 0, 1, 1, 0, 0}, {0, 0, 1, 1,
     0, 0, 1, 1}, {0, 0, 1, 1, 0, 0, 1, 1}, {1, 1, 0, 0, 1, 1, 0, 0}, {1, 1, 
    0, 0, 1, 1, 0, 0}, {0, 0, 1, 1, 0, 0, 1, 1}, {0, 0, 1, 1, 0, 0, 1, 1}}, {{
    0, 0}, {8, 8}}, {0, 1}], {
    {RGBColor[1, 0, 0], Thickness[0.01], 
     StyleBox[
      LineBox[{{{0, 8}, {8, 8}}, {{0, 7}, {8, 7}}, {{0, 6}, {8, 6}}, {{0, 
       5}, {8, 5}}, {{0, 4}, {8, 4}}, {{0, 3}, {8, 3}}, {{0, 2}, {8, 2}}, {{0,
        1}, {8, 1}}, {{0, 0}, {8, 0}}}],
      Antialiasing->False]}, 
    {RGBColor[1, 0, 0], Thickness[0.01], 
     StyleBox[
      LineBox[{{{0, 0}, {0, 8}}, {{1, 0}, {1, 8}}, {{2, 0}, {2, 8}}, {{3, 
       0}, {3, 8}}, {{4, 0}, {4, 8}}, {{5, 0}, {5, 8}}, {{6, 0}, {6, 8}}, {{7,
        0}, {7, 8}}, {{8, 0}, {8, 8}}}],
      Antialiasing->False]}}},
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{7.5, 
       FormBox["1", TraditionalForm]}, {6.5, 
       FormBox["2", TraditionalForm]}, {5.5, 
       FormBox["3", TraditionalForm]}, {4.5, 
       FormBox["4", TraditionalForm]}, {3.5, 
       FormBox["5", TraditionalForm]}, {2.5, 
       FormBox["6", TraditionalForm]}, {1.5, 
       FormBox["7", TraditionalForm]}, {0.5, 
       FormBox["8", TraditionalForm]}}, {{7.5, 
       FormBox["1", TraditionalForm]}, {6.5, 
       FormBox["2", TraditionalForm]}, {5.5, 
       FormBox["3", TraditionalForm]}, {4.5, 
       FormBox["4", TraditionalForm]}, {3.5, 
       FormBox["5", TraditionalForm]}, {2.5, 
       FormBox["6", TraditionalForm]}, {1.5, 
       FormBox["7", TraditionalForm]}, {0.5, 
       FormBox["8", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}, {3.5, 
       FormBox["4", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}, {5.5, 
       FormBox["6", TraditionalForm]}, {6.5, 
       FormBox["7", TraditionalForm]}, {7.5, 
       FormBox["8", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}, {3.5, 
       FormBox["4", TraditionalForm]}, {4.5, 
       FormBox["5", TraditionalForm]}, {5.5, 
       FormBox["6", TraditionalForm]}, {6.5, 
       FormBox["7", TraditionalForm]}, {7.5, 
       FormBox["8", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotRangePadding->1]], "Output",
 CellLabel->
  "Out[166]=",ExpressionUUID->"0c8bad68-7f5e-4e68-85a1-e95ab42ba87e"]
}, Open  ]],

Cell["\<\
If I now Downsample the data to get a matrix whose both height and width \
dimensions has been divided by 2, I get this matrix:\
\>", "Text",ExpressionUUID->"0beb34b8-9899-497f-a407-9aab1dc52741"],

Cell[BoxData[
 RowBox[{
  RowBox[{"resampledexamplearray", "=", 
   RowBox[{"ArrayResample", "[", 
    RowBox[{"examplearray", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "4"}], "}"}], ",", 
     RowBox[{"Resampling", "\[Rule]", "\"\<Nearest\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->
  "In[167]:=",ExpressionUUID->"1093e79d-8257-4238-8389-b265c450f9c7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"resampledexamplearray", "//", "MatrixForm"}]], "Input",
 CellLabel->
  "In[168]:=",ExpressionUUID->"21b688a1-45b7-4cc7-a4da-ecc004415cdf"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "1", "0"},
     {"0", "1", "0", "1"},
     {"1", "0", "1", "0"},
     {"0", "1", "0", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[168]//MatrixForm=",ExpressionUUID->"7fea39d3-8f24-4a29-a748-\
aeb7113ec689"]
}, Open  ]],

Cell["\<\
Made into an image, the downsampled matrix looks like the following:\
\>", "Text",ExpressionUUID->"365f8cea-1d52-4330-b2bc-2cf208e776cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"resampledexamplearray", ",", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"Mesh", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", "All"}], ",", 
   RowBox[{"MeshStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"Thickness", "[", ".01", "]"}], ",", "Red"}], "]"}], "}"}]}], 
   ",", 
   RowBox[{"PlotRangePadding", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellLabel->
  "In[169]:=",ExpressionUUID->"bbfab33e-35f6-4fe6-8bb4-68bb7217d4a1"],

Cell[BoxData[
 GraphicsBox[{
   RasterBox[{{1, 0, 1, 0}, {0, 1, 0, 1}, {1, 0, 1, 0}, {0, 1, 0, 1}}, {{0, 
    0}, {4, 4}}, {0, 1}], {
    {RGBColor[1, 0, 0], Thickness[0.01], 
     StyleBox[
      LineBox[{{{0, 4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 2}}, {{0, 
       1}, {4, 1}}, {{0, 0}, {4, 0}}}],
      Antialiasing->False]}, 
    {RGBColor[1, 0, 0], Thickness[0.01], 
     StyleBox[
      LineBox[{{{0, 0}, {0, 4}}, {{1, 0}, {1, 4}}, {{2, 0}, {2, 4}}, {{3, 
       0}, {3, 4}}, {{4, 0}, {4, 4}}}],
      Antialiasing->False]}}},
  Frame->True,
  FrameLabel->{None, None},
  FrameTicks->{{{{3.5, 
       FormBox["1", TraditionalForm]}, {2.5, 
       FormBox["2", TraditionalForm]}, {1.5, 
       FormBox["3", TraditionalForm]}, {0.5, 
       FormBox["4", TraditionalForm]}}, {{3.5, 
       FormBox["1", TraditionalForm]}, {2.5, 
       FormBox["2", TraditionalForm]}, {1.5, 
       FormBox["3", TraditionalForm]}, {0.5, 
       FormBox["4", TraditionalForm]}}}, {{{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}, {3.5, 
       FormBox["4", TraditionalForm]}}, {{0.5, 
       FormBox["1", TraditionalForm]}, {1.5, 
       FormBox["2", TraditionalForm]}, {2.5, 
       FormBox["3", TraditionalForm]}, {3.5, 
       FormBox["4", TraditionalForm]}}}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic},
  PlotRangePadding->1]], "Output",
 CellLabel->
  "Out[169]=",ExpressionUUID->"8e21452b-957d-43e1-b467-38a0eeef1c59"]
}, Open  ]],

Cell["\<\
You\[CloseCurlyQuote]ll notice that the matrix is now 4 by 4 pixels. This is \
because of the way I asked Mathematica to Downsample the image. Mathematica \
starting at the top left of the matrix, looked at every 2 by 2 block of \
pixels. It found the average value in each 2 by 2 block and then replaced the \
2 by 2 block with 1 pixel with the average value. Not all images look exactly \
the same when downsampled. It just so happens that this was the case due to \
my exquisite planning. \
\>", "Text",ExpressionUUID->"86bc1f6d-4634-428b-a2f7-8b1004e1a401"],

Cell["\<\
Ideally, when decimating an image of the beam, you want to crop the most and \
downsample the least, as cropping throws out useless image data (the black \
background) and keeps the important image data (the beam) untouched, whereas \
downsampling introduces new intensity values everywhere in the image because \
it is averaging, therefore affecting the data. It was with this philosophy in \
mind that I created my decimation tool. \
\>", "Text",ExpressionUUID->"d748072d-fb83-4628-84d8-3d6d085d064f"],

Cell[TextData[{
 StyleBox["To recap",
  FontWeight->"Bold"],
 ": \n\n1)Decimation is done to save computing time. \n2)There are two \
methods to doing decimation that I cover and use: \n\ta) automatic cropping\n\
\tb) downsampling\n3) Automatic cropping is preferred as it  leaves the image \
data we care about untouched.\n4) We can choose how much we want to decimate \
an image by. We can choose how much to crop it by. We can choose how much to \
Downsample it by. "
}], "Text",ExpressionUUID->"316fb411-5ffb-400c-974e-889230e7983d"],

Cell[TextData[{
 "Automatic cropping at first appeared to be a perfect solution, however, \
perfection does not exist. It was decided by Dr. Marcus and the group, that \
an image should not take more than 2 minutes to be analyzed by the computer \
(the range of potential times ranged from 10 secs to 10 minutes). It was \
found that automatic cropping does not save time with large beams. Here\
\[CloseCurlyQuote]s why:\n\nFor explanation purposes lets say the amount of \
pixels in a image that demands exactly 2 minutes of computing time when \
analyzed is represented by the variable ",
 StyleBox["p",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ". If a beam is sufficiently large, the automatic cropping tool will output \
an image with an amount of pixels \[GreaterEqual] ",
 StyleBox["p.",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" ",
  FontSlant->"Italic"],
 "Thus, on these sufficiently large beams, the auto-cropping program produces \
images that will take more than 2 minutes of analysis. Further, it was found \
that downsampling an image from 1.3 million pixels to a ",
 StyleBox["p",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" ",
  FontSlant->"Italic"],
 "number of pixels did not significantly affect the data. \n\nTherefore:\n\
Auto-cropping is used on images of beams that will result in a final image \
with an amount of pixels less than ",
 StyleBox["p",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[". (that is to say auto-cropping is used on beams smaller than a \
certain size). \n",
  FontSlant->"Italic"],
 "Downsampling is used on images of beams that would have resulted in an \
amount of pixels greater than ",
 StyleBox["p",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 StyleBox[" ",
  FontWeight->"Bold"],
 "had these same images been auto-cropped. When downsampled, images are \
always downsampled to have an amount of pixels equal to ",
 StyleBox["p",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 ". "
}], "Text",ExpressionUUID->"4a56aaf5-fe49-4984-b119-13cedecbb216"],

Cell["\<\
With any of the analysis that we do on an image, we will have to convert it \
to real world units. For example, we have to go from pixels to millimeters. \
With automatic cropping this pixel to meter conversion is easy, as one pixel \
has a side dimensions always equal to 5.2 \[Mu]m. However,  downsampling, \
always changes a pixel\[CloseCurlyQuote]s side dimension to 10.4 \[Mu]m. This \
is from one pixel being replaced by a 2 by 2 block of pixels. The dimensions \
that I chose to have an image downsampled to were specifically chosen to \
maintain the original dimension ratio.\
\>", "Text",ExpressionUUID->"f65646d2-9f52-4c30-a8a8-5465cdb1db3e"],

Cell[BoxData[
 RowBox[{"CellPrint", "@", 
  RowBox[{"Cell", "[", 
   RowBox[{"\"\<What is a Module?\>\"", ",", "\"\<Chapter\>\"", 
    RowBox[{"(*", 
     RowBox[{"format", " ", "style", " ", "option"}], "*)"}], ",", 
    RowBox[{"CellTags", "\[Rule]", 
     RowBox[{"{", "\"\<mod\>\"", "}"}]}]}], "]"}]}]], "Input",
 CellOpen->False,
 CellLabel->
  "In[170]:=",ExpressionUUID->"a2566440-3398-4591-986a-ad39e8a5993c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["What is a Module?", "Chapter",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellTags->"mod",ExpressionUUID->"ece04f85-ed0d-4580-ba4b-888a33113a7f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Home:  \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Table of Contents\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<toc\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Before:\>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<The Need to Decimate\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<deci\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<After: \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Code Use to Decimate\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<decicode\>\""}], 
      "}"}]}], "]"}]}], "]"}]}], "Input",
 CellOpen->False,
 CellLabel->
  "In[171]:=",ExpressionUUID->"4adafa31-0342-4cdd-8ba3-aac3412da0de"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Home:  \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Table of Contents\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["5z372_shm", 3, 1]], 44], "toc"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Home:  ", 
   Hyperlink["Table of Contents", {
     NotebookObject[
      FrontEndObject[
       LinkObject["5z372_shm", 3, 1]], 44], "toc"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[171]:=",ExpressionUUID->"b3fa626d-90f1-4970-9512-7d81dae651ba"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Before:\"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"The Need to Decimate\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["5z372_shm", 3, 1]], 44], "deci"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Before:", 
   Hyperlink["The Need to Decimate", {
     NotebookObject[
      FrontEndObject[
       LinkObject["5z372_shm", 3, 1]], 44], "deci"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[171]:=",ExpressionUUID->"4dca53ce-8d23-41e6-8d9c-6f5a949b8478"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"After: \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Code Use to Decimate\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["5z372_shm", 3, 1]], 44], "decicode"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["After: ", 
   Hyperlink["Code Use to Decimate", {
     NotebookObject[
      FrontEndObject[
       LinkObject["5z372_shm", 3, 1]], 44], "decicode"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[171]:=",ExpressionUUID->"8e037544-2476-446b-93a9-84c001d9ac7f"]
}, Open  ]]
}, Open  ]],

Cell["\<\
You can skip this section if you do not plan on fixing or changing the \
package code. If you do plan on editing the package code, you will have to \
edit the .m files found in the \[OpenCurlyDoubleQuote]FindingSpotSize\
\[CloseCurlyDoubleQuote] folder. You will also have to be familiar with the \
Module Function and the format for .m files. \
\>", "Text",ExpressionUUID->"23fb5982-080c-4e1e-bfd6-9951e3958d93"],

Cell["\<\
We are going to take a short break from talking about decimation and talk \
about a function in Mathematica I used a lot when creating my tools. The \
function is Module. You will need to understand what a module is, if you ever \
want to change, or add to, my FindingSpotSize package. \
\>", "Text",ExpressionUUID->"b68e00b0-0327-4656-a11f-99e64a8510e1"],

Cell["\<\
You can always ask Mathematica to tell you about a function by putting a \
question mark in front of the Function. However as you see below, this \
information is not always helpful.\
\>", "Text",ExpressionUUID->"ce833934-b21c-4e35-8b5d-a48dca50b3e4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Module"}]], "Input",
 CellLabel->
  "In[174]:=",ExpressionUUID->"8a4169f8-f5b4-4bbb-a6de-931c2d73d60f"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Module",
              ButtonNote->"paclet:ref/Module"],
             "\"paclet:ref/Module\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Module\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) specifies that \
occurrences of the symbols \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"y\\\", \\\"TI\\\"]\\), \[Ellipsis] in \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) should be treated as local. \
\\n\\!\\(\\*RowBox[{\\\"Module\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\"=\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"0\\\", \
\\\"TR\\\"]]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\
\\\"}], \\\",\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
defines initial values for \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\), \
\[Ellipsis]. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Module", 
                    "paclet:ref/Module", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"],"\"  \"",StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False],
                    "\"  \"",TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Module.html"], 
                    None}, "http://reference.wolfram.com/language/ref/Module.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"HoldAll", ",", "Protected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Module\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Module",
              ButtonNote->"paclet:ref/Module"],
             "\"paclet:ref/Module\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Module\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \
\\\",\\\", StyleBox[\\\"y\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", \
StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) specifies that \
occurrences of the symbols \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\), \
\\!\\(\\*StyleBox[\\\"y\\\", \\\"TI\\\"]\\), \[Ellipsis] in \
\\!\\(\\*StyleBox[\\\"expr\\\", \\\"TI\\\"]\\) should be treated as local. \
\\n\\!\\(\\*RowBox[{\\\"Module\\\", \\\"[\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{RowBox[{StyleBox[\\\"x\\\", \\\"TI\\\"], \\\"=\\\", \
SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"0\\\", \
\\\"TR\\\"]]}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\
\\\"}], \\\",\\\", StyleBox[\\\"expr\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
defines initial values for \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\), \
\[Ellipsis]. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Module\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{StyleBox[\"x\", \"TI\"], \",\", StyleBox[\"y\", \"TI\"], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", StyleBox[\"expr\", \
\"TI\"]}], \"]\"}]\) specifies that occurrences of the symbols \
\!\(\*StyleBox[\"x\", \"TI\"]\), \!\(\*StyleBox[\"y\", \"TI\"]\), \[Ellipsis] \
in \!\(\*StyleBox[\"expr\", \"TI\"]\) should be treated as local. \n\
\!\(\*RowBox[{\"Module\", \"[\", RowBox[{RowBox[{\"{\", \
RowBox[{RowBox[{StyleBox[\"x\", \"TI\"], \"=\", SubscriptBox[StyleBox[\"x\", \
\"TI\"], StyleBox[\"0\", \"TR\"]]}], \",\", StyleBox[\"\[Ellipsis]\", \
\"TR\"]}], \"}\"}], \",\", StyleBox[\"expr\", \"TI\"]}], \"]\"}]\) defines \
initial values for \!\(\*StyleBox[\"x\", \"TI\"]\), \[Ellipsis]. ", 
    "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/Module", "Web" -> 
      "http://reference.wolfram.com/language/ref/Module.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {HoldAll, Protected}, "FullName" -> 
    "System`Module"], False]]], "Output",
 CellLabel->
  "Out[174]=",ExpressionUUID->"f44af2a7-2b4b-4ad5-bf27-d09dba76f84c"]
}, Open  ]],

Cell["\<\
So don\[CloseCurlyQuote]t count on Mathematica to help you use its functions. \
\>", "Text",ExpressionUUID->"c90a61ac-4924-4a2d-9a93-a80f2ee0ca09"],

Cell["\<\
A module establishes a local namespace or scope for variables. Module allows \
you to use already defined variables as if they were not already defined. \
\>", "Text",ExpressionUUID->"839aa269-f855-46cd-a3db-202d27c29963"],

Cell[TextData[{
 "Let us see an example. \nFirst, I am going to assign a value of 7 to a \
variable x",
 StyleBox[" ",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 "for no particular reason. "
}], "Text",ExpressionUUID->"b0227ea5-3121-4832-86ad-fb0ab8de5081"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"x", "=", "7"}]], "Input",
 CellLabel->
  "In[175]:=",ExpressionUUID->"2fdd3554-382e-41d8-8669-b05d3235f2f4"],

Cell[BoxData["7"], "Output",
 CellLabel->
  "Out[175]=",ExpressionUUID->"29ce84a8-8b77-4116-b1e5-2bd486d4f0e9"]
}, Open  ]],

Cell["\<\
Now I am going to create a module. Don\[CloseCurlyQuote]t worry about the \
code I use to do it yet, just focus on the output for now. Inside the module \
I am going to create the variable x. I am then going to assign a value of 3 \
to x. The output should be 3 and it is. 

This is a nice feature of a module. Anything that goes into a module assumes \
a new identify as long as it is in the module and when you are outside of the \
module everything goes back to the way it was. \
\>", "Text",ExpressionUUID->"4a6a85fd-e8b9-4ded-b52e-6bd2a562d676"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", "x", "}"}], ",", 
   RowBox[{
    RowBox[{"x", "=", "3"}], ";", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<The value of x inside the module: \>\"", "<>", 
      RowBox[{"ToString", "[", "x", "]"}]}], "]"}]}]}], "]"}]], "Input",
 CellLabel->
  "In[176]:=",ExpressionUUID->"40d9a09d-3c8d-4b04-bb9b-ed47b4c97367"],

Cell[BoxData["\<\"The value of x inside the module: 3\"\>"], "Print",
 CellLabel->
  "During evaluation of \
In[176]:=",ExpressionUUID->"2ad8ed47-e061-4dbd-ab02-8b8672dd9c64"]
}, Open  ]],

Cell["\<\
Now I am going to ask Mathematica to tell me what the value of x is outside \
of the module. If I setup the module correctly, the value outputted should be \
7, and it is.\
\>", "Text",ExpressionUUID->"15198ecc-5afb-4265-be46-3d97626f829a"],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellLabel->
  "In[177]:=",ExpressionUUID->"58262253-0b43-49d4-b9b2-e9aba4b11626"],

Cell[BoxData["7"], "Output",
 CellLabel->
  "Out[177]=",ExpressionUUID->"a8e6c23b-5c5c-426a-9733-e14a484abdb6"]
}, Open  ]],

Cell["\<\
You can even do calculations in a module. I am going to assign x a value of 5 \
and then add 6 to this value. It should be noted that module outputs the \
result of the last entry inside it. In this case it outputs the result of  x+6\
\>", "Text",ExpressionUUID->"fc49c149-9a24-4909-9c9c-eb70fd678fc1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", "x", "}"}], ",", 
   RowBox[{
    RowBox[{"x", "=", "5"}], ";", 
    RowBox[{"x", "+", "6"}]}]}], "]"}]], "Input",
 CellLabel->
  "In[178]:=",ExpressionUUID->"f8cfafa6-de75-48f4-9506-73bd2535eab4"],

Cell[BoxData["11"], "Output",
 CellLabel->
  "Out[178]=",ExpressionUUID->"af563aec-a520-485d-ae11-0babdc511d2a"]
}, Open  ]],

Cell["The format of Module is as follow:", "Text",ExpressionUUID->"ddd84b80-6ac7-48e6-8b9f-e6b1968171f1"],

Cell["\<\
Module[{list of variables you want to use in your module},each line of code; \
separated; by semicolons; with the last entry being the returned output]\
\>", "Program",ExpressionUUID->"06c808af-afd9-413e-9dca-213ad7b1926c"],

Cell["\<\
A multivariable and multiple calculation Module looks like the below line of \
code. You will see that the last entry is a list. What I like about Module is \
that you can return a list as an output. \
\>", "Text",ExpressionUUID->"1d4156db-8e04-4211-82ea-8758c8a659ce"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", 
   RowBox[{
    RowBox[{"x", "=", "8"}], ";", 
    RowBox[{"y", "=", "2"}], ";", 
    RowBox[{"z", "=", 
     RowBox[{"x", "+", "y"}]}], ";", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]}], "]"}]], "Input",
 CellLabel->
  "In[179]:=",ExpressionUUID->"a02eed41-8274-45a1-9849-a63091068e67"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8", ",", "2", ",", "10"}], "}"}]], "Output",
 CellLabel->
  "Out[179]=",ExpressionUUID->"52f8e4f9-de82-4b32-ac8e-38a8a103a543"]
}, Open  ]],

Cell[TextData[{
 "I mentioned before that anything that goes into a Module assumes a new \
identity. That is only true if you make sure to list the variable in the \
section of Module I called: ",
 StyleBox["list of variables you want to use in your module",
  FontSlant->"Italic"],
 ". "
}], "Text",ExpressionUUID->"b850a529-d7ad-46a0-876c-514083ebbaba"],

Cell[TextData[{
 "x still has a value of 7 in the global scope (outside of the module) . If I \
do not list x as a variable in the ",
 StyleBox["list of variables you want to use in your module",
  FontSlant->"Italic"],
 " list, then the module does not give x a temporarily new identity. That can \
be seen below where I do not list it. "
}], "Text",ExpressionUUID->"de3e7657-c096-4d97-a762-e8750ab48092"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"y", ",", "z"}], "}"}], ",", 
   RowBox[{
    RowBox[{"y", "=", "2"}], ";", 
    RowBox[{"z", "=", 
     RowBox[{"x", "+", "y"}]}], ";", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]}], "]"}]], "Input",
 CellLabel->
  "In[180]:=",ExpressionUUID->"92cd3bac-77cf-4e46-a72c-aca392780d41"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7", ",", "2", ",", "9"}], "}"}]], "Output",
 CellLabel->
  "Out[180]=",ExpressionUUID->"cd6b3044-0bd9-4954-a918-9abfe4d41618"]
}, Open  ]],

Cell["\<\
It is important to know that if do not list x intially but do assign it a \
value inside the module, I change its value outside of the module (because, \
well, it never really was officially in the module). That can be seen below \
where I assign x a value of 6 inside the module and then ask for Mathematica \
to tell me what it thinks the value of x is. Instead of returning 7, \
Mathematica will tell us x now has a value of 6. \
\>", "Text",ExpressionUUID->"7969209e-249f-440d-9a00-4799c956cfb3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"y", ",", "z"}], "}"}], ",", 
   RowBox[{
    RowBox[{"x", "=", "6"}], ";", 
    RowBox[{"y", "=", "2"}], ";", 
    RowBox[{"z", "=", 
     RowBox[{"x", "+", "y"}]}], ";", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y", ",", "z"}], "}"}]}]}], "]"}]], "Input",
 CellLabel->
  "In[181]:=",ExpressionUUID->"17258ee3-3a24-4e71-909b-f6ba35a8eb3e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6", ",", "2", ",", "8"}], "}"}]], "Output",
 CellLabel->
  "Out[181]=",ExpressionUUID->"5d4bc269-a09d-4c24-a60a-f81a4b850508"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["x"], "Input",
 CellLabel->
  "In[182]:=",ExpressionUUID->"0bcf64e6-1c0f-4d97-ae81-111bb29e4bb1"],

Cell[BoxData["6"], "Output",
 CellLabel->
  "Out[182]=",ExpressionUUID->"dd3ffc7f-574d-4173-9868-70f59721b0ef"]
}, Open  ]],

Cell["Also,", "Text",ExpressionUUID->"4961e4bb-f8d6-40c0-b054-8266a03d358e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", "x", "}"}], ",", 
   RowBox[{"x", "=", "3"}]}], "]"}]], "Input",
 CellLabel->
  "In[183]:=",ExpressionUUID->"42cc9a2b-e1dc-4080-8f24-9688a999107e"],

Cell[BoxData["3"], "Output",
 CellLabel->
  "Out[183]=",ExpressionUUID->"d3b565d6-e06d-4a52-a55a-6c182158fed0"]
}, Open  ]],

Cell["is equivalent to:", "Text",ExpressionUUID->"31fc073a-dc48-41ad-a63f-1e3199e6d6f7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "=", "3"}], "}"}], ",", "x"}], "]"}]], "Input",
 CellLabel->
  "In[184]:=",ExpressionUUID->"fde4fae4-025c-42b5-b766-d0f3a24ec856"],

Cell[BoxData["3"], "Output",
 CellLabel->
  "Out[184]=",ExpressionUUID->"70f8912b-372b-48cd-b489-c98953a5dbf6"]
}, Open  ]],

Cell[TextData[{
 "You can assign initial values to the variables inside the ",
 StyleBox["list of variables you want to use in your module.",
  FontSlant->"Italic"]
}], "Text",ExpressionUUID->"bf8a3cc5-1f7f-43a1-a822-1a49dd85b800"],

Cell["\<\
Module is a very powerful when used correctly because it can allow for \
actually programs to be written in Mathematica. You might be asking where \
exactly does one use Module. Well you use it in user defined functions. I am \
going to write out the code to a random user defined function using Module \
below and then I will explain it. \
\>", "Text",ExpressionUUID->"e23f885d-49f8-4143-9301-b0b9dfdbd805"],

Cell[BoxData[
 RowBox[{
  RowBox[{"add2", "[", "number_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"num", "=", "number"}], ",", "newnum"}], "}"}], ",", 
    RowBox[{
     RowBox[{"newnum", "=", 
      RowBox[{"num", "+", "2"}]}], ";", 
     RowBox[{"{", 
      RowBox[{"num", ",", "newnum"}], "}"}]}]}], "]"}]}]], "Input",
 CellLabel->
  "In[185]:=",ExpressionUUID->"9d0aed51-7580-4cab-bbef-dd1e813d25e4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"add2", "[", "5", "]"}]], "Input",
 CellLabel->
  "In[186]:=",ExpressionUUID->"77874d21-b1ee-48db-a359-f492a9e88c44"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "7"}], "}"}]], "Output",
 CellLabel->
  "Out[186]=",ExpressionUUID->"64f8e29e-d856-4607-b844-2a693104bc5b"]
}, Open  ]],

Cell["\<\
So this function will add 2 to any number entered into it. Let\
\[CloseCurlyQuote]s break this code down into pieces. First, I write the \
function\[CloseCurlyQuote]s name and decide what to call the input value. \
\>", "Text",ExpressionUUID->"f22da23c-bd53-48a9-8128-5669d6250bd0"],

Cell["add2[number_] ", "Program",ExpressionUUID->"419870ec-35c4-468c-b4f5-4d4b051e5951"],

Cell["\<\
For any function you create, you put an underscore after the name of the \
variable you use for an input value. \
\>", "Text",ExpressionUUID->"97cd3542-5cd0-4bab-928f-b84b502506f9"],

Cell["Then I add", "Text",ExpressionUUID->"e1bce7a8-50f9-4e79-ada4-702af6512634"],

Cell[":=", "Program",ExpressionUUID->"090a2fcb-a8e3-46ce-8f6d-f4c52e620bef"],

Cell["to get", "Text",ExpressionUUID->"5150e56e-7c0a-4a2c-af99-4d1d00ec39a7"],

Cell["add2[number_] :=", "Program",ExpressionUUID->"d596a9e4-a6d3-4701-8e95-b34c08174be0"],

Cell["When you create a function you use you use \[OpenCurlyDoubleQuote]:=\
\[CloseCurlyDoubleQuote]. ", "Text",ExpressionUUID->"3cff6871-3811-40d3-91d4-\
22f66eebbc88"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "t_", "]"}], ":=", 
  SuperscriptBox["t", "2"]}]], "Input",
 CellLabel->
  "In[187]:=",ExpressionUUID->"1b9a88da-8845-46d1-92f3-9743c610da8d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "5", "]"}]], "Input",
 CellLabel->
  "In[188]:=",ExpressionUUID->"4ba75595-51b6-43d1-97ad-ef1a5252717a"],

Cell[BoxData["25"], "Output",
 CellLabel->
  "Out[188]=",ExpressionUUID->"45cf8422-4e2f-43c3-a0dd-80a1e90c0117"]
}, Open  ]],

Cell["\<\
I then create the module. Notice there is a comma between the list of \
variables and the area where computations happen. \
\>", "Text",ExpressionUUID->"a38b4d80-1182-4cae-ac26-580526d27225"],

Cell["add2[number_] :=Module[{},]", "Program",ExpressionUUID->"0f234d5a-b533-47f3-8976-be260e045329"],

Cell["\<\
And then I tell it what variables I will be using inside the module. I will \
be using a variable called \[OpenCurlyDoubleQuote]num\[CloseCurlyDoubleQuote] \
and \[OpenCurlyDoubleQuote]newnum\[CloseCurlyDoubleQuote]. This part of the \
process always requires foresight.\
\>", "Text",ExpressionUUID->"3f20c280-9182-4f3e-9c5b-6a69ea9cf5d4"],

Cell["add2[number_] :=Module[{num, newnum},]", "Program",ExpressionUUID->"ec38805d-10cd-4c90-aeca-370470c2d8db"],

Cell["\<\
I then make it so that \[OpenCurlyDoubleQuote]num\[CloseCurlyDoubleQuote] has \
an initial value equal to the input value \[OpenCurlyDoubleQuote]number\
\[CloseCurlyDoubleQuote]. This part of the process creates the bridge that \
spans from the outside of the module to inside the module. \
\>", "Text",ExpressionUUID->"68659b82-bc9f-4c94-8be5-a04ce5edb287"],

Cell["add2[number_] := Module[{num = number, newnum},]", "Program",ExpressionUUID->"7471452e-8758-49e2-953e-1a37329e9682"],

Cell["\<\
Before I thought of what variables I needed inside the module, I thought \
about how I was going to return the output. I decided that I would assign the \
result of the decision to the a variable called \[OpenCurlyDoubleQuote]newnum\
\[CloseCurlyDoubleQuote]. Hence, why I created a \
\[OpenCurlyDoubleQuote]newnum\[CloseCurlyDoubleQuote] variable inside the \
module earlier and said that it required foresight. 

So now I perform adding 2 to num, and assign the result to variable \
\[OpenCurlyDoubleQuote]newnum\[CloseCurlyDoubleQuote]. Notice that I use \
\[OpenCurlyDoubleQuote]num\[CloseCurlyDoubleQuote] instead of number in the \
addition. It is best to use the variables local to the Module when doing \
anything inside the module. \
\>", "Text",ExpressionUUID->"5912ab1d-558c-43dc-ac05-82fa6fe5ee5f"],

Cell["\<\
add2[number_] := Module[{num = number, newnum}, newnum = num + 2]\
\>", "Program",ExpressionUUID->"a6b5ff32-af7d-4737-87b3-659ec90c4c4a"],

Cell["\<\
I then decide what the output will be. I decided it will be a list where the \
first element is the inputted value, and the second element is the value of \
the result of the addition. \
\>", "Text",ExpressionUUID->"2388f84d-02c1-4a97-a746-cc729060dd8f"],

Cell["\<\
add2[number_] := Module[{num = number, newnum},newnum = num + 2;{num,newnum}]\
\
\>", "Program",ExpressionUUID->"952b5fd3-7d6c-4264-8f74-9e079eed71f2"],

Cell["\<\
And that is it. I hope you have a better understanding of what a module is. \
If you still don\[CloseCurlyQuote]t understand, ask the internet for help. I\
\[CloseCurlyQuote]m sure there are better explanations online. No matter what \
you do, make sure you understand Module and how to use it to create a user \
defined (\[OpenCurlyDoubleQuote]do something\[CloseCurlyDoubleQuote]) \
function (not a math function) before moving on. \
\>", "Text",ExpressionUUID->"6435367e-5d85-4560-a802-fc0becbae310"],

Cell[TextData[{
 StyleBox["ATTENTION",
  FontWeight->"Bold"],
 ": After coming back to this program after a few months of doing other \
things, I now realize I probably could have done everything not using module. \
But since that is what I used and since I am not going to change it all to \
not use module, I think it was still worth your while to read about Module. "
}], "Text",ExpressionUUID->"517cf99a-304c-4205-be2c-00ae88e1cfa4"],

Cell[BoxData[
 RowBox[{"CellPrint", "@", 
  RowBox[{"Cell", "[", 
   RowBox[{"\"\<Code Used to Decimate\>\"", ",", "\"\<Chapter\>\"", 
    RowBox[{"(*", 
     RowBox[{"format", " ", "style", " ", "option"}], "*)"}], ",", 
    RowBox[{"CellTags", "\[Rule]", 
     RowBox[{"{", "\"\<decicode\>\"", "}"}]}]}], "]"}]}]], "Input",
 CellOpen->False,
 CellLabel->
  "In[189]:=",ExpressionUUID->"a2df2f77-df3b-405d-8718-92007b39c839"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code Used to Decimate", "Chapter",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellTags->"decicode",ExpressionUUID->"01e42782-3818-4381-b8de-4c9076698240"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Home:  \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Table of Contents\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<toc\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Before:\>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<What is a Module?\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<mod\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<After: \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Fitting an Image\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<fitim\>\""}], 
      "}"}]}], "]"}]}], "]"}]}], "Input",
 CellOpen->False,
 CellLabel->
  "In[190]:=",ExpressionUUID->"2f1658d1-6d0d-4375-9b01-0a674272ecbf"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Home:  \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Table of Contents\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["5z372_shm", 3, 1]], 44], "toc"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Home:  ", 
   Hyperlink["Table of Contents", {
     NotebookObject[
      FrontEndObject[
       LinkObject["5z372_shm", 3, 1]], 44], "toc"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[190]:=",ExpressionUUID->"5df47f96-6d64-4643-b12a-fd51d7e08bc9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Before:\"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"What is a Module?\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["5z372_shm", 3, 1]], 44], "mod"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Before:", 
   Hyperlink["What is a Module?", {
     NotebookObject[
      FrontEndObject[
       LinkObject["5z372_shm", 3, 1]], 44], "mod"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[190]:=",ExpressionUUID->"071fbd29-9721-46dc-8eef-4e33880a7c96"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"After: \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Fitting an Image\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["5z372_shm", 3, 1]], 44], "fitim"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["After: ", 
   Hyperlink["Fitting an Image", {
     NotebookObject[
      FrontEndObject[
       LinkObject["5z372_shm", 3, 1]], 44], "fitim"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[190]:=",ExpressionUUID->"8ecbc0c7-79ce-4df7-8a0e-d1be21ae90d5"]
}, Open  ]]
}, Open  ]],

Cell["\<\
My decimation process is performed by the tool TotallyDecimate. Below is a \
flowchart of the process that occurs in TotallyDecimate. \
I\[CloseCurlyQuote]ll walk you through the process. At this point, you are \
not expected to know about the elements in the flowchart. In fact don\
\[CloseCurlyQuote]t look at the flow chart for more than 5 seconds until you\
\[CloseCurlyQuote]ve finished reading this section. For now, just know that \
the tool follows a process. \
\>", "Text",ExpressionUUID->"ce076bc9-267b-40f2-873f-cc67f34507d5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "TotallyDecimate"}]], "Input",
 CellLabel->
  "In[193]:=",ExpressionUUID->"2c76f4f2-5bd8-4ca1-a993-d5dfb5eb846d"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"TotallyDecimate[imdata] will do the most effecient \
and effective decimation possible and will return {data,pixel multiplier to \
mm value}\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"TotallyDecimate", "[", 
                    RowBox[{"TotalDecimation`Private`imdata_", ",", 
                    RowBox[{
                    "TotalDecimation`Private`thenumber_", ":", "157"}]}], 
                    "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "TotalDecimation`Private`newdata", "=", 
                    "TotalDecimation`Private`imdata"}], ",", 
                    "TotalDecimation`Private`winq", ",", 
                    RowBox[{
                    "TotalDecimation`Private`number", "=", 
                    "TotalDecimation`Private`thenumber"}]}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"TotalDecimation`Private`winq", "=", 
                    RowBox[{"Max", "[", 
                    RowBox[{
                    "GuessSpotSize", "[", "TotalDecimation`Private`newdata", 
                    "]"}], "]"}]}], ";", 
                    RowBox[{"Piecewise", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"AutoCropSuperRevised", "[", 
                    RowBox[{"TotalDecimation`Private`newdata", ",", 
                    RowBox[{
                    "CroppingDimensions", "[", 
                    "TotalDecimation`Private`newdata", "]"}]}], "]"}], ",", 
                    "0.0052`"}], "}"}], ",", 
                    RowBox[{
                    "TotalDecimation`Private`winq", "\[LessEqual]", 
                    "TotalDecimation`Private`number"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Decimate", "[", 
                    RowBox[{"TotalDecimation`Private`newdata", ",", "1"}], 
                    "]"}], ",", "0.0104`"}], "}"}], ",", 
                    RowBox[{
                    "TotalDecimation`Private`winq", ">", 
                    "TotalDecimation`Private`number"}]}], "}"}]}], "}"}], 
                    "]"}]}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"TotalDecimation`TotallyDecimate\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"TotallyDecimate[imdata] will do the most effecient \
and effective decimation possible and will return {data,pixel multiplier to \
mm value}\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "TotallyDecimate[imdata] will do the most effecient and effective \
decimation possible and will return {data,pixel multiplier to mm value}", 
    "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, TotalDecimation`TotallyDecimate, {
      TotalDecimation`TotallyDecimate[
         Pattern[TotalDecimation`Private`imdata, 
          Blank[]], 
         Optional[
          Pattern[TotalDecimation`Private`thenumber, 
           Blank[]], 157]] :> 
       Module[{TotalDecimation`Private`newdata = 
          TotalDecimation`Private`imdata, TotalDecimation`Private`winq, 
          TotalDecimation`Private`number = TotalDecimation`Private`thenumber},
          TotalDecimation`Private`winq = Max[
            GuessSpotSize`GuessSpotSize[TotalDecimation`Private`newdata]]; 
         Piecewise[{{{
              AutoCroppingSuperRevised`AutoCropSuperRevised[
              TotalDecimation`Private`newdata, 
               CroppingDimensions`CroppingDimensions[
               TotalDecimation`Private`newdata]], 0.0052}, 
             TotalDecimation`Private`winq <= 
             TotalDecimation`Private`number}, {{
              Decimator`Decimate[TotalDecimation`Private`newdata, 1], 0.0104},
              TotalDecimation`Private`winq > 
             TotalDecimation`Private`number}}]]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "TotalDecimation`TotallyDecimate"], False]]], "Output",
 CellLabel->
  "Out[193]=",ExpressionUUID->"4754b35b-30c7-42a0-a1d4-a70a438a9a75"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LayeredGraphPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<Image\>\"", "\[Rule]", "\"\<TotallyDecimate\>\""}], ",", 
     RowBox[{"\"\<TotallyDecimate\>\"", "\[Rule]", "\"\<GuessSpotSize\>\""}], 
     ",", 
     RowBox[{
     "\"\<CroppingDimensions\>\"", "\[Rule]", 
      "\"\<AutoCropSuperRevised\>\""}], ",", 
     RowBox[{
     "\"\<GuessSpotSize\>\"", "\[Rule]", "\"\<Piecewise Function\>\""}], ",", 
     
     RowBox[{
     "\"\<Piecewise Function\>\"", "\[Rule]", 
      "\"\<GuessSpotSize \[LessEqual] 157 pixels\>\""}], ",", 
     RowBox[{
     "\"\<Piecewise Function\>\"", "\[Rule]", " ", 
      "\"\<GuessSpotSize>157 pixels\>\""}], ",", 
     RowBox[{
     "\"\<GuessSpotSize>157 pixels\>\"", "\[Rule]", 
      "\"\<Decimate (Downsample)\>\""}], ",", 
     RowBox[{
     "\"\<Decimate (Downsample)\>\"", "\[Rule]", 
      "\"\<{Downsampled Image Data,0.0104}\>\""}], ",", 
     RowBox[{
     "\"\<GuessSpotSize \[LessEqual] 157 pixels\>\"", "\[Rule]", 
      "\"\<CroppingDimensions\>\""}], ",", 
     RowBox[{
     "\"\<AutoCropSuperRevised\>\"", "\[Rule]", " ", 
      "\"\<{AutoCropped Image Data, 0.0052}\>\""}]}], "}"}], ",", "Top", ",", 
   
   RowBox[{"VertexLabeling", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Black", ",", 
      RowBox[{"Arrowheads", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"0.07", ",", "0.6"}], "}"}], "}"}], "]"}], ",", 
      RowBox[{"Thickness", "[", "0.005", "]"}]}], "}"}]}], 
   RowBox[{"(*", 
    RowBox[{",", " ", 
     RowBox[{"ImageSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"700", ",", "350"}], "}"}]}]}], "*)"}], ",", 
   RowBox[{"PlotRangePadding", "\[Rule]", "None"}], ",", 
   RowBox[{"DirectedEdges", "\[Rule]", "True"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", "2"}], ",", 
   RowBox[{"ImagePadding", "\[Rule]", "Automatic"}], ",", 
   RowBox[{"Background", "\[Rule]", 
    RowBox[{"GrayLevel", "[", ".99", "]"}]}]}], "]"}]], "Input",
 CellLabel->
  "In[194]:=",ExpressionUUID->"85a21294-f5da-4552-afb7-95c7b717bdf2"],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0], Thickness[0.005], Opacity[0.7], Arrowheads[{{0.07, 0.6}}], 
    ArrowBox[{{0., 2.}, {0., 1.7142857142857142`}}, 0.02261146496815286], 
    ArrowBox[{{0., 1.7142857142857142`}, {0., 1.4285714285714284`}}, 
     0.02261146496815286], 
    ArrowBox[{{0., 1.4285714285714284`}, {0., 1.1428571428571428`}}, 
     0.02261146496815286], 
    ArrowBox[{{-1., 0.5714285714285714}, {-1., 0.2857142857142857}}, 
     0.02261146496815286], 
    ArrowBox[{{-1., 0.2857142857142857}, {-1., 0.}}, 0.02261146496815286], 
    ArrowBox[{{0., 1.1428571428571428`}, {-1., 0.8571428571428571}}, 
     0.02261146496815286], 
    ArrowBox[{{0., 1.1428571428571428`}, {0., 0.8571428571428571}}, 
     0.02261146496815286], 
    ArrowBox[{{-1., 0.8571428571428571}, {-1., 0.5714285714285714}}, 
     0.02261146496815286], 
    ArrowBox[{{0., 0.8571428571428571}, {0., 0.5714285714285714}}, 
     0.02261146496815286], 
    ArrowBox[{{0., 0.5714285714285714}, {0., 0.2857142857142857}}, 
     0.02261146496815286]}, 
   {GrayLevel[0], Thickness[0.005], Arrowheads[{{0.07, 0.6}}], EdgeForm[{
    GrayLevel[0], Opacity[
    0.7]}], {DiskBox[{0., 2.}, 0.02261146496815286], InsetBox[
      StyleBox["\<\"Image\"\>",
       StripOnInput->False,
       Arrowheads->{{0.07, 0.6}},
       LineColor->GrayLevel[0],
       FrontFaceColor->GrayLevel[0],
       BackFaceColor->GrayLevel[0],
       GraphicsColor->GrayLevel[0],
       Thickness->0.005,
       FontColor->GrayLevel[0]], 
      Offset[{2, 2}, {0.02261146496815286, 2.022611464968153}], ImageScaled[{0, 0}],
      BaseStyle->"Graphics"]}, {
     DiskBox[{0., 1.7142857142857142}, 0.02261146496815286], InsetBox[
      StyleBox["\<\"TotallyDecimate\"\>",
       StripOnInput->False,
       Arrowheads->{{0.07, 0.6}},
       LineColor->GrayLevel[0],
       FrontFaceColor->GrayLevel[0],
       BackFaceColor->GrayLevel[0],
       GraphicsColor->GrayLevel[0],
       Thickness->0.005,
       FontColor->GrayLevel[0]], 
      Offset[{2, 2}, {0.02261146496815286, 1.736897179253867}], ImageScaled[{0, 0}],
      BaseStyle->"Graphics"]}, {
     DiskBox[{0., 1.4285714285714284}, 0.02261146496815286], InsetBox[
      StyleBox["\<\"GuessSpotSize\"\>",
       StripOnInput->False,
       Arrowheads->{{0.07, 0.6}},
       LineColor->GrayLevel[0],
       FrontFaceColor->GrayLevel[0],
       BackFaceColor->GrayLevel[0],
       GraphicsColor->GrayLevel[0],
       Thickness->0.005,
       FontColor->GrayLevel[0]], 
      Offset[{2, 2}, {0.02261146496815286, 1.4511828935395812}], ImageScaled[{0, 0}],
      BaseStyle->"Graphics"]}, {
     DiskBox[{-1., 0.5714285714285714}, 0.02261146496815286], InsetBox[
      StyleBox["\<\"CroppingDimensions\"\>",
       StripOnInput->False,
       Arrowheads->{{0.07, 0.6}},
       LineColor->GrayLevel[0],
       FrontFaceColor->GrayLevel[0],
       BackFaceColor->GrayLevel[0],
       GraphicsColor->GrayLevel[0],
       Thickness->0.005,
       FontColor->GrayLevel[0]], 
      Offset[{2, 2}, {-0.9773885350318472, 0.5940400363967242}], ImageScaled[{0, 0}],
      BaseStyle->"Graphics"]}, {
     DiskBox[{-1., 0.2857142857142857}, 0.02261146496815286], InsetBox[
      StyleBox["\<\"AutoCropSuperRevised\"\>",
       StripOnInput->False,
       Arrowheads->{{0.07, 0.6}},
       LineColor->GrayLevel[0],
       FrontFaceColor->GrayLevel[0],
       BackFaceColor->GrayLevel[0],
       GraphicsColor->GrayLevel[0],
       Thickness->0.005,
       FontColor->GrayLevel[0]], 
      Offset[{2, 2}, {-0.9773885350318472, 0.30832575068243856}], 
      ImageScaled[{0, 0}],
      BaseStyle->"Graphics"]}, {
     DiskBox[{0., 1.1428571428571428}, 0.02261146496815286], InsetBox[
      StyleBox["\<\"Piecewise Function\"\>",
       StripOnInput->False,
       Arrowheads->{{0.07, 0.6}},
       LineColor->GrayLevel[0],
       FrontFaceColor->GrayLevel[0],
       BackFaceColor->GrayLevel[0],
       GraphicsColor->GrayLevel[0],
       Thickness->0.005,
       FontColor->GrayLevel[0]], 
      Offset[{2, 2}, {0.02261146496815286, 1.1654686078252956}], ImageScaled[{0, 0}],
      BaseStyle->"Graphics"]}, {
     DiskBox[{-1., 0.8571428571428571}, 0.02261146496815286], InsetBox[
      StyleBox["\<\"GuessSpotSize \[LessEqual] 157 pixels\"\>",
       StripOnInput->False,
       Arrowheads->{{0.07, 0.6}},
       LineColor->GrayLevel[0],
       FrontFaceColor->GrayLevel[0],
       BackFaceColor->GrayLevel[0],
       GraphicsColor->GrayLevel[0],
       Thickness->0.005,
       FontColor->GrayLevel[0]], 
      Offset[{2, 2}, {-0.9773885350318472, 0.87975432211101}], ImageScaled[{0, 0}],
      BaseStyle->"Graphics"]}, {
     DiskBox[{0., 0.8571428571428571}, 0.02261146496815286], InsetBox[
      StyleBox["\<\"GuessSpotSize>157 pixels\"\>",
       StripOnInput->False,
       Arrowheads->{{0.07, 0.6}},
       LineColor->GrayLevel[0],
       FrontFaceColor->GrayLevel[0],
       BackFaceColor->GrayLevel[0],
       GraphicsColor->GrayLevel[0],
       Thickness->0.005,
       FontColor->GrayLevel[0]], 
      Offset[{2, 2}, {0.02261146496815286, 0.87975432211101}], ImageScaled[{0, 0}],
      BaseStyle->"Graphics"]}, {
     DiskBox[{0., 0.5714285714285714}, 0.02261146496815286], InsetBox[
      StyleBox["\<\"Decimate (Downsample)\"\>",
       StripOnInput->False,
       Arrowheads->{{0.07, 0.6}},
       LineColor->GrayLevel[0],
       FrontFaceColor->GrayLevel[0],
       BackFaceColor->GrayLevel[0],
       GraphicsColor->GrayLevel[0],
       Thickness->0.005,
       FontColor->GrayLevel[0]], 
      Offset[{2, 2}, {0.02261146496815286, 0.5940400363967242}], ImageScaled[{0, 0}],
      BaseStyle->"Graphics"]}, {
     DiskBox[{0., 0.2857142857142857}, 0.02261146496815286], InsetBox[
      StyleBox["\<\"{Downsampled Image Data,0.0104}\"\>",
       StripOnInput->False,
       Arrowheads->{{0.07, 0.6}},
       LineColor->GrayLevel[0],
       FrontFaceColor->GrayLevel[0],
       BackFaceColor->GrayLevel[0],
       GraphicsColor->GrayLevel[0],
       Thickness->0.005,
       FontColor->GrayLevel[0]], 
      Offset[{2, 2}, {0.02261146496815286, 0.30832575068243856}], 
      ImageScaled[{0, 0}],
      BaseStyle->"Graphics"]}, {DiskBox[{-1., 0.}, 0.02261146496815286], 
     InsetBox[
      StyleBox["\<\"{AutoCropped Image Data, 0.0052}\"\>",
       StripOnInput->False,
       Arrowheads->{{0.07, 0.6}},
       LineColor->GrayLevel[0],
       FrontFaceColor->GrayLevel[0],
       BackFaceColor->GrayLevel[0],
       GraphicsColor->GrayLevel[0],
       Thickness->0.005,
       FontColor->GrayLevel[0]], 
      Offset[{2, 2}, {-0.9773885350318472, 0.02261146496815286}], 
      ImageScaled[{0, 0}],
      BaseStyle->"Graphics"]}}},
  Background->GrayLevel[0.99],
  BaseStyle->{
    GrayLevel[0], 
    Arrowheads[{{0.07, 0.6}}], 
    Thickness[0.005]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImagePadding->Automatic,
  PlotRangePadding->None]], "Output",
 CellLabel->
  "Out[194]=",ExpressionUUID->"9cb7b794-ef67-43c5-90d3-337e528a6368"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Image", "Section",ExpressionUUID->"c6012fc3-6878-4f54-a815-b07a4549e5d2"],

Cell["\<\
The first thing that happens in the decimation process is that the image gets \
imported into Mathematica. The image taken with the Thorlab camera is a \
bitmap image (it could be different but as I mentioned before we only take \
images in the bitmap format). This file type is chosen because it does not \
compress the image data at all. 

The first thing to do when importing an image is to give Mathematica the file \
path to the image. For the purposes of this explanation, I will be importing \
an image located in the documentation folder. It is an image of a laser beam. \
We will be using the Import function.\
\>", "Text",ExpressionUUID->"1b809259-61f8-4e4d-9e47-f1debe345bea"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Import"}]], "Input",
 CellLabel->
  "In[195]:=",ExpressionUUID->"f07ce19e-680b-4082-825b-25c5474a423d"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Import",
              ButtonNote->"paclet:ref/Import"],
             "\"paclet:ref/Import\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Import\\\", \\\"[\\\", \
StyleBox[\\\"source\\\", \\\"TI\\\"], \\\"]\\\"}]\\) imports data from \\!\\(\
\\*StyleBox[\\\"source\\\", \\\"TI\\\"]\\), returning a \
\\!\\(\\*StyleBox[\\\"Wolfram Language\\\", \\\"RebrandingTerm\\\"]\\) \
representation of it.\\n\\!\\(\\*RowBox[{\\\"Import\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"source\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"format\\\\\\\",\\\\\\\"\
TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True]}], \\\"]\\\"}]\\) \
takes the file to be in the specified format.\\n\\!\\(\\*RowBox[{\\\"Import\\\
\", \\\"[\\\", RowBox[{StyleBox[\\\"source\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"elements\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) imports the \
specified \\!\\(\\*StyleBox[\\\"elements\\\", \\\"TI\\\"]\\) from a \
file.\\n\\!\\(\\*RowBox[{\\\"Import\\\", \\\"[\\\", RowBox[{StyleBox[\\\"path\
\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \
\\\",\\\", StyleBox[\\\"options\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) uses the \
specified options.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Import", 
                    "paclet:ref/Import", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"],"\"  \"",StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False],
                    "\"  \"",TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Import.html"], 
                    None}, "http://reference.wolfram.com/language/ref/Import.\
html", "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{"Protected", ",", "ReadProtected"}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Import\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{13., {4., 9.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{13., {4., 9.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Import",
              ButtonNote->"paclet:ref/Import"],
             "\"paclet:ref/Import\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Import\\\", \\\"[\\\", \
StyleBox[\\\"source\\\", \\\"TI\\\"], \\\"]\\\"}]\\) imports data from \\!\\(\
\\*StyleBox[\\\"source\\\", \\\"TI\\\"]\\), returning a \
\\!\\(\\*StyleBox[\\\"Wolfram Language\\\", \\\"RebrandingTerm\\\"]\\) \
representation of it.\\n\\!\\(\\*RowBox[{\\\"Import\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"source\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"\\\\\\\"\\\\!\\\\(\\\\*StyleBox[\\\\\\\"format\\\\\\\",\\\\\\\"\
TI\\\\\\\"]\\\\)\\\\\\\"\\\", ShowStringCharacters->True]}], \\\"]\\\"}]\\) \
takes the file to be in the specified format.\\n\\!\\(\\*RowBox[{\\\"Import\\\
\", \\\"[\\\", RowBox[{StyleBox[\\\"source\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"elements\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) imports the \
specified \\!\\(\\*StyleBox[\\\"elements\\\", \\\"TI\\\"]\\) from a \
file.\\n\\!\\(\\*RowBox[{\\\"Import\\\", \\\"[\\\", RowBox[{StyleBox[\\\"path\
\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"], \
\\\",\\\", StyleBox[\\\"options\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) uses the \
specified options.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Import\", \"[\", StyleBox[\"source\", \"TI\"], \"]\"}]\) \
imports data from \!\(\*StyleBox[\"source\", \"TI\"]\), returning a \
\!\(\*StyleBox[\"Wolfram Language\", \"RebrandingTerm\"]\) representation of \
it.\n\!\(\*RowBox[{\"Import\", \"[\", RowBox[{StyleBox[\"source\", \"TI\"], \
\",\", StyleBox[\"\\\"\\!\\(\\*StyleBox[\\\"format\\\",\\\"TI\\\"]\\)\\\"\", \
ShowStringCharacters->True]}], \"]\"}]\) takes the file to be in the \
specified format.\n\!\(\*RowBox[{\"Import\", \"[\", RowBox[{StyleBox[\"source\
\", \"TI\"], \",\", StyleBox[\"elements\", \"TI\"]}], \"]\"}]\) imports the \
specified \!\(\*StyleBox[\"elements\", \"TI\"]\) from a file.\n\!\(\*RowBox[{\
\"Import\", \"[\", RowBox[{StyleBox[\"path\", \"TI\"], \",\", StyleBox[\"\
\[Ellipsis]\", \"TR\"], \",\", StyleBox[\"options\", \"TI\"]}], \"]\"}]\) \
uses the specified options.", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/Import", "Web" -> 
      "http://reference.wolfram.com/language/ref/Import.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {Protected, ReadProtected}, "FullName" -> 
    "System`Import"], False]]], "Output",
 CellLabel->
  "Out[195]=",ExpressionUUID->"1114c492-54eb-4bf4-ab98-7523311c8357"]
}, Open  ]],

Cell["To import an image we could just use the basic option:", "Text",ExpressionUUID->"7c4b07be-b56b-4e08-bf41-94d63306ae23"],

Cell["Import[\"image path\"]", "Program",ExpressionUUID->"9a679cf4-56bc-4301-8ec8-efa47ff22c94"],

Cell["\<\
But this imports the image as an image. You might be thinking, that sounds \
good, but, in fact, we do not want an image. We want just the data of the \
image, not the visual representation of the data that is commonly referred to \
as the image. To get just the data of the image we specify Data:\
\>", "Text",ExpressionUUID->"05dabb15-4b78-4e9b-8aca-6a8fc52cb552"],

Cell["Import[\"image path\", \"Data\"]", "Program",ExpressionUUID->"3141dcbc-81f7-4b9d-91ae-96537b2d915d"],

Cell["\<\
Let us look at the differences in importing the image and importing the image \
data: \
\>", "Text",ExpressionUUID->"f1a7f0f0-b8ad-491f-963b-6b98d2a1e2e1"],

Cell["First, I am importing the image:", "Text",ExpressionUUID->"15cb2947-4740-4bec-93b1-a5ad71c3bcae"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{"currentdirectory", "<>", "\"\<image.bmp\>\""}], "]"}]], "Input",
 CellLabel->
  "In[196]:=",ExpressionUUID->"d6510856-09e4-4d5b-aa24-9cd9dfa72309"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
2WabbbbZZptttr1j/w/VLcj2
    "], {{0, 210}, {234, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{234, 210},
  PlotRange->{{0, 234}, {0, 210}}]], "Output",
 CellLabel->
  "Out[196]=",ExpressionUUID->"0fb0b24a-e28c-4e62-b642-d6e54506a2f4"]
}, Open  ]],

Cell["\<\
Second, I am importing the image data. Below is the data that is used to form \
the visual image above. \
\>", "Text",ExpressionUUID->"26b99415-b235-4558-b517-894b52991431"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{
   RowBox[{"currentdirectory", "<>", "\"\<image.bmp\>\""}], ",", 
   "\"\<Data\>\""}], "]"}]], "Input",
 CellLabel->
  "In[197]:=",ExpressionUUID->"528f3836-d02e-46cc-9228-b7460923fdf3"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             TemplateBox[{"162"},
              "OutputSizeLimit`Skeleton"], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
           TemplateBox[{"208"},
            "OutputSizeLimit`Skeleton"], ",", 
           RowBox[{"{", 
            TemplateBox[{"1"},
             "OutputSizeLimit`Skeleton"], "}"}]}], "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          PaneBox[
           TagBox[
            TooltipBox[
             StyleBox[
              StyleBox[
               DynamicBox[ToBoxes[
                 FEPrivate`FrontEndResource[
                 "FEStrings", "sizeBriefExplanation"], StandardForm],
                ImageSizeCache->{58., {2., 8.}}],
               StripOnInput->False,
               DynamicUpdating->True,
               LineSpacing->{1, 2},
               LineIndent->0,
               LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLText",
              StripOnInput->False],
             StyleBox[
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
                StandardForm]], DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}, StripOnInput -> False]],
            Annotation[#, 
             Style[
              Dynamic[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
              DynamicUpdating -> True, LineIndent -> 0, 
              LinebreakAdjustments -> {1., 100, 0, 0, 0}, 
              LineSpacing -> {1, 2}], "Tooltip"]& ],
           Alignment->Center,
           BaselinePosition->Baseline,
           ImageSize->{Automatic, {25, Full}}], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{50., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 197, 28561798149187822138, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 197, 28561798149187822138, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 197, 28561798149187822138, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{74., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True,
              LineSpacing->{1, 2},
              LineIndent->0,
              LinebreakAdjustments->{1., 100, 0, 0, 0}], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, {25, Full}}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[28561798149187822138 === $SessionID, 
   Out[197], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellLabel->
  "Out[197]=",ExpressionUUID->"741395df-d0de-47ba-bbb9-66a0b4ff29cc"]
}, Open  ]],

Cell[TextData[{
 "They look a bit different, right? If on the output of the second one you \
just see ",
 StyleBox["{... 1 ...}",
  FontWeight->"Bold"],
 ", click \[OpenCurlyDoubleQuote]show more\[CloseCurlyDoubleQuote] at the \
bottom of the white box and you will be shown a list of lists of values \
(mostly zeros). "
}], "Text",ExpressionUUID->"bb4c2e85-c7fe-4870-958b-448c004380ee"],

Cell[CellGroupData[{

Cell["Side Note on Using <>:", "Subsection",ExpressionUUID->"65600bba-2dda-4711-bc58-7bb313647021"],

Cell["\<\
You might be wondering about the path I specified in the Import function \
because it doesn\[CloseCurlyQuote]t look like a path I\[CloseCurlyQuote]ve \
shown you before:\
\>", "Text",ExpressionUUID->"f5a853cc-723e-4e96-81b2-a355a930d8b0"],

Cell["currentdirectory <> \"image.bmp\"", "Program",ExpressionUUID->"854a7cf5-8e98-494e-8a58-cd7f4533dbd4"],

Cell["\<\
Earlier, the directory of the documentation folder which houses the image, \
was saved to the variable \[OpenCurlyDoubleQuote]currentdirectory\
\[CloseCurlyDoubleQuote] with the command:\
\>", "Text",ExpressionUUID->"83eaae71-c94c-409b-822c-11c8d5f81ed6"],

Cell["currentdirectory = NotebookDirectory[]", "Program",ExpressionUUID->"c937d424-582c-44c3-810b-933b748c1740"],

Cell["\<\
The Notebookdirectory[] gives us a path that is very close to the path of the \
image that I want to import. However, it is missing the last piece of \
information, which is the image name and the image file type. I add this \
information to the path of the current folder\[CloseCurlyQuote]s directory \
using the less than and greater than signs in the configuration as seen below:\
\>", "Text",ExpressionUUID->"7edb909c-1cd3-41a9-bf11-2371120b5e00"],

Cell["<>", "Program",ExpressionUUID->"630dbe0f-53e4-43ce-abc9-a3bf86f20878"],

Cell["\<\
And because a path is just a string of characters, I need the name of the \
file and image file type to be a string as well. I make it a string by \
enclosing it in quotes as such:\
\>", "Text",ExpressionUUID->"a4d6e6c4-a0ff-4f4d-812e-4aa3b820d32a"],

Cell["\"image.bmp\"", "Program",ExpressionUUID->"375e9a03-41f9-41d6-abbe-ca451bcda388"],

Cell["\<\
Also, <> is shorthand for the StringJoin function. That is to say: \
\>", "Text",ExpressionUUID->"d8c36dfc-dba7-44f6-ab8d-52276a6a8763"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\"\<firstpart\>\"", "<>", "\"\<secondpart\>\"", "<>", 
  "\"\<thirdpart\>\"", "<>", "\"\<etc\>\""}]], "Input",
 CellLabel->
  "In[198]:=",ExpressionUUID->"a68558f4-61cb-4dfc-8ed5-8214747f132c"],

Cell[BoxData["\<\"firstpartsecondpartthirdpartetc\"\>"], "Output",
 CellLabel->
  "Out[198]=",ExpressionUUID->"d456e8e2-d96c-4cbc-94f6-34c6ba1a5450"]
}, Open  ]],

Cell["is equivalent to:", "Text",ExpressionUUID->"99aa47b5-efb9-49f0-a98c-823d675929a0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringJoin", "[", 
  RowBox[{
  "\"\<firstpart\>\"", ",", "\"\<secondpart\>\"", ",", "\"\<thirdpart\>\"", 
   ",", "\"\<etc\>\""}], "]"}]], "Input",
 CellLabel->
  "In[199]:=",ExpressionUUID->"3eb7d726-5421-4feb-9052-9ec4f320e7dc"],

Cell[BoxData["\<\"firstpartsecondpartthirdpartetc\"\>"], "Output",
 CellLabel->
  "Out[199]=",ExpressionUUID->"7e71a2e1-6c17-4800-bbf6-14db68910c16"]
}, Open  ]],

Cell["\<\
If I put it all together I get a string referring to the path of the image. \
currentdirectory is a variable already assigned a string of characters \
representing the path of the image\[CloseCurlyQuote]s folder so no quotes are \
needed around it.\
\>", "Text",ExpressionUUID->"3fb82b47-3be4-4f37-9ee9-3da98621b3f2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"currentdirectory", "<>", "\"\<image.bmp\>\""}]], "Input",
 CellLabel->
  "In[200]:=",ExpressionUUID->"60f4da74-156b-43b1-ac00-f271dc75933c"],

Cell[BoxData["\<\"/Users/efm/Documents/Jobs June \
2019/git/beamprofiler/documentation/image.bmp\"\>"], "Output",
 CellLabel->
  "Out[200]=",ExpressionUUID->"8dbc3cca-06a3-4950-a3c8-0395050b2b7f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["End of Side Note on <>. Back to the Image Import :", "Subsection",ExpressionUUID->"62fb76ca-26f1-4f55-83bd-c5436dcefb52"],

Cell[TextData[{
 "The list of list of values from the raw data import is actually a matrix of \
values. A digital image can be represented as a matrix of values. Each \
element in such a matrix represents a pixel (picture element) of an image. In \
a colored image, each pixel contains three values. Each value represents an \
intensity value recorded in a different color space. The three different \
color spaces are ",
 StyleBox["R",
  FontSize->18,
  FontWeight->"Bold"],
 "ed, ",
 StyleBox["G",
  FontSize->18,
  FontWeight->"Bold"],
 "reen, and ",
 StyleBox["B",
  FontSize->18,
  FontWeight->"Bold"],
 "lue. This is commonly referred to as RGB. Intensity values for any color \
space go from 0 to 255 inclusively (meaning 0 and 255 are acceptable color \
values). \n\nIf you want to see what a pixel looks like, open up an image on \
your computer and keep zooming in until you cannot zoom in anymore. At this \
zoom level you should be able to see colored squares. Each of these squares \
is a pixel. \n\nHere\[CloseCurlyQuote]s the thing: the Thorlabs camera is a \
grayscale camera. It is not an RGB camera. Instead of recording intensity \
values for the three R, G, and B color spaces, the Thorlabs camera records \
intensity values only in the grayscale (or gray) color space. This means each \
pixel in an image taken with the Thorlabs camera only contains one value. \n\n\
Below is a grid. The top row is the grayscale intensity value and the bottom \
row is the color associated with that value. You can scroll to the right to \
view more of the colors. "
}], "Text",ExpressionUUID->"9ae52093-8247-4704-afee-e8b80a57964d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"arraydatalist", "=", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"#", "&"}], ")"}], ",", "256", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[201]:=",ExpressionUUID->"28c83ebc-42b6-4494-89a0-167619f3746a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"numbers", "=", 
   RowBox[{"Array", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#", "//", "Round"}], "}"}], "&"}], ",", "256", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "255."}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[202]:=",ExpressionUUID->"f965aa4a-c8c2-4ec9-bf70-50c8682878d0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"colorchart", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"(", 
       RowBox[{"GrayLevel", "[", "#", "]"}], ")"}], "}"}], "&"}], "/@", 
    "arraydatalist"}]}], ";"}]], "Input",
 CellLabel->
  "In[203]:=",ExpressionUUID->"77f0f09c-e42c-41b7-bd70-4a8c6c571be8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"numbers", "//", "Transpose"}], ",", 
     RowBox[{"colorchart", "//", "Transpose"}], ",", "1"}], "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}], ",", 
   RowBox[{"Background", "\[Rule]", "White"}], ",", 
   RowBox[{"ItemSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2", ",", " ", "2"}], "}"}]}]}], "]"}]], "Input",
 CellLabel->
  "In[204]:=",ExpressionUUID->"6074535e-a3da-4116-a023-a0974beeeff8"],

Cell[BoxData[
 TagBox[GridBox[{
    {"0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13",
      "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", 
     "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", 
     "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", 
     "50", "51", "52", "53", "54", "55", "56", "57", "58", "59", "60", "61", 
     "62", "63", "64", "65", "66", "67", "68", "69", "70", "71", "72", "73", 
     "74", "75", "76", "77", "78", "79", "80", "81", "82", "83", "84", "85", 
     "86", "87", "88", "89", "90", "91", "92", "93", "94", "95", "96", "97", 
     "98", "99", "100", "101", "102", "103", "104", "105", "106", "107", 
     "108", "109", "110", "111", "112", "113", "114", "115", "116", "117", 
     "118", "119", "120", "121", "122", "123", "124", "125", "126", "127", 
     "128", "129", "130", "131", "132", "133", "134", "135", "136", "137", 
     "138", "139", "140", "141", "142", "143", "144", "145", "146", "147", 
     "148", "149", "150", "151", "152", "153", "154", "155", "156", "157", 
     "158", "159", "160", "161", "162", "163", "164", "165", "166", "167", 
     "168", "169", "170", "171", "172", "173", "174", "175", "176", "177", 
     "178", "179", "180", "181", "182", "183", "184", "185", "186", "187", 
     "188", "189", "190", "191", "192", "193", "194", "195", "196", "197", 
     "198", "199", "200", "201", "202", "203", "204", "205", "206", "207", 
     "208", "209", "210", "211", "212", "213", "214", "215", "216", "217", 
     "218", "219", "220", "221", "222", "223", "224", "225", "226", "227", 
     "228", "229", "230", "231", "232", "233", "234", "235", "236", "237", 
     "238", "239", "240", "241", "242", "243", "244", "245", "246", "247", 
     "248", "249", "250", "251", "252", "253", "254", "255"},
    {
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[0],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[1, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.0026143790849673196`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["1", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[1, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[1, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[2, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.005228758169934639],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["2", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[2, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[2, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[1, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.00784313725490196],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["1", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[1, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[1, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[4, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.010457516339869279`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["4", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[4, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[4, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[1, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.0130718954248366],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["1", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[1, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[1, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[2, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.01568627450980392],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["2", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[2, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[2, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[7, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.01830065359477124],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["7", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[7, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[7, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[8, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.020915032679738557`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["8", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[8, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[8, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[3, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.023529411764705882`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["3", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[3, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[3, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[2, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.0261437908496732],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["2", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[2, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[2, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[11, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.028758169934640518`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["11", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[11, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[11, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[4, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.03137254901960784],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["4", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[4, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[4, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[13, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.033986928104575154`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["13", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[13, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[13, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[14, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.03660130718954248],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["14", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[14, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[14, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[1, 17]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.039215686274509796`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["1", "17"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[1, 17]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[1, 17]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[16, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.041830065359477114`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["16", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[16, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[16, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[1, 15]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.04444444444444444],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["1", "15"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[1, 15]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[1, 15]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[6, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.047058823529411764`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["6", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[6, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[6, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[19, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.049673202614379075`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["19", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[19, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[19, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[4, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.0522875816993464],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["4", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[4, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[4, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[7, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.054901960784313725`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["7", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[7, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[7, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[22, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.057516339869281036`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["22", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[22, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[22, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[23, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.06013071895424837],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["23", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[23, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[23, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[8, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.06274509803921569],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["8", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[8, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[8, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[5, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.06535947712418301],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["5", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[5, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[5, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[26, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.06797385620915031],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["26", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[26, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[26, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[9, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.07058823529411765],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["9", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[9, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[9, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[28, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.07320261437908496],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["28", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[28, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[28, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[29, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.07581699346405227],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["29", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[29, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[29, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[2, 17]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.07843137254901959],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["2", "17"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[2, 17]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[2, 17]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[31, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.08104575163398692],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["31", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[31, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[31, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[32, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.08366013071895423],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["32", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[32, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[32, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[11, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.08627450980392157],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["11", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[11, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[11, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[2, 15]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.08888888888888888],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["2", "15"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[2, 15]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[2, 15]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[7, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.09150326797385619],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["7", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[7, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[7, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[12, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.09411764705882353],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["12", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[12, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[12, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[37, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.09673202614379084],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["37", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[37, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[37, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[38, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.09934640522875815],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["38", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[38, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[38, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[13, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.10196078431372549`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["13", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[13, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[13, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[8, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.1045751633986928],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["8", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[8, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[8, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[41, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.10718954248366011`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["41", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[41, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[41, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[14, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.10980392156862745`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["14", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[14, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[14, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[43, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.11241830065359477`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["43", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[43, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[43, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[44, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.11503267973856207`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["44", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[44, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[44, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[3, 17]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.11764705882352941`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["3", "17"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[3, 17]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[3, 17]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[46, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.12026143790849673`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["46", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[46, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[46, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[47, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.12287581699346403`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["47", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[47, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[47, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[16, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.12549019607843137`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["16", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[16, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[16, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[49, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.12810457516339868`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["49", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[49, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[49, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[10, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.13071895424836602`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["10", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[10, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[10, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[1, 5]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.13333333333333333`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["1", "5"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[1, 5]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[1, 5]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[52, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.13594771241830061`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["52", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[52, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[52, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[53, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.13856209150326795`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["53", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[53, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[53, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[18, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.1411764705882353],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["18", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[18, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[18, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[11, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.1437908496732026],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["11", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[11, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[11, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[56, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.14640522875816991`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["56", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[56, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[56, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[19, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.14901960784313723`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["19", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[19, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[19, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[58, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.15163398692810454`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["58", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[58, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[58, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[59, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.1542483660130719],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["59", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[59, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[59, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[4, 17]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.15686274509803919`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["4", "17"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[4, 17]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[4, 17]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[61, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.15947712418300652`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["61", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[61, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[61, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[62, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.16209150326797384`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["62", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[62, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[62, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[21, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.16470588235294115`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["21", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[21, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[21, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[64, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.16732026143790846`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["64", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[64, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[64, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[13, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.16993464052287582`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["13", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[13, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[13, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[22, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.17254901960784313`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["22", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[22, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[22, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[67, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.17516339869281042`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["67", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[67, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[67, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[4, 15]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.17777777777777776`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["4", "15"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[4, 15]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[4, 15]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[23, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.18039215686274507`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["23", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[23, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[23, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[14, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.18300653594771238`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["14", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[14, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[14, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[71, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.18562091503267975`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["71", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[71, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[71, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[24, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.18823529411764706`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["24", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[24, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[24, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[73, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.19084967320261434`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["73", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[73, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[73, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[74, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.19346405228758168`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["74", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[74, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[74, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[5, 17]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.196078431372549],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["5", "17"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[5, 17]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[5, 17]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[76, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.1986928104575163],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["76", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[76, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[76, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[77, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.20130718954248367`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["77", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[77, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[77, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[26, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.20392156862745098`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["26", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[26, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[26, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[79, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.2065359477124183],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["79", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[79, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[79, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[16, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.2091503267973856],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["16", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[16, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[16, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[27, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.2117647058823529],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["27", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[27, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[27, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[82, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.21437908496732022`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["82", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[82, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[82, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[83, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.21699346405228762`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["83", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[83, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[83, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[28, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.2196078431372549],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["28", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[28, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[28, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[1, 3]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.2222222222222222],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["1", "3"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[1, 3]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[1, 3]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[86, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.22483660130718955`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["86", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[86, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[86, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[29, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.22745098039215683`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["29", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[29, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[29, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[88, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.23006535947712414`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["88", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[88, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[88, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[89, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.2326797385620915],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["89", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[89, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[89, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[6, 17]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.23529411764705882`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["6", "17"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[6, 17]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[6, 17]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[91, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.23790849673202613`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["91", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[91, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[91, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[92, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.24052287581699347`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["92", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[92, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[92, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[31, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.24313725490196078`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["31", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[31, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[31, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[94, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.24575163398692806`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["94", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[94, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[94, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[19, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.24836601307189543`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["19", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[19, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[19, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[32, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.25098039215686274`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["32", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[32, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[32, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[97, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.25359477124183005`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["97", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[97, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[97, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[98, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.25620915032679736`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["98", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[98, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[98, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[33, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.25882352941176473`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["33", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[33, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[33, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[20, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.26143790849673204`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["20", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[20, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[20, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[101, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.2640522875816993],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["101", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[101, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[101, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[2, 5]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.26666666666666666`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["2", "5"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[2, 5]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[2, 5]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[103, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.269281045751634],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["103", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[103, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[103, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[104, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.27189542483660123`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["104", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[104, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[104, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[7, 17]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.27450980392156865`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["7", "17"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[7, 17]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[7, 17]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[106, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.2771241830065359],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["106", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[106, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[106, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[107, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.2797385620915033],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["107", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[107, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[107, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[36, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.2823529411764706],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["36", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[36, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[36, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[109, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.28496732026143784`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["109", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[109, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[109, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[22, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.2875816993464052],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["22", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[22, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[22, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[37, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.2901960784313725],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["37", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[37, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[37, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[112, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.29281045751633983`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["112", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[112, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[112, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[113, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.29542483660130714`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["113", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[113, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[113, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[38, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.29803921568627445`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["38", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[38, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[38, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[23, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3006535947712418],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["23", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[23, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[23, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[116, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.30326797385620907`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["116", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[116, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[116, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[39, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.30588235294117644`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["39", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[39, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[39, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[118, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3084967320261438],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["118", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[118, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[118, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[7, 15]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.31111111111111106`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["7", "15"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[7, 15]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[7, 15]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[8, 17]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.31372549019607837`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["8", "17"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[8, 17]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[8, 17]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[121, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.31633986928104574`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["121", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[121, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[121, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[122, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.31895424836601305`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["122", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[122, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[122, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[41, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.32156862745098036`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["41", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[41, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[41, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[124, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.32418300653594767`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["124", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[124, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[124, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[25, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.326797385620915],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["25", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[25, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[25, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[42, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3294117647058823],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["42", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[42, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[42, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[127, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3320261437908496],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["127", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[127, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[127, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[128, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3346405228758169],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["128", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[128, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[128, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[43, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.33725490196078434`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["43", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[43, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[43, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[26, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.33986928104575165`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["26", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[26, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[26, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[131, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3424836601307189],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["131", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[131, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[131, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[44, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.34509803921568627`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["44", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[44, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[44, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[133, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3477124183006535],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["133", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[133, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[133, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[134, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.35032679738562084`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["134", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[134, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[134, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[9, 17]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3529411764705882],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["9", "17"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[9, 17]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[9, 17]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[8, 15]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3555555555555555],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["8", "15"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[8, 15]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[8, 15]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[137, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3581699346405228],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["137", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[137, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[137, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[46, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.36078431372549014`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["46", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[46, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[46, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[139, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.36339869281045745`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["139", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[139, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[139, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[28, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.36601307189542476`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["28", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[28, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[28, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[47, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3686274509803922],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["47", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[47, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[47, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[142, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3712418300653595],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["142", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[142, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[142, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[143, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3738562091503268],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["143", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[143, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[143, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[48, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3764705882352941],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["48", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[48, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[48, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[29, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3790849673202614],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["29", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[29, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[29, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[146, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3816993464052287],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["146", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[146, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[146, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[49, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.38431372549019605`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["49", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[49, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[49, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[148, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.38692810457516336`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["148", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[148, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[148, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[149, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.38954248366013067`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["149", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[149, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[149, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[10, 17]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.392156862745098],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["10", "17"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[10, 17]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[10, 17]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[151, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3947712418300653],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["151", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[151, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[151, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[152, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.3973856209150326],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["152", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[152, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[152, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[3, 5]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["3", "5"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[3, 5]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[3, 5]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[154, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.40261437908496733`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["154", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[154, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[154, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[31, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.40522875816993464`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["31", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[31, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[31, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[52, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.40784313725490196`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["52", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[52, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[52, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[157, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.41045751633986927`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["157", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[157, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[157, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[158, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4130718954248366],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["158", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[158, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[158, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[53, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.41568627450980394`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["53", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[53, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[53, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[32, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4183006535947712],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["32", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[32, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[32, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[161, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4209150326797385],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["161", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[161, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[161, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[54, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4235294117647058],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["54", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[54, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[54, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[163, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.42614379084967313`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["163", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[163, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[163, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[164, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.42875816993464044`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["164", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[164, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[164, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[11, 17]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.43137254901960786`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["11", "17"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[11, 17]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[11, 17]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[166, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.43398692810457523`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["166", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[166, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[166, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[167, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4366013071895424],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["167", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[167, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[167, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[56, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4392156862745098],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["56", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[56, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[56, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[169, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4418300653594771],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["169", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[169, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[169, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[2, 3]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4444444444444444],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["2", "3"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[2, 3]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[2, 3]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[57, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4470588235294118],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["57", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[57, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[57, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[172, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4496732026143791],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["172", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[172, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[172, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[173, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4522875816993464],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["173", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[173, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[173, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[58, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.45490196078431366`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["58", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[58, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[58, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[35, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.457516339869281],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["35", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[35, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[35, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[176, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4601307189542483],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["176", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[176, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[176, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[59, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4627450980392157],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["59", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[59, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[59, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[178, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.465359477124183],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["178", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[178, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[178, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[179, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4679738562091504],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["179", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[179, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[179, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[12, 17]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.47058823529411764`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["12", "17"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[12, 17]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[12, 17]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[181, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.47320261437908495`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["181", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[181, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[181, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[182, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.47581699346405226`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["182", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[182, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[182, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[61, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.47843137254901963`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["61", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[61, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[61, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[184, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.48104575163398694`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["184", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[184, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[184, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[37, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.48366013071895425`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["37", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[37, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[37, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[62, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.48627450980392156`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["62", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[62, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[62, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[11, 15]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4888888888888889],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["11", "15"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[11, 15]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[11, 15]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[188, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.49150326797385613`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["188", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[188, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[188, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[63, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4941176470588235],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["63", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[63, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[63, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[38, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.49673202614379086`],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["38", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[38, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[38, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[191, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.4993464052287582],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["191", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[191, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[191, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[64, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5019607843137255],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["64", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[64, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[64, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[193, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5045751633986928],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["193", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[193, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[193, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[194, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5071895424836601],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["194", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[194, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[194, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[13, 17]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5098039215686274],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["13", "17"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[13, 17]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[13, 17]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[196, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5124183006535947],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["196", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[196, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[196, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[197, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.515032679738562],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["197", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[197, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[197, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[66, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5176470588235295],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["66", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[66, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[66, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[199, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5202614379084967],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["199", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[199, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[199, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[40, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5228758169934641],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["40", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[40, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[40, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[67, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5254901960784314],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["67", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[67, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[67, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[202, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5281045751633986],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["202", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[202, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[202, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[203, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.530718954248366],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["203", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[203, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[203, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[4, 5]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5333333333333333],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["4", "5"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[4, 5]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[4, 5]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[41, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5359477124183005],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["41", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[41, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[41, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[206, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.538562091503268],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["206", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[206, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[206, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[69, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5411764705882353],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["69", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[69, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[69, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[208, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5437908496732025],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["208", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[208, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[208, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[209, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5464052287581699],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["209", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[209, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[209, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[14, 17]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5490196078431373],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["14", "17"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[14, 17]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[14, 17]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[211, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5516339869281046],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["211", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[211, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[211, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[212, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5542483660130718],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["212", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[212, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[212, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[71, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5568627450980392],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["71", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[71, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[71, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[214, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5594771241830065],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["214", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[214, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[214, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[43, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5620915032679737],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["43", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[43, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[43, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[72, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5647058823529412],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["72", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[72, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[72, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[217, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5673202614379085],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["217", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[217, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[217, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[218, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5699346405228757],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["218", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[218, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[218, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[73, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.572549019607843],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["73", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[73, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[73, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[44, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5751633986928104],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["44", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[44, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[44, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[13, 15]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5777777777777776],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["13", "15"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[13, 15]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[13, 15]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[74, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.580392156862745],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["74", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[74, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[74, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[223, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5830065359477125],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["223", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[223, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[223, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[224, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5856209150326797],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["224", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[224, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[224, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[15, 17]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.588235294117647],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["15", "17"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[15, 17]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[15, 17]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[226, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5908496732026143],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["226", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[226, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[226, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[227, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5934640522875816],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["227", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[227, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[227, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[76, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5960784313725489],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["76", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[76, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[76, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[229, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.5986928104575163],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["229", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[229, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[229, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[46, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6013071895424836],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["46", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[46, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[46, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[77, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6039215686274508],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["77", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[77, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[77, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[232, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6065359477124181],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["232", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[232, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[232, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[233, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6091503267973856],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["233", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[233, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[233, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[78, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6117647058823529],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["78", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[78, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[78, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[47, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6143790849673202],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["47", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[47, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[47, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[236, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6169934640522876],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["236", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[236, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[236, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[79, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6196078431372548],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["79", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[79, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[79, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[14, 15]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6222222222222221],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["14", "15"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[14, 15]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[14, 15]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[239, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6248366013071894],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["239", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[239, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[239, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[16, 17]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6274509803921567],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["16", "17"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[16, 17]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[16, 17]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[241, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.630065359477124],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["241", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[241, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[241, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[242, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6326797385620915],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["242", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[242, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[242, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[81, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6352941176470587],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["81", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[81, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[81, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[244, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6379084967320261],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["244", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[244, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[244, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[49, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6405228758169933],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["49", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[49, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[49, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[82, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6431372549019607],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["82", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[82, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[82, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[247, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.645751633986928],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["247", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[247, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[247, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[248, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6483660130718953],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["248", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[248, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[248, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[83, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6509803921568628],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["83", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[83, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[83, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[50, 51]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.65359477124183],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["50", "51"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[50, 51]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[50, 51]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[251, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6562091503267974],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["251", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[251, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[251, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[84, 85]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6588235294117646],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["84", "85"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[84, 85]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[84, 85]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[253, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6614379084967319],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["253", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[253, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[253, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[
            Rational[254, 255]], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6640522875816992],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", 
           FractionBox["254", "255"], "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[
             Rational[254, 255]]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[
       Rational[254, 255]],
      Editable->False,
      Selectable->False], 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {GrayLevel[1], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->GrayLevel[0.6666666666666666],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 1.35 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
            Magnification]}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"GrayLevel", "[", "1", "]"}], NumberMarks -> False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[1]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["GrayLevelColorValueSelector"], {
             0, {Left, Bottom}}, {Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      GrayLevel[1],
      Editable->False,
      Selectable->False]}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {{
        GrayLevel[1]}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{2}}, "Rows" -> {{2}}}],
  "Grid"]], "Output",
 CellLabel->
  "Out[204]=",ExpressionUUID->"87aa9855-2c90-40ac-8256-bdc7b8fa41ae"]
}, Open  ]],

Cell["\<\
So I\[CloseCurlyQuote]ve said that each pixel in an image taken with the \
Thorlabs camera only contains one value. But I lied. In fact each pixel in an \
image taken with the Thorlabs camera contains three values. However, all \
three of these values are the same, indicating that the Thorlabs camera is \
still a grayscale camera that takes intensity values for only one color space \
(the graylevel color space). Yeah it\[CloseCurlyQuote]s weird and it presents \
a problem because the Mathematica functions we will use only work with data \
of a single color space. This means that we cannot have three values per \
element in the matrix. We must have only one value per element in the matrix. \
\>", "Text",ExpressionUUID->"0a83e3b7-5462-4104-bc38-f4056a8cc4e6"],

Cell["\<\
So I\[CloseCurlyQuote]ve already showed you how to import the image data into \
Mathematica. I now want to show you what the image data looks like in a \
nicely formatted matrix (as opposed to the list of lists of values that you \
saw earlier). I will be using MatrixForm which I will talk about soon. 

However, I cannot show you the whole matrix that represents the image data \
inside this notebook because there is not enough display space. However, I \
can show you just a part of the matrix and that is what I have done below. I \
will soon talk about how I chose just a part of the matrix. \
\>", "Text",ExpressionUUID->"8435920d-b28c-40e8-ab40-8832e5be1987"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"currentdirectory", "<>", "\"\<image.bmp\>\""}], ",", 
     "\"\<Data\>\""}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"89", ";;", "91"}], ",", 
     RowBox[{"80", ";;", "100"}], ",", "All"}], "]"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellLabel->
  "In[205]:=",ExpressionUUID->"962825b3-de2e-4d73-a5ae-dce7ed321922"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"77"},
          {"77"},
          {"77"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"73"},
          {"73"},
          {"73"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"81"},
          {"81"},
          {"81"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"82"},
          {"82"},
          {"82"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"83"},
          {"83"},
          {"83"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"88"},
          {"88"},
          {"88"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"88"},
          {"88"},
          {"88"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"95"},
          {"95"},
          {"95"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"96"},
          {"96"},
          {"96"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"94"},
          {"94"},
          {"94"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"103"},
          {"103"},
          {"103"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"112"},
          {"112"},
          {"112"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"117"},
          {"117"},
          {"117"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"131"},
          {"131"},
          {"131"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"129"},
          {"129"},
          {"129"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"134"},
          {"134"},
          {"134"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"135"},
          {"135"},
          {"135"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"133"},
          {"133"},
          {"133"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"143"},
          {"143"},
          {"143"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"144"},
          {"144"},
          {"144"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"149"},
          {"149"},
          {"149"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"76"},
          {"76"},
          {"76"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"79"},
          {"79"},
          {"79"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"79"},
          {"79"},
          {"79"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"84"},
          {"84"},
          {"84"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"91"},
          {"91"},
          {"91"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"93"},
          {"93"},
          {"93"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"95"},
          {"95"},
          {"95"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"97"},
          {"97"},
          {"97"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"100"},
          {"100"},
          {"100"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"101"},
          {"101"},
          {"101"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"113"},
          {"113"},
          {"113"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"117"},
          {"117"},
          {"117"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"124"},
          {"124"},
          {"124"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"130"},
          {"130"},
          {"130"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"133"},
          {"133"},
          {"133"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"132"},
          {"132"},
          {"132"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"138"},
          {"138"},
          {"138"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"139"},
          {"139"},
          {"139"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"146"},
          {"146"},
          {"146"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"144"},
          {"144"},
          {"144"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"156"},
          {"156"},
          {"156"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}]},
     {
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"75"},
          {"75"},
          {"75"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"78"},
          {"78"},
          {"78"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"83"},
          {"83"},
          {"83"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"86"},
          {"86"},
          {"86"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"91"},
          {"91"},
          {"91"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"93"},
          {"93"},
          {"93"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"94"},
          {"94"},
          {"94"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"100"},
          {"100"},
          {"100"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"105"},
          {"105"},
          {"105"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"109"},
          {"109"},
          {"109"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"114"},
          {"114"},
          {"114"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"116"},
          {"116"},
          {"116"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"127"},
          {"127"},
          {"127"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"134"},
          {"134"},
          {"134"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"137"},
          {"137"},
          {"137"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"140"},
          {"140"},
          {"140"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"143"},
          {"143"},
          {"143"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"148"},
          {"148"},
          {"148"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"152"},
          {"152"},
          {"152"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"152"},
          {"152"},
          {"152"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}], 
      RowBox[{"(", "\[NoBreak]", 
       TagBox[GridBox[{
          {"148"},
          {"148"},
          {"148"}
         },
         GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
         GridBoxSpacings->{"Columns" -> {
             Offset[0.27999999999999997`], {
              Offset[0.5599999999999999]}, 
             Offset[0.27999999999999997`]}, "Rows" -> {
             Offset[0.2], {
              Offset[0.4]}, 
             Offset[0.2]}}],
        Column], "\[NoBreak]", ")"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[205]//MatrixForm=",ExpressionUUID->"3dd80ca8-5637-4d41-ad82-\
c966d6f22a7e"]
}, Open  ]],

Cell[TextData[{
 "See how we get three equal values per element in the matrix. For instance \
in the first element of the matrix we get: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {"77"},
      {"77"},
      {"77"}
     }], ")"}], TraditionalForm]],ExpressionUUID->
  "db0e66a4-42c0-4980-b430-10427ea24324"],
 ".\nWe would like each of those miniature columns to be replaced by a single \
value: For example we want  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", GridBox[{
      {"77"},
      {"77"},
      {"77"}
     }], ")"}], TraditionalForm]],ExpressionUUID->
  "2f7339f0-beb7-43b6-9428-939a06f81ec5"],
 " replaced by 77. \nBelow, I accomplish getting each element to be a single \
value by selecting the first value in each column. Read the Long Side Note \
below to see in detail how I did this. "
}], "Text",ExpressionUUID->"0df18ac1-703e-4ad2-a045-77978cb42740"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"currentdirectory", "<>", "\"\<image.bmp\>\""}], ",", 
     "\"\<Data\>\""}], "]"}], "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"89", ";;", "91"}], ",", 
     RowBox[{"80", ";;", "100"}], ",", "1"}], "]"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellLabel->
  "In[206]:=",ExpressionUUID->"a67b9d6a-aad0-4a1d-a3a2-6d236be67550"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"77", "73", "81", "82", "83", "88", "88", "95", "96", "94", "103", 
      "112", "117", "131", "129", "134", "135", "133", "143", "144", "149"},
     {"76", "79", "79", "84", "91", "93", "95", "97", "100", "101", "113", 
      "117", "124", "130", "133", "132", "138", "139", "146", "144", "156"},
     {"75", "78", "83", "86", "91", "93", "94", "100", "105", "109", "114", 
      "116", "127", "134", "137", "140", "143", "148", "152", "152", "148"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[206]//MatrixForm=",ExpressionUUID->"6cc71563-075c-4d99-aaa5-\
53f3f984cc00"]
}, Open  ]],

Cell["\<\
And we have not lost any information in doing this because all three of the \
numbers in a mini column in the matrix are the same value. \
\>", "Text",ExpressionUUID->"c906933a-4680-4262-a2ee-5bf4bc0b8618"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Long Side Note: Indexing into Lists and Matrices, and MatrixForm, Explained:\
\>", "Subsection",ExpressionUUID->"a17166f7-a9d9-4f0b-aa4a-79d7b8a964ca"],

Cell["\<\
If you are unfamiliar with looking at just a section of a list (or a section \
of a matrix) then the above code will seem confusing. Let\[CloseCurlyQuote]s \
go over what I have done as you\[CloseCurlyQuote]ll need to be familiar with \
this notation. \
\>", "Text",ExpressionUUID->"4637a3ac-6848-48f8-af40-08057d8ebaab"],

Cell["\<\
So I first have the import function that we are familiar with: \
\>", "Text",ExpressionUUID->"162359fd-2b5b-4742-ba5e-2bfc2a2a3ec6"],

Cell["Import[currentdirectory <> \"image.bmp\", \"Data\"]", "Program",ExpressionUUID->"4d7ac9a6-4a4e-42a7-96bc-5177c4e275aa"],

Cell["I then tack on in double square brackets: ", "Text",ExpressionUUID->"4fe0a6e4-1925-4836-95e1-b13dc56b5016"],

Cell["[[89;;91,80;;100,1]]", "Program",ExpressionUUID->"78ea8839-2e96-4cce-a28d-f30c70685106"],

Cell["\<\
Any time you want to index (that is picking out a part of a list or a \
matrix), you tack on double square brackets at the end of the list, or the \
variable representing the list. See:\
\>", "Text",ExpressionUUID->"c42e2c5d-722c-4ed4-ae5b-525d8c0acf28"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "6"}], "}"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "curly", " ", "brackets", " ", "around", " ", "a", " ", "list", " ", "of", 
    " ", "things", " ", "makes", " ", "a", " ", "list"}], "*)"}]}]], "Input",
 CellLabel->
  "In[207]:=",ExpressionUUID->"952375f1-40ad-44dd-9759-54cede7c70d9"],

Cell[BoxData["5"], "Output",
 CellLabel->
  "Out[207]=",ExpressionUUID->"2f931af7-d1f0-4b31-a06c-a25d81b8d9f6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"list", "=", 
    RowBox[{"{", 
     RowBox[{"2", ",", "3", ",", "4"}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "semicolon", " ", "supresses", " ", "output", " ", "of", " ", "just", " ", 
    "that", " ", "line", " ", "of", " ", "code"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"list", "[", 
  RowBox[{"[", "2", "]"}], "]"}]}], "Input",
 CellLabel->
  "In[208]:=",ExpressionUUID->"e34b4b8d-0391-4f8f-871f-5d7b570e3a05"],

Cell[BoxData["3"], "Output",
 CellLabel->
  "Out[209]=",ExpressionUUID->"a5723972-3fb4-4255-8301-cab914ab7f93"]
}, Open  ]],

Cell["\<\
The first way to move around in an image data matrix is height:\
\>", "Text",ExpressionUUID->"27c3c5e8-7af0-4d4d-ae28-e09ad08cced2"],

Cell["[[89;;91", "Program",ExpressionUUID->"fc8bba12-0976-46ae-9a07-f4f31da2343b"],

Cell["The second is width: ", "Text",ExpressionUUID->"d73ad6ed-7eb8-45be-9fa7-30cd3974ffac"],

Cell[",80;;100,", "Program",ExpressionUUID->"151a0d8a-55a3-49b6-adc3-7c39c5e92d1c"],

Cell["\<\
And the third dimension specifies which value in a mini column we want.\
\>", "Text",ExpressionUUID->"98d71b2a-65e3-4477-9f4a-eec54ef3e1d6"],

Cell["1]]", "Program",ExpressionUUID->"4b98213a-8b76-4e76-bf4d-a9e59001e5af"],

Cell["Dimensions in matrices are separated by commas. ", "Text",ExpressionUUID->"6baa58aa-5220-4c47-afc9-f6e943962046"],

Cell["\<\
Let us focus on one dimensional lists for the moment: 

When I want Mathematica to pick out just a single element of a list I just \
have one number in the square brackets. The number in the square brackets \
corresponds to the elements sequential (from left to right) place in the list \
with the leftmost element having a place numbered as 1. \
\>", "Text",ExpressionUUID->"7c2717ef-ae07-4db7-a513-b7096d618a20"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"4", ",", "5", ",", "6"}], "}"}], "[", 
  RowBox[{"[", "3", "]"}], "]"}]], "Input",
 CellLabel->
  "In[210]:=",ExpressionUUID->"efc75e52-a592-4986-9b77-b0ff919ca74e"],

Cell[BoxData["6"], "Output",
 CellLabel->
  "Out[210]=",ExpressionUUID->"c39c6235-59a8-40e9-a982-312768f5be77"]
}, Open  ]],

Cell["\<\
When I want Mathematica to pick out a group of elements (say 5 and 6) in a \
list I have multiple things in square brackets. First I have the numbered \
place of the leftmost element in the group (in this case 2 for the number 5). \
This number is followed by two semicolons. The third and last number is the \
numbered place of the rightmost element in the group (in this case 3 for the \
number 6). \
\>", "Text",ExpressionUUID->"18f9373b-3598-4930-ac0a-fa9f8e80cf72"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"4", ",", "5", ",", "6"}], "}"}], "[", 
  RowBox[{"[", 
   RowBox[{"2", ";;", "3"}], "]"}], "]"}]], "Input",
 CellLabel->
  "In[211]:=",ExpressionUUID->"596a7d90-f58e-49b7-9c5e-30722f020e7f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "6"}], "}"}]], "Output",
 CellLabel->
  "Out[211]=",ExpressionUUID->"245e729c-a0e2-490c-a8b3-423672c13c6c"]
}, Open  ]],

Cell["\<\
When I have a matrix of values this one dimension list notation gets repeated \
for each dimension.  Let us say I have the following matrix:\
\>", "Text",ExpressionUUID->"0493f2ba-0940-40bd-b9e6-768eaed64a95"],

Cell[BoxData[
 RowBox[{
  RowBox[{"matrix", "=", 
   RowBox[{"(", GridBox[{
      {"11", "12", "13"},
      {"21", "22", "23"}
     }], ")"}]}], ";"}]], "Input",
 CellLabel->
  "In[212]:=",ExpressionUUID->"c91384af-f935-44df-ad5c-c4442cffe2e9"],

Cell["\<\
I can create a matrix by also using brackets. A matrix after all is really \
just a list of lists. \
\>", "Text",ExpressionUUID->"e65d0c5e-16c0-4457-97d8-44560f785acc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"11", ",", "12", ",", "13"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"21", ",", "22", ",", "23"}], "}"}]}], "}"}], "//", 
  "MatrixForm"}]], "Input",
 CellLabel->
  "In[213]:=",ExpressionUUID->"e28d9277-e5b8-4f5c-9d0d-4108fafd8fa5"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"11", "12", "13"},
     {"21", "22", "23"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[213]//MatrixForm=",ExpressionUUID->"bc2465cf-adf3-4b3a-b16d-\
39dd91c289ae"]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s say I want the value 13 from the matrix above. \
Positions in matrices in Mathematica work like this. The top left hand corner \
has a position of [[1, 1]]. As you move down the matrix the first number \
increases. As you move to the right in the matrix, the second number \
increases. So the value 13 has a position: [[1,3]]. The positions in the two \
dimensions is separated by a comma. \
\>", "Text",ExpressionUUID->"586246eb-7b66-4338-a3f7-04403a6555b2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"matrix", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "3"}], "]"}], "]"}]], "Input",
 CellLabel->
  "In[214]:=",ExpressionUUID->"283623b6-5932-4205-bf10-77f9061c3433"],

Cell[BoxData["13"], "Output",
 CellLabel->
  "Out[214]=",ExpressionUUID->"9b0f4c40-27c5-4e90-bf90-0de535770580"]
}, Open  ]],

Cell["The value of 22 has a position of [[2, 2]] :", "Text",ExpressionUUID->"e396161d-7a52-46d8-912a-d832525616cf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"matrix", "[", 
  RowBox[{"[", 
   RowBox[{"2", ",", "2"}], "]"}], "]"}]], "Input",
 CellLabel->
  "In[215]:=",ExpressionUUID->"9f196d66-16af-408d-9bd7-e351d2fdd6c2"],

Cell[BoxData["22"], "Output",
 CellLabel->
  "Out[215]=",ExpressionUUID->"2cb90e4d-95fd-4751-bb26-94fda497ddad"]
}, Open  ]],

Cell["Here is the matrix again:", "Text",ExpressionUUID->"31f928d9-dfd1-4b7a-94b6-8a2c939f497a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"matrix", "//", "MatrixForm"}]], "Input",
 CellLabel->
  "In[216]:=",ExpressionUUID->"583629c7-0fa1-4704-90d9-1388d2b8e85c"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"11", "12", "13"},
     {"21", "22", "23"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[216]//MatrixForm=",ExpressionUUID->"d86c9044-90d8-4375-8103-\
d65b685b686c"]
}, Open  ]],

Cell["\<\
If I wanted the whole first row of the matrix then I would use the double \
semicolon for the second, or width, dimension: without having to specify a \
start and stop position. I had to specify the height dimension as 1:\
\>", "Text",ExpressionUUID->"0fb902dc-f718-4531-bef1-9c2bd032677a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"matrix", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", ";;"}], "]"}], "]"}]], "Input",
 CellLabel->
  "In[217]:=",ExpressionUUID->"ed9feea1-31ee-4bda-aa26-e5d620430b04"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"11", ",", "12", ",", "13"}], "}"}]], "Output",
 CellLabel->
  "Out[217]=",ExpressionUUID->"52a9b7ab-f2e3-4aa9-8bfb-62016b2ac6be"]
}, Open  ]],

Cell["I could also use All: ", "Text",ExpressionUUID->"3bdec2a5-d23c-43d0-80bc-ad43a31c09dc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"matrix", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", "All"}], "]"}], "]"}]], "Input",
 CellLabel->
  "In[218]:=",ExpressionUUID->"4d77c0b5-fa33-4fe8-a2ae-79c1ea5415e2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"11", ",", "12", ",", "13"}], "}"}]], "Output",
 CellLabel->
  "Out[218]=",ExpressionUUID->"14bb6de3-fa9c-4e95-9726-4a7b5af2a90b"]
}, Open  ]],

Cell["I could also use 1;;3: ", "Text",ExpressionUUID->"fd0093a0-76b5-414f-8546-8e643ff9c588"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"matrix", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", 
    RowBox[{"1", ";;", "3"}]}], "]"}], "]"}]], "Input",
 CellLabel->
  "In[219]:=",ExpressionUUID->"b0d15d27-a15b-421c-a7c8-874badaa2530"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"11", ",", "12", ",", "13"}], "}"}]], "Output",
 CellLabel->
  "Out[219]=",ExpressionUUID->"e8f13380-20b7-4003-b5de-4dbbfba099f1"]
}, Open  ]],

Cell["\<\
If I wanted the values 11 and 12 then I would only be able to do:\
\>", "Text",ExpressionUUID->"c410f479-5970-4cbb-b8ba-b674918dac25"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"matrix", "[", 
  RowBox[{"[", 
   RowBox[{"1", ",", 
    RowBox[{"1", ";;", "2"}]}], "]"}], "]"}]], "Input",
 CellLabel->
  "In[220]:=",ExpressionUUID->"54202c1d-05dd-4de7-b007-1ebf7e4cd85b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"11", ",", "12"}], "}"}]], "Output",
 CellLabel->
  "Out[220]=",ExpressionUUID->"6f5be859-d4e1-436f-a6e5-8559eb6d9338"]
}, Open  ]],

Cell["If I wanted the values from the second column I can do :", "Text",ExpressionUUID->"a4191605-e0c4-46f9-89d8-89052d5fe70b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"matrix", "[", 
   RowBox[{"[", 
    RowBox[{";;", ",", "2"}], "]"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellLabel->
  "In[221]:=",ExpressionUUID->"ab738b43-e936-40a5-aa8a-85074770fe83"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"12"},
      {"22"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[221]//MatrixForm=",ExpressionUUID->"4b80ad8e-b3f9-45fe-87db-\
adce3115f278"]
}, Open  ]],

Cell["Or:", "Text",ExpressionUUID->"e58cbc4c-3aba-4bd3-99e4-df4743690583"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"matrix", "[", 
   RowBox[{"[", 
    RowBox[{"All", ",", "2"}], "]"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellLabel->
  "In[222]:=",ExpressionUUID->"814ecbb0-8551-47fd-af41-cc8e2f163432"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"12"},
      {"22"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[222]//MatrixForm=",ExpressionUUID->"3a5c21e1-0f2d-44f2-bf2d-\
c48ba7db4277"]
}, Open  ]],

Cell["Or:", "Text",ExpressionUUID->"a791d087-b190-45a7-b674-b3caffc9891d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"matrix", "[", 
   RowBox[{"[", 
    RowBox[{
     RowBox[{"1", ";;", "2"}], ",", "2"}], "]"}], "]"}], "//", 
  "MatrixForm"}]], "Input",
 CellLabel->
  "In[223]:=",ExpressionUUID->"662be444-7b67-4de9-bae5-ec7478a7dac4"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {"12"},
      {"22"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[223]//MatrixForm=",ExpressionUUID->"3f89aa3d-df9c-4f57-8e6d-\
9a28b2e51c0e"]
}, Open  ]],

Cell["\<\
I would like to now explain : //MatrixForm 

//MatrixForm tells Mathematica to display the output as a matrix. It \
generally works as expected. There is one caveat to it. You cannot use \
//MatrixForm on anything you are assigning to a variable. See this example: \
\>", "Text",ExpressionUUID->"011a1b0f-ef0b-49ca-8e44-8681f17e01de"],

Cell["You can do this:", "Text",ExpressionUUID->"8182bec4-5028-4c28-ab2b-b3c27931d593"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}]}], "}"}]}]], "Input",
 CellLabel->
  "In[224]:=",ExpressionUUID->"c5858426-ccca-428d-81a0-b95f0f8372cd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellLabel->
  "Out[224]=",ExpressionUUID->"1985e21e-14dc-46fa-bc17-e3f8c8c77fe2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "//", "MatrixForm"}]], "Input",
 CellLabel->
  "In[225]:=",ExpressionUUID->"f1de9219-5b9a-4ff6-82cf-861ec0f838a7"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3", "3"},
     {"3", "3"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[225]//MatrixForm=",ExpressionUUID->"50729b47-ecd7-4eb4-8ef4-\
f936ad7a7eaa"]
}, Open  ]],

Cell["\<\
And if you multiply each element in the matrix by 3 and have the output \
displayed as a matrix you get:\
\>", "Text",ExpressionUUID->"c2bcf606-b9b7-43b1-bda1-47ae8345703f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mat", "*", "3"}], "//", "MatrixForm"}]], "Input",
 CellLabel->
  "In[226]:=",ExpressionUUID->"6aa10e09-bddc-4816-8b64-1a9d059ecc96"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"9", "9"},
     {"9", "9"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[226]//MatrixForm=",ExpressionUUID->"6d9a5c5b-9561-4d89-a64a-\
b6ae5e13ac61"]
}, Open  ]],

Cell["However, you cannot do this: ", "Text",ExpressionUUID->"45025395-10ec-40ef-bb20-97bcd7060057"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mat", "=", 
  RowBox[{
   RowBox[{"(", GridBox[{
      {"3", "3"},
      {"3", "3"}
     }], ")"}], "//", "MatrixForm"}]}]], "Input",
 CellLabel->
  "In[227]:=",ExpressionUUID->"647add77-dd91-40f5-8756-cfb2a6373ffa"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"3", "3"},
     {"3", "3"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[227]//MatrixForm=",ExpressionUUID->"6f0642d2-333b-4328-b5f9-\
b251ef641458"]
}, Open  ]],

Cell["\<\
because when you try to do anything with this matrix things go wrong, like \
multiplying each element by 3:\
\>", "Text",ExpressionUUID->"91af0f3c-fb35-47b7-8026-82cbb62ed13c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mat", "*", "3"}], "//", "MatrixForm"}]], "Input",
 CellLabel->
  "In[228]:=",ExpressionUUID->"34ecfb49-f76a-458b-918c-3d5cad27da0b"],

Cell[BoxData[
 TagBox[
  RowBox[{"3", " ", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"3", "3"},
       {"3", "3"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->
  "Out[228]//MatrixForm=",ExpressionUUID->"8b71327e-3644-4e1d-b6a2-\
7a00ef97272a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["End of Long Side Note. Back to Image Import", "Subsection",ExpressionUUID->"da5468ba-9a01-4ff0-97af-7118903906b2"],

Cell["\<\
So if we want to pick out just one value in each mini column of the three \
dimensional matrix that is our image data, we can use the following notation \
tacked on the end of the Import function:\
\>", "Text",ExpressionUUID->"80820944-3be5-4456-aff0-f418150e2c88"],

Cell["[[All, All, 1]]", "Program",ExpressionUUID->"99d242fd-dff2-4559-a365-3ab0b0b674fc"],

Cell["or:", "Text",ExpressionUUID->"1328a864-5546-4a0b-b5f0-0744db3f3a13"],

Cell["[[;;, ;;, 1]]", "Program",ExpressionUUID->"25daf22f-a1d8-4dfd-a294-98cfdf4e204d"],

Cell["\<\
I am telling Mathematica I want every row, every height, and the first value \
in each mini column. \
\>", "Text",ExpressionUUID->"97b18093-f2e6-47b3-9a65-42f607e98e79"],

Cell["\<\
Let\[CloseCurlyQuote]s put everything we have learned together. Let\
\[CloseCurlyQuote]s import our image data like we did before, select the \
first value in each mini column, and then save the resulting two dimensional \
matrix to the variable imdata: \
\>", "Text",ExpressionUUID->"3312a74d-e27e-4e63-8390-7152cdcfd0da"],

Cell[BoxData[
 RowBox[{
  RowBox[{"imdata", "=", 
   RowBox[{
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"currentdirectory", "<>", "\"\<image.bmp\>\""}], ",", 
      "\"\<Data\>\""}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "All", ",", "1"}], "]"}], "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[229]:=",ExpressionUUID->"a68ee8e8-7fb1-43db-9889-eb47186f60f9"],

Cell["\<\
Let\[CloseCurlyQuote]s check that the image data is correct by displaying a \
visual representation of the image data using ArrayPlot and specifying a gray \
level color function. \
\>", "Text",ExpressionUUID->"c25da662-13b5-4947-a773-3a907e747e30"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"imdata", ",", 
   RowBox[{"ColorFunction", "->", "GrayLevel"}]}], "]"}]], "Input",
 CellLabel->
  "In[230]:=",ExpressionUUID->"3183c3e5-d538-4cfd-a3a4-9cac633769e0"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[SparseArray[Automatic, {210, 234}, 0., {1, {CompressedData["
1:eJyV0t1PTwEcx/F3UR4qpJREqSQSJUXJ00/0q0TJQw9E+rHZfpYys2Yz5SI2
a3JlbjJ3GmPWjZkxDxfWbObpoosuGGY2My4wxrwv+gc622vnbOec7/l8v9+T
0Xa0vj0CeMX4jgmaollaoI1q18BYrTiL1uqS3qsoEvr0RbW+fEcZE+G8/up4
lPd0KBreqW2SZx2eDN900o/FTLWesmNgSIFYeKlQHPxS3zTInA4P1DADvqo3
HrJmwj01JsB39SdCvsGfKZxk3WQYVM1sM+hCChTPgRGdToWcuTCsznmQkgaP
FE6HhPlwX+EMSMqEh+rIgnQH8kLd2VCwEN6qPwfKF8FP3VgMLbkQvwSeqCsP
cpfCqC4ug2A+/NC1Amhabr5Ce9KxFfZSBK91thhKV5pXA6ugrsSdlMJdHVkN
aWXwXN1r7GUtfNTldVC9Hn5rcIMzCkCki7up5nKI3gS31bLZ6wq4pcYgRFTC
ddVXwR9dqbaXLfBBvTVm2gqPFdrms7XmUVkdvFHndv+Teriq0h1mUminc1Dv
LkjebZ8qaYCnamg0qzqa3KlONZtxD5xT1F44o3/qaoHPat3nPBTYbx9KbIUT
GlHZAXepTypqgx4NKzYEFerRkEbFQUhVngoVUFCVY6rG6T+wTooL
      "], CompressedData["
1:eJzVnXtXE2cQh2m/gUIgikJQlJug0IIoWKtoq4JKUahAtZoAFYUiokVAQJSi
WKtQuYmEO7nYyCXBouQedrMJ4UN1dhOhnp6eAzTJzvzFIWcuz/ubmXffzYHd
GHlNgfzzkJCQ02UhIZ/Bz8rqmityRcX12pLLirKKn65X3qyuu3Op9MqP1xRl
5fzvN25WFRYVl5T+cBk+k69+WF1TW3f3l/qG1vb8gsKiSz6Dq//wqv65pvZ2
3R3eqPF+y8P2x0+eduVfKPx+zVb+ifEtn/W9hsam5tYHbQ8ftf+aX3DhYmHR
ulzuN7c8aAOXjr7c/O824NbiS9XR+azrTN658xtybl71ftL59LdnL7pzTuad
3WyIx0KM35+/6OruPXr6TG7e2U3TrIX6o6e3/+Q3357yV7xuCHjk6NfHc074
N2pv/8CQMvVgFsQ+djzHv7Ff9vT29Q+8GnydeTj7yFdCAj/T+zK8Hk7NOHQ4
K3BJhFUoR0bHJg6kpWdkBjKVoNiQUpUe2BV5CzOkHB4Z/TI942BmsJKNjU+q
NEnJKalfBDftxOSUet+B1LQgpx2HvCp18n4x8qq1+0VasEb7RjedkLQvOUUk
ArVGq0sUMb9KrdHFJSQmJYuXX/vmT93bmdnY+ERRZRAwpmdm5/fsjRO5ItCU
QDK3a3cssMQniE7jFWZOH4uHZm4XIpjZOVR1MshAnHgsNPpooY3R4BjmZbF7
EFULgKJjsE26YX5BFoOO6d1fst34mBaiZeh2aoHr/YdFky0GKRtGKhDMjLHB
gCsK9nScZEaTBalmRhPS3hdEQ0tmlsXg7TWzRYZ1R/PiYb4YWKJwa4ebzor2
Wirw2XEX12pfYljks2u1R2EndERFY0e02ZdYCpQ7CUA62B0UMO0ONhI9JbOD
gpKMK5JGxZciSejpYFgJEUHZbTSGHSpPgtOxxHDbttOBdRGCldJBjZAS0pXl
woGXDC7DhknCiQksiSCEyzglpOSFqy2tfmBYYryhYeGkeFknR64lnJwnlNrG
xlNvIcbMEVSZo4fs3AqbBjFmjhqwkyCxO5RcL3PuLfSgnZwrnBZwGKlDMi8w
rWM9EJNrYTe1WxGemR7yMq0vAICYmMawGRMjBo3JAROcPPcysas0udGDIyfB
2SN4xwfN7CH4RRG1M9wyNYVd1BR2b6U4fBHETnBuCTmJ3RJaGrs9EiklYNeK
lBAt51mRbieEu0yG1OWRov+ryLVNgU4HACsNVP6+yENJVjqsHiKkLs9OIqRc
JBFSLpoEJjQpP09ESNErys+Sm0zlCWCuyNAzshxyQqg1bkDoRtR4yMVz7kWN
xzpRy4e79eIQszF4hUNbU5ANx2OQ/v2PSUgVs+GksjswctkYfFQWBz4k6xIm
HrOFScIlkNmSgozHhk0gbDx4aIT9UZQHTf7HeFltjhQEOEBjNDsQgIAui6bU
NNE5FowiI8xDfxhNYhdkQRhgURC8BB8WRRTAYBUjs6/+70VKrTe8C+Kq+cza
6dnAPy16da2wzo+9Hcx18gLrpmf0wck4Nj4FDawPzuqghrpZ/TwkC2gu5cjY
xNRMprCgQOUYmVRNH8oKpGjDI5Nv57IDlmDglVIDe9fMMX8Hh9DZ/n+y/sue
vkGV2m+P1H/e1Q2A/uEDur4T/uCCWKM80/+J0jmYK7y6YaO+/LsfTsECzm0u
7fmCdbvwHh2dUxfXZQ/mo/zLNko/eW2H16zOF7K1rb2ouISP5LPwGtTerb/X
2PSouBQ8yz+61TY0gUnljaqSawowreRfAXK7rr7tqqKsoupWefnfGofpHQ==

      "]}, CompressedData["
1:eJztnc2yNceVlsUlcAlwC1yAJ0yYEsENEMCU8IixZ/SwBwyaCAYOgiDoDiIQ
/9AN0cLgthq7LbUtt2Vbsn6tT5IlcQmEtPZTGfXU934rq3bts8+RdSYrsqp2
/WY++a6VK/P8jb//j//uP/xrL7300t/5By+99Ne/+vv2t76xj8F+55Hcx2O1
37yf21q/32/e98PY71xpv2l/D2tTO7n1d5z9/e/Kdzr6nHvf43e+9c//4Mu/
35sud7/fZ7t61z3Xvb/TY2uXt27H/Xe/rj6cVW9mt/+u2v2cOMsmviTbHTd7
/lQ+Zu/9/Z6KPVq/rq9/Xb2aq3e/v7u+ztbT2fu/9j3Mvedb65LHYq/tZ87v
J7t6t7e++vdHz9dxeO45Zvl7q/7m3vXt8dbzvd8tbZ+t37X99zd27/7u+M4e
bRezv9/7/vZ+r72/K3vv+vhQ9b0r+z1+e/d7PcrDs+vxUfv3vvr7Z9PtZK6+
9+3gqH7fZzud8nVtD3uf67h/1h1X5eP6ZbbfwLo+U76V3Xs/yc7qt73tZq/f
MXdcqjf3rve31k2zz329P+rjut/V/lxP2L/Xpvp+tL3U/fxB3J72+7rd/fl9
dM95ln80+/332Xu3g6P9zP3iNWfprXTc3vre1fuunOzbb3359y+my10/Nttf
zb6ns+IJqfxim+rpU2lXe5/nuL8y228cbU9H+6G97aprL0fbU93PdzeW/baz
1+v6r/Q+Zt/zXp1wXb9273bz0O3xuP5L9tr2eSub6l2nx7r2ubf/cjur6353
utxt767ftd/ufRztX233tmfqk+vVevvR+n5vuzfeM+vXXRs3n/fHru0/Z/Xo
rJ2t/6n9JFv3u22ff+urv3+5lLvt6TzePtsfJ17Ntu/0XdJ3vFYXz9mnonev
17VH7bV+5Kzd209c6xfO6tzUPmct7dO27vNfxf3pPN7e8WS2X57tr9P3YPss
p8/R04897jrfXjtdO/u72fOlfrjj9bX95VntsGuXe9tr1w67duvtXXlve/b+
Wf2xtx/vvnva73p0XTv+usR/Oy7s73/3bj+7f07bu3qV6t+sfznb/js9vLd9
U07b/8lXf/96upxs4g/2qD+f3uMsJ9J3nq03s7p9bz2fs49V318f9/L2s3V6
9/3P0t9dPe62z9qufaX+PLVftmPref7NYr3fx81ywvffPc/eON9efyHx4cX1
5Hgc7vn1fzYP7d7t/FZ+wLw/5eNc3tvOu/2z/Xldb75f9vGz/WbXbrp+ObXT
P/njL//+aGnPlL3d7T39zpzo7su20z17445H/bUX15PjcYHUPvbZx6oH9uuD
2fdwlA+d7Tgwqwdmx6+Sne0Xu3a/lweddftPtp7z326sedLxJXFkVmfM8tPW
3+ksXmBT/dtXn6/1Ix47L87TI0f9h71+xaztuJH6q1m/Ym/7T+1otv++lh+0
c3Mi7e/s2XrF2zvedvz29/L3nI0bddxJ9TXV7290yvPus/dzbhWvwN6KL0fH
A1N/OsuBWU4kzrg9J5501rx46au/f7fhST33yxvL8baz15vl1CyfZ3WiObQ3
vtLpHtdb1+dZP/463jwVznT6ZXvcbDxlNs5C+VrOnMUXrPvVvfqja2eJI0e5
0ukS8yWV6/m3vMGaN2z3eRLPZvk4+37Sd0ncma0Hs3Hdvbon1f9O/8zZrl0/
Vr6cF2+51l+ajbN08ZUuLuuyOdP5LZ3/0fkj6bhUdntO++u5Mg/+5ld//36x
9dz/Yfmdt/t4LMfbJs7M+mdpu/XPXu64HqT64PrT8eYod27Dm8fCl+xPdfql
04edTTp0Nn63V7+kepf0y2w8xH5J1/7Pssmvqed9OXLAZfhh2+3H/u2v/v7j
hi8dh5Ku6jicvkfHocSbtN/1p8t/u5Y3bkfHePNYdc28funKs7ollTvdMsuT
Th9Tj1I8wGXzpvNfkt/Q8aHzO7y9nmerH5LeSLrFOsX86Phim87b6R5s5+d1
fljiTqd7Ot64PBvPOcqfc/TNY9U7PX/2xn+P+k3+Xv6u9fs8HxKb+jHbVB9T
f5p0ShfvSJxwO0zn6XRL8ocSB7y940e9l//0rX/01d9/Xsp7bcej9D66OFHS
Rx4PS/on1YNZ/szqnXU9ns/bPXcc67HpnvPiN0fHoZLeudU4k+tZp2+S3un4
QzujnPwccyDpks52vEk2cYXttt5f7+2/xONsuW7HJb/PznYcSvooxaldT2y7
ejc7vp44lLi0rx0+NT20X889tD66VvckHqV6l7iU/Kq6n23/nfye1A7Nj3Rc
auepvdv6PBwPV8wb/94cqvf035by7/3TL//+62LZ7v3eznmTLkvbO10168+l
79vFkVJcyfUVe9RvS3yyPcdveyxcOh4nevF72Bt/27/u1CyHOjsbd+7iM7Z7
eTKrN9zOk45JnDIXvB3ecB6XuS7b/+gPv/z778t2yuz3cbY+H/fh+0/cTjrR
32M2Hpe4tdffM6/MraT/b8WpY/rq3pzar6f2PnfST7zno+Nf/t6uD+ZPsh2P
ki5KuifpoMSL5DclfdEd3+23fjFHzAvzpd7PHy/bKWPNp3R84pbvLz3H3jj6
Xm6ZX7P5XElPJV01m1+9d1zuXL/v3nGo2ese11cdp/wdunG2a/WTj0v1bDbe
1Pl1yc8zp6xn3F7tP3X73f4T93ycuWP+JPujH3759ydL+YvPv/z7n4tlf3f+
7jjz1O/B7zX1F52fmOJfnf7qxgXP5lnHMbc729ty7OnpsaM6bDaedS3fOh3f
6bAuvtHxLOkw8yvppaSTOr6YT+YEZW/n/LPHU6738T8Wy35zrZ7nT5fjvJ/t
nNc8TPeb/NHkP9um74WtepnHUa/lXIrjz/LtaNz+qG7ruLC2j59b6/3z6753
nPJ3S/orcSjpq8SpLr4+yynzqvPbkr/V6RS369TOE0/MHdtql3+64Uo6nvPy
OyzcSmXfV+JZer6OX9ZrSbfN+qEpPyL5m11+Vup/Xf+v5Rbtzvac+Nfj5ZXt
2brK2/le2E5XpXhEimvtzYvqdJSt40cpnpQ4ZR3j7dYliRuJB97u482XdD62
13t6Zfkdlu3e7/N2x1H2c3Rx/m6c0n5miv+nOAH1w1yj3MXNOv/A7QDbcWwv
t9L2FDd6PhfuzbF5bnXlvbqL8uy4Itb6q8uzmR3vntVdaVwvxctTPNw8M5fM
i1k+pOO647vfJVvPMaz31/P+r8t7HNbX83kS93y/idOdXkv62P1SN47pcrLW
b6l/ndVn3bhXp89ol5193H7k+fkS18b3u3FI+5HYWf/Qej/5BSnO637b/bvb
RbKdP2h/LvHJ7d6cgB9u9z5Px7F0nXRdtnP9+m7f21jfp8+DTffh7Yl71rdp
XCJxLvmhlLtxnTRegO38Tur5tf7mXj8TO+tfPn/7teOL5+mz7r47ft2KZ/Yz
Oz+ym8eXeOZ+OMXDUj5EiscnPWaeuX3W/b0S27n5YG5g2e7jzBVzKdl03Xq+
713e0/++PN+wbOd36XifD+v7MOfsF6d4m7+D/dXkp3b+qnnnekV9w87mx7o/
T7w7K57Wte9jeu1W+q3XaXv12FGOJT8z6bJZnnV6DOt6h03x4M6v7MYPZ+NO
2E6H0e7hQb2n/7NYcwRrnpkviXuJW9ZhXNf3k+63u890X+awdVsaZ0jxN383
c87fP+k4+6mUrdtcP4/O457Vbyle3em2Lp42x7enE087Oi7Q6TV/n/Q907hl
53/Webd8S/rM9deccx5Fp8u6+Hpqr7Rrt39zpJ5z8IJy3ef3I//gR6e72M55
bX3+dN3E4/Qc5p/vM/nDya9N3Ov8U/upLlvPdZxLfmrSb2lcoeNd4txRf/XY
+MG9eHfeuOesnnOZ9+vvQRlr/d3xLq3/5n7T41auj0nHpfG2xDvnUaT4t+Ne
9gNn/T8snKnzf//yvv5ss50yfKn38oPIHW9P5/P2ZH1cx1Ef1+lAbOLfrO6z
n9vNf0j8S3lx5iL10v114p856PbiduV2t9d/xZ7jxz5d7vl92Jp3tl08zryb
5Z71XeKd62GXD5s453h2ykO1tX9qf83t2zrOfMPW+X+wsfDNZaz5lHSceUrZ
5+M6vj/2+34pz/Iy8TP57bxv+pEU33PecMrPwXbztzr+2c+g3rr+Xqv/sPca
n3gxjx5u/OFe8brEt726LsXpUjzOfEs8S3G5NE7q9jIbh7P/an2TeFbnffXy
vK8u5Trfn1+u8+fLdvOP7eZP4lbHT85X3/P/LvfFeSn7fjmPy76eeehy8seT
P9yNZ1BO40fJH+70XvIrrPeox2n+Qsc5867Od/180453iTcPw7n5/JFZvrns
95B4Z86l72POpbhd4ps5Z75Rpj52/qr9muT3pPhcGl9w+7R/mPQQXIBnWDgH
b+r8P1zK5iBlc5Pr1fMObmH9e1/X29P9sR2eUeY65qrP6/tK/i/9B+/bHPR4
rsc9ZudRpDwW96fmHvVx1s9N+QbmnzlY76kfz+g4t27f187Hul+eybX6zrbj
Hu99Nm43yz9zz/5rN/6Q9F3yV52PWs+1zQtxnMnxOfupjrOZS4k3cAp+1H3/
cOEfluP4nXllrqbr2JqzbPd9eL+vy35+5/tLXDdHeX8pTug8l5SHw3c1B5MO
7PKSZ/3gpPsSB+3nuj0l3YftuOftqf0fi+udzcG93M3PQdnvo9N7Hr/AJr2H
TXGLNE5R5x26z/6rbee/Jr6l8Qi3E8rO/3C7oz26vdZ5Xt3wwByr8/1ow6G6
v7+4vIe/uFznRwtP2M/vOR/HsZ3jfR1v5zqUu/NyfXORsi374VviPe8Ny/u0
nk460HrQcQm+K9yzTbrP/ezecQ4s9dz8wybuYa0z3C7RJ6kd7+Xe4xrX2J+/
cjS+l/qNveMZ/o7mIeXZfGLXs8TD5N+m/BNsiuslvzflm6AD67yDg27n5h6c
wcIleFP399pi6/qvXe7ntctzvXZ5Lz/ecM1lX8f7OR/W3Ev35/vAcpy3J277
/Vhnut8hrgAfrRfNSX9f1wfzMc1b6+bjJl4mPmJpD7P+sXXh2fPOHhcfH55/
3TwLbOJh4p85mMZ1qSeOLzsu43Fb11vP+3J9p2wdaP835aXQ3uCh42JYt2/z
xBzDwr26zuuLZXvd/+sbXnI++OTj4aiPtx7lOKx5xvnNZc7Ldq7r5/Tzw0Vz
0H61/Wcs38H+cqcf3Q+meKL7WfvLyX9OcUTrR7eDbp2nzl+ezQvsdON1ccPH
z0XbTg+m8ZFOHyadODtO4npj/5l6lvxhuNfNS3WciTK24yD6hLLHdbH2J63D
4AecME/qPH95eT/D1vO/frn+KJujnIcyx9n6eHgK57zd5zWf2Z/4yXls2W9O
wkesdWPSi86v8biz/eqUX5j86zS+PDsv2Hw0F91+UlzR7bLe/3zeYMeLOd48
tnUJvr25v9nxY2zSj3v9aKz7taQjU3zRnKQewcm0Xm9an8k6kXZAGV6m+WC0
N/MRiz9X59vmvziO6Hgiuql+P3hV59naeq6/vNzvTy73+ZOFk/AUy37KHJeO
5zrmKWX2w2nzm+N5Hutdntf61To16WH79ViPT1tfOl/H3Ezj00lPuh9O/rbz
EbtxGesDt4+9+YapnXZ+9qyedPnFvLwXJ7OuTM9jLu7Vk4mT1o8ud/mFdd4R
d+l4SX1L/nRa5ySNK9ufNhedH0x7s1+NzoGHjidaL8IP8weO1XV+suGeOUm5
7uenl+d9Y9le1/npsh/L+TkODnt70rNY7j9xmOPg51ovvr6JJ3DcrN7k/dov
px9LeY585+R/Oy6Z9KX9cLancezZfB7agXnZ+d+0P9tZP9x8gB+2x/Tl/cdr
0n0e1ZOd/837xiZu7vW/sfgh9r/hpONAab2WLq/a8Xraj/Nv7G/T/up+x3g0
fqLbMXE49BHtHh1mTlI2v+p9/fTyXoZlez3nG4ut+3hjw0n4Wfe/PZ79WM4P
/7gfc5XjzHMsxydda/4m63Gq58dTt3lAfK80jzHNk07r3aTx79n8b9djcxOd
kLjZze+b9c+th/by8zp//OHnsbg8G7c0LxMn947jdLzcy0n74daX3bi155l0
8+w8Xo31eKrHaeCkrf1P9JH5CD/hh/Wi+cd2uMb+Ou/PLuf92cJDttf5f3Z5
7r9arH+HrfsaXIXT1q/WufCTMr+Dmz4P/YP7D8cDPL7P+2U7793jZ+anvyf9
JXbWT3ec0/xMeeToTvvn5qXjmfCTdpPyxZPeTLqn88uTf35sfOfh8yH3jncf
9bsp+713XOz4aL878THl9yQ+2s+2v530hf1v2lGdd6sjOz8bax7a37aeM6/g
FJyr6w3e1X3+fLF13r+63OewbOc48xPeWm9i6z1st3Of7Dcv0ZfWnz6O9+Q4
qzla19nqTPSl84ngo+ObHi+3zrSeNCfTOBBl8zHpS3PSfjmcpB3RbtI8wsTH
jpPXjofPcevx5k36+Ww7fen3mnQk5bTOG9Z5QVi+v/tTyvbH4afrp9drsG60
XkBHeN4LZdqT8/YoOw/beYToIY/fpPEYOJJ4ZL7BP2wd/+bl+j+/vN9chqPw
E/6at2yHo+a47w+eU8ZyPP0C+tJxAvSseWpdCkfhKu8b/Z7y7G3rvYxxOnPU
uhOb9Gadb7teY5q32I2fW28mnbk3rwjrdj47/nMbjh7l6uzvjutObKc//T7N
zaQ3sSkPIuVVWndST6g/1p1pPS9zE15iqfduF/a/07oLKT9oPX478mgcr0y8
hBPw0noP/lhf1nFvLrau84vLdd9crI+r8/1isx3r39fzvLnhNpyknPQw281Z
nrPOv9WzLpuj1qPwk/cPR+Gn5wM5bxNb5/+zTb/q8UH77VjinNRLc9T8nJ3v
0/npbmez40PWoZ3+NEcov3j8+d76s9ehc+NZ2/GgvePkiZ/JX/f4j/33xE/7
7R7/sf6kvsJR++vWnbQLxyuxaZ4z7dH+uvlJ+4af8JLtHkcxN+AMfKrz/3yx
5ly9n18stu7rFwtX63q/vLznXy1ljq/r/HJzHs5f9/fmcj91n29uLPeHzrVO
RtfCWfjquIFt0q+8R94b/RT9l8fd8ev5fu4P+f7Wo3A16VL6aetS5ynZv0cP
dP68eUo7od3QjmhfiaNHx4uOjrNjH4d/fzT+2Y+vP7+f6XXoLE9nx9XpX81R
83RvfqZ1AvXeeUXwtOOq/ff6/RinSHlFlOEm1n4sei3pPviEboSX8I5yPe8v
L9f51eW9vLWUsfATvtZ9DM5yPvMVPnMfdf5h63yDp7bwNsUPrG+dN2C9Dlet
Vz1u7/E6vqP9+xQnNU9T3DT5+c5vMk/t3zufJPn3WNoR7Yp2lnSpyx1PZ8eP
bK8bT7odN12eHUcyP2fH05M+tR/fWb4v/Sff3dykvjiPOK1jS7+f/HrrB/MT
Xqa8dfQL3KznGHrH40O0X+tO2jvcRHfCT7iC/rPuxB+Hk/Cv7uety3FvXY57
e7F1/rcv533rcn9vX97j28vv631uuQtvuS5leOp4AveJNe85vq4zuOt4Kjyl
7PF/xwV4z3yHet7XN/oUXZrW//D4U+Jomleb8prsP5mj1HePx9MePB8Tftq/
73Sp9Y91qXnQjS+dw9GH9u+P5312/v7RcabEV/sT1qXdvEvrVNentB5HWi8c
3rqee1wJvjpO6nEl2iP6pu5/6FHzle3opeTfY+EHOg0dZ87CNSz8Q1/CV7gJ
R+Eq2+v3v15s/f6dy3t453Ifv15+V+/lrYW7lOG3r8P9cV/cJ3yGu+hc9G+d
f8QNUp6B47K8P3jLe679P9mM+8Fdz1+iH/U4P/UhrROCdb5HGvdHB9TzbufB
W1ek/CfaCdZxVdqZeUs7Te3Y7T3l81zr/ye+Pd/eiqvz4/rYa/Oi6rh+PD9x
Nfn9LicdSz2xnqV+pThAGtf3+BTtwVzFomPqefP6RHA0jdPDV+d5wgOs/X64
ioVX6Ev77XAOftb7eOdyH4OfVX53sXU/7y7763qjXOcdvIWjdf13luuxnzKW
+8PCX8o8l+O/8NfxXMcT4Gs979C/zivDb+C7OL5tvVvv5XXFy0fePraO265n
bN46r4R6ST3FWs86D8DjV7QL+3/Wtda3bofduJV5gD067o99HONW5/OUcjde
5fdsm+I2s7qVeuB6QTnpVuqhx1cdJ3B+qcepPK6fxvG9LgZ6iPFm2m3y/51f
hJ8LV+EDHEHnYfHv0afoR/hZ+wdP1/wbXIWf9ft3L+/n3cv3e3c5Dzq27u+d
hcOU1+f99cJz9DB85b7hKf2D4xD0F/DW43DwFl1LPIH3Rpn+iffsfo0y34vv
57z/9TzUrZ6lvjgeC1epX44bmKspryqtG5visN28UdqdeZrGszq+Wr9STjx9
PpceXz7qi8ep5uMD5m2XD4CFo+ap8/Vddj4VetU61XrV/TX1rc6zXXfOeoD6
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
5kE3DyLpVpeP6dcuX+vhx70SVxNf3U/xvunX0roa1q2U+d6Jr44XJN0KV6mv
1Gvqs9dxcD6682+tV9C35iv6J/G19r+xWNp/7R/jXeQb1P3/cuEsetbjOfAW
HjlOYK4m3jmuWdcdHF6P5w9/vu5z6E/8e29Hj3Kf6FKeo+5jjFet1+kc/w+Z
98N7s/8PX+Gq9arzZG3Rq/SvdZ3tugv4PV7vZnY+g3Us9Ra+Op6a8gdoF+gO
6xHak9ubeZraa4oHmKsdR6+NBzxsnDXp1G4+Qx8nSHydHc+y/5D4OstZrPVr
0q1wlnpqP8zjWugN+Ip1fJZ25fwu5x2gY9FF1kvwNY1v1f5tni2cxcLfOn7o
WOeRwlu4Zg6aq+hK+GgOm9+UuW79bsQvzEvK5imcRafCUWwdv+Uq7w//nzg3
753vgCWO4/gO38/5WPSv9LvmqvnqPFjz0/N1zVXqr8cXPF5lnWr/33FVt7MU
D7DfOctX7Cxn9/J1jncPly+AvVa/+j35PVq3JpviBPZHXC+sY+Er/bjztRJn
qe+Oh1U9/f5GxzpuwLgF+hXOonfcPmnHa79zrB+IrkLHYtFf+L3oNuKL8NZx
A/xoeIs+dJ4tNuldc3OdJzW4aZ6z3/FS7rOuN/4PMbrU62RSrt+P+QRwlfcD
V4m38D7px2bH//FDXMZfoV+lXtjvMVdtqXeOr9b5tuNYzrua1a20E/v/bk/2
+90eZ/Ox4IB50MUBbM2fffHWe+nY/fMPeN7ZfAG/b74D/V8a30pxWNcH8zSt
82iuwlPHCTy+5TgBFn3icS/a2dpv3P7fAbhq/VrvLevWOm4bJ4Cv6FZ4hYWn
jseiC9mfuEt8gbgn+tbzWTneZXQp3ISP3Dc6mzL6HF5ieX6X6XesT61Tvc64
5wf4OzmuynfG4tdgqR+U6Zfppx0HcBzV6995/B+OOg/AcdVOt5qjyf/v8gHQ
p51Opdzp1KRbHxdH+/GrxFPK7j8ST9P82aRXu/Es85R6kOKu3fwC+nvqr/0v
uEr9t1513mud59XN+IXHs7DWqfZD0VHwtK6/ne+FToUnxAXQc+g8lx23hLfw
zuNCa797O/7uvAXn65uT3I91J/y07qzfjzip/fvEUd5jHb9dB4a4Kd/D34n+
EI7ih2D57ljz0xzFduNS1qMel+r8/sTRpFNpV7TDbtw/6VLzNHFh1t83f17M
qfvPE0i206mpP+nyWc3X5Pcnvtb5Xt7oU/PUfn/iqXWAdSr1Hj1BmXaCDqF9
maP1nNvxK+e91nHbdQ3wS9FVcBULT+AqOtXlus6w1rHwLK2zSxku2h+nzPk4
v/NH2Z7ui/uGn/jv+O3mZuIn+ai8R7jJe6bM98Di1zteir/B98UfMTfTfFbq
DeWUn4qdzZ/CUt+TDk1+foqbdvn+iaPm6V7/3nbNm73rId46nno9Pztump9+
3x1HUx6AuUm9oR+mXnlcyvzEduOtjqNah2JpX3ATPeN4Wx0/8ljxN70egdcl
MEfhBlzxuraOA8AndB98g4uOT9oPZzv84zyJl+Yk92Pr+CbPVb8b6297Xr/1
JrzkvXq8nvdu/cl34rvZf4eX9t/3xkWtOx2/tx+fdCf1m3pvbnZ+vMvmZeKm
OXkrXq45c3R9lvut12KbeJrewyxfky61NVeTn+/+lnrVzbuaXbfFFl3qeVi0
N+tSdAztdb1Ox9BH1qfoUvxRuApP0alY8xUu2Q9G55mH8BIeYjmOMsc7fml+
Oy/U17df7jhGWh/beU5wM/VLvE+v68D3MEe9bgo85TvD0zS/NNWbxNHZ/H3K
6E778Ymj5ik2cdT8pJw42vF0PQ59nKNPi6v9OJSfu4uTmp8uJ33q/pHvnfx4
+Ek9S/monv9PvcZS353/j7Ue8bgT7dDrBaT1u+Eousl6yn4+ZazzWdFt8AhO
mV9w1nFXW+fHcx771Vj2O//A2+EmFk5ieV7rTZ7b74n3yHvlPaM7iXPCS8p8
H/o9vmOdZ/SLjn/WeTI/Xa8c9/Q4vLmZeNnFPxM307wnj8snXYOl/e7NdzrK
T3NpbR+f/rRNfr3fQ+LnXp4mjqZxe3PUfr3joo6PUp/rPl7ZcJX24HF82hHt
qo7fjt9bj3r+Ku0bv9/5UvABXWXesh3OmJ9pfRZzz/FGc9a843z2t9nu8XLf
D9b74af1pOfzmpeMszt+wvs2L603+W6O19Bf8p3hpvtV6glx9RTnhKOJn2k9
IHMz6U/HO603Pe5wdDw+tW/zYJab2GPxzvuvu2q7l5vJ8r5t/V38/TyuZL8d
636Yeoe1H5TyoOq+XtlYdKjz+OFnHTe4CS9pn26/btfWSXATPsAF8wJrrqLT
8Hfhqv39xDOvE4Ku9XnZjrWf7bL1sdchsa7k+XgvlJ2PBC/NR/or5/li7Zdj
nd9mXsJJ/BR4iWW745yOy6d1/11/Xb+tM+FlvZ+XNzoj6c5Ob5qXttad13Iy
jcMnPq3t4+EjNr2PWX2Jta7Emo98X+qB9SWWfpf65nin9abrL/Xb9d/jprQf
tzePN5iX9fsfbaz9R6zHneBDvYfBSbhizhAPdLzU3DTXkr/McY4LYO1Pc5x/
h+V+/TzWie5HsLwfzyfyugl13qEf+X629HseJ8SmeZv2S+yHu3+e9cfho/0o
cxGbxgVmx9E7LmI7PpoT5sexuOX9uHiUh0k3Ji76O1g3zo6j29+27daFgode
d89cRC/QbpL/jfV4kMtut3AQvUN7T/55ss739niy/Vf4BMdszVfnmfs8ntdj
/5n78vN4fCbxD0s/Qr9jXVj1Zes3owv5bs4fct6lbZ13qwvhYNKHya82/8xB
6rst7aHTh8mvTvxzOz0alzQvzh3PeTx5RYmLHQ95v9aFfJ/kN/Pdbe1H29of
sV50Paaem4v40c4XMRfNQ6z5R9l58Y5TWj/CRXPSPKnneH3DQ3OQMjrNuq2z
5iTb7dc7rup5Otx/Wm8ey3vye+zihvDOHMTiHzsP1/xzHNE6MK2X1OWhY1M8
seNfiit28UXao9vlXv4lPjxO/vXrfpzFv+QXJ+4lv5jvbR3Y6UJzz/oPS322
n2MdiHV7SfPX03wgrwNhPrq9wwO4Bxetj7DoKVvzBz45b4Yy3GR7Nx7EcfDM
cT6vk2HOzY6POP5nrlmnO2+H78R3dF4t33+Wd9Z77ndT/5x45/pd9/Ny5F3S
fbQzbKf/9uq8ZB8X7/o44Fncm40DzvKOepD8Atcf+7+OB6b15cw955ebe1jr
QbczczD5yVjrHTiX/Gf7k5Q9PmMO+Xis449Jp2Htl1q3+nnMuW59IFt0nTmW
dBv9l9cP8voW2LQ+W/o/GI7vJe5RP7v6nDjXjRubbx3nUv7NUV2XeDLHu/vN
o7mWeynvk/ft75H83G4eDdb9Y6f70v/b6PJuunmKbm9uj9aBcM9+WZdHbj7A
Pa/nCW/MIfjkeJr1GftTPM7+Ntcz53x/PIftXj1nP9X9juN3fDfzz/2d87DZ
b77ZJn+2819TvU7jGJ0f2/EOO8u7a/Xd4+Te7eN9nZ9r/cf369a1sHX9MQ/p
bx1ntg50f+52MDsuYuv1Ya0HsWkdTft78CLpP7Z7PCVx0PrM2z0f2efj+OSn
wkFz3M+V1mFyP5I4l/Km/b2OrmtmfyHpuxTHS7rO9Zdy0nmUaTfJut1huzie
Oej2bh7chnuJT/eP762fe/v/5Dq95+/kfoyy9b65R33BdnE/29l11KwDrAM9
HkK7c/zI4yOOv7vdcxx8MEfYbsv+lDdnXppb5pfPk87nuCUcd9nP2a3bkKzf
r79H1Ythnf9sXed8lTQ+mzhHfet4h3W9TrxLcTvrCNobttN3tOOzOPc44nnn
6TvruTSOge04Z51n3iX/t8sD7Pjm8Y203nmax+f4t/0obPKDrevMO/u95kOK
e6U84JSP6OPNQf+unvfVjTWf/f8QsEmn8V7sh5pjft+JX/5+Xd5Jp9uS30p9
S/4qlv2zXHO72eu/7h2fOFevPZZ5c/PxPN6D38/sOG33vVJ/lXhn7lF/kh+L
TfOSsF2cz3Futyv7TdZ1tEvacxpXxJp35qLjXY6H2S/GwjNv9/6UH5Ly4KzP
2I8+87iP84Tr+nk+RZov3vHN68invBLXi8S7xLmk2xLfXJ+TTpvlXPKvsC9u
x2ndq6em387TcbOcm9VxHd9mxy9c3+xHOF7n/jzNg7OeM+fq+q9s9If9WMfX
KcMBx+/Ybl2U9J79Qh+feJT8yTQu6udw3Mz6tYuj8f6wSZ8ljiW91sXbrs0b
pt5RntVrszyjHSXbcS3pNuysX9pxY20fnz6zTfya5Viy/p6Uu/FY6ot1GjaN
v3Z+qvNROj/V8ThzzO3a+sUco5xsymcxZ9Lxadyjy9/oxjdneWV9Nssrfw/r
L5fdX5lb5lU3Tlr3m3XYUT1Ge9k732Evr87VX/fWYw+vy7CzXEv67WicDWtd
luIpHl/o8qbS/xvo1ndNnDMfPP4KZ6zrkk5KHPR2rydqjvl+zS2vz9zpLe9n
e6eDU3zM3KKc4gzmmP3KxDH4ZY65fppjjq8k3ZXi/3vHO21Tuz7Xjzybaz1H
u3HQWV6lfsTfaZZbaXy0W0fF8Qz7ldZj1HNbz99J7cr5c2lcjrLbe7KOszne
lDjo47HmZzovx1lXWj85nuWy9ZT5nvxAj9ckfz/Ft8wp+4mpvtR9zf9/T9dP
W/e/1H+3j6O86rh1G711b911vT+JNc+6fI7Oml+zcTHHx9xvup7aUu+T/5Hy
2lK7tH9pPZLi2t7ecYNy8l/NyS4vwufxfae4O9a8sl5N/l+KT3Z5s0k/W1+b
W64fHa+6vIrEK/fL1PO98wZmeYX9evqLW251uivZ2X6iju95NesvOu/W9TDx
KvmN7qftd1gXJB2W1mN23N+23kOOY6e4duIj50m6qLse260n0/+bMIfSvHNz
KI0Ten/iVYq7J78v2aP6yvV0Vl+ZT3v1lG3Hpaels66PYyXb6avZeVKUXT9m
1weZ1VOu14lT/n8FqT1286btByW/KY2f+XfdeFzijo/z8ek+Zsfz0vxw86aL
Kzr+xHezv2e/7iiP0jhQikcl3YSd1U1ub509dzzwXnlemUMud3GqWR6lOFXq
Zzq/Ls1PsqXedRyi/rs/tp8xG2fv9psr3e8S/6zT0nhm4lzSeckvS/fl95b0
TTeukfRPF1/y98aaM0kHub5hk36n/rpfTXHbzm+jfWHPiX8/Ft1z/vie30vi
z95xP/On41DHJftxji90flxqRykektZFTfs7/dC1c+9P3Oh0Vcor73g5q3dS
XpOtdWnijb9j1aNt/8P37+bbmjvuD91vpnjRbDy70z+3jWs/Vg59u9VBs/6a
y8kPs01+WeqfOi5Zb1svuR6bP+6vO3/C7c026YN0fBon9/bEwy5ek/jh+0pc
7NZdneVO8peTH8X32xuf7ubLJH8r1dez4tKzvHnacen9Osh2L4+wSRfN8ij5
Z8maT66HaVzO/Wvy25J/kLZ3cQ6332Sty8yxdJ7EuTSOldYx7fg5G0fGWnc6
r8M6le+UuNPpnS5/8tp4T8efxKHUfvbpnl5f7Pvd/XTQi+/3uC5KeqiLU5s/
RzmU5gGmOGWX5zTbrro89S4ukjjX8S3pMvtvnQ5LttM5fi/me+JO0j9VL3L+
UOJLsnt1Txpfcf/acSfFd7p2ltpj117P5cTDx6UTX+biQ9vxyC4unfqbWf4k
/WObONTFiVIcIvXnnU38st7q9JX3J/2UOGfe2ab96bnSe5odp+o4k/ypji9Y
6hV2Nk8x8cWceX57mI/nrPfP+iv35sj5/HH5Wn9rbzzI5VldZP64Htd5R7wy
xRfMoWRTu0v9+iyfkj+Y9FDnH5pXHQ+TTXxJ79W893FH9UzHGazr0+y8tLM4
8/Uav7qf/jF/uv4gjUfW77f1oLN7/bJuvCyNm9X1+ryS2TgpZW+n/bI9cWwv
p47+vrOdXuE5uu1Jz5graVwq8cacsd2b10w9T/Z3a7xqniNz8fP8XvdypX73
3ciXFN+h7PqT9Ew37mWu1Plf3pQTFxKPZnVT4pd/5+N8vH93lB/dedN9pPGk
2bhuF1/pykmvzPpHrsepns+ON72YJ/du94/PD8Km72GOdH5Ssq4vqT7Njp+n
frHjQoobdPxIx/s4H5/2dzpor17quJHew9F4SacvOp2R/JqOH53+uI2+mG2P
9+ZC5oPt0XEh86Ar742ruL4knWG94bLrb5cXOMuVzh+a9Zc6P6C7Hr/z71P7
7nh3tP2n9p6sv3eyHQ86DmBv63fcu52fzYueH7Pc6OIfaXvSi3vHozu90fEk
ccTbZ3kx6wel9j5b3ssn35/zXTseXBvnTLzv/IrOv0iccD11fb2OF/dux/eP
W8yO/yZ+dzbFSVO5rpf1hetjx4dOf3S8mNUje/2fdB8dX2Y5NRs/mG3/e/VC
5y/4u1NfOj/C9dJ2n054Kv7B9X7ELC+P+hdd+088qPP28czU7hMHEhe6OPxe
XTG7P113ljfdcb7/joez7Trl83Q8n7WuL65nrn/X+QVdO7l3+334dl6/27Zv
l7v2nXS/t3f1qmvPKb6Qyl27nm0viRPdebv9s/3zbHvt2jHvGZvabefH7+2X
sV37Paf/fmr2+vkqaX9t336H9N26dj3r79f5+nyHWb8/teejOrbjSnfddB/p
+Fkdk/S07ax/fW3eY9e+j/nfT11nn9+ubY/237b+jh3Hu/ad9Huqr2fp944T
XbtJOsPldJ7ufva241ldnb4P3zf1w1377erP17t/3t8OXd7bHmc523G5a4+z
cXfsbDtI9TmV917Px6Xfub1157ft3su149pdfznbHq/zc59KO7y2/Xbl4/1r
HTffr872p7P1rauflLvtXXtMv589fi9v9l63a49njyvN2mO69+vaHs/TvdjU
Hs/uZzs7Gx/Z23593rR/dvx09nd77/tou5v9Dm6Pe+OX5/ST924v1/Z/5/V7
e+PD3r7XXtv+UnlvO997H0fbxbXjJEf7t9u0m69r+5rXnbPvbW8/NmuPtrOz
xuv2Hu/fHd2frn/091378Xfb257ObV/3bgezuq/vl657j/n7pO3+vi4f1TG+
3uzvzrLd/Xb31d1/et9+v3u/44vbRad3nrq93bjAXv+p033YvfWp2z57nvS7
bvve++/6g9nrJHtb/fXU2svs/fdxeW/fy5+j/pDtUV13lh7ca2fb6+z9dty5
rU56KvV/b7z6eH9h2/Fmbzup4/r6cVZ7u1W77a6z9/rHvs+96+VZ+mV2/36+
d/Zo/bhWT53V33Ben9/b0/7nH9/nje37nk+Fs3u5e1SX7OX6t6frDfbaeMPR
8++9/jn1/6lws7v+bHu5vp+f7c+77dfao9c7yw8614/6utnZ53s4PYq9VX28
jd2rf55qf3ltvzpbv86vT+dc56zj9+rhp2qvfe6Hrg/XfvfflXZ9q/p6tD+6
ljtn399Ts7Pt7xv7jf3GfmO/sY/N/n+2pHrR
     "]}], {{0, 0}, {234, 210}}, {0, 1}],
  
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellLabel->
  "Out[230]=",ExpressionUUID->"78681712-5bad-4382-94bd-6ce28c4d89a2"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[SparseArray[Automatic, {210, 234}, 0., {1, {CompressedData["
1:eJyV0t1PTwEcx/F3UR4qpJREqSQSJUXJ00/0q0TJQw9E+rHZfpYys2Yz5SI2
a3JlbjJ3GmPWjZkxDxfWbObpoosuGGY2My4wxrwv+gc622vnbOec7/l8v9+T
0Xa0vj0CeMX4jgmaollaoI1q18BYrTiL1uqS3qsoEvr0RbW+fEcZE+G8/up4
lPd0KBreqW2SZx2eDN900o/FTLWesmNgSIFYeKlQHPxS3zTInA4P1DADvqo3
HrJmwj01JsB39SdCvsGfKZxk3WQYVM1sM+hCChTPgRGdToWcuTCsznmQkgaP
FE6HhPlwX+EMSMqEh+rIgnQH8kLd2VCwEN6qPwfKF8FP3VgMLbkQvwSeqCsP
cpfCqC4ug2A+/NC1Amhabr5Ce9KxFfZSBK91thhKV5pXA6ugrsSdlMJdHVkN
aWXwXN1r7GUtfNTldVC9Hn5rcIMzCkCki7up5nKI3gS31bLZ6wq4pcYgRFTC
ddVXwR9dqbaXLfBBvTVm2gqPFdrms7XmUVkdvFHndv+Teriq0h1mUminc1Dv
LkjebZ8qaYCnamg0qzqa3KlONZtxD5xT1F44o3/qaoHPat3nPBTYbx9KbIUT
GlHZAXepTypqgx4NKzYEFerRkEbFQUhVngoVUFCVY6rG6T+wTooL
      "], CompressedData["
1:eJzVnXtXE2cQh2m/gUIgikJQlJug0IIoWKtoq4JKUahAtZoAFYUiokVAQJSi
WKtQuYmEO7nYyCXBouQedrMJ4UN1dhOhnp6eAzTJzvzFIWcuz/ubmXffzYHd
GHlNgfzzkJCQ02UhIZ/Bz8rqmityRcX12pLLirKKn65X3qyuu3Op9MqP1xRl
5fzvN25WFRYVl5T+cBk+k69+WF1TW3f3l/qG1vb8gsKiSz6Dq//wqv65pvZ2
3R3eqPF+y8P2x0+eduVfKPx+zVb+ifEtn/W9hsam5tYHbQ8ftf+aX3DhYmHR
ulzuN7c8aAOXjr7c/O824NbiS9XR+azrTN658xtybl71ftL59LdnL7pzTuad
3WyIx0KM35+/6OruPXr6TG7e2U3TrIX6o6e3/+Q3357yV7xuCHjk6NfHc074
N2pv/8CQMvVgFsQ+djzHv7Ff9vT29Q+8GnydeTj7yFdCAj/T+zK8Hk7NOHQ4
K3BJhFUoR0bHJg6kpWdkBjKVoNiQUpUe2BV5CzOkHB4Z/TI942BmsJKNjU+q
NEnJKalfBDftxOSUet+B1LQgpx2HvCp18n4x8qq1+0VasEb7RjedkLQvOUUk
ArVGq0sUMb9KrdHFJSQmJYuXX/vmT93bmdnY+ERRZRAwpmdm5/fsjRO5ItCU
QDK3a3cssMQniE7jFWZOH4uHZm4XIpjZOVR1MshAnHgsNPpooY3R4BjmZbF7
EFULgKJjsE26YX5BFoOO6d1fst34mBaiZeh2aoHr/YdFky0GKRtGKhDMjLHB
gCsK9nScZEaTBalmRhPS3hdEQ0tmlsXg7TWzRYZ1R/PiYb4YWKJwa4ebzor2
Wirw2XEX12pfYljks2u1R2EndERFY0e02ZdYCpQ7CUA62B0UMO0ONhI9JbOD
gpKMK5JGxZciSejpYFgJEUHZbTSGHSpPgtOxxHDbttOBdRGCldJBjZAS0pXl
woGXDC7DhknCiQksiSCEyzglpOSFqy2tfmBYYryhYeGkeFknR64lnJwnlNrG
xlNvIcbMEVSZo4fs3AqbBjFmjhqwkyCxO5RcL3PuLfSgnZwrnBZwGKlDMi8w
rWM9EJNrYTe1WxGemR7yMq0vAICYmMawGRMjBo3JAROcPPcysas0udGDIyfB
2SN4xwfN7CH4RRG1M9wyNYVd1BR2b6U4fBHETnBuCTmJ3RJaGrs9EiklYNeK
lBAt51mRbieEu0yG1OWRov+ryLVNgU4HACsNVP6+yENJVjqsHiKkLs9OIqRc
JBFSLpoEJjQpP09ESNErys+Sm0zlCWCuyNAzshxyQqg1bkDoRtR4yMVz7kWN
xzpRy4e79eIQszF4hUNbU5ANx2OQ/v2PSUgVs+GksjswctkYfFQWBz4k6xIm
HrOFScIlkNmSgozHhk0gbDx4aIT9UZQHTf7HeFltjhQEOEBjNDsQgIAui6bU
NNE5FowiI8xDfxhNYhdkQRhgURC8BB8WRRTAYBUjs6/+70VKrTe8C+Kq+cza
6dnAPy16da2wzo+9Hcx18gLrpmf0wck4Nj4FDawPzuqghrpZ/TwkC2gu5cjY
xNRMprCgQOUYmVRNH8oKpGjDI5Nv57IDlmDglVIDe9fMMX8Hh9DZ/n+y/sue
vkGV2m+P1H/e1Q2A/uEDur4T/uCCWKM80/+J0jmYK7y6YaO+/LsfTsECzm0u
7fmCdbvwHh2dUxfXZQ/mo/zLNko/eW2H16zOF7K1rb2ouISP5LPwGtTerb/X
2PSouBQ8yz+61TY0gUnljaqSawowreRfAXK7rr7tqqKsoupWefnfGofpHQ==

      "]}, CompressedData["
1:eJztnc2yNceVlsUlcAlwC1yAJ0yYEsENEMCU8IixZ/SwBwyaCAYOgiDoDiIQ
/9AN0cLgthq7LbUtt2Vbsn6tT5IlcQmEtPZTGfXU934rq3bts8+RdSYrsqp2
/WY++a6VK/P8jb//j//uP/xrL7300t/5By+99Ne/+vv2t76xj8F+55Hcx2O1
37yf21q/32/e98PY71xpv2l/D2tTO7n1d5z9/e/Kdzr6nHvf43e+9c//4Mu/
35sud7/fZ7t61z3Xvb/TY2uXt27H/Xe/rj6cVW9mt/+u2v2cOMsmviTbHTd7
/lQ+Zu/9/Z6KPVq/rq9/Xb2aq3e/v7u+ztbT2fu/9j3Mvedb65LHYq/tZ87v
J7t6t7e++vdHz9dxeO45Zvl7q/7m3vXt8dbzvd8tbZ+t37X99zd27/7u+M4e
bRezv9/7/vZ+r72/K3vv+vhQ9b0r+z1+e/d7PcrDs+vxUfv3vvr7Z9PtZK6+
9+3gqH7fZzud8nVtD3uf67h/1h1X5eP6ZbbfwLo+U76V3Xs/yc7qt73tZq/f
MXdcqjf3rve31k2zz329P+rjut/V/lxP2L/Xpvp+tL3U/fxB3J72+7rd/fl9
dM95ln80+/332Xu3g6P9zP3iNWfprXTc3vre1fuunOzbb3359y+my10/Nttf
zb6ns+IJqfxim+rpU2lXe5/nuL8y228cbU9H+6G97aprL0fbU93PdzeW/baz
1+v6r/Q+Zt/zXp1wXb9273bz0O3xuP5L9tr2eSub6l2nx7r2ubf/cjur6353
utxt767ftd/ufRztX233tmfqk+vVevvR+n5vuzfeM+vXXRs3n/fHru0/Z/Xo
rJ2t/6n9JFv3u22ff+urv3+5lLvt6TzePtsfJ17Ntu/0XdJ3vFYXz9mnonev
17VH7bV+5Kzd209c6xfO6tzUPmct7dO27vNfxf3pPN7e8WS2X57tr9P3YPss
p8/R04897jrfXjtdO/u72fOlfrjj9bX95VntsGuXe9tr1w67duvtXXlve/b+
Wf2xtx/vvnva73p0XTv+usR/Oy7s73/3bj+7f07bu3qV6t+sfznb/js9vLd9
U07b/8lXf/96upxs4g/2qD+f3uMsJ9J3nq03s7p9bz2fs49V318f9/L2s3V6
9/3P0t9dPe62z9qufaX+PLVftmPref7NYr3fx81ywvffPc/eON9efyHx4cX1
5Hgc7vn1fzYP7d7t/FZ+wLw/5eNc3tvOu/2z/Xldb75f9vGz/WbXbrp+ObXT
P/njL//+aGnPlL3d7T39zpzo7su20z17445H/bUX15PjcYHUPvbZx6oH9uuD
2fdwlA+d7Tgwqwdmx6+Sne0Xu3a/lweddftPtp7z326sedLxJXFkVmfM8tPW
3+ksXmBT/dtXn6/1Ix47L87TI0f9h71+xaztuJH6q1m/Ym/7T+1otv++lh+0
c3Mi7e/s2XrF2zvedvz29/L3nI0bddxJ9TXV7290yvPus/dzbhWvwN6KL0fH
A1N/OsuBWU4kzrg9J5501rx46au/f7fhST33yxvL8baz15vl1CyfZ3WiObQ3
vtLpHtdb1+dZP/463jwVznT6ZXvcbDxlNs5C+VrOnMUXrPvVvfqja2eJI0e5
0ukS8yWV6/m3vMGaN2z3eRLPZvk4+37Sd0ncma0Hs3Hdvbon1f9O/8zZrl0/
Vr6cF2+51l+ajbN08ZUuLuuyOdP5LZ3/0fkj6bhUdntO++u5Mg/+5ld//36x
9dz/Yfmdt/t4LMfbJs7M+mdpu/XPXu64HqT64PrT8eYod27Dm8fCl+xPdfql
04edTTp0Nn63V7+kepf0y2w8xH5J1/7Pssmvqed9OXLAZfhh2+3H/u2v/v7j
hi8dh5Ku6jicvkfHocSbtN/1p8t/u5Y3bkfHePNYdc28funKs7ollTvdMsuT
Th9Tj1I8wGXzpvNfkt/Q8aHzO7y9nmerH5LeSLrFOsX86Phim87b6R5s5+d1
fljiTqd7Ot64PBvPOcqfc/TNY9U7PX/2xn+P+k3+Xv6u9fs8HxKb+jHbVB9T
f5p0ShfvSJxwO0zn6XRL8ocSB7y940e9l//0rX/01d9/Xsp7bcej9D66OFHS
Rx4PS/on1YNZ/szqnXU9ns/bPXcc67HpnvPiN0fHoZLeudU4k+tZp2+S3un4
QzujnPwccyDpks52vEk2cYXttt5f7+2/xONsuW7HJb/PznYcSvooxaldT2y7
ejc7vp44lLi0rx0+NT20X889tD66VvckHqV6l7iU/Kq6n23/nfye1A7Nj3Rc
auepvdv6PBwPV8wb/94cqvf035by7/3TL//+62LZ7v3eznmTLkvbO10168+l
79vFkVJcyfUVe9RvS3yyPcdveyxcOh4nevF72Bt/27/u1CyHOjsbd+7iM7Z7
eTKrN9zOk45JnDIXvB3ecB6XuS7b/+gPv/z778t2yuz3cbY+H/fh+0/cTjrR
32M2Hpe4tdffM6/MraT/b8WpY/rq3pzar6f2PnfST7zno+Nf/t6uD+ZPsh2P
ki5KuifpoMSL5DclfdEd3+23fjFHzAvzpd7PHy/bKWPNp3R84pbvLz3H3jj6
Xm6ZX7P5XElPJV01m1+9d1zuXL/v3nGo2ese11cdp/wdunG2a/WTj0v1bDbe
1Pl1yc8zp6xn3F7tP3X73f4T93ycuWP+JPujH3759ydL+YvPv/z7n4tlf3f+
7jjz1O/B7zX1F52fmOJfnf7qxgXP5lnHMbc729ty7OnpsaM6bDaedS3fOh3f
6bAuvtHxLOkw8yvppaSTOr6YT+YEZW/n/LPHU6738T8Wy35zrZ7nT5fjvJ/t
nNc8TPeb/NHkP9um74WtepnHUa/lXIrjz/LtaNz+qG7ruLC2j59b6/3z6753
nPJ3S/orcSjpq8SpLr4+yynzqvPbkr/V6RS369TOE0/MHdtql3+64Uo6nvPy
OyzcSmXfV+JZer6OX9ZrSbfN+qEpPyL5m11+Vup/Xf+v5Rbtzvac+Nfj5ZXt
2brK2/le2E5XpXhEimvtzYvqdJSt40cpnpQ4ZR3j7dYliRuJB97u482XdD62
13t6Zfkdlu3e7/N2x1H2c3Rx/m6c0n5miv+nOAH1w1yj3MXNOv/A7QDbcWwv
t9L2FDd6PhfuzbF5bnXlvbqL8uy4Itb6q8uzmR3vntVdaVwvxctTPNw8M5fM
i1k+pOO647vfJVvPMaz31/P+r8t7HNbX83kS93y/idOdXkv62P1SN47pcrLW
b6l/ndVn3bhXp89ol5193H7k+fkS18b3u3FI+5HYWf/Qej/5BSnO637b/bvb
RbKdP2h/LvHJ7d6cgB9u9z5Px7F0nXRdtnP9+m7f21jfp8+DTffh7Yl71rdp
XCJxLvmhlLtxnTRegO38Tur5tf7mXj8TO+tfPn/7teOL5+mz7r47ft2KZ/Yz
Oz+ym8eXeOZ+OMXDUj5EiscnPWaeuX3W/b0S27n5YG5g2e7jzBVzKdl03Xq+
713e0/++PN+wbOd36XifD+v7MOfsF6d4m7+D/dXkp3b+qnnnekV9w87mx7o/
T7w7K57Wte9jeu1W+q3XaXv12FGOJT8z6bJZnnV6DOt6h03x4M6v7MYPZ+NO
2E6H0e7hQb2n/7NYcwRrnpkviXuJW9ZhXNf3k+63u890X+awdVsaZ0jxN383
c87fP+k4+6mUrdtcP4/O457Vbyle3em2Lp42x7enE087Oi7Q6TV/n/Q907hl
53/Webd8S/rM9deccx5Fp8u6+Hpqr7Rrt39zpJ5z8IJy3ef3I//gR6e72M55
bX3+dN3E4/Qc5p/vM/nDya9N3Ov8U/upLlvPdZxLfmrSb2lcoeNd4txRf/XY
+MG9eHfeuOesnnOZ9+vvQRlr/d3xLq3/5n7T41auj0nHpfG2xDvnUaT4t+Ne
9gNn/T8snKnzf//yvv5ss50yfKn38oPIHW9P5/P2ZH1cx1Ef1+lAbOLfrO6z
n9vNf0j8S3lx5iL10v114p856PbiduV2t9d/xZ7jxz5d7vl92Jp3tl08zryb
5Z71XeKd62GXD5s453h2ykO1tX9qf83t2zrOfMPW+X+wsfDNZaz5lHSceUrZ
5+M6vj/2+34pz/Iy8TP57bxv+pEU33PecMrPwXbztzr+2c+g3rr+Xqv/sPca
n3gxjx5u/OFe8brEt726LsXpUjzOfEs8S3G5NE7q9jIbh7P/an2TeFbnffXy
vK8u5Trfn1+u8+fLdvOP7eZP4lbHT85X3/P/LvfFeSn7fjmPy76eeehy8seT
P9yNZ1BO40fJH+70XvIrrPeox2n+Qsc5867Od/180453iTcPw7n5/JFZvrns
95B4Z86l72POpbhd4ps5Z75Rpj52/qr9muT3pPhcGl9w+7R/mPQQXIBnWDgH
b+r8P1zK5iBlc5Pr1fMObmH9e1/X29P9sR2eUeY65qrP6/tK/i/9B+/bHPR4
rsc9ZudRpDwW96fmHvVx1s9N+QbmnzlY76kfz+g4t27f187Hul+eybX6zrbj
Hu99Nm43yz9zz/5rN/6Q9F3yV52PWs+1zQtxnMnxOfupjrOZS4k3cAp+1H3/
cOEfluP4nXllrqbr2JqzbPd9eL+vy35+5/tLXDdHeX8pTug8l5SHw3c1B5MO
7PKSZ/3gpPsSB+3nuj0l3YftuOftqf0fi+udzcG93M3PQdnvo9N7Hr/AJr2H
TXGLNE5R5x26z/6rbee/Jr6l8Qi3E8rO/3C7oz26vdZ5Xt3wwByr8/1ow6G6
v7+4vIe/uFznRwtP2M/vOR/HsZ3jfR1v5zqUu/NyfXORsi374VviPe8Ny/u0
nk460HrQcQm+K9yzTbrP/ezecQ4s9dz8wybuYa0z3C7RJ6kd7+Xe4xrX2J+/
cjS+l/qNveMZ/o7mIeXZfGLXs8TD5N+m/BNsiuslvzflm6AD67yDg27n5h6c
wcIleFP399pi6/qvXe7ntctzvXZ5Lz/ecM1lX8f7OR/W3Ev35/vAcpy3J277
/Vhnut8hrgAfrRfNSX9f1wfzMc1b6+bjJl4mPmJpD7P+sXXh2fPOHhcfH55/
3TwLbOJh4p85mMZ1qSeOLzsu43Fb11vP+3J9p2wdaP835aXQ3uCh42JYt2/z
xBzDwr26zuuLZXvd/+sbXnI++OTj4aiPtx7lOKx5xvnNZc7Ldq7r5/Tzw0Vz
0H61/Wcs38H+cqcf3Q+meKL7WfvLyX9OcUTrR7eDbp2nzl+ezQvsdON1ccPH
z0XbTg+m8ZFOHyadODtO4npj/5l6lvxhuNfNS3WciTK24yD6hLLHdbH2J63D
4AecME/qPH95eT/D1vO/frn+KJujnIcyx9n6eHgK57zd5zWf2Z/4yXls2W9O
wkesdWPSi86v8biz/eqUX5j86zS+PDsv2Hw0F91+UlzR7bLe/3zeYMeLOd48
tnUJvr25v9nxY2zSj3v9aKz7taQjU3zRnKQewcm0Xm9an8k6kXZAGV6m+WC0
N/MRiz9X59vmvziO6Hgiuql+P3hV59naeq6/vNzvTy73+ZOFk/AUy37KHJeO
5zrmKWX2w2nzm+N5Hutdntf61To16WH79ViPT1tfOl/H3Ezj00lPuh9O/rbz
EbtxGesDt4+9+YapnXZ+9qyedPnFvLwXJ7OuTM9jLu7Vk4mT1o8ud/mFdd4R
d+l4SX1L/nRa5ySNK9ufNhedH0x7s1+NzoGHjidaL8IP8weO1XV+suGeOUm5
7uenl+d9Y9le1/npsh/L+TkODnt70rNY7j9xmOPg51ovvr6JJ3DcrN7k/dov
px9LeY585+R/Oy6Z9KX9cLancezZfB7agXnZ+d+0P9tZP9x8gB+2x/Tl/cdr
0n0e1ZOd/837xiZu7vW/sfgh9r/hpONAab2WLq/a8Xraj/Nv7G/T/up+x3g0
fqLbMXE49BHtHh1mTlI2v+p9/fTyXoZlez3nG4ut+3hjw0n4Wfe/PZ79WM4P
/7gfc5XjzHMsxydda/4m63Gq58dTt3lAfK80jzHNk07r3aTx79n8b9djcxOd
kLjZze+b9c+th/by8zp//OHnsbg8G7c0LxMn947jdLzcy0n74daX3bi155l0
8+w8Xo31eKrHaeCkrf1P9JH5CD/hh/Wi+cd2uMb+Ou/PLuf92cJDttf5f3Z5
7r9arH+HrfsaXIXT1q/WufCTMr+Dmz4P/YP7D8cDPL7P+2U7793jZ+anvyf9
JXbWT3ec0/xMeeToTvvn5qXjmfCTdpPyxZPeTLqn88uTf35sfOfh8yH3jncf
9bsp+713XOz4aL878THl9yQ+2s+2v530hf1v2lGdd6sjOz8bax7a37aeM6/g
FJyr6w3e1X3+fLF13r+63OewbOc48xPeWm9i6z1st3Of7Dcv0ZfWnz6O9+Q4
qzla19nqTPSl84ngo+ObHi+3zrSeNCfTOBBl8zHpS3PSfjmcpB3RbtI8wsTH
jpPXjofPcevx5k36+Ww7fen3mnQk5bTOG9Z5QVi+v/tTyvbH4afrp9drsG60
XkBHeN4LZdqT8/YoOw/beYToIY/fpPEYOJJ4ZL7BP2wd/+bl+j+/vN9chqPw
E/6at2yHo+a47w+eU8ZyPP0C+tJxAvSseWpdCkfhKu8b/Z7y7G3rvYxxOnPU
uhOb9Gadb7teY5q32I2fW28mnbk3rwjrdj47/nMbjh7l6uzvjutObKc//T7N
zaQ3sSkPIuVVWndST6g/1p1pPS9zE15iqfduF/a/07oLKT9oPX478mgcr0y8
hBPw0noP/lhf1nFvLrau84vLdd9crI+r8/1isx3r39fzvLnhNpyknPQw281Z
nrPOv9WzLpuj1qPwk/cPR+Gn5wM5bxNb5/+zTb/q8UH77VjinNRLc9T8nJ3v
0/npbmez40PWoZ3+NEcov3j8+d76s9ehc+NZ2/GgvePkiZ/JX/f4j/33xE/7
7R7/sf6kvsJR++vWnbQLxyuxaZ4z7dH+uvlJ+4af8JLtHkcxN+AMfKrz/3yx
5ly9n18stu7rFwtX63q/vLznXy1ljq/r/HJzHs5f9/fmcj91n29uLPeHzrVO
RtfCWfjquIFt0q+8R94b/RT9l8fd8ev5fu4P+f7Wo3A16VL6aetS5ynZv0cP
dP68eUo7od3QjmhfiaNHx4uOjrNjH4d/fzT+2Y+vP7+f6XXoLE9nx9XpX81R
83RvfqZ1AvXeeUXwtOOq/ff6/RinSHlFlOEm1n4sei3pPviEboSX8I5yPe8v
L9f51eW9vLWUsfATvtZ9DM5yPvMVPnMfdf5h63yDp7bwNsUPrG+dN2C9Dlet
Vz1u7/E6vqP9+xQnNU9T3DT5+c5vMk/t3zufJPn3WNoR7Yp2lnSpyx1PZ8eP
bK8bT7odN12eHUcyP2fH05M+tR/fWb4v/Sff3dykvjiPOK1jS7+f/HrrB/MT
Xqa8dfQL3KznGHrH40O0X+tO2jvcRHfCT7iC/rPuxB+Hk/Cv7uety3FvXY57
e7F1/rcv533rcn9vX97j28vv631uuQtvuS5leOp4AveJNe85vq4zuOt4Kjyl
7PF/xwV4z3yHet7XN/oUXZrW//D4U+Jomleb8prsP5mj1HePx9MePB8Tftq/
73Sp9Y91qXnQjS+dw9GH9u+P5312/v7RcabEV/sT1qXdvEvrVNentB5HWi8c
3rqee1wJvjpO6nEl2iP6pu5/6FHzle3opeTfY+EHOg0dZ87CNSz8Q1/CV7gJ
R+Eq2+v3v15s/f6dy3t453Ifv15+V+/lrYW7lOG3r8P9cV/cJ3yGu+hc9G+d
f8QNUp6B47K8P3jLe679P9mM+8Fdz1+iH/U4P/UhrROCdb5HGvdHB9TzbufB
W1ek/CfaCdZxVdqZeUs7Te3Y7T3l81zr/ye+Pd/eiqvz4/rYa/Oi6rh+PD9x
Nfn9LicdSz2xnqV+pThAGtf3+BTtwVzFomPqefP6RHA0jdPDV+d5wgOs/X64
ioVX6Ev77XAOftb7eOdyH4OfVX53sXU/7y7763qjXOcdvIWjdf13luuxnzKW
+8PCX8o8l+O/8NfxXMcT4Gs979C/zivDb+C7OL5tvVvv5XXFy0fePraO265n
bN46r4R6ST3FWs86D8DjV7QL+3/Wtda3bofduJV5gD067o99HONW5/OUcjde
5fdsm+I2s7qVeuB6QTnpVuqhx1cdJ3B+qcepPK6fxvG9LgZ6iPFm2m3y/51f
hJ8LV+EDHEHnYfHv0afoR/hZ+wdP1/wbXIWf9ft3L+/n3cv3e3c5Dzq27u+d
hcOU1+f99cJz9DB85b7hKf2D4xD0F/DW43DwFl1LPIH3Rpn+iffsfo0y34vv
57z/9TzUrZ6lvjgeC1epX44bmKspryqtG5visN28UdqdeZrGszq+Wr9STjx9
PpceXz7qi8ep5uMD5m2XD4CFo+ap8/Vddj4VetU61XrV/TX1rc6zXXfOeoD6
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
5kE3DyLpVpeP6dcuX+vhx70SVxNf3U/xvunX0roa1q2U+d6Jr44XJN0KV6mv
1Gvqs9dxcD6682+tV9C35iv6J/G19r+xWNp/7R/jXeQb1P3/cuEsetbjOfAW
HjlOYK4m3jmuWdcdHF6P5w9/vu5z6E/8e29Hj3Kf6FKeo+5jjFet1+kc/w+Z
98N7s/8PX+Gq9arzZG3Rq/SvdZ3tugv4PV7vZnY+g3Us9Ra+Op6a8gdoF+gO
6xHak9ubeZraa4oHmKsdR6+NBzxsnDXp1G4+Qx8nSHydHc+y/5D4OstZrPVr
0q1wlnpqP8zjWugN+Ip1fJZ25fwu5x2gY9FF1kvwNY1v1f5tni2cxcLfOn7o
WOeRwlu4Zg6aq+hK+GgOm9+UuW79bsQvzEvK5imcRafCUWwdv+Uq7w//nzg3
753vgCWO4/gO38/5WPSv9LvmqvnqPFjz0/N1zVXqr8cXPF5lnWr/33FVt7MU
D7DfOctX7Cxn9/J1jncPly+AvVa/+j35PVq3JpviBPZHXC+sY+Er/bjztRJn
qe+Oh1U9/f5GxzpuwLgF+hXOonfcPmnHa79zrB+IrkLHYtFf+L3oNuKL8NZx
A/xoeIs+dJ4tNuldc3OdJzW4aZ6z3/FS7rOuN/4PMbrU62RSrt+P+QRwlfcD
V4m38D7px2bH//FDXMZfoV+lXtjvMVdtqXeOr9b5tuNYzrua1a20E/v/bk/2
+90eZ/Ox4IB50MUBbM2fffHWe+nY/fMPeN7ZfAG/b74D/V8a30pxWNcH8zSt
82iuwlPHCTy+5TgBFn3icS/a2dpv3P7fAbhq/VrvLevWOm4bJ4Cv6FZ4hYWn
jseiC9mfuEt8gbgn+tbzWTneZXQp3ISP3Dc6mzL6HF5ieX6X6XesT61Tvc64
5wf4OzmuynfG4tdgqR+U6Zfppx0HcBzV6995/B+OOg/AcdVOt5qjyf/v8gHQ
p51Opdzp1KRbHxdH+/GrxFPK7j8ST9P82aRXu/Es85R6kOKu3fwC+nvqr/0v
uEr9t1513mud59XN+IXHs7DWqfZD0VHwtK6/ne+FToUnxAXQc+g8lx23hLfw
zuNCa797O/7uvAXn65uT3I91J/y07qzfjzip/fvEUd5jHb9dB4a4Kd/D34n+
EI7ih2D57ljz0xzFduNS1qMel+r8/sTRpFNpV7TDbtw/6VLzNHFh1t83f17M
qfvPE0i206mpP+nyWc3X5Pcnvtb5Xt7oU/PUfn/iqXWAdSr1Hj1BmXaCDqF9
maP1nNvxK+e91nHbdQ3wS9FVcBULT+AqOtXlus6w1rHwLK2zSxku2h+nzPk4
v/NH2Z7ui/uGn/jv+O3mZuIn+ai8R7jJe6bM98Di1zteir/B98UfMTfTfFbq
DeWUn4qdzZ/CUt+TDk1+foqbdvn+iaPm6V7/3nbNm73rId46nno9Pztump9+
3x1HUx6AuUm9oR+mXnlcyvzEduOtjqNah2JpX3ATPeN4Wx0/8ljxN70egdcl
MEfhBlzxuraOA8AndB98g4uOT9oPZzv84zyJl+Yk92Pr+CbPVb8b6297Xr/1
JrzkvXq8nvdu/cl34rvZf4eX9t/3xkWtOx2/tx+fdCf1m3pvbnZ+vMvmZeKm
OXkrXq45c3R9lvut12KbeJrewyxfky61NVeTn+/+lnrVzbuaXbfFFl3qeVi0
N+tSdAztdb1Ox9BH1qfoUvxRuApP0alY8xUu2Q9G55mH8BIeYjmOMsc7fml+
Oy/U17df7jhGWh/beU5wM/VLvE+v68D3MEe9bgo85TvD0zS/NNWbxNHZ/H3K
6E778Ymj5ik2cdT8pJw42vF0PQ59nKNPi6v9OJSfu4uTmp8uJ33q/pHvnfx4
+Ek9S/monv9PvcZS353/j7Ue8bgT7dDrBaT1u+Eousl6yn4+ZazzWdFt8AhO
mV9w1nFXW+fHcx771Vj2O//A2+EmFk5ieV7rTZ7b74n3yHvlPaM7iXPCS8p8
H/o9vmOdZ/SLjn/WeTI/Xa8c9/Q4vLmZeNnFPxM307wnj8snXYOl/e7NdzrK
T3NpbR+f/rRNfr3fQ+LnXp4mjqZxe3PUfr3joo6PUp/rPl7ZcJX24HF82hHt
qo7fjt9bj3r+Ku0bv9/5UvABXWXesh3OmJ9pfRZzz/FGc9a843z2t9nu8XLf
D9b74af1pOfzmpeMszt+wvs2L603+W6O19Bf8p3hpvtV6glx9RTnhKOJn2k9
IHMz6U/HO603Pe5wdDw+tW/zYJab2GPxzvuvu2q7l5vJ8r5t/V38/TyuZL8d
636Yeoe1H5TyoOq+XtlYdKjz+OFnHTe4CS9pn26/btfWSXATPsAF8wJrrqLT
8Hfhqv39xDOvE4Ku9XnZjrWf7bL1sdchsa7k+XgvlJ2PBC/NR/or5/li7Zdj
nd9mXsJJ/BR4iWW745yOy6d1/11/Xb+tM+FlvZ+XNzoj6c5Ob5qXttad13Iy
jcMnPq3t4+EjNr2PWX2Jta7Emo98X+qB9SWWfpf65nin9abrL/Xb9d/jprQf
tzePN5iX9fsfbaz9R6zHneBDvYfBSbhizhAPdLzU3DTXkr/McY4LYO1Pc5x/
h+V+/TzWie5HsLwfzyfyugl13qEf+X629HseJ8SmeZv2S+yHu3+e9cfho/0o
cxGbxgVmx9E7LmI7PpoT5sexuOX9uHiUh0k3Ji76O1g3zo6j29+27daFgode
d89cRC/QbpL/jfV4kMtut3AQvUN7T/55ss739niy/Vf4BMdszVfnmfs8ntdj
/5n78vN4fCbxD0s/Qr9jXVj1Zes3owv5bs4fct6lbZ13qwvhYNKHya82/8xB
6rst7aHTh8mvTvxzOz0alzQvzh3PeTx5RYmLHQ95v9aFfJ/kN/Pdbe1H29of
sV50Paaem4v40c4XMRfNQ6z5R9l58Y5TWj/CRXPSPKnneH3DQ3OQMjrNuq2z
5iTb7dc7rup5Otx/Wm8ey3vye+zihvDOHMTiHzsP1/xzHNE6MK2X1OWhY1M8
seNfiit28UXao9vlXv4lPjxO/vXrfpzFv+QXJ+4lv5jvbR3Y6UJzz/oPS322
n2MdiHV7SfPX03wgrwNhPrq9wwO4Bxetj7DoKVvzBz45b4Yy3GR7Nx7EcfDM
cT6vk2HOzY6POP5nrlmnO2+H78R3dF4t33+Wd9Z77ndT/5x45/pd9/Ny5F3S
fbQzbKf/9uq8ZB8X7/o44Fncm40DzvKOepD8Atcf+7+OB6b15cw955ebe1jr
QbczczD5yVjrHTiX/Gf7k5Q9PmMO+Xis449Jp2Htl1q3+nnMuW59IFt0nTmW
dBv9l9cP8voW2LQ+W/o/GI7vJe5RP7v6nDjXjRubbx3nUv7NUV2XeDLHu/vN
o7mWeynvk/ft75H83G4eDdb9Y6f70v/b6PJuunmKbm9uj9aBcM9+WZdHbj7A
Pa/nCW/MIfjkeJr1GftTPM7+Ntcz53x/PIftXj1nP9X9juN3fDfzz/2d87DZ
b77ZJn+2819TvU7jGJ0f2/EOO8u7a/Xd4+Te7eN9nZ9r/cf369a1sHX9MQ/p
bx1ntg50f+52MDsuYuv1Ya0HsWkdTft78CLpP7Z7PCVx0PrM2z0f2efj+OSn
wkFz3M+V1mFyP5I4l/Km/b2OrmtmfyHpuxTHS7rO9Zdy0nmUaTfJut1huzie
Oej2bh7chnuJT/eP762fe/v/5Dq95+/kfoyy9b65R33BdnE/29l11KwDrAM9
HkK7c/zI4yOOv7vdcxx8MEfYbsv+lDdnXppb5pfPk87nuCUcd9nP2a3bkKzf
r79H1Ythnf9sXed8lTQ+mzhHfet4h3W9TrxLcTvrCNobttN3tOOzOPc44nnn
6TvruTSOge04Z51n3iX/t8sD7Pjm8Y203nmax+f4t/0obPKDrevMO/u95kOK
e6U84JSP6OPNQf+unvfVjTWf/f8QsEmn8V7sh5pjft+JX/5+Xd5Jp9uS30p9
S/4qlv2zXHO72eu/7h2fOFevPZZ5c/PxPN6D38/sOG33vVJ/lXhn7lF/kh+L
TfOSsF2cz3Futyv7TdZ1tEvacxpXxJp35qLjXY6H2S/GwjNv9/6UH5Ly4KzP
2I8+87iP84Tr+nk+RZov3vHN68invBLXi8S7xLmk2xLfXJ+TTpvlXPKvsC9u
x2ndq6em387TcbOcm9VxHd9mxy9c3+xHOF7n/jzNg7OeM+fq+q9s9If9WMfX
KcMBx+/Ybl2U9J79Qh+feJT8yTQu6udw3Mz6tYuj8f6wSZ8ljiW91sXbrs0b
pt5RntVrszyjHSXbcS3pNuysX9pxY20fnz6zTfya5Viy/p6Uu/FY6ot1GjaN
v3Z+qvNROj/V8ThzzO3a+sUco5xsymcxZ9Lxadyjy9/oxjdneWV9Nssrfw/r
L5fdX5lb5lU3Tlr3m3XYUT1Ge9k732Evr87VX/fWYw+vy7CzXEv67WicDWtd
luIpHl/o8qbS/xvo1ndNnDMfPP4KZ6zrkk5KHPR2rydqjvl+zS2vz9zpLe9n
e6eDU3zM3KKc4gzmmP3KxDH4ZY65fppjjq8k3ZXi/3vHO21Tuz7Xjzybaz1H
u3HQWV6lfsTfaZZbaXy0W0fF8Qz7ldZj1HNbz99J7cr5c2lcjrLbe7KOszne
lDjo47HmZzovx1lXWj85nuWy9ZT5nvxAj9ckfz/Ft8wp+4mpvtR9zf9/T9dP
W/e/1H+3j6O86rh1G711b911vT+JNc+6fI7Oml+zcTHHx9xvup7aUu+T/5Hy
2lK7tH9pPZLi2t7ecYNy8l/NyS4vwufxfae4O9a8sl5N/l+KT3Z5s0k/W1+b
W64fHa+6vIrEK/fL1PO98wZmeYX9evqLW251uivZ2X6iju95NesvOu/W9TDx
KvmN7qftd1gXJB2W1mN23N+23kOOY6e4duIj50m6qLse260n0/+bMIfSvHNz
KI0Ten/iVYq7J78v2aP6yvV0Vl+ZT3v1lG3Hpaels66PYyXb6avZeVKUXT9m
1weZ1VOu14lT/n8FqT1286btByW/KY2f+XfdeFzijo/z8ek+Zsfz0vxw86aL
Kzr+xHezv2e/7iiP0jhQikcl3YSd1U1ub509dzzwXnlemUMud3GqWR6lOFXq
Zzq/Ls1PsqXedRyi/rs/tp8xG2fv9psr3e8S/6zT0nhm4lzSeckvS/fl95b0
TTeukfRPF1/y98aaM0kHub5hk36n/rpfTXHbzm+jfWHPiX8/Ft1z/vie30vi
z95xP/On41DHJftxji90flxqRykektZFTfs7/dC1c+9P3Oh0Vcor73g5q3dS
XpOtdWnijb9j1aNt/8P37+bbmjvuD91vpnjRbDy70z+3jWs/Vg59u9VBs/6a
y8kPs01+WeqfOi5Zb1svuR6bP+6vO3/C7c026YN0fBon9/bEwy5ek/jh+0pc
7NZdneVO8peTH8X32xuf7ubLJH8r1dez4tKzvHnacen9Osh2L4+wSRfN8ij5
Z8maT66HaVzO/Wvy25J/kLZ3cQ6332Sty8yxdJ7EuTSOldYx7fg5G0fGWnc6
r8M6le+UuNPpnS5/8tp4T8efxKHUfvbpnl5f7Pvd/XTQi+/3uC5KeqiLU5s/
RzmU5gGmOGWX5zTbrro89S4ukjjX8S3pMvtvnQ5LttM5fi/me+JO0j9VL3L+
UOJLsnt1Txpfcf/acSfFd7p2ltpj117P5cTDx6UTX+biQ9vxyC4unfqbWf4k
/WObONTFiVIcIvXnnU38st7q9JX3J/2UOGfe2ab96bnSe5odp+o4k/ypji9Y
6hV2Nk8x8cWceX57mI/nrPfP+iv35sj5/HH5Wn9rbzzI5VldZP64Htd5R7wy
xRfMoWRTu0v9+iyfkj+Y9FDnH5pXHQ+TTXxJ79W893FH9UzHGazr0+y8tLM4
8/Uav7qf/jF/uv4gjUfW77f1oLN7/bJuvCyNm9X1+ryS2TgpZW+n/bI9cWwv
p47+vrOdXuE5uu1Jz5graVwq8cacsd2b10w9T/Z3a7xqniNz8fP8XvdypX73
3ciXFN+h7PqT9Ew37mWu1Plf3pQTFxKPZnVT4pd/5+N8vH93lB/dedN9pPGk
2bhuF1/pykmvzPpHrsepns+ON72YJ/du94/PD8Km72GOdH5Ssq4vqT7Njp+n
frHjQoobdPxIx/s4H5/2dzpor17quJHew9F4SacvOp2R/JqOH53+uI2+mG2P
9+ZC5oPt0XEh86Ar742ruL4knWG94bLrb5cXOMuVzh+a9Zc6P6C7Hr/z71P7
7nh3tP2n9p6sv3eyHQ86DmBv63fcu52fzYueH7Pc6OIfaXvSi3vHozu90fEk
ccTbZ3kx6wel9j5b3ssn35/zXTseXBvnTLzv/IrOv0iccD11fb2OF/dux/eP
W8yO/yZ+dzbFSVO5rpf1hetjx4dOf3S8mNUje/2fdB8dX2Y5NRs/mG3/e/VC
5y/4u1NfOj/C9dJ2n054Kv7B9X7ELC+P+hdd+088qPP28czU7hMHEhe6OPxe
XTG7P113ljfdcb7/joez7Trl83Q8n7WuL65nrn/X+QVdO7l3+334dl6/27Zv
l7v2nXS/t3f1qmvPKb6Qyl27nm0viRPdebv9s/3zbHvt2jHvGZvabefH7+2X
sV37Paf/fmr2+vkqaX9t336H9N26dj3r79f5+nyHWb8/teejOrbjSnfddB/p
+Fkdk/S07ax/fW3eY9e+j/nfT11nn9+ubY/237b+jh3Hu/ad9Huqr2fp944T
XbtJOsPldJ7ufva241ldnb4P3zf1w1377erP17t/3t8OXd7bHmc523G5a4+z
cXfsbDtI9TmV917Px6Xfub1157ft3su149pdfznbHq/zc59KO7y2/Xbl4/1r
HTffr872p7P1rauflLvtXXtMv589fi9v9l63a49njyvN2mO69+vaHs/TvdjU
Hs/uZzs7Gx/Z23593rR/dvx09nd77/tou5v9Dm6Pe+OX5/ST924v1/Z/5/V7
e+PD3r7XXtv+UnlvO997H0fbxbXjJEf7t9u0m69r+5rXnbPvbW8/NmuPtrOz
xuv2Hu/fHd2frn/091378Xfb257ObV/3bgezuq/vl657j/n7pO3+vi4f1TG+
3uzvzrLd/Xb31d1/et9+v3u/44vbRad3nrq93bjAXv+p033YvfWp2z57nvS7
bvve++/6g9nrJHtb/fXU2svs/fdxeW/fy5+j/pDtUV13lh7ca2fb6+z9dty5
rU56KvV/b7z6eH9h2/Fmbzup4/r6cVZ7u1W77a6z9/rHvs+96+VZ+mV2/36+
d/Zo/bhWT53V33Ben9/b0/7nH9/nje37nk+Fs3u5e1SX7OX6t6frDfbaeMPR
8++9/jn1/6lws7v+bHu5vp+f7c+77dfao9c7yw8614/6utnZ53s4PYq9VX28
jd2rf55qf3ltvzpbv86vT+dc56zj9+rhp2qvfe6Hrg/XfvfflXZ9q/p6tD+6
ljtn399Ts7Pt7xv7jf3GfmO/sY/N/n+2pHrR
     "]}], {{0, 0}, {234, 210}}, {0, 1}],
  
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 GeneratedCell->False,
 CellAutoOverwrite->
  False,ExpressionUUID->"825d848f-fbf7-47e2-9833-85f2c9c4eb02"]
}, Open  ]],

Cell["\<\
If we compare this to the original image import (seen below) we see that they \
are the same image. The size of the images might appear different on your \
screen (this is due to different scalings of the outputs), but the pixel \
dimensions of the images are still the same. \
\>", "Text",ExpressionUUID->"3819b8a9-e204-4968-99bf-218974692e61"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Import", "[", 
  RowBox[{"currentdirectory", "<>", "\"\<image.bmp\>\""}], "]"}]], "Input",
 CellLabel->
  "In[231]:=",ExpressionUUID->"5e336eb0-2029-4372-9d46-7b8dcab3357a"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
2WabbbbZZptttr1j/w/VLcj2
    "], {{0, 210}, {234, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{234, 210},
  PlotRange->{{0, 234}, {0, 210}}]], "Output",
 CellLabel->
  "Out[231]=",ExpressionUUID->"c51ea719-a581-4ad7-b9d6-22075302fea6"]
}, Open  ]],

Cell["\<\
With the image component done, we can move on to the next component: \
GuessSpotSize\
\>", "Text",ExpressionUUID->"e3a4663a-4520-4d0d-9648-9dc3c46c979b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["GuessSpotSize", "Section",ExpressionUUID->"f3df1930-f061-485f-a1c7-bb5afd4ee5f7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "GuessSpotSize"}]], "Input",
 CellLabel->
  "In[232]:=",ExpressionUUID->"3054946f-4b2f-436b-b5f1-5c54a5c5b4a4"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"GuessSpotSize[imdata] gives in list format \
{wheight,wwidth} the spot size guesses.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{
                    "GuessSpotSize", "[", "GuessSpotSize`Private`imdata_", 
                    "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "GuessSpotSize`Private`decimateddata", "=", 
                    "GuessSpotSize`Private`imdata"}], ",", 
                    "GuessSpotSize`Private`max", ",", 
                    "GuessSpotSize`Private`centercoord", ",", 
                    "GuessSpotSize`Private`heightcentercoord", ",", 
                    "GuessSpotSize`Private`widthcentercoord", ",", 
                    "GuessSpotSize`Private`decimatedheight", ",", 
                    "GuessSpotSize`Private`decimatedwidth", ",", 
                    "GuessSpotSize`Private`intbackground", ",", 
                    "GuessSpotSize`Private`targetintensity", ",", 
                    "GuessSpotSize`Private`intvaluesinwidthdirection", ",", 
                    "GuessSpotSize`Private`halftotalwidth", ",", 
                    "GuessSpotSize`Private`intvaluesinheightdirection", ",", 
                    "GuessSpotSize`Private`halftotalheight", ",", 
                    "GuessSpotSize`Private`wwidthguess", ",", 
                    "GuessSpotSize`Private`wheightguess"}], "}"}], ",", 
                    RowBox[{
                    RowBox[{"GuessSpotSize`Private`max", "=", 
                    RowBox[{
                    "Max", "[", "GuessSpotSize`Private`decimateddata", 
                    "]"}]}], ";", 
                    RowBox[{"GuessSpotSize`Private`decimatedheight", "=", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    "GuessSpotSize`Private`decimateddata", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], 
                    "]"}]}], ";", 
                    RowBox[{"GuessSpotSize`Private`decimatedwidth", "=", 
                    RowBox[{"Length", "[", 
                    RowBox[{
                    "GuessSpotSize`Private`decimateddata", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "All"}], "\[RightDoubleBracket]"}], 
                    "]"}]}], ";", 
                    RowBox[{"GuessSpotSize`Private`centercoord", "=", 
                    RowBox[{"FirstPosition", "[", 
                    RowBox[{
                    "GuessSpotSize`Private`decimateddata", ",", 
                    "GuessSpotSize`Private`max", ",", 
                    RowBox[{"{", 
                    RowBox[{
                    FractionBox["GuessSpotSize`Private`decimatedheight", "2"],
                     ",", 
                    
                    FractionBox["GuessSpotSize`Private`decimatedwidth", 
                    "2"]}], "}"}], ",", 
                    RowBox[{"{", "2", "}"}]}], "]"}]}], ";", 
                    RowBox[{"GuessSpotSize`Private`heightcentercoord", "=", 
                    RowBox[{
                    "GuessSpotSize`Private`centercoord", 
                    "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
                    ";", 
                    RowBox[{"GuessSpotSize`Private`widthcentercoord", "=", 
                    RowBox[{
                    "GuessSpotSize`Private`centercoord", 
                    "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
                    ";", 
                    RowBox[{"GuessSpotSize`Private`intbackground", "=", 
                    RowBox[{"Mean", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "GuessSpotSize`Private`decimateddata", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "GuessSpotSize`Private`decimateddata", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{
                    "1", ",", "GuessSpotSize`Private`decimatedheight"}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "GuessSpotSize`Private`decimateddata", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{
                    "1", ",", "GuessSpotSize`Private`decimatedwidth"}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "GuessSpotSize`Private`decimateddata", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{
                    "GuessSpotSize`Private`decimatedheight", ",", 
                    "GuessSpotSize`Private`decimatedwidth"}], 
                    "\[RightDoubleBracket]"}]}], "}"}], "]"}]}], ";", 
                    RowBox[{"GuessSpotSize`Private`targetintensity", "=", 
                    RowBox[{"N", "[", 
                    FractionBox["GuessSpotSize`Private`max", 
                    SuperscriptBox["\[ExponentialE]", "2"]], "]"}]}], ";", 
                    RowBox[{
                    "GuessSpotSize`Private`intvaluesinwidthdirection", "=", 
                    RowBox[{"N", "[", 
                    RowBox[{"Reverse", "[", 
                    RowBox[{
                    "GuessSpotSize`Private`decimateddata", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{"GuessSpotSize`Private`heightcentercoord", ",", 
                    RowBox[{
                    "1", ";;", "GuessSpotSize`Private`widthcentercoord"}]}], 
                    "\[RightDoubleBracket]"}], "]"}], "]"}]}], ";", 
                    RowBox[{"GuessSpotSize`Private`halftotalwidth", "=", 
                    
                    FractionBox["GuessSpotSize`Private`decimatedwidth", 
                    "2.`"]}], ";", 
                    RowBox[{
                    "GuessSpotSize`Private`intvaluesinheightdirection", "=", 
                    RowBox[{"N", "[", 
                    RowBox[{"Reverse", "[", 
                    RowBox[{
                    "GuessSpotSize`Private`decimateddata", 
                    "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{
                    "1", ";;", "GuessSpotSize`Private`heightcentercoord"}], 
                    ",", "GuessSpotSize`Private`widthcentercoord"}], 
                    "\[RightDoubleBracket]"}], "]"}], "]"}]}], ";", 
                    RowBox[{"GuessSpotSize`Private`halftotalheight", "=", 
                    
                    FractionBox["GuessSpotSize`Private`decimatedheight", 
                    "2.`"]}], ";", 
                    RowBox[{"GuessSpotSize`Private`wwidthguess", "=", 
                    RowBox[{
                    RowBox[{"FirstPosition", "[", 
                    RowBox[{
                    "GuessSpotSize`Private`intvaluesinwidthdirection", ",", 
                    RowBox[{"_", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#1", "<", "GuessSpotSize`Private`targetintensity"}], 
                    "&"}], ")"}]}], ",", 
                    "GuessSpotSize`Private`halftotalwidth", ",", "2"}], "]"}],
                     "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}],
                     ";", 
                    RowBox[{"GuessSpotSize`Private`wheightguess", "=", 
                    RowBox[{
                    RowBox[{"FirstPosition", "[", 
                    RowBox[{
                    "GuessSpotSize`Private`intvaluesinheightdirection", ",", 
                    RowBox[{"_", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "#1", "<", "GuessSpotSize`Private`targetintensity"}], 
                    "&"}], ")"}]}], ",", 
                    "GuessSpotSize`Private`halftotalheight", ",", "2"}], 
                    "]"}], "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}], ";", 
                    RowBox[{"{", 
                    RowBox[{
                    "GuessSpotSize`Private`wheightguess", ",", 
                    "GuessSpotSize`Private`wwidthguess"}], "}"}]}]}], 
                    "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"GuessSpotSize`GuessSpotSize\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"GuessSpotSize[imdata] gives in list format \
{wheight,wwidth} the spot size guesses.\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "GuessSpotSize[imdata] gives in list format {wheight,wwidth} the spot \
size guesses.", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> 
    None, "DownValues" -> 
    Information`InformationValueForm[
     DownValues, GuessSpotSize`GuessSpotSize, {GuessSpotSize`GuessSpotSize[
         Pattern[GuessSpotSize`Private`imdata, 
          Blank[]]] :> 
       Module[{GuessSpotSize`Private`decimateddata = 
          GuessSpotSize`Private`imdata, GuessSpotSize`Private`max, 
          GuessSpotSize`Private`centercoord, 
          GuessSpotSize`Private`heightcentercoord, 
          GuessSpotSize`Private`widthcentercoord, 
          GuessSpotSize`Private`decimatedheight, 
          GuessSpotSize`Private`decimatedwidth, 
          GuessSpotSize`Private`intbackground, 
          GuessSpotSize`Private`targetintensity, 
          GuessSpotSize`Private`intvaluesinwidthdirection, 
          GuessSpotSize`Private`halftotalwidth, 
          GuessSpotSize`Private`intvaluesinheightdirection, 
          GuessSpotSize`Private`halftotalheight, 
          GuessSpotSize`Private`wwidthguess, 
          GuessSpotSize`Private`wheightguess}, 
         GuessSpotSize`Private`max = Max[GuessSpotSize`Private`decimateddata]; 
         GuessSpotSize`Private`decimatedheight = Length[
            Part[GuessSpotSize`Private`decimateddata, All, 1]]; 
         GuessSpotSize`Private`decimatedwidth = Length[
            Part[GuessSpotSize`Private`decimateddata, 1, All]]; 
         GuessSpotSize`Private`centercoord = 
          FirstPosition[
           GuessSpotSize`Private`decimateddata, GuessSpotSize`Private`max, {
            GuessSpotSize`Private`decimatedheight/2, 
             GuessSpotSize`Private`decimatedwidth/2}, {2}]; 
         GuessSpotSize`Private`heightcentercoord = 
          Part[GuessSpotSize`Private`centercoord, 1]; 
         GuessSpotSize`Private`widthcentercoord = 
          Part[GuessSpotSize`Private`centercoord, 2]; 
         GuessSpotSize`Private`intbackground = Mean[{
             Part[GuessSpotSize`Private`decimateddata, 1, 1], 
             Part[
             GuessSpotSize`Private`decimateddata, 1, 
              GuessSpotSize`Private`decimatedheight], 
             Part[
             GuessSpotSize`Private`decimateddata, 1, 
              GuessSpotSize`Private`decimatedwidth], 
             Part[
             GuessSpotSize`Private`decimateddata, 
              GuessSpotSize`Private`decimatedheight, 
              GuessSpotSize`Private`decimatedwidth]}]; 
         GuessSpotSize`Private`targetintensity = 
          N[GuessSpotSize`Private`max/E^2]; 
         GuessSpotSize`Private`intvaluesinwidthdirection = N[
            Reverse[
             Part[
             GuessSpotSize`Private`decimateddata, 
              GuessSpotSize`Private`heightcentercoord, 
              Span[1, GuessSpotSize`Private`widthcentercoord]]]]; 
         GuessSpotSize`Private`halftotalwidth = 
          GuessSpotSize`Private`decimatedwidth/2.; 
         GuessSpotSize`Private`intvaluesinheightdirection = N[
            Reverse[
             Part[GuessSpotSize`Private`decimateddata, 
              Span[1, GuessSpotSize`Private`heightcentercoord], 
              GuessSpotSize`Private`widthcentercoord]]]; 
         GuessSpotSize`Private`halftotalheight = 
          GuessSpotSize`Private`decimatedheight/2.; 
         GuessSpotSize`Private`wwidthguess = Part[
            FirstPosition[GuessSpotSize`Private`intvaluesinwidthdirection, 
             PatternTest[
              Blank[], # < GuessSpotSize`Private`targetintensity& ], 
             GuessSpotSize`Private`halftotalwidth, 2], 1]; 
         GuessSpotSize`Private`wheightguess = Part[
            FirstPosition[GuessSpotSize`Private`intvaluesinheightdirection, 
             PatternTest[
              Blank[], # < GuessSpotSize`Private`targetintensity& ], 
             GuessSpotSize`Private`halftotalheight, 2], 1]; {
          GuessSpotSize`Private`wheightguess, 
           GuessSpotSize`Private`wwidthguess}]}], "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> 
    "GuessSpotSize`GuessSpotSize"], False]]], "Output",
 CellLabel->
  "Out[232]=",ExpressionUUID->"fc170663-9966-4fd1-afd7-3611afe43a41"]
}, Open  ]],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s recall what we learned about spot size earlier in \
Introduction Part 3: \n\nIt is the distance from the center of the beam to \
where the intensity of the light has dropped by one standard deviation. If \
the intensity of the light at the center of the beam has a value ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "0"], TraditionalForm]],ExpressionUUID->
  "cb3d393d-e16f-4cca-b747-c17f809bde22"],
 ", then if the light has dropped by one standard deviation, the light now \
has an intensity of ",
 Cell[BoxData[
  FormBox[
   FractionBox[
    SubscriptBox["I", "0"], 
    SuperscriptBox["\[ExponentialE]", "2"]], TraditionalForm]],ExpressionUUID->
  "482f3ece-11b2-4fb8-91c6-474ef5b06a45"],
 ". In our math we include a spot size in the height and width direction, \
which allows us to deal with circular beams as well as elliptical beams. \n\n\
I named this component of the decimation process GuessSpotSize, because guess \
what? It guesses the spot size of the beam in the height and width directions \
without doing any hardcore analysis. What do I mean by hardcore analysis? I \
briefly mentioned this many sections ago (Introduction Part 3), but by \
hardcore analysis I mean fitting an intensity function (the one we talked \
about in Introduction Part 3 to an image.\n\nI am now going to go off on a \
tangent on fitting a function to an image. I could do this else where but \
since I just mentioned it I might as well do so now. \n\nYou might be \
thinking how can I fit a function to an image? Answer: an image is a \
function. And by fitting an image we mean we want to find an approximation of \
this image function. Each pixel (which contains a value) has a numbered \
position in both the height (y) and width (x) directions. Therefore, we can \
say that an image is a set of values mapped to a 2D space. \n\nBelow is a \
great video that talks about images as functions. The speaker says the word \
\[OpenCurlyDoubleQuote]channel\[CloseCurlyDoubleQuote] to describe the gray \
colorspace (the same one that the Thorlabs camera uses). He also talks about \
smoothing an image and that is very relatable to, but not exactly the same \
as, the decimation that we were talking about earlier. The second link is a \
continuation of the first video. You will hear him talk about the ways to \
write an image function. You will also hear him mention negative values, but \
we won\[CloseCurlyQuote]t be concerning ourselves with negative values so don\
\[CloseCurlyQuote]t focus on that part. "
}], "Text",ExpressionUUID->"9f0c40d5-7c96-4b92-88dd-b2cc6e98abc0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Images as Functions\>\"", ",", 
   "\"\<https://www.youtube.com/watch?v=x1zhWArrkko\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Images as Functions Continued\>\"", ",", 
   "\"\<https://www.youtube.com/watch?v=edOZEXduamc\>\""}], "]"}]}], "Input",
 CellOpen->False,
 CellLabel->
  "In[233]:=",ExpressionUUID->"65273bfc-3ab6-42f5-85fc-7737d0a12443"],

Cell[BoxData[
 TemplateBox[{
  "\"Images as Functions\"","https://www.youtube.com/watch?v=x1zhWArrkko"},
  "HyperlinkURL"]], "Output",
 CellLabel->
  "Out[233]=",ExpressionUUID->"578e8b46-b22f-4ec3-8642-e0f97446587b"],

Cell[BoxData[
 TemplateBox[{
  "\"Images as Functions Continued\"",
   "https://www.youtube.com/watch?v=edOZEXduamc"},
  "HyperlinkURL"]], "Output",
 CellLabel->
  "Out[234]=",ExpressionUUID->"b9c12e9d-cf11-4c4d-a633-d2ae7172b017"]
}, Open  ]],

Cell[TextData[{
 "Now at this point the documentation quality takes a bit of a nose dive. To \
complete the documentation in the time I have allotted to its creation, I had \
to make some cuts. The next part of the document was supposed to include a \
step by step breakdown of the code used in each of my user defined functions \
that are in my package. \n\nHowever, the documentation does not do that. \
Instead, the documentation following this point will be bare bones. It will \
be include enough information so that you know what each of the functions you \
will interact with do, what each of these functions requires as input, and \
what each of these functions outputs. You will also know what will cause \
errors in these functions. You will not know how these functions work in \
great detail. \n\nOne thing that worries me about this is that the program is \
incomplete. Roshan and I never could get our two programs to agree on data. \
So you might be tempted to create your own program thinking you can fix the \
issues, but I advise against that as that might take a whole summer to do (as \
it took me a whole summer to make this program). Near the end of the summer I \
experimented with including a correction factor in my fitting program to \
account for the fact that the laser beams we used are not perfectly gaussian. \
For more information, please ask Dr. Marcus about the embedded gaussian \
discussion we had last summer and see the Slack posts. Using this correction \
factor did seem to increase the accuracy of my program\[CloseCurlyQuote]s \
results, however, that was when I chose the correction factor myself. My \
program seemed to be unable to correctly choose the correction factor itself. \
\n\nAnother issue that I encountered was that the two methods I used to \
profile a beam: using the camera/computer and using a pinhole, returned \
widely different results. For more information see the Slack post with the \
attached file called: \[OpenCurlyDoubleQuote]",
 StyleBox["divergenceangle",
  IgnoreSpellCheck->True],
 " final.pdf\[CloseCurlyDoubleQuote]\n\nI do not think there are any coding \
mistakes in my code causing these issues. I think some of the issues are \
being caused by my code being written with the idea that it is okay to \
approximate the beams as perfectly gaussian. \n\nNow it would make sense for \
you to understand how my code works in great detail so that you could edit it \
to include a correction factor if you decide you want to do that. However, \
like I said, I will not be explaining how my code works in great detail.\n\n\
This puts you in a bad position. \n\nWith that in mind let\[CloseCurlyQuote]s \
discuss GuessSpotSize. Why would you want to guess when you can just fit? \
Well fitting data to multivariable functions like we are doing requires some \
good initial conditions. We acquire these decent initial conditions by doing \
educated guess work. \n\nMy tools actually use GuessSpotSize twice. The first \
time is used to determine what type of decimation should be performed. The \
second time is for doing fitting. "
}], "Text",ExpressionUUID->"cc98be94-ecfe-4b48-8250-7c25061941fc"],

Cell["\<\
Here is a quickly commented version of GuessSpotSize. A comment describes the \
line of code that comes directly before it. \
\>", "Text",ExpressionUUID->"7b15bb7f-b627-4ea2-87ab-686d2c6bf1bd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GuessSpotSize", "[", "imdata_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"decimateddata", "=", "imdata"}], ",", "max", ",", 
      "centercoord", ",", "heightcentercoord", ",", "widthcentercoord", ",", 
      "decimatedheight", ",", "decimatedwidth", ",", "intbackground", ",", 
      "targetintensity", ",", "intvaluesinwidthdirection", ",", 
      "halftotalwidth", ",", "intvaluesinheightdirection", ",", 
      "halftotalheight", ",", "wwidthguess", ",", "wheightguess"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"max", " ", "=", " ", 
      RowBox[{"Max", "[", "decimateddata", "]"}]}], ";", 
     RowBox[{"(*", " ", 
      RowBox[{"finds", " ", "max", " ", "value"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"decimatedheight", " ", "=", " ", 
      RowBox[{"Length", "[", 
       RowBox[{"decimateddata", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"finds", " ", "height", " ", "of", " ", "image"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"decimatedwidth", " ", "=", " ", 
      RowBox[{"Length", "[", 
       RowBox[{"decimateddata", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", " ", "All"}], "]"}], "]"}], "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"finds", " ", "width", " ", "of", " ", "image"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"centercoord", " ", "=", " ", 
      RowBox[{"FirstPosition", "[", 
       RowBox[{"decimateddata", ",", " ", "max", ",", " ", 
        RowBox[{"{", "2", "}"}]}], "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{"finds", " ", "posiiton", " ", "of", " ", "max", " ", "value"}],
       "*)"}], "\[IndentingNewLine]", 
     RowBox[{"heightcentercoord", " ", "=", " ", 
      RowBox[{"centercoord", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", 
     RowBox[{"widthcentercoord", " ", "=", " ", 
      RowBox[{"centercoord", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
      "breaks", " ", "down", " ", "the", " ", "coordinate", " ", "list", " ", 
       "into", " ", "two", " ", "seperate", " ", "values"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"intbackground", " ", "=", " ", 
      RowBox[{"Mean", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"decimateddata", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", " ", "1"}], "]"}], "]"}], ",", " ", 
         RowBox[{"decimateddata", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", " ", "decimatedheight"}], "]"}], "]"}], ",", " ",
          "\n", "   ", 
         RowBox[{"decimateddata", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", " ", "decimatedwidth"}], "]"}], "]"}], ",", " ", 
         "\n", "   ", 
         RowBox[{"decimateddata", "[", 
          RowBox[{"[", 
           RowBox[{"decimatedheight", ",", " ", "decimatedwidth"}], "]"}], 
          "]"}]}], "}"}], "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
      "guesses", " ", "background", " ", "color", " ", "based", " ", "on", 
       " ", "colors", " ", "of", " ", "corners"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"targetintensity", " ", "=", " ", 
      RowBox[{
       RowBox[{"max", "/", 
        RowBox[{"E", "^", "2"}]}], "//", "N"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
      "where", " ", "intensity", " ", "has", " ", "dropped", " ", "by", " ", 
       "1", " ", "std"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"intvaluesinwidthdirection", " ", "=", "  ", 
      RowBox[{
       RowBox[{"Reverse", "[", 
        RowBox[{"decimateddata", "[", 
         RowBox[{"[", 
          RowBox[{"heightcentercoord", ",", " ", 
           RowBox[{"1", " ", ";;", " ", "widthcentercoord"}]}], "]"}], "]"}], 
        "]"}], "//", "N"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
      "starting", " ", "from", " ", "center", " ", "it", " ", "lists", " ", 
       "pixel", " ", "values", " ", "to", " ", "edge", " ", "of", " ", 
       "image"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"halftotalwidth", " ", "=", " ", 
      RowBox[{"decimatedwidth", "/", "2.0"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"intvaluesinheightdirection", " ", "=", " ", 
      RowBox[{
       RowBox[{"Reverse", "[", 
        RowBox[{"decimateddata", "[", 
         RowBox[{"[", 
          RowBox[{
           RowBox[{"1", " ", ";;", " ", "heightcentercoord"}], ",", " ", 
           "widthcentercoord"}], "]"}], "]"}], "]"}], "//", "N"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
      "same", " ", "as", " ", "other", " ", "intvalues", " ", "list", " ", 
       "but", " ", "in", " ", "height", " ", "direction"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"halftotalheight", " ", "=", " ", 
      RowBox[{"decimatedheight", "/", "2.0"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"wwidthguess", " ", "=", " ", 
      RowBox[{
       RowBox[{"FirstPosition", "[", 
        RowBox[{"intvaluesinwidthdirection", ",", " ", 
         RowBox[{"_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", " ", "<", " ", 
             RowBox[{"(", "targetintensity", ")"}]}], " ", "&"}], ")"}]}], 
         ",", "\n", "    ", "halftotalwidth", ",", "2"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
      "finds", " ", "the", " ", "first", " ", "place", " ", "in", " ", "the", 
       " ", "list", " ", "of", " ", "values", " ", "where", " ", "the", " ", 
       "value", " ", "is", " ", "under", " ", "1", " ", "std", " ", "away", 
       " ", "from", " ", "max", " ", 
       RowBox[{"value", ".", " ", "index"}], " ", "equals", " ", "number", 
       " ", "of", " ", "pixels", " ", "away", " ", "from", " ", "center"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"wheightguess", " ", "=", " ", 
      RowBox[{
       RowBox[{"FirstPosition", "[", "\n", "   ", 
        RowBox[{"intvaluesinheightdirection", ",", " ", 
         RowBox[{"_", "?", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", " ", "<", " ", 
             RowBox[{"(", "targetintensity", ")"}]}], " ", "&"}], ")"}]}], 
         ",", " ", "\n", "   ", "halftotalheight", ",", "2"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], ";", 
     RowBox[{"(*", 
      RowBox[{
      "does", " ", "same", " ", "thing", " ", "but", " ", "in", " ", "height",
        " ", "direction"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"wheightguess", ",", "wwidthguess"}], "}"}]}]}], 
   RowBox[{"(*", 
    RowBox[{"this", " ", "is", " ", "the", " ", "returned", " ", "output"}], 
    "*)"}], "\n", "]"}]}]], "Input",
 Evaluatable->False,ExpressionUUID->"c4f8a723-144f-4181-a14a-24428b558de8"],

Cell["\<\
GuessSpotSize takes a matrix of image data as input and outputs a list of \
{the guessed waist in the height direction, and the guessed waist in the \
width direction}. \
\>", "Text",ExpressionUUID->"9901ae9e-ebc0-4af5-8e5c-db569bfb2f8c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Piecewise Function", "Section",ExpressionUUID->"daf30052-a7d4-4007-af91-f1dbb84ddc74"],

Cell["\<\
The next thing that happens in the TotallyDecimate function is determining if \
the image should be autocropped or decimated. This is done by comparing the \
result of GuessSpotSize to a predefined waist size. If the beam is guessed to \
have a greater waist size than this predefined value, it is downsampled. If \
the beam is guessed to have a size smaller than the predefined value the \
image is autocropped. This predefined value was determined through \
experimentation. \
\>", "Text",ExpressionUUID->"e78f6f9d-632a-445c-a0f2-68c2fa8ccf74"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Downsampling", "Section",ExpressionUUID->"2c2d5fb2-f3af-41f5-be18-01acca97c5d6"],

Cell["\<\
In a truly terrible way, the downsampling function is titled: Decimate. \
Decimate\[CloseCurlyQuote]s description in the Mathematica (drop down arrow) \
also isn\[CloseCurlyQuote]t correct. All decimate does is Downsample.

Decimate takes image data as input, and outputs downsampled image data.  

Decimate just wraps a built in Mathematica function in a nicer and more \
friendly package. 
Here is the code:\
\>", "Text",ExpressionUUID->"999a598a-6497-40e4-92a2-6eb6cf37d8f4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Decimate", "[", 
   RowBox[{"imdata_", ",", 
    RowBox[{"power_:", "3"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"twoisraisedby", "=", "power"}], ",", 
      RowBox[{"data", "=", "imdata"}], ",", "height", ",", "width"}], "}"}], 
    ",", 
    RowBox[{
     RowBox[{"height", "=", 
      RowBox[{"Length", "[", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", " ", "1"}], "]"}], "]"}], "]"}]}], ";", 
     RowBox[{"width", " ", "=", " ", 
      RowBox[{"Length", "[", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", " ", "All"}], "]"}], "]"}], "]"}]}], ";", 
     RowBox[{"ArrayResample", "[", 
      RowBox[{"data", ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"2", "^", "twoisraisedby"}], ")"}]}], ")"}], "*", 
          "height"}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "/", 
            RowBox[{"(", 
             RowBox[{"2", "^", "twoisraisedby"}], ")"}]}], ")"}], "*", 
          "width"}]}], "}"}], ",", " ", 
       RowBox[{"Resampling", " ", "->", " ", "\"\<Nearest\>\""}]}], "]"}]}]}],
    "]"}]}]], "Input",
 CellLabel->
  "In[235]:=",ExpressionUUID->"57b06774-08a4-47d9-9709-e2247c8dfe0d"],

Cell["\<\
ArrayResample is the built in function that does the downsampling. \
Downsampling cuts each of the dimensions of the image to 1/8 their former \
size. 

Let\[CloseCurlyQuote]s have an example. \
\>", "Text",ExpressionUUID->"01116ca3-c2f1-44c9-9291-c47e43127fd3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"imdata", "=", 
   RowBox[{
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"currentdirectory", "<>", "\"\<image2.bmp\>\""}], ",", 
      "\"\<Data\>\""}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "All", ",", "1"}], "]"}], "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[236]:=",ExpressionUUID->"da52314b-4d8e-4bf8-b4a7-4175f012f990"],

Cell[BoxData[
 RowBox[{
  RowBox[{"imdata", "=", 
   RowBox[{
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"currentdirectory", "<>", "\"\<test folder/_09.bmp\>\""}], ",", 
      "\"\<Data\>\""}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "All", ",", "1"}], "]"}], "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[237]:=",ExpressionUUID->"e2a9d508-ccb3-442a-812d-539c13481174"],

Cell[BoxData[
 RowBox[{
  RowBox[{"newim", "=", 
   RowBox[{"Decimate", "[", "imdata", "]"}]}], ";"}]], "Input",
 CellLabel->
  "In[238]:=",ExpressionUUID->"8ae3facd-a671-4614-a9d2-e55f98bed3be"],

Cell["\<\
Below we first see the original image. Below that is the downsampled image. \
Notice how it appears less smooth. In this example it would have made more \
sense to use the autocropping tool (because the beam is so small), which I \
talk about next. \
\>", "Text",ExpressionUUID->"3e7e6b73-3421-4dc3-9d89-35d6db327930"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"imdata", ",", 
   RowBox[{"ColorFunction", "\[Rule]", "GrayLevel"}]}], "]"}]], "Input",
 CellLabel->
  "In[239]:=",ExpressionUUID->"b35ee3c2-63d4-49be-b7cf-25ecf86663d8"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[SparseArray[Automatic, {1024, 1280}, 0., {1, {CompressedData["
1:eJztlIlTl1UUhp8jCIKKC7gisiqbC4qiuIMlbmnIKGm54goumUa2QbkjqSG5
NyoSxKgtWi5JKqmEaC4ZSVpU2mY5kFCOkFq9zfRP1PzuzDPfzJ1z7z3ve875
/KctGDPfAHPGsRzLsf4H6595rifcRGPRUnQUPcVD4nExX2wRJ8RtEaxD08Uu
USfidMEmUS1mOcH3YqL+EeVidH19xRQXqBJrXHV/A7ggUvSolzscF3MbQptG
cFm8okQe8YAmTeCSyGoKSc10rjlUiqOekOkFk1pApBJ2a6U3RVFr5dQGlrVV
ft4wqh1E+UDb9tLoq7Oi3A+O+UNBAGwMhIwgWNoB0iR6UTAsDIF5oTAjDKaG
w+ROeqezvl1gZld5EQFPd1N8d1gfCTt6wNsy62gUnO8F13vDnWho2BeC+kH/
/pA4ABYMhLWDID8GzsQqbjA4PQz+Q+RfHCQPlTfDYM9wODsCbo0Ej1HSNxrG
PQovx8O+MXA1AVzHQrdxqk0irH4MDoyHaxOg/hMQPlHxkxQ/WftTFD8V3JPk
w3RpmCG9M+HILL0/GxolQ58UmDNXOuZBmQpd70nosVBan4Lti6RpsfZSdf4Z
xS2Bnc/qzufA8wUY+iKkp8H76fL2JQhZCtOWwbblcGWF6rdKMatVjwy9uUaa
MqV3rfxYByvXw6FXVbcs8M6G+NeU20b4aBPc3QwRW+XJNsjdLm2vq092wMid
sGIXFOaoD3fL3zfkQZ7qkA+lb8KDAuW5R7nvVT/uU4+9pdzf0d676rX9yv2A
6v+eanMQ+h1STQ5D3hH4/AN5VKi9D2H2Mdh6HE6r2WuKwO8kDD8Fi09DTjFc
/BjulUBoKUw4qz48Jx2fSMd5eXIRYi6pfz7VvFyGks80H2UQeEX6yuXVF6rh
Vfl8TXd8CT4Vqv3XyuMbyP4WDl6X1htw/zto/4Py+VE9+JP8uwm7f4ZTv8DN
W8q/EsKqYNivqokGcnm1+r5Gc/Sb9P2uObsDLnfBtxai6zRLf6gu9yD1vrx6
oB78E4r/ggpNf41pgJ0MT2cjqL4R6WIMcTUSGhjT3Iz57saShkZ6IyOzsZHt
YWxrYuQ2NfKaGfnNjQJPY6eXsbmFkdXSyGhlpLU2UtsY89rqHm9jfDsj3seI
a29E+xrBfkZzf6NWVAQYRYG6M8hY2UHxHY0Y/WR8Qow6URZq7A8zVoUbiZ2M
sM7GHVHUxVjWVXdGGM7djBPi+e7SEGncEBt6GLE9jWqRE2WM6GXcFht6G+HR
xhmR3Mdw62tsF1H9tCcS+htfiTkDjFti4UCjSiQNUi4iOsbYImrF2Fhjn6gU
AYP1hkgR60Su2CsOisOiUJwUxaJElIpz4sK/XHTgwIEDBw7+A/wNMlP+fQ==

      "], CompressedData["
1:eJzt3Xm8fVVZx3HWEieMQLMcyJScSjOnTCvL2SzHKLVQs0C01HBAwAlRQEBE
wBlERRk01JxSc0wpJ9SkgDRtoGzSJBXNxAJrfV3reZ3nrt8+071nWHufzx/r
5cCP+zt77+f7Xs9ae+9z9z3gSfsdHHfbbbcL7hV2C+k/vxHy+M80vp7GZWl8
K43L07h6+oN7pfG18r/3SP/9B9P4XMj/32Xl/7tWGj9Q/pn+/LXTuDD9s4vT
+O80rqj+3J7lz+5d/ux10vihNK6Xxo+mcbM0/jrkv+ff0/hyGv+RxjfT+HYa
/5PG/6ZxZRrXcH/33uVnXez+na+WY/uu+/euKMdmx2Of4bbl7/18Gpe4f//S
8jO+Vs7Vt8txfaecF/3cq8T8M69RfuZ1yvFcP40bpHGjNP4h/bl/TOPfys/8
RvVzvpdGjPln7V5+1rXK+dqrHN+PpHHDNM5Lf/bP0rgojb9J4+/S+PuQ/45/
SeNfy9+j8/eV6lx8vfzddq3/q+OYriifJ8Stn+mq7jj3cJ/LrqGOdZ809k3j
9jGfyy+Wz2fH/8/VOb2sXFv7HP686nP8nwo1bv0sV3Of45pxVF/2eeyaXrec
M7sWVl/6bDpvXyif72/LZ7ykfMZ/SuNL5bPa+fyy+9z+HH5zzHmsa+7KjuPY
o8rEXuU86nP/cFVD+5TPf6s0fqocwwfTz/xIqYVPhJw7O+d2TFYXl4w5LstY
XeuzHKNdJ3+M36uu2e7lWtXHee1yfDd0x3ajcnx3SOMD6Wd8Mo2/KnVux2PH
Ul8nfyxf2cHxfHfK8fh8XrPDv0n1d4PqeFWLt0zjJ8r1/HD6e87vuH718fqa
9Ple9PHW2becdfltNVsfr47zxuVYdW1vXer3NqV+/7TU76fT+EwafxGy4Z8r
tdyVU1/T4/Jq/i3qHE2q8/o8jfOpzsCs57DOyI+Vc3oLVz8/Wc6tzutPp3HH
NH4h5nN6UTmXrZ/HrvmmPpeLPI923qwedd7uksbPx1yX55d6vLCcQ+tL5q3J
1s5jV9+2nXN4k5Lrm5dzqfN3h3LuPhay3+e7c7eTPPtecNbztujaW1aOdR5/
3J3LOtc2598u5nlC5/hn0vi5NN4d8lz5oZDnj4+Wc/9xd/4/Fbb6+tlyTS52
Nd0Xa9d9nfYt1+qmU66Xt/i21bW7Y7l+d0rjZ2P2RlbfNY1fTOPeabwrHe97
Qs6Srqv6POv7/7y6zp+Ycq3/MuQ+yhzjui/3utt8YtfdX++7lNzW1/y+cefX
+YJynbm+q7m+Pttm8p06ru8vp/Gradw/jfem431/GJlt+T5vxut9Idd2Lde2
Nntcju1avzYd+1tCNnzePJvZeL29az7L9R53rW/fca3vXF1r5fidIc/Rf1Ky
vIh5+oLAXN1C3sf1aXfuyL0y/0tp3C2Ne5Ta2C+Nd4RcI8r/+0qNaL/D+nTb
t6NGhl8jdy01cvdSI/dK48GuRv7Y1cn7w659AXWyWXWi+nhAGg8qdfLrafxG
Gg9P4zdj7i3OSuPsNM5N449KHb271JHmpPe6evL2ME9tbm3ZXGUO3TPmfvV+
MfesVmcPTeNhrt7eHrJV1Ncw6muZtXW3qr5kmfaz7hPzHofV26+UmnuAqzvV
2m+l8Yfp/L055PWTbHtb2DpX+jqk/vpXf8v2bd4avH+pwwfGPOc+JI1fi7vO
u6rN/Ut9Wi2+y9UjtUgtdtViVx1Oq8H94tb5WDX3ppBdfGvIJtq83FWLzM/U
5CJ9tLXIQ6q6lImPSONRcba6tN6RuqQuF1GX5qXVpubt2s56/j49nedXh7yG
fkMabwwjW33POamOsZUanqeG7ztH7XatwQ+Kea+nrlN6Aep1meZ29ai2RrJa
9XVq/cAj0/idNF4T8n6l9irPCdla9bLbrWX2nqjndfQQdY3v7+r8zFLf1ktQ
39R3S17PW9/7l7rWmu4xMfcej425Z5blrwuj+0/nUPfUfQN1P20/bbu2KwO/
ncbj0vj9NE4Lo/Wj9TZnkgfysAF5UBYOjHk+eFk6/y9P49SSB+Xg9S4L5IAc
DDUHysCTYp4LXhW2zgVnUPvU/oBr33qiA0oOTg6jueAVIc8HvkeyTGjN4OcH
eiVysgk50drhd+Oob/q9mNcRT0xDX8aieeTJabwk5LnkdJcXeilyMvScWEYe
HfP9AmVBc8qL03hlyHOJ761sr5VMkImhZsLPHZYLm0NOKdl4ach9l/VctgYn
H+RjU/NhaxJ/z+IPYs5L1xrF+i2tU1ifkCEy1J0h3fsYl59674sckSNyND5H
WvNrPtJ633o4u49Sz0nkilyRq8m5Un+nPbQ6T5qnbP+ATJEpMjV7prRH/YSY
96hPCuOzdSrZIltka+4+0OfrqWkcmsZz0nhBum4vmpC1rrmMrJE1sjZ5zWX3
XC1zB5fM6T6T9tMnzW/0j+SO3O0sd4932XtKGoelcXgc3eclf+SP/C133rPn
jJQ/9ZxPczl8RhzNhbPkkSySRbI4exbrOVB7lvbsn/J4aMnis0Ne/2nPZZ48
2vxIHskjedx+b2q59PPkITHPlU+PeZ58ZhpHjskpe6RklIyuJqN1P3tIyaj2
UY8PrCvJJblcVy7rNeYLw2i+PIVMkkkyufa5Utm0vZ/nh639LHMnOSWnbeX0
2WkcGfNcehIZJaNktKmM2h6u1qDPiuSSXJLLVnJ5eMml9m7V586yZ0tOySk5
Xf38qaxq/jwijWPStT42jRPD+PuiZJfskt31ZLfOrebYI0LeT1Jujwv5Xoye
az9hSo6Zh8kyWV7/POyz/IyS5+elcfSEXJNpMk2m+5NprYPVY2tPWX32s0LO
+XNK1o/qyLj2nf38Tc7JOTlvK+d1L96VdT0fZVnXc4zPDXle7+rReTeOfJPv
dvJdZ9tyrfvCyrHN3erVjwlb+3Xl2+ZwenUyTsbbzPisc/hz0zhe/3xC5sf1
72Sf7JP9/mX/hDjq2W2ur/NO1sk6We9P1n3GNa9rPn9myGv0o8L0uZxenoyT
8bYzbu9ZWM61Xj8mjRfE/M7/tPtr5J28k/d+5b2rf7d1+1Ex33Pr6t/JPJkn
88PIvPJ+ZMn80Wk8P+Y5X2v4SXv1OIADONB/B+o9e2+B7r9Pu2eHAziAA/13
oOv+nVnwvJg90H6A+oNjY97/q/f58QEf8GEzfdB+ga0f5IPuDeADPuDDZvvg
bVD/IBvsWX58wAd82DwfxvUO5oOeGdT6Qk7o3mP9LgBe4AVebI4Xk9Ybfk/i
uJjvXegZxBfG/JySf28QP/ADP/Bjmh+yg/4DP/ADP+bxw/cemIEZmIEZ08zQ
XseJMfcb9Bq4gRu4MetaRXZYzyFDTkrjZXH0fhbrF0zBFEzZrilax1hvgiVY
giVYslNLTtbPTrXz9IAruIIruLJzV16Uxkv0d6faeXJg/YMt2IIti7PlxTH7
8tKYjXlqGoeE3MdgDdZgDdYsan0kYw5OtXNYyGskfMEXfMGXRfmifkb3ibQP
c2jAGZzBGZxZ7H1oM+YpYWSM7fniDM7gDM4so5+xPRqZgzVYgzVYsyxrbA/4
aYEeB3dwB3dW484pMd+PUp+jZ329PbzvjDd4gzc79casMWO0j6N+x3od+hzc
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
TbaHkW3bt9N9f+Zu8k2+h5Hv+tke7ceTbbJNtvufbb/2JtNkmkz3K9OzPm+n
OVv7amScjJPx/mXc8t31fMz374+TaTJNpnuTafXik+ZtvWun513sPhjZJttk
uz/Z9n25X2Nr3lYvzr0vck2u+53rev/Mr7ftGbWjyDbZJtu9zHbXd2AcUeWZ
LJNlstx+lg+pslzPx+SX/JLftvOrHpsemtyS27ZyW2fW1sRklayS1bayqv73
2JLLE8gjeSSPa82j3QdmjiSTZLKNTB5HFskiWVx7Fp9YskgOySE5XF8Otb+j
PR1/n4T8kT/yt9z8HV3ypnmPOY/MkbnVzHma7+g3yR7ZW132yBt5I2/LzZuf
58gaWSNry53blDX1k9rDJG/kjbwtv5fU3KY9S581ckbOyFnO2XYzZvmyeYxM
kSkyNd/cpSxpn4Pej/yQn531furzTq4yRH7ID/kZ5ceyo7ycGJhnyAk5mTTP
qD/T3gEZISNkJGfi+JIFMkAGNjEDNk/YHGEZoP6p/6HXv9V+l/nUO/U+lHqX
8/Jde0vaS1K/Y85jPDU/xJp/aKl720Ol1qn1vtX6uDq3+9x6/uq0UtdnUsvU
csO1XLutWsZharePtSuLH079Ur89rF+5q+cM9D0wp1f1S+1Suy3XrvUNWufZ
HjX2Ur+t169qVz2D1m7an1DvQN1Sty3VrdWsrPX7aWdVNUp9Up/Lrs+u2vQ1
Oc5JapAaXHQNaj6Xi9aH2vpfe7DnBhykBndeg11zs8x7WGS+pc6WZ53qTcbZ
usXm2K4+j3qj3rZbb7Vv9VrZ1sj1fU6/LqYOqcNlroOtt1Ptqbc7u9SdrzNq
jBrrqjGrLdWSTLNnN7TX5/2id6O+FmGYX5v6dembSm35eqKWqKVpfdk942i/
TXVkNfSeUjvUzfDqZhE9lBxivhp+rezUGPU9b6dONqpOtjMPaQ7SXrv65neG
7rnnw9THIOpjmiO2L+7XR96P2g7caL8ufE101cMsXlj/0TWP7HT+GFcDXP/l
ueBrYNr1t2v9oeoad11fMr78a3yLjuvqr+ksveIH3LWss+pzynVczHXcaUbr
66lradettvWzHdeI6zM9Z+Ou0a1nuBaWq0+GXee4C8q12PSsTLsOk+Yzy4nP
h10DO/8fLefeW4VT25tvpjmla+B7R80vHys1r3O/qXPEvDU/qY+rz7vO+e3K
Obear625sDrf857rVs/zuHNsdX39jnNbn9dx59Ovi81zWX5RqddZzt+8dXrZ
lPM2zzmbVJe1Bb4e9+k4P35u03n4dKmpi11+v9hxHuY9/kXUy9U7jrmuDauF
m7hsqec9v+TEPLLjGHcMl5bPbjVvn91/7iuqzxtdPfvPuXfH56t7xC+UczzJ
QH9e7XPZea3Paf3Zdi/ny3LjP4fMPy90+3FJ6La56zOZE98qn+nycm2vdJ/j
KuX87FmybU7u4zL8+Y6/89Lycy8vx+d/pq+Rq5Vs7OF+ns7zl9z5tM9k10j/
3I7rq+Wcfqecw1B+ruVNf+66cVe7rFZ9Ri2TVy1/z57u39s9bq2VS8vfaz/j
/wGA3AtA
      "]}, CompressedData["
1:eJzsvQm0bV16llWxQUEdhpDYAQKCCio2NKIinCAiKtglYsAuAjLEREmhA1RE
BQJCGIKlRCCJNCpEEDGEJgSTQPpUElJJKg2pNJXq/6rUraqAqDQavffu85wz
6jn/e99vrrX2ae5/7rhjzLHWXnvtdfZea37PfL/uR/yCT/m4X/QRr3vd677+
p3/E6974O/7OJ+/546+/eBwfx8fxcXwcH8fH8XF8HB/Hx/G+j7+qbLf9j+P9
+v3u+jo8To+/6+t/HF/u+3F6ndPrvy9/5+P4sMat983e++2+3q/39boeynjU
fLXVft/13/9QrutxfPF9dm4e3Hs/772+tM5K552uy+7L83Vfru9xvN9ju3/O
zTnn4vtzrTPu+3P2OB+8tsetdnx636w+r6vXs/c5n37uXdvz1fn18fl9Ocaj
eHv1ed56/tXnpL1v63Xdt/XJXT/Xj/PB/R7P9Vwf9Zzuvd+28vXR9vmo72vv
vLN3fnscH+a4lz/3zhN7OfsoO39b41G/07n/nr3z1FH25HE8z+9x1O+Yf98/
8O/9I7/g23/Qp228746al/ae77h5bNv3cfTzclvz2lHzcvv97vo5fBzv5/24
yrvnmm9u63PPNT/e9e912xxz9DzzyD3HjPfNHtz283cuvtk/Nq7x62zv46GH
Mm+d6/NXn5e99/ddP/8vy3jUPLZqx1bvw+vjj1nHPZznbjqftXntxefZ/nvs
e99d/S539Rw9zmP3Y9z7+7Tj9j4/+TqP0W22zz97P391PkvHp+Pa9a5e//T4
2/pdjuXXrXZ/On/d9bz8OB4zrv4+bV5cPc/qfHwcf93O2K+vzXfT+bDNIw/l
e1xd52/7PW77+brr63gcX/z9r3Lf1vnt7p+v1edqdf45+npmXPSGzfPk3uNv
63fZel1Tfp6N6Tla5cq99vS2eOdxXJvfpnZv9fXp+eeft3e9uJfXts4jq+c9
93Vt/fzpeVZ/r3N9L7czbr3PH+fLl2u8LW5cnY+Pvi/Px4WrfHg7890b4rhX
Bzh6vt/6PR017553Xm7z223N79N59nEefhjz65SXzzXPHjevrs5rR3PmlAcf
yjj9nvb+LueyJ+33Wbuf7+o5fOTe2fx0365nzmOz+2rrvLyfT4853xtubE/H
257v7up61ubb2+fvoz5/9T68H+O55vv7Mn/d9bx5Xz7v4dxHR68zZ3bg5nN/
3+fr1Xn93H/P6ue9+PfpdrV9zlF/b7uPjrrfzzPfnpvPH8fZ93ru7/uuOWL7
vL51fbs6n6zOK1MuXJ1fts5f09fbePT599q3c9m/9n2/+udtz/eY2ot9dmR1
Xr+teX76Oa8Vu3Nf101776PtHLN1nbx1nb2Vs7fOy9Pj9l7H6vUc9ff9o3/1
P/A/v+3dn341rn5u+py93/fW80zXf8euj47P95k9p0c970fNU6vrkJfNbty3
7/Oo+66fb8rzq+vxo3WMc4/n+vy98/P0PM0e+HUft/p77LU/e+3lue7Pfc/f
qr6zne/uZj582eb9vfPw9HdsduVc99nDiQfx893msduah6fvO2qe9/lePF9/
Rj1uer778j1MdanVeXx1HfCwxum81uaf1flx63le1nHVPpzbDqzrPrPr36/v
TO3A9LjpPJTmwSlfbz1PO+7o8yc7uvo5q2P6/s79ve1dh+y9H8+9vthqt7Z9
7pSL985jW+3Ny2pnVtcPe9eFd80tc3uy+rxufW6n88Z0Xl3d3jofTtcJ6fP3
ztuvbn8+Y7xOWbWPq+Pq+VY/7+j7cKu+te/52p/nPJu3jpoXX3Zd6lx60V77
ctT64nz2Yfpc3padOBdf7z1fm5+n82Q6T7pO2wePP/Sbf9rT/79jfH1b9cKj
1kNb7VK6b89lZ9JzutU+rB53nnlqlaNXufiu7cDRdmRd79n2O90837l11hnP
zJ+j6Xxy9PmOthtHjW3eTuNWezS1D6v2o13n6nUftR6arn9W9bZVe7Nv/XG+
uO1j5qetOtTR532tjEfZmXOd53zrlOnzdvTY7NGq3dk6v7d5dXV+bvP13us8
asT+NDu1dT221e5sXVfttVerdmuvHVq1K+dZ16zOT6u8PrU7j/Zo2/c85YDt
utgxfLP1c9a5casO4s9dnS/26ldb39/m9b3jqh1L72/2ZmqPjl7XNTu3ej3N
3kzt0l7dbmYvjo9Xbs/1qx93Lk5eXSdN59nVefyhjlN7vXW9edu62lF+yP78
tef4aJ1+dd5Zndf3rks8v5+u73dfjen1Zkem65f2/nQdU/t41Hps6zrpaDuZ
vr9mN1fv7632qL0/ne/F+/f6AY6e37bOww9V5zvqeqf26VzcMeefreuro9dL
bZ6f2rWtdqvNQ9N5b2qfVud52wfbr73rn73rt2ZPb8uOrdq7o9Zx03Xe1D6t
3udbOXHV7q2uu2b2bGo/7sv67GUZ93JDP37r775VB1jdv3dddZQ/YHr+KRe3
eX11/bV13eTjGX/1v/S/fPU73/Q/LtuH6Xa6Hj6X0deT/r7Vv3tq59rfc/R6
6ujzbtW7p3Zrun7aaq+O4uHVcXb+rXbx6PXMyzaeb908tTdH3ber9myVV1ft
xFb/w1G63urxbX5v9iu9vrrOafauXYfH0/f4e+r1NHs2tWurdnAvj7Tfc689
PVof32sHfdyL33d8P4mj5se1zznX+uZlHc/3ux1tx1btXbuO9nxttTer66zV
+Wvq79+6rlhdl9muYEfSummv/UvX0z4v2b00Tu349PuZjs0u7eWWvXZv7/pt
+rzttYtT+3fUPHOM/dr7vru2J/d1nH4/7Xvdvj4/5n47SsdYfx6nduxcOlKb
D1ft3er6Ls3/ze5N9cPVdVS7vrbOa3Z6ak9X7Vq77vR7+Tyr9m5qX7fen6v6
Ztue2rd23FHzR5rHjrWDe+3jVv3ucZx939vXhdP1WbtPj7aDUzu5GvdxtG65
d55r893UziR7l7b/3Of/kV/7Xf/PZ1e7s7oOm458frqOrevVxgNt/9bPX/29
2/HJ7q5y1Op9vxrPsnW96ePONZ9sXSe++LhV+zWdp+/azjyU8bbW8fN1ou/v
veu8ppdMn6tp3MlR9i693ubJvfNoswPJvtge2h55f7Obq+vN1etsx0/t2HQd
uvXv27qO3soTq3pDspur9i89f9Pzpef+XHrri+eV9fXB3nl12/y9qh++Vsfj
7N9t28+t93l6fa/OOl1f7tVHm/1sdm7rfNnO2+wl4+n6f3+1l1N7umqvtp63
2d3p+nSVL6b2O/1+/vzV+2XVD9zuo+k6tG3vtaPpuFWdNs0jt70eXZ1fZ3b0
cR16Xvt5vnVnu58//PlZr3+3ah8Z9/prVu3l0euH6Xw49TdO7ebq+rPZ1ab7
bl3vTu1Ye73ZvcQVq+vTtG6e6sFHxSNN7WXjyqn+yvHNHk5fn84HU7s6m3dW
7Vtfv26zt2kev2v79FDt4na7uXUduXX9t3V9mp7H9Nzv1a+aHTy3P29qH9N6
abqeZJvx3/7hX3TxZ/6ePzC2q2l9mo5Lx7fXp3byKPs5tdvT9fSq/7TZ5XZf
NC5rdnOVO4/Sf9u4Om8c419a12/b+dbsaLMXL+u49e88n9669Xc/Sp/1c3OU
HU3Pc5s3tvor99rRpj+uzo+remOym21/Oi6d1+/z+31d7fztc7Yen97P9+f1
5uo6eOqH3aozb12ftuek2d+tus7q+nXVDjd+n+poW3XbVft5zHhuu/RQxymP
HGdnp/fZqh2cHt90oKPsZ7KXW9ehW/XBqf62Ne4z2T/bF9u56djs0d7zNXt4
+n3+YLXP07+3ccR0fZ70661xS2093da/q/7RveNeu9q2j1q3Tu3oi/fP15Vt
nbvPbr5s9vHcdm/7+VbXmYn7zmUvk53c+vzu9V+u+hFX7Wmzl21+nNoH2xvv
T3YpvW/1c1bt8PR8zd4mO7v6OVvtZ1uPtvsqvX4u/2izq95/lL3cazePtpfp
9dV15j67edd27L6OyQ6ef305e737O4/2c0zXm0dx8tSObo3P3DvP7vV3Tu0D
+5OdSdtT+8n2t/76r/xL3/BzP+fGdjvP1P41O5fOuzr6upv9Ttur682t90/j
taaH7I0LP2rdOdWD0/zT7Ot0nNrZtl45z7rp6HXeXdvJo+1t/z6bnVy1u83e
Nn5btbtT+9t03GZvp3qt54XpPNJ01Wl8T9MPp+vdpmdO16/NnrTjpvY0ve79
03Hq103c4c9vf3c63sc1Hdzj9Hfee57V9fPUz9Ds8vS5nq5np/Z7r52dzn+r
69it695tdjnZm7326q7t593Z4632tb1v7f7o9+/W9W6yy1M7vHVduzqm9ed0
3m32YnXdnOx+0lebnfH26e/+Q9X+JDvH+9N5fs///cq/+ou+7HPr5/h8W9et
5gJfX7oOj9PrnfKB1+3tvkivp/OkdfSq/3aqf6f3TdfFR/uPpuuEvXb3qPFY
u3tf1tMPfVzXm6f2dtU+r9rjo+10ey6xl6vr4VU73ealrXGs07igZrfTfNz0
3bb+a3aorXv9ftvhtO3x9L3/4bE9bOv3ZO99PdPrXOWX9Pun47f6y31fTPXt
tj1dd6/GOSe7ml5vz3Xi+9V5aNWOe/5M8+mLj7vtuk1H2+mXzT5v/fvX/cRT
Oz214+n+S36cqR1Pr2/l7GR30/bWdfaqX3mr7jyNt21c4PVkssu2W21s50n2
2HbZ26tjsp/petPY7He63n/j+Rf/R6pdn+oZTRdI/DW196v8uDU+Yrrebtzd
Rh8/XYe39ffUnjc7vjq/btXBb9feN3u1+vpDHdd18a3r6b12fHrfNru9d93d
7O7evMdpnm3zF7d1cFsXp3k1Hd9eT3YtrXOnY7LLzd61sR0/XQdPdYDpyPt8
ff67V3X0piOkMfnX/f50f6T7KOlA6XXHbaTXWxxaex6b/W72v60P0vbq/Ldq
l7fa8bX5+1z2+7W6Ll/9O7fXU5m+nu6fo+zz0fZ7NT+3va8dP113e75s67/p
umtr3Fiy38kO2e6urq/9/tP39Ufr+Dd94p/9mE/8s3/sapvrSscn+9p4Y+v6
35+XuGOVL6b+/ul52no/cV7jx8Snq/XN9q7PPU75PtnxNu5djzf7vvq+veu1
mX0+lx1/HP19tt9nK89t44b5utz7vd2ep/R64/Oj6jWsvm9a52K6PmM+n67r
p+s/27up3W/r77Q/2cVk1xm//qN++f/xr/21n3/1ukcf3+xrW3env8fX276X
KTel79+/Uzp+ygfpc5qdb7zZ7L85oK3zm15/W/ndbd45Nw/s1QVW7f0x6/i7
tpf3dVzlpu1xcPu4b/t91+x8W8/v1d3TcW0eafUlVuuKTNfXtsvJjjNvT+PX
ko7cdPKp/Urvt13EPp++v8+LI/ad7WTnky4/XZc3f0DSGZK/IHGA+abpDz5f
svONF5p9n+r80+Pb89Dse3tOm71etfdTvX6rXT+XX36vfd+3zk92667t6V2P
+/0cR9vto+1ys9dNj5+uu1tcbbLbbd2+ar+n+cNt3uV9tst+X3q/9fBVv3ay
S96fXrfdtn1mPH2ff+LG62zzOiOvW5ef/l3NXjOaI/x6+ruTjtA4KX2vjZua
bpL4L92XUz1puq63nfc4fR5X5wGPaV3Q7PnqOn2rfZ/acc/Xq/Z5nz2f2q2j
1rcPbWzXf//s+lH2e9Wu8/y157itq1e30zrC89LWOiBJR21+Wtvtpot7fZzW
zcluTe1+W49jpz0m++7Rr0//nnRc8gek9/t62vHTz1vlpzY2O2/7bj5s9206
Ptn5dpyfs6kdX7XrLb6m2fnVdfzUjje7nl5vdn5q949dt0/t8n2336vXtxrn
f/u6e7PvH36/5Ps42enV4z36eZyus6f5uF5HTOuwTXX26bq9xadPdeY0/yc9
2+thtqd+8WTvkn1P9tzr9Onrab2deCHZ5al/IF1H+h6aru/v3+t+/32Nx8yB
0zyCZP9X6wu058Hr/MTTTVdr+l2z+7b3aTy3vV+1/6vzdzpun71v69GpPXzU
9bdx1HY+mNp734fT9Xpb77cx2f/GAa2eWsrfadzg9fzq+t7zaFp3Nfuejms6
8tT+284lu5/sbDov27abv+HZ1/HD/veLn/Yr/ov/7ef8w19443X2M3L86Xv/
gqvtxAuNP1bfl/hlygMtrsC/Q/veG3exv/kPvN34NO1veQ1Tv74523y+Vd+b
+gVs95sOkPYfxQONE9o6v/HA7az/p/buoekCW/WO1e9lHid/bg5odn2rvd/L
A+aCab24KTckPcDrmen6abo+m6770/qccas9Y7RdbDq3x/S5tuuM2H1ve38a
+Rxzgreno6+f83j052/li/S56Xzt92lxhC1PYHofJr9F44TmB0jxAKt+uWlc
/179IMUBNE5o8+fU79/GvbpAOv7FdvCo9f995YH7xh89LmDKC1POvC1OSM/P
Xl5o/vxW33taR8zcMPX/p/XcNM+txQE0/bxxQrK3zX413SBxgsfT9/hFVyO8
8Jd+7F/1X33cP/cnr/azbf0hXf/0830c50mve3/ik6Z3+HyJI/b+HklXanWL
UjzIanyodYoWl+jnrNWL3NvXYSs3NB1i67iqO7T13ypfbNURZjrDUfbzoXPF
ueISjo8rbPdX44WpvrbKD4kX/HymdUJbb0x1iLTeaf5U5kOPbf02XQ+2eL9k
T5Jdsx1K9jbZvRQfaLvXOAH7z/bpe/1TVyOckPgh8Ub6XOsYTdfw9aXr9vub
7uHfJ11f4yG/3uInWt0E7291GlpcZeKHaTxty6udckXjiOS3SFzgbY73vJV4
YMoNW/WH9nqzC01n2MsXs3Gr/bxrHjjXde3N69hbv7fzwpQjzBNTfWH6/Kxy
Q/MzJD2hbU/r8pgXpvpu0nvTOjHN93v9A83OJr0irbNtR21nzQfmAkaOe8vr
v/yP/t0/7ouvRr/f3OHrT7zRuMTn9/VZB0nxFokr2veedJD0eU1nankVjl+d
1lVIfrOpP2Pap4jXk/6XRj/X5+oz0PSKKS+k/au6w9ZxKyccww1HxT28bOPe
7/O4OsFTrtga19h4e8oRiSvMF61ewarOMK0rlHSJ5MewrtDWbY03WhyCdYK0
fm3rYNu/tH96/vY52GV4wdseT/fDF0f9InFH4pXEJ4lzGvew3XSQ9P1M9RYf
b75p+kWLx2zxLYlLWnxM44xpHadpfeVWZ3mqV7T4iRaXucoZ03VamtfbfH9u
zjhWnziaTx7auKo/bH3fnD98X0y3033adLgpN2zljVX+mMZRJP4wd0zrEqex
5Um2dV/Tl52Xl7gj2b3V9Xyye4lDkh8h2XNvwxXY8c/7mv/yR372T/mSS/vz
JVfbHm33zQM+bzvO52e/z2P+8Ov+/tL3n3grcVLTczh/0quSHpX8KCmeNPlb
Ut6Oz7+1vvRqP0ePq3Ubp/EX03yQvXGde/M4joq/WF3/Tjlk23H33S9y17rH
zdfb97yqf0x1D99n0/jMvTxhrtiqdzQ/yta+RG3dtBqnOV0PtnyO5D9J/gzz
gu1esn+NQzy2+IWmMyT9wBwAfyQusd33eRI/+HP+2x/1zzz9/6VXo7knnS/Z
/6RPJL3Gf1+67sRP1j/8u6S4kMYhfn1a58PvTzrLtH5V4w9vt/pWaT3S6skk
zliNE03zXZofk/6x6neZ6iOvvj7dH8cxtXcvtqOr9narznDX/LDdn7KX97bp
W+t80eI4pxyRttu4qmskncPzyCpXTPNH7f9erTMwrePked06Q+KINKbjm58i
cYnfN7XzHrHzSedI+5tO4uvh9dPv+aUXn/Kf/3Uf8T/9y192NbIf/vDnTP06
U55If096v89jzkmcMdU/Wl5MyrdNukjLZ5nW0ZzGffi5TeuLVg+r6SBTP83W
eI/GF6vcsaqPTLliyhlte9t437jhaL3i7jhiql/49dvSM6acMY3X8PohcYXn
jxb3yXzkeSn1f3A8Z+OJ6ZjO0+xAihuY+g+SPbO/oMVF+HjbQdtH7LfteRo5
zsez7fMnbmBMnPGzvu3rPuVH/FtffjWm81hvMU+l75/R+knSU7zf183riXus
R03zZJLfjPsv+dua7tE4u9Vhb/6X9Dyv9tnw/JLWNS2erHFI446t+sZe7kj2
pI1JD1m1f/u4o+kCd80Td+VP6Tyz14+yyifT+2mVUxJvNA5Z5ZPV+I6mf3g/
81jrf7HXr9LWhY1fWryo7VDijKYj2M6ynfwFvJ7GZGexr6fv88tucII5INlp
Rp8n6Rscl7iF10+/65ffeB/HwS++zvT9pu/Fus2U29L3kn6vxCdTfrG/zfyy
Gp/c6oo1nXBaB2QaL9L8tdN6PGl+Wo0f8bbnza28sppnkLhjyifmlKk+cp7x
KP/LXfHOqv9prqsczSVbOaTdj45DNZ9s5ZHGH1vjPtJ6qPXrmNbRaPW2W93G
FOfHujL54T2P2w7YX5J0EnNJs/PNnnJ+20Neb3yAXTcHsO0x6SjpvOl8P/rH
veGtv+uTv+KGPsLI67zfr/u85pPGEUnf4fXES/57E1+1eN3mh0u8Yk7hPnQc
CtstHjbxt3WWVscs5ZGtxpNM64pNuSXpJk1/SX6dNO9OucTHpfk+cczWdW/i
ksYrx3DKuTjivusv++NJEi+ucskqt6xy89R/k54b7296ZvLjbI0faXHzU15J
eknjDs/Hqc6X52W/f5qfYt0k8UWKszC/ePR5zCeNI8wL5oDGB7bH5gQfx3nS
6M9j+2T/rkf2J77x9fL5yS/V4lX8fSWe8vdp3vHo+2Hql0r+O99307ij1Tqu
aUzrgsQtTWdp+b1pXdQ4ps1X5pjGK4lb0noybTd+SRyT4mBX822mnLKPV/Zy
ykP3C011oHWeWeWU6X3Q+CVxdbu/0/PCdtNTpnEnq3m8zZ/j/YlXUt3HlveS
4gzTejFxiefnVHcMe2B7kvjCo+1m2k5+GNtb20/zCSM8gP1lm9dPv/tXXo3N
bvO+Z1bxb/+PvvIGTyQeYeR9bL/93R/9hf/9r/mqy9/pjTdeT7zisekjaeTv
8udxHYmjrEOZn1q8cYqfSfFF5p2Wp2x+mdaNTc+H35f67FoXneouSa+d8kzi
mjQeHTfb/EKJa6b5EatxLatck7jlWP3loXPJUVyzn1+mPDPlncY5vq+mOkzT
Zfw8TesVtrz/xDNtPmn1zZL+4u0WT5v6nkz7hky5Zhq3gt1Idiut95vdTduJ
Y5J9t66R+AKOwX7bjiddxcelbXjF3MLnev/pd/jqG5zFmPgifX/Jz5P8Vom/
zGvpezfXJJ2s8Q78knQdxlQPr8X9tjo5yf/U+g+k/PxpvG6bR5p/2pzTuCat
6xrnJK5Z5Zy0zm3+pL1xu1v1mPvBNfeVh1q87Zxf9nJKGlf9kVN+Mbf4+Tia
W5r+0uL8p/XS0ut7/UarfdPa+5r+wjZ2w/EnHlucSPL3ePT6P8WZ2K6bR5Ie
Yj7w682uJ07x+Oxb/cG/+Y0Xn/kZz/599cWzX/Nv+b1fc7XN63BMOg/XaV1p
9Xvy38ffkb6H5O9q/q3mn0txOr6PUny19RrrPL6PfT8zTp8jPy/Jz5Tieaf5
Rq3OSqtr0PQc6zLTuiuNY1Z5pnHNVn7ZGzcz81Mc5Wd6reo369/LXt2l6TBT
jpner9PnYco1iWOm+cyeD7w/cUwaW/5Q63ub5tu23mx1L1LdlBSf2+qFJC5J
8Sk+zvEmfr9Hcwn237yR9BDzibkhcZJ5xVzCNvxy+p6/9mqEZ9BhfH0eE09N
OWU6Nr9Y4pppvHSLQ57mp5tjvD2NI275T+354rlKcTMe7Wfy9rS+S1s3Tevr
Nz1mGj+T4mkaxxzNNXv5ZdWv9OLjpnrEQ9djjvY/ZY5Jv9/q/infrPJM8yO1
casfKcXrJq7xceaUKcckfcZ5zCkvKPl/UnxA0mNSnxjHYaZ4mMQvaf0+jbd1
HAfHWT/A/jOaDxJn+PUUr2L/ivUSzsPnnn6nr7nil49/+u7f+oe+9oYuw364
hvdxnHko8Zf3p9c5T/pekj5kHcufk3Si5p8zxybuSXqO46ms06T+Sa1+Me+3
vpO4hu3mb2p1oZNuk3Scxjdt/vJonTrlZTa+cZ5nmq+nOk2L/53GCTfOWbN7
R8fR3LZ/576O6zzT9Jg2rvLMKsdM/U5Np2lxMF6PJJ5p8S/TMa3HrMs0jkk8
kvxDLb/Dx7U6qMmflOJUrBuYV9Jxyf4lO26uSXxj/oAvbM8dn5J0DM5nHuG8
z67+o7/wT1/+Xn/6Bsd4m/cxmo+afpNG85f1IPPTqv8rcWCKI2p6T4o3dpxV
ijdO+XSpHmLrN5n0HfPNtO6MR8fVpDHFEU/7Ek3XbS2OeKuO0+bxqU6zlWfO
HU9znnGvTvNQuWbOO1N+2cs3vn+muk3TKVd1HPNOi59puk3im6b7trr9nqeY
51JeddJnpnU5pv1+mdeTTmM7k+JD4RNzS8pT5n3J32J7yrZ1GLjA22k0B1k3
MVd4f+Ic+5vgHXNP4yDzT7reNCa/WPo+zFd8fuIjfy/mn/R7Np0pcZJ5x9sp
Pqf1T/J2qheY6uWYd1bjiVu9mqTjtNendWxW69p4Pk06+Sr3mHfSOnhv3PBW
7nmxjjDNI17lmqN556HG6/T4mvS7TXWfKQ9N44S3+qdS/rafnxZfw9jyrxPX
TOvheb/XZymeZlqfzjpO0+FbP4AU15D8CF5/m2/S+tzHW3ewX2bKF40TbL+t
X9ie265zfdZt7HdKXPPM2/JbvurrLt779G74gd/0pqvx9Dt+3dX7fd729yRO
4fp9fWybrxjZ7/Mkv17yX9nv59816XNJ92nxyInPW73FFJc85SQ/ZynerdXj
m/Zfapwz7cPU6vdN/VirdW2avtN45rb5ZpVXtuk9iUe28sr0c+6aX9b5Zi/v
NH5Z5Rvfp1PdZso707ibtD7h+Z3G87leVuIczz+pPo39VF4HpjpiiVdSnf/E
NanvTsrHTnE1yf+U/BMpb8f20LpF0msSD2CvHcdru2/esR7i+OD0uXAN3MI2
fHP6Hb7+amT/6fd609U27+f6PTp+x9fR/GPmMXNO08GSHmYOTf5Bf79spzjt
lM/m+zDpOi2v3HE907FxD89tqlfc6hG3fgopz9IctJV7Wv6VeSf5tdJ6NM3v
LZ4hrZMbBzUumnJO03OaHb4dv9fLq+dM/87p79f0nq3c4+PMNb5/2/PQeCjF
xbU6Nq1/UuIgzyN+3esvxxvbj9Xq/Kb4geSXSn0d0/rVdsNxxolzEu9M69gl
P4g5x3bfuoT1FTgCrmC/OSBxTdNT0ufDM8++/Te89Zp30HX+xb/mlz39/w03
Xud9XDej91ufSbqSucbfi/Ul7/fr5q/0PfG7Jd1q+j23+OlUh6fFMbf6TMmP
2/p6+Pmz7jONX058lPo7mH8aF7U6O2nb8+U0/7zFKzsPa5WDEv807knHJ3vX
/CFH8dGaPrPVD/ayjvl7m+pCU/6Z8lC7L1f9XdM4n8ZDrR6oeSZx0PT15I9P
8cvMg8yTKT6n6UGtL0KqT9L8XtaDUjxGylf2/hRvm+rNTO27dZakt5gjzF3m
J9t5H8f5zTlsm4O8//Q7Xb/e9KL0ehrtbzvdJ9ef59c5L9ucx/qU9ShvT+OZ
0nkc38TvlO6/VLc69S9t+V/p9Wnfs1Z/2bzU6ip7vkjxQYmT0ryU8kun9Qft
N0t+sr1+scRJU15a5aK9etH98J9NX3/ZOGqe77WXk6b+1ubHbf6y1THFPScu
SjqROcfzRNOTEh95nkp5XfabwUeMq3kqKU/L8RCuX5zqqtg/kfK+U1xr8nuk
/GrrCNYtbPfhBusziR+a/pLicTjOOhSfA3f4Otg2J/l4cwvbPo/5j9fNZ7yf
8eInPH/lBpfxujnN31/yCyb+YdvnSf5A+/FSHLjjtVLcdKoDZW5qdS2tQ6V6
342TvJ10pSk3Jb9b4qVp/LTnP0bPn1O/WuKlvfnuR+lJq3w05aSZXnG0n2yv
f+2+jvO/cy//3DcOSnHR07wv+8mmHNT0oFZHLOlB5h/We4zW15Mu1PQg+wmS
Pyz5xxzvnOJ7Ul50y59OcdH2lzmeF/trXSPpM+YG9k/tuF+3PpM+H95ghC9O
v8c33njdfAKXsM3r5iTzjnnLI+fxdbDt81u3MkeaQ/07mXu8P223OCm2W/59
GlO+Yuszlrgp8ZCfz5Tn4HGVh5JuNI2/ntZFnNZ/bv1BGwd5u3FQ8rs1Hkoc
NI0L2epPOw8X7eWK+z6uc9++32HdTzb1iyWOb+uAxknWYc1BSQ/yeifpOskP
luKEkg5k/nFcZfOXpXWl51vGpAOldW/Ka3f9wFQfkJHXzTmpzozzue1vSX4i
2+uks0x1omS3/fnmMM4P7zD+2J//k/7Ur/tV33j5vb/54gf/5t/+f/2T3+/N
V/sZ035zCuc1X3nkeJ+Hz/H18PrpfvnGG1xmnnQcuL8nf1+OI/d5zFN+f9Lp
HLeU/LKpLtGUm1qfjeSPs+6a8s683vE6yLpRqgvGPNL6rDd/Wqvj0ThoykMp
/2Xa16LZialuNB2neWarnGS7PbXva1z00Lmn889WXW6v/tPyxRq/TO9nH+/n
x7yzl3taHY5WjznliaX+VvZ/pTig1kfRcaHWe1Idn1R3J+V1uc6M+Sdxj8/D
+1M8snnHOon9THCAdZXkl7IdTnE+fr/5BN5gG57wfvjDfMTI+8wjiZPMUYlz
GH1+X591J+te8EmKyzLf+HdrfGqdLsVjO/+s1cVs9RqbrpTitD2mfEw/tykf
wv6ypA8lPYjtFk+U9CD7zzxfemx596l+SeOeqZ/M+5Mdalwz9Y/tzbc/ioNm
XND23/W4ymv9+zhGjzuOfxqfJ85pY9J9Wn/zKf+0Oh0eVzmo6TyJf1Kd25QX
k/pdpbhm+7Wsz0zzqFM9nqT7YNe87m86C6P9SthzxhYvY3tt3cVcxecknef0
vX/TxV945fkfcINzvv8X/MWnv/ibL3+nN18dx5h4ivPzfm/zuYycn9F85Osw
FyU/nbnFceOJJ82vfK9+X8qfc12E1J8jjdaLUpxa2k51shiTv9l81OoRpbpf
rV+N+ccctJp/1vxmiYfMQSlOwfpQWudu1YX26j9Tv1jjoCkXrXHPqn/socQJ
Ta9nPwe13y9xzt58sMRBU+5J8c9+7qz/TOsZpvmgjSkfjNHc0/K9Wj586u/o
+rmetz3/O3859cdyXEbimLSf93t9b3uHfcQeNu4x72DnOS7pRuYgxw9bF0l6
C7xx+r6/6YorGOEacwn73/MMN3/b9ch+84rPw8j7vvSXPNvxzRfPv8Yf+s1X
18PriY+4Tn+PKa4o/T7+XuEavrfGVx5TPLX7pTleOtXL9v1sbrdu1Oo9pHii
FDdkPkp5Z2kdlOKoU16+/e6reWXT9aA5iHk3cdC0/lCLB03r58RBTRdq9u4o
HlrloGM5aStv3PW4Ve9a9ZfNeWg1Drrx0CoHJR7y85X8YC3e2RyU9B7rzGn9
xTzU+qM7r6vF/zjOJ+UB2/+V4iCY/1McaqoH0/p1pnrLjvtxPlGys6t+qBT/
y3kT76TRuo55CA4x3yTeMc94G54xN5m/4CDG0315c9vXBw9ZH0q82fglxX0z
2u/HtvW3FKfN2PLKUt8S34dNp0x+tZQP2eKtvU5JefruS+95Ydqvw5zUuKjp
RFvzy1o9IvvPPN+bkxL/NL/aapz0Vn2o2det/rLbGe+ae24vjqjxURsbF7F/
6idrfJTu8xRfl+KFzEeJk1r+V9KNzEkpL37aR8N121KdXF5PefApTshx0KkP
FPYi1Rd0vZ9Uly+NPq/ztOwfcxyQOch+JMfjpDHlT3nbOk0a4Q3446TLfcul
fbzmEniF/R6t77Rtzvu5n/Xd/8QX/+hvueKg3/R//g+f+1N/wrde/Kd/x1/5
vv/3T3zrxe9648c+/YW+5WpMupL9fCleie895cMlfShxpn83ny/5NR2HneoY
oUO2+zmtD5J/2M9RizdK+Whst7hrr5fsV2v9zKb9W1fjjFJ8dYuz3spLjYPa
fvPS1K82tYdNd5j6ce6Wm+6ad26fk1a5qfHwNK/M92Pio9X7vulKq9zE2PTk
piuZm5Ke5P7wnu8YUx3Fad0gc1LKH0t+BtcdTJzE6+al1B/Mr9t+OX7XcSgp
zsa6SIrDsT8p2enkP4NTzDdswyvwi0deT7xkfkkjvMN52YbT4CJ4CX5iP8eZ
3/z5/l4Tr3rkeN6f4rD8O/h9nI/jrFulOHm2U7w+9xmj49p8P5qvXMcz1UOy
P671H/bz6ufZerHjk1LcIqPz0ZI/znFI07qPbE/rlnh+tj/O3NT8cWxP1+Fp
fX/b8dlT/SnZ80deug3eWuesxF1buSrdr9O47FV/Hc+bx8ZXKW67zSOJq5yn
7/wS++nMUfbXmZsc9+lt+wEcV+q47VRfOulQXs/b7iT70/pwOQ/c+WrmHccj
m5fgIHNXOs5+s6Q/wRvwh/Ulcw08c7pPb3KNeYxt+93MX+a30+95/bl83kkP
uf78T/oXnv8CN3QpRs5rvx5jihdP3JXirRy3xf7Ewx6tJ6a6mK6zkOpiOs48
3ZdeZzS/32pdeMcXNv2q5cWl+O+kU7W+tNbbPU+2OKcU783Y9CmP036zzf40
u7U3/tv2M/FT4qy9+tO2903jh+7rOL3O7d/fmp91naNe/T7Kef9+Pem2iZ8c
B26OWq0H4HqOq2Oq+2iesk7l9WaKazJHOe471blO/VuTPpXqInrdn9bxSYdK
/c+SXTt9H99wQ69IPGS/F/sTRzl+yP4ttpPuBIfAM/ALHMV++MncY/0IXvL5
eb85yufh/OhTJ17+M1fj6ff+tqvrTDpW4r4Uv8X3ah2R793v8/fM+Vv+oPUr
+w1TnL/rDqR64eYs1zdIXOV4KdcDM0elut4erWclHYv5IMVFTXmq6Vfs97ox
9bmd1p1MXMW87Xm98ZXtRbIvU51qGk+e4se38lTz592uf++1omulv3u7jnWU
f3BVv0qcNY0fbNw15a3mH2xxVKmfpOenpFtZv09+wKRbJc6y3uW6A867m+pW
2JfkT0n1G9Po91uvwv6lfLrETfbfWX8yR9ne28+HfmRdyJzFNhzDCOeYa9Jo
Px/b5inzkHkOneqf+v1/13/9k3/Wt1383F/5FZ/wK7/imrcYed16V9K1HKee
OLV97/5+7Y+0XuffN3G0+Qted71O87yPS/qW/Y9eV9j/7fgrx121+vQpLiv5
/XneU3/dVs8p8VfiscRlrR9Ki7dK3LWqZ22t79Tiq1bjrBqHrXLXNnt+bv66
a066e79g8weu6luNrxJHTfNTm3/w6Hj1xlcpfy+t+5pfMPVlMz+Zo5p/MNU1
SDoWdiBxUOKp5HdJ3OXz+P22c/Y3YU+dN5e4KulT9vNZL7KfjxFugZvStv1x
8FXSu5J/ztyWOA1e4jrgKetZjCeu/rYbx5nzmr/Q3GN/pt9vPc4cyevWJc1Z
1sfsp3S8V4p/T3XQuQ9dv8F1rOAv61upDpXrppmjpv2BzFXOC0x1o5z3x+i4
0Cl3eZ6bxm2dq15U46spZ031q+m4la8SZx3LS1v1mrvmoPPzVPu+p/xkjmr5
oOYpc1HjpZYHO+WnVh9qOpqjUr0514Ny3ILruiS/YKr7NO3XmfL9mG9Tnzbm
+aRPOf7X6/e2nrdfJfkB3a8jxUO3OG7GFPeNvWYbnmGEg8xDjHAI23AM+09/
xjWnoAcxwi3Jr2e9yH47Ptf6E59/ug/fcjWyn5Hjn2PZv/KWq+u135DPM+fY
P+rv1VxovS35H82zTb+ybuY4LsfN2W+Z6qS7Prv1LXOV/eOOg3dcFuuXlG/r
uvqu3+Z4eNZHSa9yHFaqN5Xykb0ObHxlnkr1Oe1PNFeZpzyaq1IdqlXdatVf
mHSEpDckXSvpFa3ewtR/uKp7vTb0qf261FY9Kv3OU7/fqh6VeCrV22z1xhNX
pfw/P98pPr3pUZ6frE+1PL9pH/T0vtRfxfO146vMP9adzEM+zqPjV9zXxHpB
imO2LoW9TnYZe+z4cPOA9R9zi/Un+AMegV/gFEY4xjzF2Pxu5iy2eT+f8wP/
wX/2J/4n3/mWi//vX39+JZec/Jarkc/nOtlv7uLvsp7GNtdrfczXm/ybvN/f
A+d3vBi/J7+X/YaOA7PumOp8pfxQ188w35uvvH5wHKHrqaX6DKk+qOO3XK/B
ce6pfpXrsjguy35Br/s8j/G657vUF7j1B255hXCUdaymWx3lD2z1qqbxV42r
mm61asdvxx/4UPSruQ63+j0dxVONq3xfprH5A1s9qqRXJf8ez2XK80u6dIqn
SlxljjJPsW5M+XypT2iqW+PX4SnHr7uvhef9FOeU+nRgZxwH7Lwsc1aqxwk/
2V+HnUx5c9Y9rLNYT3E+neOgzENpNNfAK6f74NtvcAscZq6y/9D+Pcelcz5/
LqP56mTPv/3qeK6P43idv8fcA19aH+P6zV3eb70v/d3stz/UdbVSnQjzVOKw
VDc1xWu5Pr6fB9d3sD6V6pCkuripbq71KucVsn7y/GG+ctx7yiP0vGX+sn7V
dKvVPnupz6jXy/ZLrPaRaZw1jb+a+gX3+gHPxVlrPJF45a7HdD3746T28tRW
XWrKT8mf1+pSeZvnyfzUOGraFybpVMwbaX2X+vvaz+d8autNia9Sv1/XOXff
DMdLwVEpfyr1yU19z1L/ldbvDTtmvx58ZT0q+ckcx8P5zCm24+Ye6zvwhrnF
I9zi93FecwXXBa+YS+y/47zWpz7waX/906/2+jpOz8d3XNrx77jxujnMHJk4
0LqdR/4O61+M1v8c32/OTfmYLc7Lv3/adr0uxlRH3zzl/AxzVYpn93HmLPv9
zFOOr0r9aewPZD4yT6X5K/kLE0+ldecqT6V49q0ctRpf1ezZUfFVq/w05al9
vHAUx9z1eLwfr3HTlKt8P0x5aho31eKkkg7VeOqoPnopr495xfOP9XavD81D
5qnETSmfz3UUrEd5vct8bp7CXpiHUv46dsb1rjne9bRT/WzHiVtnsg7lOCT7
mbwfPrFdhx/gButMcItHeAV9x8fbv+bRuo/9ivAG5+Vz+Fz46GTPvvNq+zs+
799/9v9qP8d7tC7lMXGk9Tlv8z2ax/z9Jr60Lsfv6Psg8VbKl2TbOqV1KvsD
kw7rEX+546tSfZHEXda17BdMce1Np3Iei+clc5Zft25lvnIcaaqHZc5q61vr
VczzqR77VJdq9X2SHUtcxfaUo1b9fs1eH6s/7fXzPRy+mnLR1J/X9CjzU+Mm
ths3Mfp+t+7kdYj9eV7HOF+v+fmmfWXMT8w/qX9M8uelfhSt76njUb1ehZsY
PU8nbnL9gqYzTfv7pv5z7LddS/E0qd6T48p9HvMJo7nGfjA4Ax0HPoFXOM6j
/WfWf/g885zrGvi8fC46E9fD+DXvfNPTM3zHpX3+zqttXzd/p3mJz+c6zU+O
F+O6/Pf5/OYp3u/4fX6nlAfZ4rZSHBfnc9y88xccx+77OtUVdXyg4xAZnedh
3rI+Zb9fyvszP6V4qlSPJeUDWseyn6/VvUpx6a3OAqPj05N/b8pPUx1qqkut
6lNb46W8/eF2eV2XOpav7ot+ta6/rXJRO27Vj9fizKfx5F4f+LkwNyW9KdU3
2Ou3S3UOWv/hlG+X9CX757yeNDc5rzr1E7beZF6y38Jc5D605iTH7SZucpyL
48edt+b4bNdXSvHZ1jHMKdht60rwTuIS77c/zTqOecz6VIpT5/V0HehL3oab
PH7+Rz7/4CvuQodK/kiuy3zk/X4/x/F9WOcyZ/G78Hv6d7Pf0zxtP625y/Hz
5ivnK/p+db9C+7vTdsr7sx/QdUOSX9BxUnATHJXqhbpOqHmKecrzlvWo5t/z
yLzZ6rBP+90k/cnr6ml+X4uHWs2XWuUqtvfqUau6yarf7xj96b7GVR3n35v+
Dnt5a1WvSnFSLY9vlbMcxzjt6+f1lHXrVAfB67tUzyDFjaf8PPeX8XzKvJvq
dTa/nu2F62yauxKPOS+dOJRULzz1c3EcTqrj5D4sLQ7afr0UfwS/wCWMiW/g
II5LOo95zjqU47Lsnzv9ft918am/7eO/9z/4AW+9+KWnH/Dis3/Kf/Or//z3
feeN1z/9k55/I1ecxXH+u5KOxX5zmb8fx2l5dNyW/17Xo0hxWvYHus6Xda5U
ByNxF/zvPthePzT91vkaSd/iuFa3zTqW46nMX9avPF+0/oIp3qrVDbV+BW95
bPFULT+o+f3gruTnSzpV2p/0hKYvNN5qnLXV/3ceznoo/rx2fXPdru0/2g84
1bOmulbSa6d1Olf5yX1pvG5K+lWr18n8w8g8lfJuPL+lPqvW9RNXOf7c+hUj
87r7Fjf9yvUQvb53vHmqJ+U4F3OVR/OV9Q3no5mvsLOue8Do+CTzBDrQ6ff+
rhvb8Is5yzqP+cqf4234xZ9rjnp+G3/Md1+N8Bbjyf699YaeZc5K15HitsyX
nIfPYb/1M86f6mI539H9dpxnaP+pzwdPp/h512twvDojvOU+hDw3yW9uvrKf
3ftTPVE/x65z5f7OHuEs119Iernjr5K+5fWl++K0fjjebvUVWrz6qn9wGp8y
1Q+meta5Oeu83DXll7vmq8RTc7/hUbpW46rEV75/pnw1rYuQ4qtSnm2rg57W
R/YPNv2KecRc5by+FDdlbkrrSedLO44q1Ql0nAfztf2BrmuQ+Mp9js1ZqX8M
63/7A51/l/LIku5gO8lo3SL5BeEe6ytwA1xgfoJr4BP4x8dzHsdZWSez7mOe
4nxwEhx1eg6++/L3e9vl7/vWG7yFjsV5fX7zIn+X+ch/r0deZ+S6zXXmz+Qv
TfVNrW+5D8/pubiuB+G8Rd9fjtdyvqnrWjm/gvs+1WNvum/ishT/bj3L8Viu
c+W6Vu57Yz1rGt9uvmLb+tW032DzIzK2euuMU7+hOSvpW4mzpv7CZD/PrWNN
OWsbT903jprHXW3lqxfrW72v3968P99307oJU65KupXHlteXRq+rGK1bwVOO
V09xVl4nmq+cz+fjXG/K+deMjuPwetj1om0XHFfV9KmkU2GXHJ+e6kHanmIn
E1+lOkqul5Dy/OAa7L55w5wAR6ALwS2M5iHrPNalHG9ufrH/D376mGdf68e/
7eJ3Pvv5PvJtF8/N429926X+8d1XI/zl67X+lf6eNHIdbMN9XDfb9lvyOnwF
d/I7u56F495dP973id9vnTL1FXL8HpxFXmrirNRnOvWtdD1RXrcf3n7GFM/F
8+36ouYr+w8dt2X/Yep7Y85KdRmYH11/3bzV8gQTX9kPkXgr6Vi2L8lveK56
oW20/T2KrxpnzbjjoXDV0TrXzdenfsOpjjX1F3p/4/2UJ5g4zNzF8zTVs1pc
JaOfc+tZrqOe+tDYL+j4qlR3yvOe15/Ws9z/wn5C5mXHXzneCu5KnJU4DDuC
HwXuSv11rWOZk5Kd9X5zlc/j82GPGdFNnAeInmTOsv/N/GNe4X2cB56DN+yf
M+fBQdav4Ct4Cu4yb8FZHP/84z7rpj+R85uneJ2/g/3W0Rg5D9dt/c18Zu5y
HVXnC3AftHoQKU4/3UeMicPcH9H13eEu7n/4y3XZeG78nLjuqNc11ptdh9TP
d4uXZ16wzpXyDhN3pTru8FbKK0z9bxJ3pT7Ons8Tb7mOaOItXvd6v9Vrb3pD
GpP9bLqWX7fd3qtnbdO3zhUvdfs61lF+wfT7HFV/IfkDff8m/ar5A5Mu1epW
Nf3K8VbWwdGv9uYHJp3K/ZBTfJXr5bhOuvP9mk7FPG+/IPO8/X/YidRnD32g
1UGAg+Ac7B2vp7jn5E9iv/2BKa4qxY3DBYzWhRw/bn6CJ6xvWQ/ifFwHnwMn
wUf4A+EotuEr8xbnSVzFfq6Dbb/PfMbx5ib7JRnNq/CU66iah9g2TzE6T5PR
+pXfn/yO6J6u04Celeqzs9/Hse2+hTxHKZ7ReSepH2fyH5qnHK+FnpV0LOYj
61ds209o3Sr1afaIf8A8ZT+i9ayUv9TqiJqrUnxW4qmkYzW7OPULTvWtaf2G
fdw09Q/edlzWzc+b/j2rvDnVm6a/Y7pPWr5F4qfGTdafpnU9m59vqjsxmpvY
tt8v6U/TuHT0Jq8XXcfT8enwk+tzTutNue6U+87a74c9sN7k/sTuR2y9yXbN
dSQdf5x0KF73eR2XnbjJdh9+SFzBmHQoc5D9epwP3oGDTr/XNRc9/1l/yNuv
eOj0+739av/pz7w+Dq7iPHCP/x72c16OZ+T62Lbexese/XmOs7JfNNV5d/y/
62W4TpjrYlinso7lvkOOn0/9o+0XdByh++FYx4K3HA9vXYrn1/VGHddujvJ8
wDbzhXWpVEc0xVtZj2p11x3PnvraeNt81fjJ62vsBqP9Gkl3SvzU4ttbXmDi
qOYfTPb41e119ve9+vZt1we9L3698+lUSZ9a5a2pTjXtV2O+ajrVtI5CGlPc
euvv1/rSeB5qddGdp8O261fBW8m/l/rQtPpV5iuvk5Ofz/Hq2BvskOsVud6U
60GluuTWGVb9g9Y9XIfcuhScZb4w9yQ+gUOs19hf6M/hvKff6W2Xv9PbLn+P
t1/+Dm+/eP62T7zmql/8v/6NT7/q6/2McBjnM3fZn8h18ffwvqR/pe/DI5zF
55i3XD8MXvLouqzOA+D96IPOH0h1X11vy/Hwqb+O62OxvnBfHPbDWR7dN8fr
G8dh8Ty7r7n1q1a/IcW9O58w1clyfLvri9r/1/yBSbdK87LrtJu7pvFXTb9q
utWUs6a6VfMDtu2kV63qV8dwVeOs2+aweX7gi/Wsde56db9s/n2ncVVNz0r1
rFIcFeNqffVUDzjVs/Jz7HpW7vfgvMDWv89x6+Yu16lJepb5ynHr7suX8v6s
Uzm+w/4/Rtbh2AnW99gX+//gHnPVtJ63uctxM9jDpFu4HmfSsRwPbn+bucMc
0/QejreOBVehR8FXn/D8h3zHxdueWfV3vf3yd3rHxZue3lWf/knvuMFfHMd5
+Dy4jG04KPEex/N3MVo347rtn+Tvsv+R79t6Yuq34/2OgzNfWS/zcT5fu8+4
b30/u95aqg/v/Twf9hemOHnnnaR+z6mOKfOC/YOJu1jXWd9idF+txFuuP8r6
1GOKe0/5he5DaJ2LMfkHE2el+Kvkb2m81fgqcdZUx0rHTTkr8cQ+feuu49zX
6y00bkpcap3K2+33MjetclTyD5qfttatavUVkh8wPa+OR2c9lvIAva6b1q1i
v/mJeQ2dCo5i/mN+9PqVMcVFtfy+1AfZI/bAdUCd72f+sV/HdTRTvU3HL2Pn
kg7G+Zx/hz03N6HDwANwh3UijrNeBZ9Y54KrzB+cF93J+hPcxHj6fd5x+btc
b/M++Iv3m3/4e3zdjmv3dfJ+uI0RXYzP4Xjzk+PS+P5dB8w6luvNe7/5CX+s
ecr8lep1pfvPcYCOD3SdtVRP3vmxzucwT/l5TXVIp/Ww2E59oJlfUvx66r8F
T6X+OPYbJv0qxWElrmIed57gXt0qxa0k3Wo1f7D5CRsvreYJmgcaP61x1F3r
UOf3E079fx73xlv5vjCHt/j1xFmpPqj96i2vr/GVOavFq7uOlftFpHrqaeQ4
x40yr5mvGFlXMl963eq+Nvb7ub+s61TZ72euwi4wul6V607BQat1yX180ru8
bf+R7bL9gOYi++fgEbgDroA7/H7zi/kD/oGHrD95NFf5dXMV/GO9ir+L6zBH
+joZzVWM5kGO9/dm3nKcGnqV64LxOzkPwDqj8zUdL+/ze4S7HMdlHct5iY4j
bPW3Em9Z77UubM5iveTnPOlVrMNSvffkJ2T+YT6yf7DVZ2j9nV2vwWOr25Di
2VPe91S/av7B5i+c6lbJH9g4a1WnanmCiaf28dZ95ax1HWuNR/fzVuOq9Po0
3n1vPfbVOPemZzkeM/W5MWe5Pmjiq1RvfdrPhtF9NLzetV8h8VSqA+r8cOc9
MZqzHM+Cv8X5XK6rmeJtUp8628HkT3IdAPvt7NeCFzyaQ+At8xk8Zn+f46bw
+8FRz/Hke99xabfeeel/fefFz/h+b/7L/+EffMflfX99HK/zfrjN/kJzl/8O
jxzP++E98yHbfp95zvFYrtdgjuL3cj5lqg9hP6Q/x/xm3cvxWqlvj/mL+zv5
F11vzf5E94nmebKexXPoeEiea+KzrGt52/2k7R9M9RlS3VHr98lf6PpYibtS
vHziLetaLZ+wxcUn/pryVop/b7w15apkl1sdhqZvJa7a5h+8r3HuW+PAtsdp
rfJX+52n41b+YjR/Oe+26cZN/0p1Vfx8O1/Gce/MK9P6VlMOs84Fh6V+gq5j
5fVxyxdMPOY+ghzvfKpUP9R5XOYv+3Ecn5z8PLaHnM/10LGr2FvscYprd/w4
vOS8PutW1pe83zzENvwFX5nDPuPZr/GX33nx7Nv/qF/+zosf//zfNZfBY+zn
PJwXzvN1WZey/sbr5kTzHcczEhfmzzePOt7N+Y+pHj28Zb5y/Qh4LNWLgPtS
/VPfR14XpPvS9btcH9X9fRy3ZR5DT055v15nuR+1dbBU9yH5GR0f73ycFL+V
uMxj6m9oPkvxW46X9+g4+aZ/mcNW/Y2r/sWp3jXVRab61yqXbeOxxi/n5qb7
659s/Jbiv6Z5ilt5zePe+hDmtVantPkpk1+S5916WYqnT3VJU36idf7UV4d5
0fUg7F/wfGx9rMV9Oc4rve44eo53XIvjjuE16wnWJxKvYT+tq5n7sLfOS8Qe
2x/p+Ha4wvl/cIj5xPzlOCz2248IZ3FeOA2d7MTD11wGt53uq+v9cB3vZ+R1
+IrP4e+0n9VxaOYz63H8PWxzPLoafx/nS3Fj9vs6Ho3XW14ofxccmN6XuBB+
S/mU+DFX1xfuIwSvuY6J+1fzPLm+hPUzxxUwuv4w8wLrOs8Xra6E63Kl/ole
dzre1fzmPtVwWuK3xm0t39F6Wlrvu67ENL8x9fU5Ki7MXDblvK2cNvVjHqun
3TcOm3Ln3I/Z/JmNz1f9mN4/1dG4zz0mHks6tJ+zaV5jqm/c8hpbf56Wz+h5
zPVMPR+ax+yvcL1Sr7tT/L1HH8fovEbXN0UfcF8V9C7rEPY3Mjo/jePtr3S8
tePuXS/BcV3mMetdcIdfRw/yfnOZ47zgLvQu9C/2m79Ofq13RR7jfZyf8/G5
XIfju5wHAE8xcn2M9qtax2Pbfx+jOdZ5A6l+q3VOv87vx/dv3ZPfyfXHHF/G
/eL4Mu4nRvb7/kz9ul0fxXXnEo85/zGtk/x8O2/Z+pr7LJrLzGeOI3Pcfutz
kfKQ7O80h3lM+ZBsu/48XNb6/KSxxe8nv+ZqnYmpzrE1fmw1jv+8/DXlsbvm
sq4DNp1xymHTfMipDtY4LNXvSn5M+y8bZ6U6Xc6fSXqY/ZXmLsdFeH2X4sga
fyXuYl3KfJjqyLP+TRyV6qCm/jvOc+d1x49hN1L8GH4c+xmtI2C/sGuMqa4T
rzs+LNWLsE5iv571o7Rt/x12nm1zjPUj8wy8hQ72kc8dW++6+PU/8pmH7V1X
/HWyXzc5DP6Bt9jmc5Iuxd/F8VynuY7rOXH2uy6eHfXnPv+dVyPXY140Bzq/
k+uCp+w3dh0LXk/+ZMexuY5Z08cctwaHuY+A8y8Tj7kOLPe/4/nRj10HjNH5
Mc6bcf8fP+/WxVP/a3iMeSbFlxFX4fxtx5k1DvN6NeVVtn6M03h+9/+xvyTx
l+OYzV/2a67WVU3+I9vTpIsk+310XFnjjH3c9dDGrbzZ6tYeF1eWeGxrXJn1
MJ6HlkeZ4vxT3Kfj+nmued4dx+/6qc7TNo+luqkemb+Y7xzH774+rkvhOqgp
jsz7/fq0LgV6mP2S7sfj/nb2S7oOl+0Zds71BNxHJvU5hMdsn61jua4WPGUe
Y7/jsOyXtA5mziFODI75vqdf0uu//F1X/PPLnhvKd188vdinFv/dVzwEp8FD
cJzjyVy/gr/DPMn1Wdfi/OZDj7wOV7LNdZlP/T2bF63TtTHxMr8Pvzdjqs+f
+kpaJ/Po47kfzWfOR2GdApe5Pljq3+h6Fu4/lPo4up6fuYz1nPtle74xn6GP
Od7MdcOcJ+6428Rn9l86zizF/6e+jMk/kuLNrIt5tP+m+SlTvP/UfznVzWzP
kx6W8iunnJZ0oqYjvVx81v2U6XtMXLzqp/R24vvV+mHmsfQcMLY6YuY2c1iL
E0t17VP/RfZP4/sdL+Z+1Y67tV/SeeyprmrK17Kf0tv2R5rDXM8CLsNPid1J
faThLvOY/ULuP+M6U6kPNXbXcfnNT+e4e3MOo/Ue5yHyfs4Hh5lf0L/gLvjs
dN9c8xkjOhTnsf/QdS+cz+k6GfAiuhacyLavk9e5Hq6XkeuDyzgPn8P3ka6T
75PjzJH+fv13mY+tr7murOvRwmfut+k6GvCX8wXSfeu6r/Zb2l/J88U6yM+j
ucxjqo/hecE6u/mMecb5mYxwGfo+81eKL0t5AcyPnl8Tl1k3M5d5nZ3yM5tu
ZruT4sgSl03jyLx/qnsk+7zKY1v1szX+eqh62ap/dR7PP/Vfrsbzr3JZqjfW
4vjTmOIxrZu1+q1NJ3P8fqq749HrQs9L9l86ft/5lq7byjxqLnPcV5uf2baf
BLvQ8i0dr+w4L8dHu46U6xLYPwS3pboI2FPsLHbXfkjrRIzmKO93/S/rU453
h0c8wjlw1+n7vOau031xzTu8zvHwG1wGB8F9vl5fl/U6626cFz0MHrNOZn3P
+hnnY+RzGVM+guPqnGcKf3L9HG8d03oo/lD3U3J/AOutqR6t+5y7vpnXG+i8
rp/hOhmuj2F92vnPXjfBb8nv6fVX6p/huhrO22Sd6Hqw5jN0s6SftToaqZ+k
52n3jzSHpbj+VCfJfsykm7W6+i0vM23bjiY7az5rXJY4rek3q/FSU165H9y1
Gj82f1/jsVXdbFUfm/KY1xGMXnf4/m/xZYnHUv/HxGPWy8xjKY7MfJZ0M+dT
Oq/SepnjyZgfU59H9x1KfsnEba0fkeP33S/I9StS3mPSFxzP4zh910dwvXxG
62PWh7Dn2HnsPvYefkg6mbfNQc57hH/gmV/4nz1Tht59xTPw10l/vOYztnmd
96Nbcb0eHe8P38BJ9p/CX/Ah18fnn3Scaz40hzE63szcx3a6Xo4zN8KfPp/z
COwndR6G4wxdZwPOSn5x92eH63zfcr/CZ+Yy15NlPQOX8Zy5D6WfR+dlmtec
HwCnpXxNdDLX2/F6EJ3euj5cljgNv4DzMb3OZbRe5vh+j9P6Ga2erO1KskeJ
y6Z8lvQz29WmnyUua5zWuCBx2xpvPBQe28prq1zX+kTd5LIWb5b82dM4s6k/
M/WXTHVkm45mf+Y0vszrMtZt7iPZ/JitnpnzLt23230j3afX+ZYp3sz6mOOH
vd7268z3zP/YD/yY7qOd/Jj2Z5rX0Mts55JegX20Xna6T67jwLHTjsc3pzke
zPqN8xkdj2ZuMxfyOY6nty5m3QxOYuT4J5dxaOYh86b9oPav8rnp80/c8J4r
bvv2H/S3/tMf+vprbuM64Dt4zzoa18fr6brsV/X7uU4fb27jd7P/mfvBebjk
c7oOrfsNwG3oaakfgfU37m/7N4nDdPwZzxfPm+ucOb4AXrPuZo4zt3n95v7h
jkszr5nbWFeSt8kIt8Frzt90/K3Xve4D4Pys1F+J7ZQnYF5rdWdTHJr9mh5t
91qdjHPlaU7rYU11tH362ZSHHsq4vU5Z0sumeQBTPc3rgKlf0378xmXJn8mY
+ic5D9P6mePMUn/KaT1/x5tZ3099vfFnprr97kPp9bD1s8RfKc7Y8z92gvgY
90ly/qXrYDhODC5z3DT7k26BvYPD3PcH3czxVin+yf5H+9lcPxU7bz3NvAc3
2D8IX8A1cBfcY92M4+xXZDSnwDt8rvM++Xz7Tc1fX/0MB37Oey4+9tnP/Nvf
c8kNr1zet++5GuE0c56vw9vwGaP1OH9vbJvzrMvxu9vv7D4H9nMywvuM3g+P
8X6vF7ye4H42l7GOOc2Db4l1zMxnjM4bcH0N4kHNZ+437vg06/HW01J/TLjM
fk/nDcBnzt9M69vUHyDpau57ab9nyhdw/FmqXzbtA5DGlh/Q8gKSrpbsedJf
Eoft5bMZjz20emXn57OZ/3lebzhx2ta+S8m/6efCz4f1s9Tf0vq2uSzVKbNe
Zv5KfJbyNJmXUp8l5jfHmzFPwmnOt0z9lezHZNs85jgW5nPXx8COuE+48ygZ
iR9DP7AuZj8n9s7+J/unsLOOM3LdMMe9Y8fZz+g6EqmOvfMIXK/CfkT4A56A
g+AaOOnjnl/YtU5l/cz+0KRTpTwD9C3OB1+xjU7Gdf39zw945eKPP5dB33N5
377nav/pfrjJafaHwpf20/K6edT5BuY+f5/OX7Xeye8Jt7uOBryV8ji571xP
jfsPbrM/1PkCbKMrux4fnOY4Tufb8Bwy8nrjN8exTePSPO8k/cz9y12P1nmd
zH9erzp/07pZ0s8ap7U6G6lfwGp+QKpjtsppSf9Ifqu9+lnisVXd7MWc1jjm
vvDV3tfn+QBTTlvN39zLadP8gMRtKV8gxaOlvM0Uh2a/pnkt1ZN1vf9UX8N+
TfR+96mD17xebf2YUj0Nx5u5/6X5LHEa63z7NdHR7N90v2n3R4TTXC/Kfk/H
oWFvU18h8xn+L+su2HVzmvM4U717c5rjq+AKOASOQa+y35A4NEZzjzkOrnH+
gT/XPGQ9DO5CP4Pb4LIf8g89I4tXLn7LVz17EF+5+L2f+Y9/8O/7+a9cHcff
4Tg263Xsh8PgON5vvrN/1/Fw8Brfu/3T/G7O53SfADjM+prr2/K6/eruS+A4
NY/uU8Hz4/7n5ja2eR6JB3V9Dvfl5DlGX3O8GvMCY8rztJ7Gdsorh9fcf9P+
Tutqzc/pvgCOI3Zep0fm/ZTX6fi05L9J/k7zWPJ7tvi05qfay2ts7+W0xCVr
nHbf68+eX39b9Yeucl3zl6b1wDS/IOluqT4a26l/U8ov4HlNfQFSPTTXqXU9
NOdzeh4yz1l/Yx3qPE/Xp/X8mfpk2q/Bejr1N7efxPM+9gC7gV1BJ8DuuB4t
2/Aadiz5RV3fwPyHnmF76joN2HHzmvMGHU+W6kW4zoP7kNsfar8oepF5B16D
nxjhKo/mO86X6mKwHz0P7mJER8PfCZ+dft+b/GbdDX8p5+f6/Hc+UVxb0gH5
+xPnss37nYfqer6prh38774D+E3Zz5jq6Kb3wXXuS+D73f2hzHM8R84T9XPn
PgTW6cx1ro/r5999o9xn3fOQ66q5vhrzmfND4Tjrb8yjzgM1zzFPMzrO2Ot0
x8FgB7ALjmd2nXPrcNP4NesWrY4a28kvutr/aaq/NZ5LXDfjs739BO67Xpd0
uf06Xfs9Wr2Vxm9Jn/P2qi6X4ttaHnWKF3W8G89r6rfJaJ6D3zya11LegfW4
1Hcg1VHzetjxba2fk/0kbLMOR4dzPihc5/6a7i/gvAPX3bA/KeWB2u6Z57Cn
2FF4Djvt+rL2j3p0vVjX6Wp5oOY65zeiG8EjcBQcxAgnwVNsWz+DZ6yHOR+A
MfEhvPYD/s1//ku+9se894rX2P41f/77nv6i7734i7/xc/7Cb/yc917a21du
cB/+Vf4O57c6fs9+1CfS5fx3ml/Nh3AyuqT7yae+7vaLuz8p95f7fLHfXOiR
+9L5CejK7msA3/H8uG+780vd35Zt913juWU03znuzfqc6+Zan4PjUn9PRvan
vISUP+p6ay3erdX7MMc5jzT1K7B/NdX5MM9Zp0sc1/yqrY5HssuN31K8W+I7
88UxPHfX/HX++LYptyV/atPjGq8l/W1Vd2v1b+G2lCfa8hMc/4Zubj3d+lvr
x+l1YYp3M6+lurfuy8l61etc624p38vbqR6T/aesy6274bdxP/TU78n10qw7
ON7N/Oa6ati5ZEcdf5bqRKDPOC8UrnOdtRQ/ZT5z3L/rZNg/CjfBP+hZcJHj
zdg2xzhOzvvhNfiP88Njr38Oltdcdrof33dp7997aafee0OH43o4L7wGnzm/
wfVBrNNxveZYuJTj7aeF+8h3sP/Uv6f7llo/s7819XfwedyPi/M6j4H7GF3O
OrPjENwnDX3OcaZwGyPPKTq58x1Sv3ZzW+pD5bwodLmkvxEPl/IUnD/qPAXX
YXM9NnOb88pSv6nkT2312aY6XKqXm/S5ad2Pab7C1ni31Ti41zavnY/TjuIz
xqTjtrpr0/yEVh/XnGY+4/mb5iVYT0t81uqxOc6NEb8onMZ8xTxm/6j7vdjv
aZ0s1V1zvijb+EtS/wHmedbrth+Ob2N0PyhzHPzmfj3wGXoE/ifbRfcTSPFt
zqs0r6W+4Ek/S/Uz4DR0H/MG3GQ+c14m/AO/sN/5nNa1OB+6F/utmzHCZ/Da
K88u+ye+79L8vvfS3t/kNLadpwBHebQ/1P5a/i7//dYh2eb75fdktL876aK+
f5wPzLb95K7v5nrL1tdS3RB04tT/IPVt53lzXyrrbnCa+4jyHFs3d56S85im
fQ+Yr9DbVvu0r9bNZXR8curL7vkeO5D6GjR/acsztc6W7J39Th5TPQbnMTR9
rXFa29/0tRYHt8ZtD5XjVuP7Mrc1Xt4a19bi2Ri9jkjrDefpJH7ztuuwtTq5
zf/pOLbkB00j803KS3B9SecnOJ7N61nXvWW0H8P5Y85DcJ0156uZ1xy3lurd
Wi+zbub+BXAaugP2zfHh6CC2x9hp+yMZrbe5fhn2PsWt2Y/K+1z/H56AV+AQ
uAOegnsYvR8eglPgInjG/k2Ot06H3xPdDA5jG26D057j3H/8vqvX2Y8e5zg3
x+eZw5Lex3X6+4FDGc2t9rOmvqj8Tu6r5Togjn9z3zDXjbFu5/fBg45/Y3S9
XeI1eX7Mbc635rlDZ2O035T4ONflZR3G8+44N+eZOq7CnOY42qazpf7ujPgd
Uh8qr5M9Tyd/qf2jHrELrg9ivc15DCkOx7pC09lanJv5rOlrU11tWl9i1T/6
qLtN+LNz3Iv393i3VX5L99dUf3P9tjSa67zucdyB9Tc/r45rTfpbGqf5p/aP
Jv3N/dqdl+86usy3Xi973Wx/KPO26zzhF2W9Tl4C/hfW+9gT62twmrets9mP
av4zzxH33eLYrL+5vpfrg7lOKzyX4uDsb3WcvOt+2B/KaP8jvAVnwWHO72Q0
t/m86Gv4OxnhtJO9f9/V9re865f+O9//C953yenfc7UfXQ6Og+u4bvjLeRb2
gzpuLX0v/N3On7DOyOfAeU+UB2E91X5v8xw8lvzlfr91PteLM88Rj+l1Cfe3
6xT6eUh9c811rLPMcdbleK5d343Rfa0cD2v93/WJmK8c/+a+o+Y61w1h3kx1
d5Mf1fkM5jrm/eQ/TfVDEtc1XQ57leyaec5ctzVvYarDbfWnfvjY8k336m4v
G9/N9bpVf2ri8cR1vm8S17W8hBT31niu1Q9JPOc8cvOcn3/nm3pMPJfi4Fzn
zX5U4t3cR9T+VPerSvXd7Gd1vRDnJTiuGXsAz1mXSzznPNOkO/h19w113VPs
IzyHfXWfA/Q3/Jyuu+Y+nfAedpr3p35XrtdhvQjegL9S/Jh1OXiO4+3PtH7n
vAO4y/yGn9TbT++J3/nGj/2eS/v/vqvxxO3Xx3FePse6oOPxHO/GfudlWG90
PgSj8yBcVw6e5vPc78t5xPaX8/tax/X94HhJ922F59D1uE+dv+p6v85PTX3o
eU5YB7kOifO+k1+VeIlUr9d9VJhXHK+R8txTvRHXg0s6nfNQU93e5Ge1Xmee
c7ycdTvXhZvGwaW68Emfm9bxneYtJI5LcXBT/a3pcs2f+trU49bj5JIfusXJ
pd9pWieu6XLWiVNcQPOvTv2uiefsZ035CzzXjKluSPO7mufcJz7VgXNcnHU5
5kXmS9cB8eg+8Pa3WpdzvTfmf9b1rmvgeDf7g9y/CjsE/zG6nq/7QqLLYQeT
nuL6HXCa7bD7nDteDrvMyOvYefQf1wVxPwL0pJTPaW6Dz9jG/8m2R+tZjOhn
8Jx1OPQ39Dh4jv1sw3G8n+vm8+Ev63HW0ZK/1HVI4ESP5jnez+e53jC/j+Mi
k589xU/6/vB94r6p1gFdh454udPznOsDOz/V/US8/nH8nHU6/K6Mqf+p+2lR
J455w+vE1M/FfeddXyTV9yXOhPgTeC71xzLPMdpvMs13MM+lPvSpr2nys9p/
lOyf9Y3Ec0mfaxzXeM5cl3S45Fd99e2pXjfnnfvBY8fx24t5Ln/vLX6x5T80
jvP6YVovxLrcqj7ndVDT5eC4pst5XZfqwTkv1TpcipeD4xxf4r5YjJ43U90Q
1/FlZH52XoP9quY34qvNbYzus2A/quuJOC8CPcI6HPyGvuF+odhL62bW4byd
+iSY29jv/FLqYLieh/2D8Jt1NngLXmO/63mY01ynjfdxHnjLutvPfg7q19s/
5jnIvf/GfnQ563dcj/NRnXfhfAzHv6Er8v1Yn2TbfOvzMLreCL+T+3ClvqnW
b+E3++Htn/d57KdHl3OdEvcPSfWE4Td4D74zz1mfcx8u4iJYlzleznqc81Kd
x+54juR3dXxv6tPANnHCrivi/AdG+11THlqqH+c6I61/gzkO+5LyU81xtmdT
fktxdKv1RGy/E7/tjZP78OPW48HWOO7hc137HqZ6XBobx7W4ucZxyc/a4uU8
prwHj453cB0456H7eU9cZ/9q86sy4kdgZF5znXP7VdPo9bLnWedBMF+z/mZ+
Z3ScjfNTsRvOX0hxcOht7DcHwnEchx1z3VV4Dl3O/UrNX7bD1l/SNvac8+BH
hQeeXMZnsR+9iRHucl4onHX63a/zChjNcXCb6+2a/1y3jTg3eMy62x/+qc8+
8SbPcbx5jvPxeeh97rNlvmK/69yZC81v/hzHDSbdD55Ofbm8bW5jv/tKcB+Z
E+2nh+NYZ7Du4L5NdYWJo4PbXB/YdUmsc3udRB6E65Hgb3X/LXjOfezNc55P
zHGO003xc+Y3bzMfst6F54incz1gx9FZj7Ne1/qmtv5b2BHGVv831YtrcXOt
7siU59hOdnxWx2LOD1N/6zZ/7DTe7K55bb8ut8pvrc5f8q9yH3nbHNf6MrS6
vuY263bWr11/hOeK563lPySea3zn/FX8qc5jdX04x8klnsNvkeZH1r9Jn7NO
Z/8qHIcuhz+GdT12Ielr2A/rcq6Dhf1JfRjwq6JPmOOwjyl/FZ0FO536bNp/
5j6jtve8z3Fx8ITj1uwndV0P5x3ALa77Ad9xXnMP285PdXzc6ff7novf/cn/
3d/wM3/2+y95/P2Xz8P7b+h38BzXb55yX1TnKcBV6GrO5+D64UT+fv4Of198
D9Yp7eeFp/G38jtZT3XfMrjNxz1RXjLb3C/2yztfhvvU9YTd98H5EYzE0/E8
kCfhOoteV/E8uv8q+pz7cLGuSzpdiqNLcbmuU2m/q+c515NLfbrs32j1gO2H
Nc+5bsmU6+C4FD+XxlSfPvVXnepzzd/a9JhVXa7VI3n1/Znf1rjurrns/JzX
4uQa363WlWv+1lQXp/lbm1+15bV6XWR/K89f67dlv6t5Lul0KU7O8R/2szpe
jnmOeBPXAWC/Oc/1ORPPsQ5nPsfvAs+xjnfdKrgOu4FfB72OODj7f+yHTX1S
sVPud499I/6o9bmC6+A19313/033q8K+s+1+oHBD0p+syzmPFI6DW+Awjodv
HKfm+DuOd91eRj4HnkOPY/tk76/j5NDtfL2cj+syp8F3rvtmjnMcoHU/581a
17T/meuwPuj4PHPeE/WHMP+5jjIjvz+j66G475c5zvVL8L+mPg/W7cx1zptw
HKv7eZ1+x7fU/qrmO+YLc53jcJ1fz3yT4umcH2GuY53reDr4zvF1LQ/WXJfq
0Znrkk6X6pc0P6zj6mzvbB/Nc1OuS3zX4ui8f1oHeKrb7dPnHhrXretwjdtS
fFyLh7T+xv2R6uCk/r+r/tRUT876teuR8Fw53yH5VV1H0uu2lOfQ8hpcf8Q6
HPNVqv/L/Od5z+td93NgXsVfwrzMfO16v/hTU92RVufX++1PTdyGHuf4IOc5
oG84fh0Osw4Ht2FvHRfH6/Ba0mGw8/AB/OC8U/MYupbzB9h2XTfrX3Ba4hl4
yp+HroY/FU6D3zzCeYzwm3nS8WuprjHH8f3473R+LNv265pj2eZ78edaJ3Q9
u1RP2f3IeD8c6joz3Cfcd9bj0I3Nayn/IfVxZXS/LutxrlPCOst5D6zPeO6d
/wC/sZ3qF7nfqnU657cyj5nfkh7nuDnXD/Z86ng69zlMea6Ol1vltqTPYX/s
J0p+pRQ3N/WvTv2sLV5ua9zcVl7b51e963FrHsP2vNRpPqrH1vcj8VrS21Ie
ttcjyV/a+mrxPFlfc35q4jXrbMTLJr9p8pcy38Bpnqesr9l/6tett9lvmvoz
MB8zb7t/tuuLpvoi7rPFyHHedpxcymfAbqFHwGnOH3Xdjyehn7r9oPCa+wqw
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
l/Uu68jmL8eHpXh9c5f7eqZ4MM8vrl/m0Xnkzqd0nUjiMtC9WJ+idzGPMs+a
u6x3OT+y6V34PbAH2AvXacIuOS/N/RlTniSj/Y/Ol3Q8GPqFeYv4L+soqR86
Ogpc4Lr97E86i/t4Ot4MnrD/Ei4xx7AN58AzjuNHd7IeBkehU8FhPp7jOD9+
wxNvX3PWJz9/MJ9c3hfX+zmfecv+Reer2m/oeiFwruuGcB7XT3Pcv/uLus4Z
95c5C70LvoK7uJ/Z79etg3kdgv899ZVC73I8v/vsOn7T6yr3m4K7nNfj/Ez3
hXc/E9erZb5yvrjr1jI6Psz9350nRV578i86Pz7F78NjibscH5bi+Vt8WPI7
Jt0r1Z1KfsfGXd42b039jVP+WuObKTfddRzY/jj/qU626qec6mYprn/aLyrx
W8q3THqZ68y4z2fTzdzP133czW2tDgb8hn7m/uzmNutkrCutl7m+I3EYrmPm
/gGO63XdMuZvtlN9i8Rv+E3Qy/BbYn+wS9bJnF/pPtvuD0B8v/ttm+vIq/T7
rZs5T89+L/jJcfrwAKPjrKx/oc/wOfAbuhk8kXQy61OMz83ZZz65eMdv+Hef
nvEDV5xk/cr+Q17nPLzO58BrnN9xX7wfbmM8PV8fuOI3HwfvWT+D4xzX73g7
x315NMfBb6kffdLNnKfrvBLXQ4bnnDdsXrPexrb1NOdhWn+m/4D1M9c7S/Vs
eM4d/+/Rfk3ixhK/sX50fJjr+XgetE7W6tK6z4D7gqb+Uamfu8eUh5n6R2GH
zG+OE2v1MmwPp35L2+HEcVN/pfktcVp6fZ+f8r7yWepPtZ5/2b7H9L0mbpty
2moc/9TP2XQ2Px8pnixxm3W3VN8s1Zv1fAGvtfoYzE8e3Z+9cRzzn+PLXC+S
+dX1MdDbmK9d1yLlWzKiqzHCafhh3Jca/cD6A/UGHL+f9DT33bb/yf2dUj0M
7DK8xOh4LvOT8xThC+s6zmNMupv1Pc4Pp5mjzGPoWYzw0s/7YX/b+3/6L/zA
DW5L8V5wGBwFV3Fe3gd3wWMnTvjgxTf8sWc35AeuuJHtk939wNV5rN/hb0Vv
S3kR5mT2u45IypNN9dHcP959ArjPuL/gLO5b+ssywmkcxzY8x373j3I/UOtv
rk/r+hnob9TXcP1nP8/2f7q/G+s7+kgxf7D+g9dSX1D3L2G+YrS/wTqb40Tc
H4oRvS3lYVpnS/09vV5PvObRfp7GbR7tX0r+zlR/alWHm/o5t/o7j40vu6/c
NtfXGr/5e2vf7956tNwH6b5pOlviOHPbVGfz8+N6GUlva/U0eN5dN4N5wn5S
dDbmHbjNeQGMrnfGPOZ8JftN4Tv372S963pE8Jv7OsFtjO7D7rx862+s7+E2
trEr6ARwGzoCdgq7ht2Dwxzfn/qrkz9gjkt5AvAbehscR90KdDDnAZrjnC/o
OHTHo5vfUhy78zxdpwx/KNzECC/BbfAVvJa4jfPBabzuz+F88OBJR73mMsb0
uvkSToRLnaeQ8ixc983+ZLiO1/m97N+Gl/ndXe/M/T65/1wPGZ7j/m18x7bP
k/I4zW+uW4vuBq+lPgOp34A5zvVsmSfMb45XS3mZ7gflurTOx2Rk3nReQIpP
M79Zb0v9PF1HI9XVSDpA8pua47BX5jb7S1s9tKSP7O0LtVdvS/z26ttb+wjc
NZfNOW3Ka1NOa37rFs9m3a3pbS3PoPlFU70MnotUN8PPWeI3x7W5bkbq65Tq
ZjDPmNus+1uHs7+A9aj9oY5nS30CWA8z39ovStyK+/rBZ+x3vIz9Lqz33T8d
vQ07g45g+4QdQ1dL3OV+TWxbr7N/1HFK1ttcr9R+NvtJzWvWeVIfSutq6D7O
C0V/wh+J/gVPwWU/87nQd61vwUnwFdvwGlwGjzHCTxwHp+EXtb+T88JnJzv7
wRt8x3VxXse18XcSR8f34LwMx7W5r715Db7me05xbfwe6GzEtZnXrO/CZe47
5rrJ9vdzf5r/XN8Wf2rqN+C6talfu+vWoIu7Ho7XYc47QHdzfVv3bzevJf8o
683Uh53R8WzMr6lObapPa/+o49uss7Fud76B7UbrL9D0tql/1LrblNcSt9mu
Jz5b1dsSj2yLb7uvnLbuL22cOvveun/0KI5L95W5bau/lNFxbamfQOI1627O
C3WfTvcRsO7GvGLdzX5Tx22Y45jXrLcx77FeJR/U9c+YT+E39DbXP3IdNPf3
c16Z8/yZ5/HLYC9cjxa7g86G3wg/kf1MrlNrO+j+T9hN6x68n/gk6m64vhVx
Tc7PtK7jPNHU59L+VfvrUl8CRuLkUjwa/IQ/Er4yV7ENh8FXnI/zw28cx/ut
k8GLjKf79YNX4496Dm4fvPKforc5/g2Ow/+Ln5TvEd7i+/Tv4H5aHOc8Dse1
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
HLfal4H1Vuqf5TxV1yeC3xidL5/yH+C4xG+sW90vy35T8hqo2wS/Ob/BPMe2
R/ebZr5nHe+8ONeFo04C9sj16l3H3v2H2O/+kLzfdbfIiyDOCB0EO4rddV8E
+0XNY6kvU/Kj8j73FYA74Bn0N9cLgZPI/zSv2V9KvBvnQwdznQ/nqbp+nPMS
/Dkpn8L5EK4XzN/tPvWtXgvH8X25T725jtH1WlJcY+obC9fbzw7Xme/gNkbe
B98xsp6wf9/5DsQXuM+8/ajmN/fdcnwczyvPr/U4/Kfuw8B60BzH+pF5iHWl
uQ5+g9u8jR7nvoHmuKTHpbq/7tNgv6r9qOY39Djsgtf9qxyX+mutclyr8zut
N9L8qNP4N3PGlEvWdLm53/J+cdx2fkv65lSHS1zWeK3pcCmPwfVFzG+OJ0j+
1OQ/9Zjq+7LuQmd3HAXzAfxmbrN/1XFx9qeyvnQciPNRmfesv+FHbdxGHBzb
rhvnkXncdeNS/Jv9qcmP6nwEj85nNc/BbfCf6/ziT8Veoodgb/GfuX5b4jLX
qWj1eeE2RniC0XFnzhcgPwFOQo+Dr1w3xP0X4DfyBuA1RutwnMdxdWxzfeiA
vj7H23E+98my7sb35fwRRniP7819v/ge/ffBbeY+fg/3pXfcnfNY4TnuF/fV
YJv7y6P9r08u4+TQ4bhv3VfV/JbyGMxr7ptqvZy4N/MbzznPPfMA/GY/qvMZ
Ur6q9TjXu3RcHPOf64+4zqZ1OOc1OP6l1ZOz/9Txb9iHxG+pzq/5bbVuXKqL
n/jN27bXid9aPFziu8Zta7wyzU+dvn4uDsvXs5XLzGcf/r12fa3FPU7j3Mxn
qQ4co/MUUr6CeS3lKaCrmc+cf2qdzXkKPO+s45gXvM6z3uYx5SkQ5+b+9M5P
IF6Y+RJOI96N+dX14Mxx5jdzGn5S6g4Q5wynOT/B+hq8Zf8pY9LR3CcSjnN9
OOKF3G+LOHE4zfFN7ktvPQZ/J6+7n4LrhHAc+pB1IfcpZUQ/g8fQueAl139D
l2u8Zn+s/ZfOM+VzHT8Hpzm/FT5zfiv6GpzGtuPU+J743tk2l7n+sP+ulH8B
t3Fe63vmbuctwGuM3m/ed10S9DjWC9yPjnfjfuU58LqGvgzW107z5rW+hn/U
/lL32+L5hdPcF9VxE857Qs9n3mEeSiM6nP2ocJrzGZj/zGvMk87/Yj5N/VAZ
PX+7vojzUB3vZm5zvoJ5zfapcZp5Lels5rSmrx3FaXvzFRLHJM7Z5z89mtOm
513nNbZT3b3mF216WuI0Rvs/PSZOa/mk5jS27Q91HwbHlZrTeD5bnyzzmeuC
p/5Z1u/tD2U+Yp5yv8CkozHir3Bcm+PbvJ10t9Sv3nkJzmtjvQ+H2e6QX+rX
nUfHmOqIoD9g57B7jPAZdtP9RlN8lfMLnA+KXXfeov2e1rPQueAIx4ehVzlP
1H5K1/vg/O5rQP4mfGPOgfc4H58Dt1lXs67HdTt+znXdzGfoZPaTOi6N63R/
L7Zdt46/x/zmz7UOak5zvkriNY/W2bjvyEuA07g/8YOiD3N/w2voaPCY673Z
/8k2dUHYNqclfyhxbfCZ6/VOOY35ibg3ttHZHJ/L/AanEQdiv6j713teZb51
nRD0NNeDs66W+jPY35Lq+CZOsx1L8Wy2g7aP5rXGaUlXSeMqr+3NT/Drx3Da
Xfs/5/mxq/7P1bi15v9cjVvjfkxxa8kP6ni2VN+t6WruR29O43lOfbLsB/V6
Do5z/JrruZnX8AMwjxEH4rg1OI35kxE/BTob/OZt553CbY5Ddp8s9DT3VbRd
gcvgMbbxb6IX+HXHs8FnjltzPV7njRK3Zh0Mvya8Bd84vsn1I9DZHM+GLgQX
wE3wivu9w2Gus0ucGttwk/U0c4rjufhcrsOc6Hg392lwnTjrbY5r47zwI9eH
fgdPOr6M0fF05krXm2M/Ohojn8f3zXmct+B8Vccvug+t84lTvJv9pNx/jPg7
iVvj/k31PnhO3DfL/epT/Q90NXMa+jh6Gusw5yPBa64D4jg25iG2rad52/VC
3L8+1XmD15gvraeZ11J9N+clMM+3vlrmNcdBu55b0hdW80lbn4Vp3FrSWZq+
1vIQ9tYDmfLO/eCy4+PWEp81Xktjyjdo8WpJX3M8ZcoXbX7Q5A+1zpbq7/Lc
Ob7U/RPsB3X9XcetWXczr6GruX448xLrTNahzGup3gfzJPzlbfeP9uvuV8/8
zHobXiNflPnf/a8cT4OdgcvYts4Gh1l3cx8t95F0nQ/8S+QVECeObsJovcx+
T+y267za38l54DV4wZzhvlYpv8D1c+Eh9x21HxA+g9uS/xXeSXV27Y+1rgdH
Oj7N/Gg+Zdv8Bk/6+nif81H5Xtxvy3F6nM/9U503yu9pnuc+cRybdTnuL3Ma
+QVwGusH1/lAN+Z+5zmBx5xnwH73x0JvY9vxa+6rgB+U59l96d1HoelszCPW
3ewHgNe8/mSecx03+0Nb/TbXX/L62fmknt+bzpb0NduXVK/NelvjNftBU97B
al+so+q3HVX/Yxu33TWXbdfd2vcwre9hP2jS2Y7S107nuZlXYF5zXk3T2Zw3
2vqaEofA8+n+86637Tq7Xs/ZH+r4NeYb9y9lnoLXPK/BaaxX8TfAX9bZPI/C
ZeY3+Mz9FOwHZZ5PfRFsT7A/7uPjuDXzm+t94PfEfwSfYf/QLfA7wWtJH8Fv
6ToSrvOKfXafekbOZ78e/GQ/HnoW3AH/mEfs94TT4JCUF8l18Pl8rrkRLuK8
jpPD/+k8Auen8veYzxgTt/p1/k7zmXnWcXyuC8dofnV+g/vTuz4fI/5Pfn+2
uT/sH3W8GtyGH5R6uqmeB88L6x3Hp3n9k/Q2eI3nNPEaermfc/LBiV9lZF6w
Hs88k7jNulrS1+wPta7m/qbOt/d86zhi5uVU98P1ObEH2Af3pU+c5jidVmc3
5YliH81rjgdPeQVsr/ZPaJw2jVtL3JY47uXS2bbz2+x7zL+Lf8eUh9DyD5Le
Zt03rTuSXzTpbq3urnU295338+u80OQntX/U/Oa4tsRvrqvrfAPmQXQ3r2ft
r2D+NN9Zd3N+An4S5nX0NvtFXd+T+BnsDfaFET7ztuPdnH+A3kYeHf4luA2/
KHYT/SP1LUh9Ml2/y/VY0dnYb73O3GBdDN6AV+xnhKOSvgaPpfgvdCxeR8+C
19y3AB5jNB+5z7x1QPfl4vqc/8rrzh/1+dzn3nXqHG/HyPfpvAq+F34f+M15
qe5/5b5n5jvuE+4DuI36HqkPKvxGHQ/3szKXeYTfEseRl+D8UNf1wD9qHZ3n
3fXZXOfR/fNSvAXzDetMz1/Ma+7/AseRh2W/KPOn+c19TdP87P6mrtOW9LVU
Z9d+UexP4rcU3zatt2t+M6e1/IPGb013a/rb3rzRh81v0+vOfDarpzKvp7uV
01g/2C+6ldOSXzTV7XD8Gs+lOc28lup5TPMRmE+YZ1x3zfU7mLfcrwq9jfnP
eht8xrwJlzmOzXkJzMPEsbn/KOtz5n14DZ3NfUitu7kuqO2O49hcZw0/KHkG
2EH0NeokOB/UcUquo2rdxf4w1+3geDgNf5v1NvQdOA1eYXQcFvvdt8B9ROFB
x605fg1/Jedz/wL7Qb3t/lXst3/UeRDoXeZNOJTRfRgcz3eaHz50xYmuK+I+
9nxffP+uC+I6b9bZ4DfzmvMOeJ91OPe74n6F09CJnV/Afe/4AXRp62m87jof
vB+9DU7jOSVPCE6D29Db3H/Y/YmZHxzf5rxz5iGvGx3Phs5GnijznePYrLMx
f7oukut5ON7YuprzQvGHpvzQVr/DnJbyQlP+QarnkeLZzGlTP2njs9U4NvNF
0tcSh736/q35mfeFz7qulrhsym2rcWtpTPU8GH3/cV+meLZpXJv9oiluzXqa
ec3cZl2NbfdJabzmPHT0NNeNRFdznAfc5vpG1s08TzLCZfaHst99D+wPxa/i
PtX237Dt+rnE4zDaL4q+lup24A91XwP3GXJeKJzmOHHikLC3qb6WdTb7RV0n
DI6Cm9B5XMfD9SfY5n3OMzWneT985roh8BK8lfqGms/QtxznlvJVXYeX0f7g
lHdxuq8+dKNvl/U265DwoeP40NFcl5dt97uwfuY8Ue4H7hvuM+qrsU7AD4r+
y/qCdQf3u+t3mNd4Ppyv43wEXue5cv6o80TRxxnhNfQ19z1xPgJc5ni31O/K
eaLW1Vo/BPQ01811fSTmWftB3U++9T1wH1LX70h5Bt42r037WU3rr5nX7A9N
ftFpHBvb0/i15N87xv95V7y2P49gr15mHju6b6j5K8VVpj5USS9L/MX6h+fM
9dNSv4I0pnhV5oGU78n8kuqnOe+T+cv5VIxwlnU062fOAzV/uc4t3OV+oY5f
9jYj/hbnr7m+J/FnjtvBn4nugE6W+oLCT65ji13lOHjNHIY9xb66HoO5jvwD
90FynDx8hE7kuDH3RTfPERfP58AZ1uUc7wV/oTu5f9VnPfszf9KHbvgT4SWu
F96Bf9hvfync5c+Ht9xHi/en/vaux2v/qPtbUTcN/cs6Gb8bv6Pr21pHY3Q/
A+47/Oncl9bL3F/K/UGdPwNfsQ6B07xeaf5N53+yXoK7eK7RzxyXBn+hn8NZ
yb/p9V3KK0hxafAX86HzrFLfKecPWC9zHJr9Ie5bAHdhJ6ZxaamO2mpdtRaX
lvybjlOb5hE0DpvqZbO4qq19p+6av3r9jWlcWfs+E3c1XSzxd+Iv53Oaxzw2
P2bir2nfdseX8TzynCYes9+S7VR/wxzm+mjwl/sNoIM5v9N1vl2nqOUNMG8S
D+K4MvSv1C/Kef+Nw9jGXjhPwH3d0cGIy0FfQPfC/pmXbF+xq4zWLfB3Or4b
PnOfKXjN+Zxwk+PBUj0JXocr7G90PX33vbQuxnHW2xwvht50kkU+dMVhcFqK
74KjrG/Zf2n/LLzmurjmQfen53WOt1/X/Q34XuBV17GFw7kPfJ84j9N+bnM6
8f/4zdFln1z2FyB/BR2M+9kcBkc5zsxxl2wnPcz+TfgL3ZrnFv6y/gWHMbov
KPOD62G7jrbjV+2nRP+yv5IRHYy4DuZLx5elvIBUz9ZxZda9rH/BYYyuu5H8
lqneequf1voQrHLYtA5H4rDEY00Ha/pYize7Xxx2Lv3s5v6tPLeqp7W4NPsz
G88lv+Yqz7U8AddR43l0nVvXUbM/037M1K/A9TrQ1Rx/5noczF9wHDo/PMe8
l3jOo/uEpj4GjKyTXT+N9TZ6muunOf4MXiMOjW3XxcX/Yj0BHS3xHLoFdhMO
sz+z+S0ZzYWM6HWMnN95n3CC+467Tr91oJT3iC5mf6b7Izkfwedz/qj9mB/1
DHt+xYeuOAqOg+vs77SOxsjfZb2NET3NPGlugxO5HutovN/xZvAaHOd8TngM
P6bzRfgd4XTzHe/jvrIf0/2i4Dr873AdurDr3DpfwH1AOQ69mZHjzYPW1Xju
/NyyPmO9xnPOOs51cFN/KbjOdbdZLzpPgHUnPNf6gaY+UvZrmuec15n6gNq/
6f6fSVdzHBp2x2Py+zhvoPk3p/Fn5jjvbzyX8gWnPDflt4eqp7Xrn3JY4jF/
3427kr+z1d9I/QgahzlvIPVrT3XSrK+lPp5NT0v5m+ayKY8R3+o+UYzW18xj
KY+d+A1G5kP3/3ReAPOs8/CZpx1fBn8x7zPCW97v+hxwmutxYH8Y4THiqdHX
sHvoG9hFeMr1EHgd/nI9K7att/l8ji+DB9yHEk6CH+CzVL+VEc6yTpTqwjru
n8+Dj1wvF85CX/u0Z1j1Rde6muP+0bXsb7R+luLJ4C/Xz0jxbo5D43jX9U11
0OAx5+M6j9f9B9DP3DeK49iGy/Fvct+QP8z96fwV/JzES1JfxvnJjM5fhtt4
v7nNI+sd9/9EH0/+TfICWJc5nxM9DQ5z3Vs4zHkArBMdN+t6G4ysV+Ex+Asu
S/7O1o/A+lrKC3B/KOdv2q6k/M1pHY5VP2eLM1vV1xJ/repq0zizY/S0u9LZ
VvsOdP/vtC7aqt+z1bG1Xpbq2TadLOUBNC7juWpcZp0s1bP1+ivlbeLv9LwC
j9nvyTzlODT7PeE09/e0/9N6meujuY5GqlvLutp1NFiHu66GuY1t7IX9ntYJ
sD/YM+tk5ifsI9voaHCV9QzsKHFCzvO0foauluqrwWeuc2G9zPVcHadm7nA+
Ju9z3Vh0MvgF7nF8GfxFHiR8xsjxxIfBYXAenJbi/K2buR4GvMf1wW2O/3f9
XHiP78n1MuAyeCzVn019AzjefZ4Sl3G/oaMmfyfrCe5jdGDub9Yd1LV13KX1
MfjMfQp4bljn8Jzx3KGPub4Gfk+ed7iM+FPi0Fqfz1QHjfWh+0G5fga6mOdF
52daH4PLmGddR9zzstfZyf9pnSxxWYpHQx9zPdukl6U+Ueayppetclnyb5rH
mt4z5bBtXDb1K963cV6/dsprR/Fb4zbracm/2bgt5XP6eTC38TyluhrO17Te
zXaqs5F0NOaNlC/A/OT+KGwzr7lPsePXUr1bx60xn9ov4XmYedv5mszv+Dnh
N9bpcJv7Ebg+GhznerfE4WCfsGOuf2Y9zf14nEfANroa25wHewsPwm+cD95z
/238XvACeQOuJ+t8SsdXmfPgMvcHdR8BRvsx4S70KfgLHoLb2O/jrX8l/kLv
cp4Ax7MfHmPb+Zeuk+v+C/Zn8r3xfRMn6Lp0/D7Ow2Tb/k34zn5Ovx9+h+e5
z1gHkNfCfQu3md/gNh/nOmlwHTzH+3g99S8gfs310Xh+ea4dp8a6zXFqrm/L
eo/5BG5rfaEY8ReY24j3cB00r3vNcc4fwI/heDXHqzhPzPHLthPW18xrTVdL
cWutnm3yRyU/Z/Jrrupp03zNxnPnjU+7b/y2zmdb9TXGpq8xJj5LcWgpz9Px
k0lf4372/e/4M9ZBPF8pr8D5PYyOV/Bz7rpo7hfFvJH8ncxPp7/zmtOYxxxv
m+LR7A9lXcu86b5Q7i/APMx8zfxtvyf5+a5b63rn5JWZ0xyHZk5L/aCwf66r
4Tpo8BX74S+4DP3DfUCdN4rOZr+n+0TZH+n6/44j8/G8bn+meQ9O4XjXoYVv
4B/izE6/04eutpOe5nxKx5XBS667a33PeQzuI+DrdX0z+I/zmM9S3qbrZ7he
nf2ebLvPgLnM8YvENVrfdT0NuAtd2HU2uK/t14fDGK23wWeMrqdmXc3+TvI6
zWmszxKnsY5zHgGj+6+zzTzEPGVdzXXPzGfMm84rsN/T/k/mX+d5JX3N+QRT
/+e0fu00/myaV9A4bWsewV5OW9XVXsxr95XDtnPa1C+8lddS3Npqf6jkD235
oa2erfMFUt9110Hzesl9Pc1rzt9O/aJYzzEyjzDPOL8cXmO0vsa8hp6G/9Px
a+y3/8H92t3fBV3NflBzG/M88z7rc+LWnGfW+g/AbfhvUv4n9g2+wi7CbfCW
8wngNXMb7+M8+K3Ma/i7nHcAF+AHTf5P9yGHw1xvw7zmfpzJX4qO5b5SxJ0x
kuf5uuf/vvdGPQ70NdeHdV6n69HCae7z7rob7mfq1+E4x73xvfD9oV/CX3AX
3Ma2+0Q4Hs35A+znvOyH+3i/84PRZ81rT0L+p/sMsN99B5wv6tF5B67TQZyB
69fyvDLSf531mOvWMh+k+DTXqXXdRXiNeYj1JP4B62kePU+in8FxcJnr17b8
Aa+zUz0O1+VwPE3yg5rTGLFTKf+T0Xzm0bw29YMmTmu6WvKLJp1oyinn8Y/e
vb9zymtb9bTGY+k+SPmcUz2NsfVfT3mcKV+A0RzmPGxzmf2bzitI+QLmMeIu
GBuPOa+TEQ5jXer4NPs3mTfhMfwUzLvMx8zTrK+d5+W+f8S5ND6Dx6yfwWPE
2Th+BzuFfcPeMVpXg8+wkxzH67aXHu3vdFya+0XBUa7PZX+m62y437i5y/0D
nB9grnE8PvwFl6Gfue6G67/CX3CX+3y6HgbXBY/xfnQ3dDL34bQ/0/VLGPn+
4DH3t7ee6T4Bjj/jOH4//KQpfs19BByfhl7LeoGR+xLdjPuLbfIKOB5/p+up
cf8nPQ3dmefJ8QXoZ+jefm4dnwaPmc9Yt8FjrruR6s/CYawfmb+83rSfM/UP
YEz9nlwnzXFq5rGUz9n6CZjHWl+B1Hd9tR7H1L+Z9JLkB2N/i4fayl0z/999
56/t8WdH8Zj9mkkfS3m8U53MHMb96PxNxtbXyXpZqlfr585xB84jgMucv2kO
8/zA+o75xPzFPMQ8ZR6zf5N5DV2Mec91NZgvmT/dT4951noYXIYuxvwNj9kv
Yi7jdcenYS+Ih7E/M8VRY8/gKnOU+wjYX4kd9Ovu4wmHuf4t9tx9HJ23CVew
bT5DH7P/0v5N11PDr4duBdfAVWzDW/gx4TLX4ceP6fj/VP/f+Qm87rpocBjX
yWh/KNu8n7+X7wf+cp8m9Cv3QeV1x51xvDkOv6jPy/ns54TH0Ml8n/i+NI9x
v/E6uhj89f+3dy9HkiQ9koApWR6HhCVhr8PNkrCENBFz6FVp+b8qTcDcPTIy
q/Nk4vF+uANqCoUix9Y51ZvZ55nrx7lq4aXlx3Jd5vrOmn7N9AW0umZ0Zvr1
OHfOvk11GeptxWNZw49Zz8wqLmv9nPZxWs9s853MD61vwHqmeaj51Mo3nPJj
yaeNB2l4TFw21S9P/Wlfw4/drW++Ct+d9gX8719+r21fgP/f1brlKV/WcFnr
32z9ANYt3d80vqzpz1p/gHXL8OVZEzcSV6Z6pXMFgsec7xSeTN1Z9qeJk9Hp
2gcfXGb/pv4aWRPPE9+Dz4LH1KWZB4LLzB+ptyTf6HeWPGWdR5yV1XyYNc/L
/VnDm6XemTqlfvLhT6JDT15vfZpZ5dGaD61zAILHxEfBX/qRZZX/Cj+WNbcH
P4W/kg9zznnwYj6XeNG6pngs9zu3yv4Hj4OD87s7zzx4KvjKPlv1ZXm94L3g
v9zfeLicB/pr2F8iDnMfIF+mLi18mXyY8weCx7K/cU5AeGp9NILD1CfooyEe
C6+e/Z3zSlKn1J/Wvs3Etb/j+z+rc4ejN0u8bHOc1Jdlzf7YuqX+GonnEx47
5cm2/Fib22Q+3PJk1qvM140fm+qUp/qyU3y2q1d+Vd5s79d2lz/z/5lwWtaJ
NxOfedx0ZRNOaz7Obb5Am7fpmusx12fDaerLnCuQtc3XtK7pnHT5fv03Wj1T
PZk+tPJnicPWNRPHE9fFYc5Lz+3WPbN/dy5n+jbVl5mXkrdcg9uyJs/pcyA+
a3qyrMm/0ZMFHyR/t75M+y6tW6ofCy5zrlMeF/yjv5l+YvZZqhsLX5a6YVbn
lovPnBNq32g+Z/BX8KpzRIMH8/n15bVuaV9FcKx8WPBT+LLwXnlccFvwdPBZ
Xs/6qM9XXxb+LDjePmHPL+vv1tvlzXK+5nxOHdO5BM5/EqcFn2WfFD1o1tQv
c53re2Yfd/BZ9GXhz9JXZB9A9onBaVkTv5znFJzmsXHRPqrsexNXsx/WdyN4
zblP6lOiM7MvQJw29QMEp6mvEa8lj03zNcVnW5z2at+zbX3zYxx314/2/T61
T+GwhscaDst6yo+1Ps3TOmbjyezLDP4Sh3m7uCzXm3hM30L7MXO9b+ecJ64k
3rhfVF/W6pvZj8qTJS5av3ROnnyZfVrZR4vLXO3bTNwP/gpflrwRHUzqMfFx
Sn4JT5Y6pnqb4DH10eaz5DnxWPiN4C/npqsjCx5LPteHLPgkeCr5PjhAfiw4
QD/b4J/gFPGS8y+Dw/SjyKqOPq/jHIJ8H4/Fl7lfPi14TL1+3i/3W+cNXs33
z+9hnVGcZL0yv2seL+4Kvsv3kS/Tz1ZdWs6L4LGcL/adiLf0abEP2Dp8zlN1
ZMFf6b/U1znXV3CYc81zfXp962+WeOCcc/VkrY7pXKeszjW3LzNxTVzW/NCm
+efBY/rStjkB+p6Jv8Rh+mc0vqz50U79mBP+annVvCxfIg4TjzVe5uP62h53
3Ktbfl/e7Gl85jrxZFMfZsNtjbcNPrP/0vM814F+GdYzG2+W1f7MXI+tL1N/
M+uZ4rOmkxCntblOWdWdic+ar5l8WeJt9seJ08FjrtZBxGvOTW8+aOHJkldS
l9EXXX+n4DTrPsFn4jZ9o4Lvwls0P7PwY/ovJG+H11GnLw7I48Vh4o7gttwe
XBT8Ep6p6eWdkykfpk9YeCznQ6l/k7cKPsvnsh+01WGDz9TN5f2dm5k1v5v4
TJ2f+jLxlv4leT/xWfi3/O/OQY9viv7G+tIGf+U8U7/Y9GaNH9MXI32W0QNE
35/rrPnOqu/PdS1Oc/55eDLnMjkXwH2h/ZfOPZf/z+o+NHFv8j1LHbPhs8Rn
dWatDzPxv+lgWh+m+jLzVevDdE6TPFnDY63vLvl5y5c1nNb4sqf9M+7xZq/G
azNevKan2+Owhr/a/zzVLac5TtYvp3lNnvfiMPWYDX81vkwf2uYzKw6zX1u+
TL9E+43Un7W+zMS5xMHUD5pvWfBX6pXZBwePZb/s3BbjdvQo1jNTv8z+3D7M
4K/kE33L1PvrAxA8llWfM+cKBI8l/5k/U59MHSr51j5L8YH+FtbXwqvZ9yd+
cK5A8Ix9jcEz1v8aL5Vj+SznCwSP6LuWz6VvmPo5cVmbE5rPE9yW5+X1rNfm
c+R30lfW+Zk+P99T/k8eMLiu9ROoMxS3B381/aK8WNbsC6y/x2dZ/1hxV1br
keIv9Z+5boO71JXl+lffL0/W5gE0nky9v33l6mezBneJv4yfDX85H8C+ywmH
ZXWOpvhLfqz5lLm2OmWbA9B4slan3M7NbDzZxN+c4q6PcdjXq0Nu67Cv4rnE
WQ1PnfZV5nyT72r1R/Vg9hnLe+XYfUvzkbX+2Pop9bsRV4m31PNbp9RHNqs8
lz7+iXPBVYmLiZfqwlr9ofVXyYuJr6ILSx1Sf3/9xpJPXJNv5Lv0y9RXs/nL
Ot88/lGpLyW/Jp/Lh6izFw/kecFR6pdyLC8TfKXOSrykvj78lrgrjxOvWQ/N
mtvlnfL99U9TJxbcpH5fXCXPZT03n8M1v7fzD8Jfydvl9fTN8HPn+8qnBU+l
/hjcHTye+qK8Vm63X9c6o75izoMNv5X6fPYj6XuJ/7J1R/ua9aOxf9J9VfZP
iQOJD84jD65yDrl6iPBd4qvwWvqPqQtLvHP/6T7VOmTisHMxt/hq8u2f/Cym
eqOr+Gqr22967DZnqd0+6cG2/v2TDuxaHfKrrL9+vqfri6c811YPdoq/mi5/
qje2tfFduZ6aLt/+yanOmOs++6yGv3Js/VF+y/1d4pJ+Y8Ff4bUSHxv+Sv1A
/W2OG+9lnM7+2HmZ6vFTXwzuSj6JDsw5zMk78lrJV/IA6saS3+QdrPuYX/UR
tf4lzyUPEx4rOCx+CMFdWfP44I/ghqz2F+r75dwi50QGn038m3xW8Ig4M6u8
VN5P/wpxovMF7Efw91W3ZR1X/w992OSz8v75Pfwd8r+lzpzzInVF56uKu5qf
hedh+KzsE3Ie5/wP7grvq39r9jPW88VZOc4aviv4y+vW+Zbht7JPC/5Sj9/m
XdrHLY9l/PL+4DDjYPPnF3clHqv/muqL6vC3+Ct5punu1ctMfmLyW3fx1zT/
svEuV335z/DXu3ituZ4oTjzluyZ/ilN+a6u7b+eNdUNx1bbv0fni+rlMuq7g
q0nHlX1T+Oq/v98/fmHOqZzqivZDql/Ifs/9Yfofo6OIvsL6Yfan1gXku6Lj
SLwVX8l3JW4njkdvnzX8VvBV5uglj7ifTz2x9UFaV8xxdDDBWcFVyYPWf4Kr
UieS3xJnOcfIvjn75fRJCN7K/dbHrO9ltf+x4S718/JWqZeFx1H3n1X8E/zi
+4VXU88fHNZ0/faN5nP5vnkd67XyWznWR0Pf3Dwu/2d+h/wf8ljBWc0/Xx+7
4C79wKxv5zzO+e6cyejoszrHaPKHCc5quMr+mVzH6gfU2avfSnyR59JP2nm7
4qw2DylxUH6r7VsTdycfff3B7HN0vz3VDZ0/2fBV629s+Grit6Y6ojjK46s6
rqv81o7Penc9seOvhrc+/l4z7hJneSw/eRVvNfzVdFttjpH9ju4vctzqjMFf
1hfltZrPRMNd2V+1uGBdUZ5L/CXuiq7B+UapK0ZXET5LvNVwV/gu97PWH/V1
TPxOnE8eUDefvsbs15NvsgZ/ibuCr5Kv1NkHl6mzVz+TuUbhK5JX9WMVd8l/
6AuW24OrnJ8TPKfvVPCY9TP5GueFyy9ZT5PHCr5TLy7e0h/Vul3Ti6W+aV0z
a9Pn2/8pDyc/pW+/vGD7XfRhEycHH8tjqc9KfdC+DPsU7fOQzwrecm6E+vjU
4aPTSh0x/Ja+yfJZWb0+szbdVnCXfdHpvxFvhU8PHgufpe9E8Je+E63vsenl
mw9Y9ByJx/p/ZdVXwvUq7prmFbV64rau2PT05t+tfqvhrqv465k64rtw17mO
/2Mcdq6Pd534rcnXq+F0ea6Gt3Iszpr8WFtdUZ5L/VauP/FW9k/qBHKdW090
lf/Sp1Udl34TTceVuJc4KM/V8Jb6LuuNWe07D95KXVH/fOcUBW+F50ofVvCW
unn9JsRbOZb/Cq+QPGh/YnBW9NDRcenX6dzn4LEcO9cmrxf/9NSlfB3rlfqN
tnlHjccRz8gHyeuoD8/96suta+rbZR9k+iOda5TP6bwA65Z53/we+tk2vbt9
Bt6vX4RziPJ/BV9ltW6YuqA69+ZvH/yv3jDne87/8Fu5LoK34r8S3ZZ9ifpG
tPkU4rLwYdYR1Xdln5W4kDgir5W443H2f6krBm+p52p9itlvqofX/94+8fBc
1g3luRLfs7923eriT+cQtbXVDxvPNfl6tbrUhLMa3prqZq/RbT2Ft67jqal+
OPFW2/rgxGO1/z/Hni/B8Q3v5/bgpYajsspbyV/JV6mD178+OCpr8JPXs8fe
7r7L+ZD60SS+JA4FR4WXT9xyHxkeK3Ewx9mHhtfKGr4rOCs4KvgpcTb4KXE5
cTx1wsT/5AXnCWUVRzV9lvXD6FnMU+rgrRdGB5/8GfwjrtIf0/vNw1nDg+U4
fIg8ljxYcFVwhXUxdUrijvBN+lLl9YOj5N3Ul6l3Us8eHBVf1vhPRI/lvEj9
vPy8W92bPg76VjgHKfjTOd3BUcHTOS/CV4WnUt8eXC6O0mck+EndYI6tE2Z/
4XwgfR1yPeX6yvUWfGSd3vkT4q1ct+GvnLsdHJXrP3Ej+zN18dErJA7pk5p4
pe9W4przhZz3mPjofO3E36z6bwVH6a84+aAGP7me1gknH67kO+s2DUdN/peT
j/2En8RRU51w4q92uOXz9VZnPFrHVxNP9fs+zl9x7RZnTTr3VhdU5+552OqD
7g+2fJU8lfuUXH/uc+w3DF8lzsqxc171gZG3sj4oT+UcR/sNw8fnOPHPPuzE
ydwefNXqhVkTf7PP1Xc++2jnA0Vfol+QvFXwVY5TP0leUreV1xNfRWccnkEf
h+Cs4J/osoKL/sajv+ri87ysed3gqrx+XievK58lvlJfbj+efXnql+x/DM7S
58vnWZcLHpr6B8NLRXclntJfPnjIz2V/pzoxv699muIs8VlwlT4NwVWpF4fP
dN6Ux+r9cr5llT+1zp19RnBVroscB0flunE+duqCwUnWC4PHmh99jvP86LXU
ZQVfhbe2Lpj9mz4y4aWav1bTX6nD0jdLf3n17DlufYXq3BtP1fzlJ/+G5uPQ
dFmtPmg+zLrVYU11wav1wIa3Gp66hq++bh3wrE64x1vb+uDTcxlbX2Gbm93O
a/FW47P01cr11uqBbd6PdUHnZ8tnGT+Ct9TB21fY5v4krmU/qa9g8Jbxcaof
6mcYPay+WtHb6mfqvlxfh6zq4oO31GnJg8lv6a8VHiL5NDyFvllTP1lwV27P
mucFd1lXUketHj48i/VB+R5xkb4M1vf0m2r+U8Ej+pTqO6p/V/Tu6t7tIwwe
sm8gvJrzevJ58nmzqqPK7fZBytdZ/3NeT/7X8J1tnmfqgTmvnBfa5ihaF7TO
HdyVNXpFfbLEWerf7TcMn2UdMfgr9zu/y7pgrv/sw+SzrAfqn2U9ULzVfOTV
ueuPlTXxNXgrcdh43XisNg+79RPqVyqv1eqCbT721F+45bPU5Wzrgluc1fit
bf3va/Ba2/rjeb3wKr461WFtfeNdrROKr+SxXBuf5XXgfqThK30b3A+Jr4Kr
sp8KvpLPFm81Piv1QvsMo0uwXqhvjas8vvhKv4emvwq+yr43dQb1HonjyQ9/
/67/8FnBUcFXOY7OV/wVfJXHibdShzGvBV9lDV8RfBRclLwbPJT823zBxV/6
hZu/w3M1fNV4J/03g4vCz+RxeR3nQuurLq5quvroqIKnrAvm/uCu8FvqwOTV
xH/OP5TfEkc5t1qf+NRh8/tYz83/FrydNXxnzhP5qfStpi4Y3GU/a471cwuf
ZZ0w53d4rPBX4ix5quxbxE/6arU6oXO4ch3Ht0H/rPBYwVfOvU6csS6YY/Xs
8lj6B2ZtOit1F21OT+OvEt/ls8RXbb518op1QvUrrW7Y9FZb34amu5L3mPCV
OOvUF37CV18DVz3Pb23xlb/fFldd1bk3/mrSZTUeq/FX8lj2FTZde64r6/PO
rc51qz4r13lW51kHX7mqywqPJc7KPk8f+OZPKr7K2vCYPJZzrrOfTRzWF955
ieraw1MFZ1kPVJdi32FW510nX4mvsoaPiJ4mOpus1o1yHLwUXObz/mKuT9a8
TvBV03/ZzyYOETeoRw9foz+XfYrirzxPPXx4oujRw09FZ9V86FMnnObd6H/v
/EPxlvMm7XP099CHIbg2ODn4Of+r+CprzpfwU/JVbV568x+13zX17Zy/8ldZ
rRd6HDwVfiu4S19gfUzTRyhv5dzE7KfUbWY/pn49cSXxKLxVVn3erRPqBxjd
hHhK/VV4K+uFkx7LuYiNx2r1w+QT+wgbfyXOkk9odcM2L2VbN9ziqwlnNXw1
4a0znPUu//f7OKvhra1P1lX8daqHb3XD5p/V9PANd01+WuIu8Zb+KpN/Vusv
tI5o3TBr8JZzERveyv4xcS1xz/ph4mLW3J+4mWP18PYdOo9HnVbiu/qs5Ink
E/mtPC79U3l8jvUzzarfQ/KbeTJ58S/8u4Ov4nukTse5w+rq5UPyuvJfwVnO
vRZnBF81Py5X647BVeKtvL5zdoKTohuPv6m6q+Cr4K/wWs6XDm6zf098Fd5J
/ZRzwOW5/J72J6izazyW86GDs/S5sk/QuTq+jjgtvFbwVuqG8rme3+GBvS5y
/eijlesuOCy4K/sf/Ryif29+Wdlf5foPn6XeXZ8sea3mNxodROqGiXPZZzZd
lnVC97XON2z8lv7viff6NTSdVsNbyTeNF5hwlvXCrU/W1reh4a0c3/Vn2K5f
A289z3t9zOv9isP+83edfeEn3qvhsa3PQ+O95L9yPOEw647q5uW/9IXPqn9p
1lzfTcclH2adsfUp6u9gX2LimHp5+xL1sdFP0P7r7GftW8y+N3FZHy39HFLP
SJ5IfnGuSFb3+8k/2bc718e5ieG9UrdJ3ksdSJ4i+TL5NMeuwVXiLR+nHj84
TN1WcIK+pk3HFNykf0RwmnjO4zxOny7xkvp4+a3gLedKB7epy1JflvcP/kp/
p32BjQ/U5yrfL69j36f14uDq8F3B08HlqQfqi2V9MTyW50fTeeX1wsdGZ6ge
Ud28+5ac97k+5LfEYbldHBbeK/sl524Ff+X6tv9Q3adxJHxX4pBzDoO75LeC
wxLvoq9IPFSPoe974m3DX1mtW+gHLw7TF14c1ny0Jt18021NOGzqO9z6ZpnX
G+811csmXLarx311/PV6P61TfVc73uKuVodsPJh8mPhr28fYdF7iL1fx16Sn
169YXWdwV/PZyv6vzelp/n/y/ImH2ZfqFxFcpr4r8TarOvrE58RtfbSSDxL3
k0esg6hTMa+oFw4PoP5L/9PGgyWvOicl+VSezLyqL6p+XerzU3dMHcy51vrH
q8NS/6R/V/BH1rxecE0eb90v+Ci4SX/64C1xV+4P7rKvUF171nye4Ej9NHKc
3ye4UR8zcVeen7pi9HT5H3Ls/6g+Pvgra84T50GJz3Ie5PasOS/UeTmHqvWP
uB/J6n5FvlmdfR6f/VBwV/iv4K3oCKLjyvWuL0zwl3N4mk4++EufLH0e9Cc1
Lsp/WW8Uf2VtfYpNP998S099tbK2uqN6rpb3rDO2PNp085P/w9SPeJUPO8Ut
3wVfTTjrFG9t643i51ZnFJc3nsvzTH5rqjs2vVebU61PvNeZOvrmv+XaeHB1
XokjTdeV+ONcHvsUW99iw11ND2a/Ypvfk/1x9LcNZ2W1ryr7bfGW+SH7/ezz
wwOoP1ZH77xqfZH0lZQPk99Qv5M8Gz4rvEnqluG39NkKXgqPJf8TXBKcEVyk
D728kH6q1vX0fxBfpR8x+El/VNfgKuud+pDFtzV8k7dnDb7Kcb5PqyPaJ5rf
PXg3OFmfrPyP4m7xlX6k1hWdb5jzIs/L64Xfynkprsoqr5X9hrxWVvcfXmf2
If6v/98/HJ189kn2H9t/GFyVNfVFfd9z7DzD5veQfWN4rcn3wf4k8ZT8lvvf
xO3ms6Wuq+nmJ1ylfl581fis1pc41Rdfha9OcdX3xFl7f62Jr9v9Hp3X2uq9
5LOu8lryp+08bPjL89o6YpvTo67LuqJ+8VndJ4m/Gp+lDlR/iMSfrOq6Eq8S
x+S1EufsZ9RP3rpj8FbiqvquxGXnIUaXm31y9s36cbW+qeAs6x45Tv6wriLO
Cv5KXnOej/7x6u5zf/KlenzxV/Jw8ro8ivN+go/ET+Gz1HWJy8RZ8ljBJTkO
jtMHQr8J/dT1+dLvSr9UP1fwUL53cJQ+ZDm2nzCPl/fK66VeKN4KzkpdN/jX
flV5LeuKjb9Uz+XcnfBWOa9ynPOqzTsMPxu+Vv1W89/K2ny2cn0FZ+mvZd0w
17lzpO1rTrwQZyW+GI+sI6rfSpxr/Yj6PlhH1Gfa+Gt8dh7PNF96wl3mFeuJ
zc9062vadPOTv/hTeGvyf2h47HNw1vt8uiZea8tz3a0vTjzXtq9RPdcWd3l+
T7ir6enFXfJc+nO1umLDX/pHqN8SfyVO6Ssfft66onNdxWH6ETrXJ2vz47KO
GB1X4ntwmPxX7s8qHgtOy+P1TbWvMat+qNHV6zef/Gf/vn7f8mTiMX0CxFvB
AeG3go/Ui6uzUs+V1Tpa8EdeT3yjf7xzEFsdUb+v4Kv0I+qPlfpgvp9+ZsFH
OdY/NnyWfKB4VV/a3J/n2W9qP+JUJw5P1eqNDa+Jx8Tn+nIFdwVvBV85b9p+
Ev0igq+aD0SO9YHIfil1Q+edWi/Uvy94KzgrcUReS38t64fO2wn+muZv6CMv
7lK/Jb/V/CJOea7Wv9j0W/pENJ7LvDf1KW59t5p+fsJfV3muq/W59+CpLZ67
7hsx8V0f49uZ52p4q9UZXU919K6tf7Hp5sVdXnf6tzS+a6o3tvqi83ycZ+8c
avt/pjmu4q0cJ15mTXxNvLWumHpi8+XKGr4rcV78lftdg7fkubKPT95xHlDW
8FrqlJtfl/gqehp9KoOvgrvURaeu2PxUrfM5bzF8lnr3xvMEpwR35H2Ct9TX
688groofgz4N9g+q61ePFjwUfKS/WVbrh+G38njxap6X19V/Nn2iwVF/0ecQ
XBTcFP5LfBVclufncfl/5c+sI+oPkfMo+F9fFP1P7Cuxzt508Nm35PrJ9Za+
llynuW7tSwzOaj6miQvuz8Jzqdea+hTbPGnncKjXyirecu6hOnnjcOJ1m9+T
/bb78BxbV9SXazsPseGt1q+4rR+ezuvZ4qwt3trhrq1+6vPw0/S5n+avsoqH
s0681VYH3/gr8ZS4yjmJ8lYTf6VOK9eZeknxlf4Q+nM536f5nepvqv+WvJX6
rAlnBUfJ91svdF6i8xDtHxdPZQ2v5fza3G/8d56ivo3JN+IpeaschzfI7Vnl
q5r/d1bntSSf6mcaPKCeu+mvgnuCt7KKN4Kb9LlvdbbwSXmfxmMFN+X+PF7/
dVfrfs5hDp8XnJP7gwfFgfZr6sef47y+fJU8U8NT6uucL9Bw1F/ovawXWid0
7mH8HqwLBkc591Be1+sh/K/7kBwHR2317cFR+vOpL7A+KH6St5K/Co5yvxje
Xp4q8VE/HeuEWVv9oPlB2H+49Y2Xr3L/Ll/VdO8TfjJfTrhpy1f9nge572P6
MZ7a8kBfr++w4ay7dcIJb1kfbPr4CW9NPqcNZ011Q3Xx4iz9t3JdNbzV9Fri
Lv3z3DdN8xSzb2u8lf3RrupOc2w9Ud1W4qn9h8FdwVvhr4K3nEMt7spx8Jb7
6OAv64dtzqL9iearNr86q/5cyYO53fvzOuq6ktf1ywyucP60OqrgleCq3C++
si4mvrK+pr+XuilxX/BWVvXzbc6N76+fVXCQvmb5fcI7ye/pB5vvpU+pvv15
3+Af+Sl5Kv0acr/4THylv0PwWs4PfbVy/sTPV57q73jyD09lv606Ruvr8sH6
wmdfk+tTHZbzo/XnE2d57LzD5hfv/B31WYl36uC3/qbqX8NfbfVZ8lWJ/62v
sOGtNudky1Nt64KTn0PDXfJUV/mrLd7a1tc+5pe+Dt6a1i3e2uKwCR9v9VlP
+T14/l7lufQ9nfRabW3zfoK79OESbxlv5LmMV86n1i/Qfh/5MH0h9MvR9yH7
4MTt7Jezf05cz2pdMbc3X0XritmnJ89YNwzPpe+pc6ydRxdclnqN+ExeIsep
+9jHrz9qcEZwReOfgqvs1xM/iVPUNzmHSD97+/msR+rflfvzOcWPwUf5nPl8
4pvgIOuo+bz5nE0/L85SB6+fRv6P1HGjb2/zpNvtwVnqvFofo36m4vfwWurg
c/6mDmgfbs539e1Zg8dy3bivyfWlT3z0WOIu+S1xVvZjwWPhuXK/uqw2b1qd
aeKbutTm76C/1sRztb4lfU63vlrirtZvOPUdyis03cxUJ9zirS3f9e/sQ3wd
HjvDpx2XnerjW71x8oXwvJt86FvdsfFfEw7Tf0tcpm6y1SPVc8l764eqbku9
vLqGHIvPnD/m3Iy/f5//94tfvfot/ejDf0Uv33zog7uyBq85Fyj3hzeTH8va
6o7JV/rW2+cVfGW/vfgseTKPl/8KbnMOdvJx1uAC51eLI6yjtfmN+kY1vkdc
k8fldcV7+oI6P3viuewDVOf0F3W64Jh8LuuJ6r6s0/r76VuqHksfh9aHaD2y
1RWtU+b2vL7ze3Ietbpi01/lvA7P69zppssKzyX/nOvMeahZcz2rg9c/Xj2W
uMw+xclfvvlAtDnUwWX6QzefU/XxDX9N86n1mbcPsfk+nNYXp7riVT/Tp3HY
tp72DB77Kviq37+ts06/09W64inf1XTyU71xqi9OfvJZxVniq8Z/OXex+XLl
Om/1xezj1HPJdyUuBVclPom75LsS5/SLSDxsvluJv86vDu+VuqN4y/4m8Zb+
EdYb7UdMnkkdJrqXhq/sUwzPYP1R/wj9uqKr148reVr8kPzvnGrxifhJP1R9
C9Rl+3hfN+8nnrGOZ73SfsGG9yZ8Jb+V3yfvm7XxW1nFn/JneT/9GsRXwV3q
t5puXn5L//ngKvsv9CXN+nd8+rV/UN7KeYfW3bMGV3n95PrKddf8HPQl9XrX
j89Vnsv5Pe7ncqwePvEr+0fnybY6Y/MvVa8lrsq+V15LfUnWU/2W9UR5rqv1
xNO6YsvPT+Grj2//rn2H1/X0E791VefV+K0Jf3k84S71XlNfYuO32lyfVm8U
f7U+RX2Fm84+x9t5P80HImviknrT4LLEL3GY+Mt42HxPnetjnVFfiOAv9V/e
Lv8V/OX83NRNrC8Gd4UnSJ3GvsTgsByLr3LsPEd9JMJzWWcM3nCedfK1eEjd
U3BL41eCV8QJf6EzyutMunU/h/jH/sEJB8rzWKfz8zVcGFylb6l81lTvs77o
3ENxl3p6641Z8/i8fuqW0XEFd4UHdQ6P9UN9GnJ+N/4quEy9Vq6b8MOpH+a6
k7/K6hye8FLBW+Ivea42l0JdV+JM9nn2ISZOub8UZ2U/2ubUWldUx+W69XlQ
z5X80foMxVvNT6vxB1uf+MlP6yqvdU/PddVna+KP3o23zvmwu3hrW0fMccPd
k55+0te3uqLn8+Qz33BWVq8zdfaN9/r7c/zfX65n/SHEXQ1vNf+t4K3Ep4bL
5LsS58KTJQ7av2gdMau4K/vn9DXmdusV1h1zbD0xOCtr+C519PoPNf8t5821
x9n3mNuDt4LPUidyvp68iLxX8IX4RbwgLtCXQHzjKk7L+6tfz+fJcdbgxda3
55yi5qeQ7y8vls+hvk19mH0BeR117fkczl9yzrTzd9Tj6eOR2/N6WfN8dfLq
Bz3/9HvPvkFdvHVD8VXq6/qT5jrSF77p5FMvDN5q8+zFZbnfvkX7F+W1sjqn
R5zlnMSsbT5PqyO2+TxNv3W3bmg9peEtcZV8V5uHaJ/i0zzX0z5bZ7jru+Cr
2UdrwqNTP2Ljr8RPE54SR036rAlXWQ+fdFne7nzRNm9UHks8pR+E9cKpbih/
ntU+HnGV/JW6LP21nEstj2V8DX5SPy/Oympdsc2x1mcr+/usyUvO61Fv7Lzr
4K7wXXle7pfnUpelb6n8iHyHPFaOxR3OhwkP4hxj++jEVfJawS3yRPk8zmHO
5/P11ZE3PZM4R3yW9xdH6R+v/7u+o22+s/N29HOPfj3/n98nrysvlTXnQfBS
zpPm6x5+1fNX/KRvQ+7Xv8E+En3e5Y+tD4qfnB8dnJTbc73Lb7U5h/r0Jc7Y
r5N9XKsPqoMXL3msb5Y4yjph46kaX5X99eSLJZ5KHmp6rFYvbHXDCT/l9qke
mPsnX6cz3mr2n/pe+Ol+PXDCT1d9HTye9FieV+Ip5/LkvPX89fxuOKr5a1l3
b/On1V81PkoeSj945/A4d0K9Z1uDoxK37ENs8xDVU+RYf0LncIinEsetFzY+
Kvvs5A/nJSYPZV+vr0ObV6JvtnN41cdHl5V8GTyV/Jp8nOPkZetQ8iLN99L8
bh73/XK7eifxRnCOeMY+SHkdcYn4RH3TX0VnFRwXPGSfYvTz6v3DQ4k7xany
Rc6hbP9XjvM9nHOZx+m7lvNAXZ++V+qmgo/ETeFbPd9zrC+DfqLNFys4yuuu
zc8JXpKP8np3PpdzUxuOcs5O4tHk42A81LfBOdGJq/JP+ru3Ol/rHzQvNJ1V
8xudcFTDT5MOaztfZ8JVV+t/H/M07+4nvO/DsK3b3dWlT7hoi49a/S7nXZuT
03TpUx+g10fDRVmbTso6nde5PgzZX+mzp5+7+ih1UvYDBhfpf6XfctbgosRD
dRP2CyX+hn9KXFYvpU+p/qPpZ0rdQjyUfOScXPGP/VVZ8zj5pfBS6qOSL9Nf
7/zCrOZfdezOTbGPUH9KHy8+ERdZr8vadFjiOXGQuE1cEZyi34I+6vYN6i+q
Xj+fO/hIXOnv65zvrPkd/Z/0p9LPP8fOCQwvGTxtn17wjX15WfWlsv9CPKRv
QnCQ/R7iouarIM/kPkc9lGvigHOfg4f0OVYPFV781F+hzXeWT9J/UJ9C47X9
R8Z784R4qM0ZtD5nna7lNfPe5LdwiovM31ue6TV1uc/il+77sU+/w4STJryU
dcsjTbqnxiNZj2t1OfG/68QvySs1//Zcl/qzq2dyTVxwvmDjl/SzUt+kf4Jz
n/VJcN6NOtHWxyN+Sr0ucVn+KKv9fOKm7LudJ9hwU3BQ8JF+oh7n8fYDBj+F
J4huxXk5zi1Jnk3+zZrHOdcwrxc8lmN9vIO/8r7qqqz/5VgfJ3VJTR8tLhM/
iVus/+mTZT9g84PI8/XxVM+dz+M8SH93f1d1aeqU8v+oU3KuX/B0zjP5InFQ
eCH3A22uU+4PbtKHN9dLVq8r9ePqmqzPiZ9yHQcXOT9QvCQ+yhoeKfs041Gb
09x0TPbnWX9Tt5Q4rI+N+qVWf2s6jcYj3cVLjU/a1uVOeaSGixqPdE/PdOpD
8L662ymOuluXazj2lIfyPLiqc5r0Te28t89CnwSPmz9C45uaPjyrOqfWZ2Ld
LvszcVX4JvXhzsPRB8H5FE3n5H4za+OlEp+DrxLvkweyj7YvTxxlPc4+J/0R
1eGmrmd9r80fDI5KfS71GOfmJO/q265fqD4L+i04n1AcljW4QT1z45/0D1dH
pU5afkn8oi48+E09enCTuu/mq2DfX943n0s+yd9Fn9aGf8XB9l3az5nzIXhb
/jLnaXilVndrur08r/FOzT9X3kk8Zf+GeMp5y60Ol9Xrv/lJ2X8njtJPKnEs
qz6eOU681D+qzaURR23xkzhqO185a/OjnnwPGm6a6nAtv57ip1ZvajjqXr3t
XfhpX587xU3+TlvcNPFQ2zrepBO3707clPM1a6vb6W9gPa/xULnuvA5znTbc
1OZSyUM1HGX/nX6eiUPRWWbVb0rcJO/kvBrnTxg3c7s+68ZnfQ/0W09+yD49
+aXpmbLa/23+aqvzavVHiK+BPtfqxcNT6MOe27PqA+rr+nzxWfBS8r76cPVJ
9vsFj6iXyipusv4oH/QXfXfBSeqXsjq3Tx8o5xTLhzmnUZya31Uc1HBUfnf9
K3IcHjL4KOdLm2NsHS7nYXCTvJTndV7HeZn20eW6abhJ3wLrdfJP1uey/4mu
qdXn9C0QL03zZ6Y5f8ZB+abolVp9Tr4pdYJWl2u8U8NNV+ckb32jJv1Sw0cT
bvrPx/2Kjz4HN30dnPRxfU4c1fHl1Tpde9xdnNTON3GRq7hIXsl6Xeujsy5n
fc55fs1vs831TFwwTlivc1/W/AeCj1p9TrxkP4y6hcTHho/sW058Tty2Ltf0
3s6Tsa8oecjHqyfx9sZTZXW+WnQtLZ/qZ5D8msfpa5A176PPuvjI+px9Yfa3
qd92vkrwVvCH+qDcr566zceTH2p+oM3HSl25eiPrbcGd/m7Bl23N/5Dn5/8N
LpY/0p9JPKTvfvijxhvJQ8l3Wp/LviF8UtbouMMbOffY/UmuP+vnrR9OPjnX
uXOo9CcPLgq/nXjkPi7xK7xR64PLmvio7kEfAX2PG590io8an+T++1TX3fCR
ebDxSdPaeKVTXLStX+1wyl28M93+Or9L8ZC4puGdCS81HDTpl1qdTZw+6bwb
b2S9rflgNt+AiTea8JB9HPJG6piy72r+mPJEWfVLUW9gH4t1OfXgrc4mDgpf
lLiuTsm+n+QHdR7JR8k/8kwNT1m/S55L/tNnIPqU4JbgGO9v/gR5vHlXv4Lg
LefHqPO2b6711QW/2G/v/BFxVupV9t1Zz3O1TiY+s08/nyffL7jP+b/+PvJ4
zc80q/hTPij/mzq35vvt+en5J06Xv2y4KOetPgG5TsIT2c8mzsl1pz4pq3ok
+1zFQbnem7+SdXx947K2Opq6AnVJzoe3jy3x1n1p9qtZt7qkyUfculrDQad4
6Go/21X803iQa3qkr8IP3eeVruqRtrip8UkTb+TxhJMaXsrxVp90ip/kk3Kd
NfykX4B8ktd99kHyS/JJ+gtkzT4s66TvTr1NnCSOcn+YY+cZJ54650XclHid
+B7cpN7CuS3JR1nb7clX+l/qg2n+ct6Y+iTxT3Tl+g+0/jz1476uPuXBCfpl
2tclbtKXQBwV3KO/dXt99dPyVsE/+m7LD6kzsr6nPjt4UT4oeMm+xay5X//I
ps/O/5n/xz4AeaPGQ4rns4rLcyzuD+7K6+sDnusj+4rmA9B02rnucj06f0mf
78Yb537nm9v/H95IXxN9v5vvpLxR4p/x0jiaOCtOajpS8dI0d2XyWUqecd9u
Xpr0SJOeu+XRlnc/1sfs59Z9D7y055G2+Kjhn2lt/8NV/qjpjFr9djsnuPl8
T3W2hoNy3QUP6ZvUeKQJF6lLbH6V4ZESd8RDiVOJW9EDJJ7l2H2ha/CQfkv6
CKjvTJzWL6DxSM41ze3xidE3xtV59PJKbQ5e+KPgmKz6C4h7gm/y+OTV5s8k
HgoOSt63T73V0VLPCu6Z+uTVg9sHlvcRB7nqF6CvkbjH12s8kfMGxS36YomL
5OO83X5GfY5Sz7K/X57Hepp8prip4aHgeHmo5s+tr2SuJ+vW6q7VD8kTuZ+x
rp7jNsfXfn/71sJv28emvrL5b8sXNf6o4R/1Rs2fW11R0xfpL2l+cT8+4aBJ
j22enPiiu3Wza3qiz8JHk3/lvn/tKj809QlOPNFWT3Tql+R519YtP9RwkPNN
1BfJC9m/lutVfNR4oaytv22a92sdTX5IHwDxkDpK+SDnz2VVx6mfZJvzqw7b
/mb726I79XniqazNry84KHhHPXbyZ/KljzOfBv/IH+X25PXk5+iB5YHUW7e5
wcEd+ktaDwvuaX11uV3foAlf2UefY/0O1EdbB2u+6vqBer/1zfa85guRfkV1
aJ4v1ruabqjV0Rof5NxdcVCuD3VE+kGqk87q/JHm+5jrWZ2Qc0iCe4KD1FGr
E9LvqPme2Iemrto4mtW6mfohbz+tn7k2vWrTEzUc1PRDLT82HmGqn0146Jm6
2bv9Ic/70Sbc0363Uz5owkHNv6HxQA3/tLrYxA81/LPVEzVdkXVtcVHWxge1
/n55IPs32ny3xCtxUPihdru+29bNmp4oOEhdp/vY4KHgGNfE/+Ad5/EGR+X+
5A3xT/ig5CPxT/BLy5Nt/ql9Sfoqqde2nhMexH4zeSB9lnJ78JA8iz5MwR3O
E7Y/S5wkT6QOKas+TXl+wz/qz60jZvX+rMFB4qjgHnkf/RytWzV8Yz9Z1vBG
6ovsI3O1/yx1W/2wg/dzfsujhl+1ztX6Rb1O1UkH91jvSlxI/Gi+14k/+t4G
/zTf66zGvakP33lsTTck/5PVvhl9ICc9tXlkO2fk1M/oKv8z9eM/qxt6tw/k
9TpZ44tOdUPbellbt/xQ6zPb4iLx0YTnpzlu1se8DuWHcmzfg/hIvsi4IG9s
fNF3W35Iv0h1RFmDn4yH1tMSP4OP7NN3/kDid/CR/S72y+i/Yh9Nbs9xcJNz
PrO/Tp0s+Sf7cfNY8pv91s4ftf9fvZG6XOtlLZ8HL+jPo65Hnib3B5cEh6if
sT8ruMTHhafK44KTGs8j3mlzX9X7iHcmHk6eTd/Ohoeaz7Xz0vRz8DwJrs7t
eV7jj1o9TR11+CDxUM5jeaBcP+p/1EXbR2q/hPxurmv1P4kXiQ+tb0wdkPV8
/a+t/xvnmp56wkPiojYX6rQu1vrKgotOdUFbHNR4hVaHmfigrS7oGX7o3brp
iU/653NOOOgpXDTxRI3/m/rvrZuJzyfeyPO59enLFzlXRL5o6s+XT5I3si5u
f1pW+/KNS23ebZu3LZ/k7YmPWcMntXlt6ojUc7a+GOdCuT9ua3BT8FHW6IvU
Iekbk7xlP3Tymr5I4qas8kk5zpq8bj0n/E3whHxRcEird+mXJB4J/rK+5Hzf
rOI1cVt4rcY/5fnqfsQ14qHUreSLxEF5vaZfz++ax/v6+oCq9wk+tu9RXNT8
HppPUZ4fHCReDw6yjqw+KNePPJHXnzog5wj9/Tv+s88RByUeJA60uWiJO85F
s26mTsg6mfFOnWXiY5s7m2P7y+T5W52szQ3ZzlFrPthbv6EtLmr451QvNOGh
xqPs8M9n46PrfkSnuiFxUMNFU72s1c3EO61/rM0Labo1+c2mm3Z/0HBPjtt1
GFzT8FDutx4u/mn+RPqauV9r+CfxTNyTY3mjHIcXStyc5tU6D9x9bPNDsb5m
/5l8kXWz5JHUH6JHbbjH/vx2v/pX+QR5I+s99qOFJwl+aD7a+g+Kl8Q36mby
fuqIfV4+T9bgGX0m1TWrXw6u0Qc6v4d+m+qs5Ifyevkd5X1crU/K21kf8/8M
vrEvUV6n6aVzLH5S3x98PumBrIvlunL+oX2d9jkE/1gPV/fT6mCTr6J4p/nM
Og9NfaS+i+HN5YPkheSB5POti8n/tH5688a2r36qi4lzxD8T7tnim6vr9+R7
9nWxV+GeU710zodJRybvs+V75Hkm3OP1If5puiF52XZ7822c9ELZN01+1VnV
DbV1wkHqhhJH9R+yf17dkPG73W+/mfNq9eNVL2Q9TJ2Q+3LrFj6u+Rc1/2zr
YI2f0Kdaf2txUPBIcIZ5X12w75vH6bfdfH30cZZXkcdRb5Xj8C3yY869sw/P
1fm/k2+iOug2z1VcHLwc3KPPovM3cqz+Oedf8I78jn6JOc/tb3c/0XRAOW7z
ytT9NLxj/1fwTpvbqB6ozSdqfrP6Kbb+Ev0UxT3G5y3ukd8xX2x1QFmnPjD3
/00HdMrr3MU5O97n3TzP87hpWxe8i5O2PNGEkyZ/xmmubMPvnvetn0x+yOvL
67Ct1s0m3XX2P/aVTT5DzadRvkheO48Lb5S4GdyU46zhz4OT1A85fzZxPLgn
q7pr+331JxIvWT9TXy0/pC+Rvi7mSfkB6xr26esrk3xsncy5t62/Xp5GXY9+
OU237apvgJ8jrzf1rbf+rBwHl4gbrSfKp6lP18dJ3Cd+Ck7K7y2fZx1rwkFN
b6a/lf5X1mMbH2Q9OOe7c8b0R9Qf3vpXm0OWtc0hEydlTZwQB+kT1PwVPRYf
WQ9rOCnx0TgqL9Tw0TTPrNW/kjdOeaCmk976LG7rYk/3i33MD836m6+1nvNE
0+93iocm3Verk53iIPVCE280+Yuqn/a4zQ2ceKTtnA/5oi0eavyRx9s5aOoF
wheFZxcPZZ3mfRjf1RW5Lw4OSh3N+R/2nQUH6d9oXpM3MC8mn+XY+5P3kh/l
mdQJiRvkjYJ37LdqemP71+SpGg6zHuXtjZ/JKt7Qp9C5Fm0OrzpmX886o3Uz
fwd163kf61nNV7rhIHGO59Pf1/8/erTwlM5r1R9Rfij7AnGQ/V/BOw33hBdK
Xfu0LibfbL+88ca6WJvLKO6xT6TN32h6y8lvWj3QNJ9MnmjrL914oQkPyQO0
PDnVyZ6qm+1w0HfTTd/vr9/iotM+e/HPKT+09R1q/kOnvJD9lV5n4iH9qZ13
Jt/rdd5wkHjI+nuLT/aZtdV9oH1nWfUnEg+pH3Ifq67TOWjipObfaL1M3ZD9
9fr5un931ffOuWryS9bT1FHbF6VORpzT/BytM7U+uFaXEjeIl/L5nF+h/kZe
p+lyxD/qldv7+70nHNZ4IPkc/cjzf4e3yXHjd5yfIe5JH1jwec5L9W/2w1sf
8/rImjpY24cE79gPaj+YOMh9UdMHNfzT5myoi87t+iiKgxr+aXWyVh/b1sna
XNZJB33KB5n3Jr5g6ksyP9/FP/dw0Lv0QR333Ksjdlx5qhO6WwcT93g+NtyT
83nylW54p+mH2lzXqe8+17O8rzrprPrPi3eMP22umX4fiWvqixIv9ae2j775
LjafWvWbOU6cF+8kH2SfnPxhv72+i+axplN1X588pp+jfJJzOfUjTv4WF9jH
rS+Rehd5kry+fJO+yOINfZTU74hb7KvK8+0b93b70rPqY9i+v/yT/WTqgPJ5
29ww/3//35wv9hWKY/I4+9v1u9IHSJ2z/oZtX9D4nvA7rd418T0N18gPqw+a
fILkf6Y59I3vce6q+0R5duNwi+NXcU5W99nbeteEd8yLH+Oa/+a445zfH5/y
H18F5+z5nadwzYRzGq/zn/9T7//b8jquTacWnNN8HsQ9jQ9t+wbryOKbXI/q
ou0bE+e0vrA2p1W9tMfiHXkd/YUSH/VVNJ7qO62/Yo7FQ+o2rY8F7yQ/RA9h
X5h+QeqixTXJV+Ih512a/5Lf8njrXy3vJ5/nWHxhXcZ+JfuUrK+p6xbvBA8F
H4kzxB/qdawXZW3zca0rWddqvJJ6HutYra7n91SvJX7Vnzn/t//v5OMZPBOc
LX8TfKPeP+e157vXgXP9nOclzyq+aXyOdazmpzH1e7U6lnUu+91d1fWIb9o8
sMbntD72Se886Z4nPmeLc1reazjn9/l1719zFefs8M73wzcN77TfcfIdaHi1
rVf5nKme1fwQc75P8zE8brfL46hvnvx+xDnND9H9kX1hbbVu1frE2txVj427
ztvwccFB9uG6n9XXLfqd5I3ml5i8lTwkPsnt+ic6j1JdUPKZedA61jTnXhwi
L5NVnW2bDyuflNeTV2n6meCZPM/nOx9UHa+fM8fyW/JD1tPs22r6nKziLHGN
8ybkceRhxC05j3KeiGfiy6AeWTyjPq358bgfsD8910273vQ1dX6X/I3zuxpv
0+abtnpVVnGNeh31y60+ZZ2q8efNp8c4L2+j7rPpdRq+OfV7nvTLLY9+rJe9
7vt8evy18M1/jZ/7FL9Nv+fdulWrY7V61sTrtP6uCe9Yx5rmxjc81Pgc61bq
8rKfaXNUm35Hvkf/MHFQ0+8k/tn3nnWqY4lzPFY/IP+uLqH1wVu/im5HXsc5
Y/rGmefUlWb19dRn2Ndlv7N9Xq2/Oq+jjsQ+IOsxOZa30Z86a3CE/VVZwyNZ
F7Me1Pqe9BNoOiL1O60epf4nr+f75fNYl5Kn83+3/y+366Og3jj4O+dn60fU
B8J6VXB/roPgnlwf9l/J5+hL2OZ1ydvq3yPeaX3r4h5xTvPvaXPdsyYu2uex
7Vdv/E3jbRL31XOKcya8c6pXvopz7vZrfZzXT+dcvIu3eUqP/Cuu2darJnxz
yu9cxTnWqzyvt/4++jrn9uaHrh45q/uT5meY6118I54J3sn91rGMO+Kcpstp
OMf9oqt9W+12+R3jevicVrdyHy0ucT52O07+Cu4JXsrr2/+uLiN5s+l77Ouy
L8zb7etxfpm6IOeYWbeSn8nt4gh1NOpbcizekl+yftb0Sr6ffFPT9Ygb1Yu3
uqT4Nv9n/kd9dPQPDK6WTwye0b9KHGNd1jqUvKZ4Rx7UfUXDN1lTf574nKzN
f9B9k3HGenrDM+pwrE9N/ebb+RNbHsd9cI4bXrlbpzL/bXHNlIfv6Wu+iu74
19efvsddHNN+363+ZtKVNxzTzqfWbyU+3/oUtvldub/xNupx9AVt896tU+nT
LF8jb+Nx87PQJ7759ATHJA66/2tzvoyrbY7FxNNkHyuecR58cId8TdtnJ0+p
29HHRx7IeoV1r6br8PbGI7R6iXlZ3bQ8jfUw52iG9xDnNL8h9T72nzX9UW73
fawrNT9HcZR6I3/npvvV98/6Y/O7aXOw5GHsA9f/RhxjH7h8jHph7/dYHbH8
aniahlvU17Q+BXV+be668Ug+Rvwijmn94ts6VNMPi2MafjmtO014ptUlzHtP
45fX4Jr31aG2eGbCOVs8M+ltrvaRu251NtZPxTETfp/6yK1Heb15XQbH6Bc4
6W7cz3h78I56nKY7FsdYZ7dfvM2jsJ4vrhH3tP5y9ZP2jWT/a5+4+2XndIlL
nHua57XXaXMsrGc1HU/Lq+p8rIOoa80qHgof4pxL52Kom8njxC3NN6it+sbo
pyiu8nOqk2l1JOtu+u4FnzifQRwr/9J8jINXct41nUzOU+tH4hZ1M813U5zT
5qJbv9Un3XqSeEX+pc2DSLzQn8L5oE0/k/jU+rwn/GJ/xl38MuloTutH276o
CcdcrTPd1dN8Lbyy1wtv8cwWxzRcM+GWp/vDPd9aXWnyv9n64eR6an3j1pfE
NY2XaTqaCcdk3frkyBsnflln0vfGuaLilIZ35GWMx4nbU31JH0BXfQHbPEXX
PF9845yu4Bjxhv0y1jGsg9mvrn4jz3feV/CLfczWeawniWsa/9J8Ddv7ystk
9XVzHPzSdM/qhuSpxIX5/cSd+f+CX5y/1nQvuV1c03BLVvv/5Fsar9L4GG9X
L2P9SPyiT9+EX1rdqM3ttK7tGhwjfhG3NPxi3FQfY/y1zymr+1jXxrds60ct
L21xy2fxMd+Lf+l64Kv4Zff77HHMFt+c8jNX5z24imdaHUqc03TD1nO9Xtvc
h+CbrOpoPG78TesPt0+qzeNrfd/6vquncX/o46xT2UelXkAfwObvJy6xD8X5
W+Ik18b7BN+IS5JH5QeCR5JX5XnyevZxWddqfivqVpoOufEh4o3gl1Yfa351
WYNzmi7I+pO+Qj6/9av5e1knVE+VY/GtPIz6c/Uw0zzN4BB5FnFJ69f2fvFN
8L99hU0X47wq/a7si2z1o8QL60dtLmebSz7pfI2T2z7UU1zTfEC2Ot+2j251
JfHNts70FJ7Z4ZtJf/uc/uUUrzT8MvFPDbdM+PFuHcn/udUjW13J83SqLzU+
JuvU12Qdd/Lhc21zquRpTn37tjil+a57e5trFZyS+Jlj8Urzs2n6GHGL+2Fx
h3Mf2pwH+6Ncm+7T+oR8i8+Tz9G/xPxr37h+x80fedLd2ifVdDr6z6mfbb6E
za936iuStxLn6e8iHg2uFL+qCxe3OidNX7zmG6kPXuNZmt7F+lB7HfXybc6m
vEvTtWx1utnfyKu4PzIeue+a+o+Ml+733AdO+KT5A7t/Pe1H2vIw5ivxicdP
9Sk1PuIaPng37/Jc/ei0jtRwy8Sjtf+58So5bvxfwysTbpFXaX1K07zNaS55
qyfpHyV+SdzI2nS/6l/007MPe8It09wp/dfVA6d+ZL+FeoDWjyquEd9kbXOr
xC3ut60jiSvsX7Iu0fb59rWIb5Kn1dkkz4tP5DOs+7T5V3m91oeuj2BW62PW
c6b+5oZL1F3ndxaHyIO0/826oP3Q+d+d8youbvhEP4HWF+3t0zxL+ZTgEuuz
4S1z3Xkd5/re4pLWFy1eSZxp+r0Wz5r/qHFyq3MRr2xxSuNTTnUtV3HKe3S6
78Yfr9O5bOtB2zrRFq/k9lOd7la363kr73JaB/K49VNnX+H16+3TXHDxivWh
7HvUzekbo67FvqPmG+P+LTxzbre+rr9e8Ip91a3un3Wa39fqSMkz4hZ998xj
4g5xiXUF9Z7qKHK/ryvvYr3JPl/7hO1n1te29TPpd9PmYen/Zt+5fjzqZuWJ
9PsXz/n7qJOVJ2uruKXNy1YP3nS3bV6keGSLP1wnX7vUW3P96McrPlG3Ii5x
FacEl+jn0PqFtr51bR834ZOsxmFxSuK58b6tW7wy4ZMJt0z6zqs45Sy/v1uv
8hw+uYpXtnWf9rhT3e1WryKfssUnkx63zWtSf2v9R17Feq045RSXtPkF1qfb
/qvNVwke0RemzWtRr5L9oDpceW55lYZjGk6RjxGXtLnerU/JPln39/bJtn28
eEYfPvu15VHUkViXsb4i7rC/xnqTehl1OfZT2W+c1e+T46aDlv9Q99p02E23
1J7f6obi2OCS5kek7784RRzj41s/kPWcpjuxf9l6TptvpG7WY3VwwSXWdab+
nxb3jI/WzeVJmj9Fq9O3uo64pO1nJzwy8SatruOx+KPhktP8/b1wyetxzN06
0CmekTebcMwpz9JwTMM1rl4vrR7U8EyrDzV9i3xMm7PdfGCMW+GBXZueRTxj
PXzqp9YfRhyjnqXhm9YHan6Rl3F+k3Uk9bviDPuvxR/iljzePOvq69iPnXwv
fpB3sb9Ifar8iP029t24yn+0upb8SOszF8/Je1ivU2/ddEhNL936mH19+Tj1
s+38E3+IU+QRvd3zP/yJ/UBZm3+cdR59EFqdp+llxS1Nl+K+yzgnbmnxcOuf
a/xt/MpWRzvpZu/WfyZ9yimPcoZrWt5/Nw75Orim/f5bfDPhnPz/Db9Mx+38
bHjG87/xMupfch1l9fpruKXNmZRXNU7Iy4hnGj/T+ofUubS5km1t/QfiG/Ut
9hXZP63+Rb8Y6/364umDp26m4Rr39eIPcU3rp1Uv01639XE3XkY8ol+J/TWN
dxGf2P/b8Iq8lPUwH+f3E/cFT4gv2ip/0vrl/Z+cv+X76rfScIw6LM+3dp56
PopnPP+d3xgcIy861YPcx9jv0+aVBMckjrT5jJOP3DRf7nQOwFQfcp18W+7q
V3LcdA5bHDPhmV0+PsU178YfXw/PbPFK+1/Fr65X60zimKn+earbbfzntO9o
+Kbp11qdybqz+GXy5028a/q9rNP98jf69aqH0e9O3lzeJvG93e5xVvNO6kzm
Qff94hDxh/v/5vvh62UVx1hfavil8SfqW9W1Nl6k+bD5vMZHNf+TtlrP8fdR
Dytv1uYKNZ1142Hyeq1Puels5VUan9jOz2netDxm+BfnDsnDBL803GLdyP5D
+dymt1Wn1+LWVEfa+uRO9aSmx7WO5D522x806S4nvDLlxTO9xikf86filXP8
creu1PDMhGMabpn8gNr52vQyWbe6mKzNb9c67zQXe5qT1HiYqT9avrj1ScvP
yNPIU+dYPiZr08vYr2Tcbn3VuV180vKDPr4T/5J8Zn3DPD/5qpp/2zxu8Utw
gzjGOk7DOfrb23cjDjPPyzPle4t35FWsC8lzOKfZuk2O5T/aPPNWXxKf5Pt4
f57f8Iq8ifxKzrOGoxufYp3I89618ZvNJ27qB2rzR+Rb9Fkx/ohLpv2Zcc74
Z3yUZzG+yrtMOGWqI7lOOper/MpVvuUabnk3nngdLpnw3IRTTnHMpHOZeJUt
z9LO14ZPms6l8SqT39ypLqbpeq0PtXjT+JWmg2k6voZX5Fuazld80tY8rvVb
208tLrH/Qh8Y596JK9yfN1/U1m9tf6z4pNUxzP/6kbS6i7yG9anW5y2/MeEV
8Zk6E98nr9vmCzZfttbPLg/j9/Fx1o3y+OZjO/El8iHiEOudOW/t+8n9Oc9b
H1BwiHpbfVPkSdp1L/7IcfPhb/xJjhsO2eKPLR7JcdOxqMuVV2n6x4lHEX9s
9SuneOSMH/nueOT699vyT1ucscUdnhftPNnij6nPedKnqK/1emnzLyZ8Iv6Y
fOUSJ6a5i4kzrm3/1Hz+xSETL2I8tU9aXNLWhlPUu8iHuN81v7U6gXmuzY+x
Dyl5zMeLO9qqvkV80fgL86s8QuNtXOVNXOWDzPtZ/f6N7xAHTp9v8gl09f/O
+9q3Y3/OxHPYj9/6edqcZf3x9Zlt8webLrat4gtxhnhD3DH5uk18x8QPtzh5
qp8VbzTcsa3fNF3BKd7Y5cVzvcnv7ze/t7z/bvyxxSW/3n6KP9rvPuGPqS4z
4Y4tHtnqTZq+pOF0b2/4ox3f5UEmX1txiPukrR5Ffxbnura+oTZfrfm3NH8X
6zjOLcpqn1BwQqvP6EO6nb/b9Ag+Xt6l7evd3zccoG9Z+x7m+Wm+pO/f6ixZ
W3+4PINrcIC/j59P/CFe8bi9f95H/ao4RLwhHhH/Tnxe689RL9L4jYZD1IV4
fauXbzhEvWvzQ2n15IZHxBnbOYWTbmSLP7a445T3yDrxHeKRHT75U/mPcx5k
iyu2PMi27/gqHmn6kW2/Tqu/bH1Tmo580ml5fbrfMA7IhzSdiPubyWfFfh5X
/fYn323jbPNfkUfxfvFHq8Nk1dd20oc0XkM8YV+z/T+TH13zzW38S9N5tjqP
ebvxEU2fIS5q/bfNf9Xjpg/197A/xu/X6l8+Tp6j6TtaHaX5JTu/WHzRzus2
J2fyobdPJuvEazacYRyY+m22eKPhjIY3rLfIe7jfm/CGx1P/ZtuvNn6j8R3X
+oSvzxX8GJ+8G0+8jvd4mgfZ4pOreGTCte08PK3PeJ1MPMm0Nvzi9ZzrfZr/
03zeGh7Jsbhl22+cY+sz9gE0nd22D1l8ok+/+aP1GTcflTY3qO3bxSX2X7T+
5MaXOG9OXsG87edqPI+v2+byNpwyrT6v+ZX5O7ffW38af/emr2l8VV6v4ZDw
Hq2uIs8hD+facMjWT0080vBHq7uKQ8QjHk/zi7M235IJj7S6s3HOuHiX/5AH
MT+0fHG17nKKMyb8cY0XmfL7V12n+tHn4ZIJh051ugmfTOtWt7rFJ5PPydR3
0+o0+udvcck0V7nVdTx2/9X6b+wHbjij+aVMeEXdif7703xl8YirOEN8Mflo
6Z+SY3mBCQc1HJPj5kPXfOl8H/O6/FDTh/r4hjv8fPk97Evxd2+/Q5sX3OYd
tLl71u30BXQ+w4Q3Gh+SVXwujp/qLW1tvovikOZn1PpiJl/6pmPL8cT/Nh3q
xItMulPj9ykOyTr5Utz1H/ncesxXwyN7/uMp/NFw4/Z/fQqHtHrNpA+ZfGEb
3vD+HE94o/X9qled9CLuZ9qcnqn/N3ij9fnKg9jf6+2uPq7VexrusN8geURc
0Pou7aPxcW3/rH6g1YOaj5t5ueGJVlfIKq/TcI66i+bX3upU4gFxjXjLY/uU
mq+7/MX0/fzd1HPYryLfMemQ5OHaPGDrLTmPJ58Pcb1r03E03Zd8prfb77Ll
O1p9pdVZtj5nOd7yHVt/s6luP/EepzzI79epf/Quzvhq+OK5+suEP6bjCY9c
xRlTH42PbzxHbm/4Y/KlP63P2E8z9fM2ferkY29cOa3TyPvKczSdSMMV6vzt
75Uv2eKO7Ef1T2t9Ms4VND+JI6a+iOY3G1wizml8gJ9THsV9uu/T/GobX2D9
ZJqbOPlqiAP83M3H1Mc3fCYeE1c2vWjr6z7tU1G3JM5wbTzGhDOmesvEY3gd
y2823NHm68lnTP20TZ9vPGxxdasrFWc0vLHNI1seY8trtDx4D2+cPu7dvMbr
6ylXeYy7vMZ0HjY+buq/bbc3XuMujzEdT3yH+vU2H8e+XXHF1P/S5qXbtyuu
mPgM9aatnqJPmTy5+cY6TB4n3mj7Yt+n4Qv39bndPNj8q9r95tfGh1ifyaoO
Qj1u4y0mvkf84/du81waH+Lr51hewvpHwwsNP7R10mdMvhtbHUbTiU7Hja+0
PtL8TiedhnGp6TIanjidLzP5S57yFnf5iru6gav7913+fjeO2OOJ6fe4Wydp
OOMqj2EdpJ2P8hLqRcUL27pJ63fxOpt0ofKP27kMjc9oeo2GIyZf91YvETc0
XkMfEHmNpstI/JfXbv6nbX+afNP8ypzrZ9+C8z7EE/pJtXzbdK7We8QRvt40
P1a+oelOG26wLuT38PNueR/xgqv+n/4/+T88H5peU75B/NrmzImbm24i+KFd
Tw0X+DjrHPIR6iua7tO6R6uDtLpH41Gbn9GEH1rc3eKHCUec6iuexhHP8hPf
pf6xxRvndY+7uGKLNxq+yLHnWTtPt/2xk//Mth7ScLz7gKlvfeIx7FcJv2l/
/VQHmfw7xBvBEVOdZKqftH7btn/MfrPll+Y7pk7P+8UN9iOY55p+UF9K+y7b
/Js236/hFfUeydfqFeQdxB/yD/IC0/eceJ4Jh/l9fX3/14l3aP1Q4ohWzxAv
2x/S+IgJD1hnPO0naf6h6q6mfpHT+SryD62eMfERW1whjrjLT2zzzl1e4jW4
4rvijPv6zo9v/xUvXMUb7XUan+F52fqxJ/6i8RZX+03EGVN9pF33xo22Js4k
7lgfsQ7b4l/DGZNvWJ5nPWXy95DPcF/Z/Dyav1jb37b7mz/qxH9M++22WtfZ
5m3ngqhnaL4X6ihbfWLy2fR3aHWnhttafcrf1TpY/r/muy+e8DwST1jfcD5b
6/sQj9uPNflfyB+2vhDvb7qJHMtTTHjCeNT2RfahbnFGwxUTvhBXGN8nPcVd
nPH7+7fzyfZ1gK+BB16FL/Z441lct8cVni/tPJvO01O/863+ouGJVidp+4Pm
B9b2H61e0vpKmi+6cdL6SG53nfCHcflUd9H4jObP2I6tr7S+Q3GGOr9W12/5
sOkE2zzfNh8st1ufUA8a/NB8M53zLg8jfsjnanyQc8ua/6s4yse1OfLqG6bz
pK3Nn9/6h+d74w8m/xnvtz/L213VRU19pU0nscULrb4x8RKfpZvY4oi7+OFz
eYnvsj6HE679zvfrHI132OopruKGVvdoc1MaPzHppMUXk79e02m6T2l4Yarv
Wh82Hub+5ovc5tW2OL7tT22+oz7O+vnUTzL5LLV9svhA/4NpTt1U/0ieb/2c
jVdo80kn/+ysjd/J4/0+4jm/f+vbbHoH87u8gcc+r/nGTX2gEy/Qbp/wwBYn
yCM+hROyGp8mPcSEE672aXjccMFpXWPCEa+uZ/zn46Z8+25c8Hz9ouGHj28/
xwfT+TKtE569ihOymv/bdTf5ZOX2hhMmnebUJ2ocOuVRW1224QfxRuMbWj9I
ywuNl2h4YvI3bzqLrK2OMen/zXcNJ8hnuF9PHm7zWKb+iTxvmp/R5tk1XNPw
gHnf37n5N7ia/5uflPig8QXtPLO+Jl/W8n67Xry95X/rC7lOGy6YeMVtX4V1
h8YfTHHQePkULtj2613VU17N/x/f/13y//X+zWv8gThp5nuu8gSeR1veYOIP
Gj8gDmj1hYYHtnWIxivIF7Q5q9YVrC80n8wW56Y42HCB8VX+wPjc8IF99+IF
43vWqT9U/6FWV2h5fNLftTpHe9/TekPzdbQusPVBaPX/7fec5mK0upJrwwFT
fcrzYdI5TnrEnNfybFO9oPU7medbn+Xkbz3N+Zr2IVmNZ03HeMoHtHxvvJ74
gS0vMOX9hgN2ef671wtOP+fr+yYmfLDti5h4gi1+mPDAdD2c6g/k5Vr+b2vz
nd3qDqa+THFCq3e2x/u8xg9s9QlN79AeL24QT7R+z+Svxo83ncI0n6HpJFp/
qa/v/j3H05xM6xoND2x1Gc2X0ec33Wnb17f/yce3fN76bXx84wGc09XqZaf8
v9dH8n/zkbVvuvkt3MUDxp/mUzPt/6/yAKd4YIr/V/spt/zAn4UHzvP/FjdN
v+823094cFobDt3md+tgHrd6wHR9bff9Lc/bv9D8Fra+kY1/NE41HtN9UNMd
uP83r3u/+zLzffPfc35Yqw+0/Nb2wVM+b/qFiQdoc9tbnWDqE9zOi2qff/L5
tA7f8nnLq61vZdvX0vj8ae7VpAPY8vZeFy2Pt7y+rfO3/gLrg/o7tzwuj/mU
LnDa32/39Vt+v+X5a/vO7b7/Vfvs99f3r+bz0zw+5fXtPr3x+q0u1epZ7fa2
f5/8oqd+Atet7q/t36e8P+X/LY/f5nq2voSWv0/3+1mn+RdTvdnn5XFNX2Z+
a3O8zO+tHj7VCab5pOofW99d481bv3/bF7e87P/r/zfhs1bPafm89Q2av9u+
3Hzd/A3Nz83vcKrHb/fhLX9f3Y9P+fu0P/CUn9/q9abHX83ff9Z+/Hod/mM8
c77/fop/97jtw3P7tv40+QxMa8vj7bptPgIT397mvbT83vT++hq1/Xfbv7Q6
5ZT3m3+L/QHG6a1Or+m/Wl23ve5UT26fY7u/n+YQtT6GaT6Gn2vqfzMvus8W
T23nPHv/pNtsflieB+288byb9tFTf93WD6hdx7numx9Qjrd9+1mn+PWqPryW
z7dx/uP4f94n1vLU98zX2895P49Pef00n0/79Jbf27677b+n837af0/6+5bP
G5/eru/mP2iebsft9rb/Ns61fUvT56lDmtbJf63t38xD5q+Wz+Tf5YWn+mzT
b23nYrpfbzhhOm7fq32uSYd4dz5h41GmNa8z4YW2r296OM/HaV/d1ilvT759
k07GelzTwRtHWv42zk376tN997Q+xZdP+fvqfvR75fH7vPmWP2+/+5S3fdy0
H298zSl/vs3f07580s1P+dv9+OTzN/kNT3MNpnjV9iVTnbyt0zyEiW+f9G8t
P235V/N223/K87Z6rLr8xk9P+97W/90+/1Qvbo93X7vVj5uv2//acJl5ezsf
KO8znW/2oTWeu+XnKV9v/TBOffynuNL0ak/x4hMf3u5/Kk/v8syflq+3/Xbn
/Wo7vmLmz6d99+k+u61X9eltv/1Z++ztHMPW3+7+vPnoyae3PD3l7/b4tv9u
cwam/dhUd228ap4nDmj7TPNH2w+249N6cfN7bXX+6f3b+7XvJ/88+dY3Xrrh
re3+u83L2erH2vk98d5TXjYfm5fdNze+e8uD3/W1nfjHU/675e/TvLzdTz+7
r/7q+fp1++/pd9zm86vr73UL5z417run9VV18W0+3+7HW5/6tj+t5fspLrb4
6ePN+1N/W/MHMx9MPG/jWVtfW/P7PfXzneYKTP107fb2Ofz+jWcwv7c6tL/X
1J/d8Nm0327z8Vrebjqzqa/7lPdu/R+N/275uu2nT33ojR9X69otHk785bR/
Os3XU/6+mod2ee3defbz+PIpT5/hp/N8PZ03pzx505tv16nu3fL0dk6O9ydv
T/n7VOfmsfGuxcNtnGx5vPHtLe63PGn+2tZTzVPTfnLK99s5rY1fbrdPPr4T
jtjqubbz26b+QY/tz2pr67duc+O2++qpfjTpyMzT03665ee7OrOmEzeutfzc
9jktbp7y36d5+dn99Lvz56v58tN8/c/jTvnxU/580qU1fLfdb5u/29rw6tQf
vuXP2z679YVv9+HGm5bH5dXb6v6k9ZNt+9DavrvN6008n/Je26e1dfL3av4d
U15t+en0c0x5tdUPWh5vuKJ9nmmO+6RjmHxQGh6YeJp2nm33z6f676xepy1v
b3m2iQef+romfrzl7dw+8d13efBreeEnbz+T35+rf2/z+Wke3+LGbb7e5vG7
+Xvix1qdbPJzMW8bfyZdetOfT/XBKb9vefS2z2r7t8lP0zzScMHkW7v1r2+v
N+GElj8n/5tpv77VjTXd9ena9uXT/rnx3I3fVmfZ9tGN3576qtv1N/HdXuet
L6Xl8dM8PeXrFg+3++bpeBv/d/nhJx9fy9ev16u9mjff7ru365S3t3l8i7sn
fq3FEfNzW5tP21Z/nnW7X298ZovXzc9q0rVNOuLWvzbxv43PbfXXtt+cfEDa
92q4odX73Ufn9sYD+Hn9X1p+bj7+Pq/l46lPuuHDhjenevTEg5uvt9en+XbK
w6frlg83X2958VfpyKb8fC1ft33lu/Pn18nXV/+Hq/x4y8un++ppbc+7q0+b
9tnT/dP+27jS8nHTm2/7xabnGzebXn3rzzbNe532ZZPOfevb3vLzNOdiwgUT
r9x856Y6wMTvt/3tlD8bvtrqGbb89YQXp/rzqS/41G+l71i7rrf5+Gp9uuXf
Fse2up+refj3cXvuD762vjsffp398fR7bv+Pp/bN2zzc8uuUrz3/23rKc2/1
Z9t981S3Nh9PebXVrae69nR/i8enerQpTzQft7Z/m+qqW5524m+nPrhpH97q
xhNv0L5nwy+tPtH2rz6v5dGWZ9vjT/e7rl4HybNeJ9P+t+XX7f0tz27zrvl3
G8+2+bjtg7Z599r+9zT//un5+O7vdD3fbvPsdv97NR9v86z59hT3Tnl66qMU
r7f6snm36V+mfXGbN7bVmU35dorzU//MVn8+7ee2+7r2uNw+6ddzvPV/m/y3
Wh9SO55+x+l40klPfYFTv0E7f1ueNd9Ouq2rfLLX4bYvc6vfanm25c3T1bh6
Fp9P+5+2efTfsv+9vs/dHj+9f53Ot21enfKs14PXy+n11fDtqc5LvN7i0rQm
vrXnTbdvddxbH1Mf3+J5i/sTn326j/b57XWn93OfuZ3HuPVpm/apWx/qSde3
1S1v86V12ClvenvTR2zrtqf4d9JRneqrcjztWycd1bRezZuv5Ym/C8/83P7z
1Xny9HjL+7bzdjrfp37k9ritnqr1IbZ96JYHNs5M8ag9z33pKb881XWneD3N
69r2T233vdv9cNuHTvXPiadu/HGre17VF233j1M+bLxry4Me+/xWL52ul2m/
6XU44dm7eXHaZ07xre0vJx73WX726f3kV8uHr8uXW152myfNl9PxxOdO+0jX
6byfro/pupr0D+36b/HD9bQP+DSebePntu41za/d+n+1PLjVr27nckyP2/LH
0zrxyD5+q+851eFO+8PJn2LaDzbcd3WfeLpvnHSI23y4zY8tX2751lMedtrP
vCY/bp/3VfPnc/lwypNX8+NpHt3ytO18bef59rrY3t+u0+0+8lXrqY+Gt2+f
N8Xfad857SuTP3xcy5OnPOQ0x2rK022d6oenPGjDH+1/O/1/t/MJpry5Pc+3
fotTXmz58Gr+m/LilB+3eXHKh9t9y934/3H++mp86d195NfR95zmwW1ePK0/
en1M10E73u4fp7w46W8bvp7Wad85xcdtXj2tm57OYZx4021e2fblNr3opEfa
7kOnzzfx36e4Zdq3eX41vn86n3K7+azxqZNPUsuHLe/leItnJ55pwuGtnrhd
J/70ND4/mwe/a158vq447RPv/u/bfHia/7Z5cboupjw64dLTfhRv3/q7tLy5
zX+Tr/K0P5jqmY03Pd23TfrMSee77Y+d9q8tL079OhNv2X7v7e1Tftrironn
n/Jme1zLe0/rZNq+reW30/x3d793tq+YdR8f56mr+8B357PTz3P+O2z3dTu8
cp73pn3fVZ3N3bXlu6keMfE4W71qy4/TvnKL00/rl9t9gPuVxueZH9rtW73k
1Mfi60/zCqfXbXU78/6U39r9rm3fNuWXU9x0NZ9t89tpvW/L20z5K3Fkun+q
653W9+7mubP1av74avnu/fu+3x+f/8/tPGp5cpv3Xr3murqaB7d8TdsXbvPj
Ng9OeW97/1b3OvkSTbqPrX7H9216oCkf+bhtfrqqy9zyyk/ln6nPb+uDMZ2H
277gptuersN2vW75yru85bvy3sePP90H/Sn57/Pqe3d5zynPtXw3Hbfzvz3e
66jlN6+7tm7rgE/xolPemx4/xb22H5zqguaDKb/5eF9nyrP5HE3n2D7XVu8x
5aX2OSe8cFoHPs03V/1jfN+Jj7yrOznNX9t6yJaXbHHsNG/dy2un+ej0eV8l
r139/lsc8Ovzpv/p49ufz2en65Tvtvdv89jVPDf1L03xaYpXU9zy/tN8tu2z
aPlt0iVOeafllbZe1Ste1eFOupHT/djdvDbhmdPz6Ok8Nl2f27x1uj9rcewu
f3W6T/s4zn+XetvdPLfNe8/zlE/t5zz/Wl6bbv/svDddr9v8tq1XGEcm/Nz2
d1PenOLeFK9P897E502vu80r276yq3nnav5qt7f90un/ehUfTefftr42XSfb
67Fd59u6fstjU3571Xovj/2pee00v53igfP8tj0vJny0zWtX93XTdXKaz7a4
07y2ra+3+NLi2jZebfd9Ld6e7ldO9fAt7rfPta03tnw95ZvtvtbnT/npaj3r
Kh7a5qO7epB2fZziz22eerp+tr1/ylu/z2N3ebh3553P5iOf05G8al+21Sld
3Z+d5rvt/szbzVNez96/zVNP4+bTfdm0rzjdN13l1U51Ei1/bHUVV+uWp99v
6ydyqpvf7v+v+ilczUvt+mz5aJufzvLLq/UeLf5u89JXz1fX615P5aHT/DSd
P9t9/jbfbG8/zTvb/dJ23caJrR7sav6Z/MlaXtrue6bXmx5nPJ/ygzxqi/vT
7+Dvtd0HnfJxp/qItn9px6c6+IavWt7Z5qO79akp/7Q8czVfPZN3vno++ax9
0TYf73m8j/PT/ymP359Xd/PSdt90uj+ajrf56Wq9assHtsdveT3j6cRbbfUd
Uxw/5Sm3+eW0XnOar6c8cnWf0/LLdPv2caf7/lPeYZtvpjjxzL7ls/QT784D
r+bX2n7oPg+3/d9O88j29qv55yo/t807Xq/T9b31+Wj5Z4pDV3UWV+O3+4IW
V6fj7T5uitfb+kfbx9zdj5zWW6bzpOWNdv61dXs+X72+Xr1/Oc0f117nZx/z
bF667gt8db16/j2dd1o+ma7PiTfb8uzT89rrT887jbdTnN7eP+0Drh6fxuun
P+c2n0zxv91/+rhpP73dT3x2vtjmk4/zxVV/1qf85b/6es5TXc0DV/N9+79P
4/+r9iFtf3G3bvL0ms9xtX675b1O9yvT+92tB92tZ5/ml5YPrubrbR64uk9o
+Ga6/Wq8b49v8WAb759e/+y4f38fcDVPbPcJp+dDO7+u7kNOz+923Zxer9v7
T+OFt2/jeouLvs7d1z193unafp9TvdzdPDT9L1sdRsMbd+sF7fg07nvdTc/7
rDj+DF804efvsr4+rp/G+6d4o6vrFt9PeP9qfD9dT/PBFAfb8TZ/bN9nu4+4
Wp+d8t42z0043+ef/n/T+dRw+jbOt7h+ev6fXkevxuc//M2dz/tcnD+N46+q
E9yN76d8ztX4f8rPXo3/r+aftnWJbZw//fyn3+90X9GeN32OqzzMFqf7uNPz
fnv79nW2fO6zvPDduT7vjttP4/bt/uT1uP4uz/OqeL+N/+16vJoPttf9VXy4
jf/b/cgUN7fx/urnat/v6ueb1un9r/6Pd3mXdn18Fm66G9en+HIWr6d4993j
+/y9rv5unxXHPztOb/mZ7fXY4v72+p94/wnHTvngNK5t495pPnpqvfs+p7h5
u7bz77PwyhSPt3H4Xny9G4/v8hOfH1+vru33fjWO3u6bWnyd4vBd3Nyuy7uP
uxunr8Yh4+cWb273CVfj5XbfsY2jp7/7KV9xlU9+V7x95nq8i2e/O77dxufr
uPbj25//P1+Fk0/j7zY+b/Huq+L0Kc6ccPApvj6Nw1e/x93f46n4+lQdr8XF
dnwaV0/fZ4qv9/DvFJfeHSffhY/nOH36v9zNo18l7m5f9+p1fvq46X3u4uEp
Lht3r8a9Kd/4+tvfefs/XM2rd8+X7Xl9Gofb/Vdxz/b4Wtz9t6xX+exfn3c1
753h6Ovx/PT8nuLp9var17Fxob3PKa7exuGJ59zG8W1d89X7grv8wGfH3dP4
+PTztzjo2nqK+/5t6/T9n+OHr/6Pz55P++tjG5efrsM89bqnePQUn75q3eLU
7f95mi+3rzvF0zMcsPeVeG1cna7/bdz4WdvvOP0Pz+a/+zzCNs+fXjfb6/Ap
PHT6uCk+nu77n8Jxp/nkNO9cfd/tfuVpPPnUdfDs9ffuePPudfs73K0P3n/+
q/Y17fnTdXEaL+/G3atxdosTG7/w6u/zVF46/b1OP9+z59t5veI167vjz3dZ
t7j7Kl5/Lj5O8fJp3uj0Ot5ef0/Hhaf3/U/Fu6d5kBxvP/92X3F1f3w1zj0b
B0/xzp+2Po3fTnnb5/fDd+Pc1fP/qXh0Nz62uHZ6/914dRpP7v7OLb5Nn3cb
z7bn3d04de15p9fzu+POu+La03Hp+bjWzoPTeHUXT9zlF7ePf/e6jWOnj9t+
z6v56e73uMqfvXYfOl1P0/V+Gh/eHae+Snw8/f2f+l/7653m1af2rac45ir+
PI1Ldx9/mi/a99j+Dl91/f3nP9+HPhvntnHp34bjPgsHfr311ef9tec/76c4
fa7t404/98fx+34fx1O/27V89VX8K55+3M/6njj23Pu9Ol68Kn591nU8xY97
v+N5vHpVPjr9fZ89T3/iz58Zr66//tPX+enrbOPl3Xj69PV/9/eb4tK113ue
z78Wf35w0Xvjy9V8cPXx5/Hn6ev67nm8vQ5Pr9O773v38V/tf7mHa37Wr7Xe
3S+1uHUf17z3vH3uOr6LW66+3qu+56v3UdfWp/Lsu6/Dd3+Or/Y9nt9HXd1X
fNb19u71VfFyGz+2n+M18WN7/j51nv8p1/1nf9+7cX8bL+7jl3vn4fd5/T8r
Hm7x8c/671zfFR+m8/D7xIs/a333+fizvvf6n66Tp67T6f23r/9Vr+vt7/6q
PH71dX7iwJ+1nl4v2/hw93Ocnr9Pv+/d63n7+U/j2NXP//Tv9rNeO8+eOi8/
Kw581vNPv/fTv89T+ftqfPi5Hr/Wevc8etfneRpXf9b3+jn//+z16fPp9Hr4
Od9+1ifOp6df9+p5vH380/uAn+vmZ/3K68/5+bN+p/Phq3++7/55f9af//dn
/Vl/1p/1Z/1Zf9an1/8Bi8iU+A==
     "]}], {{0, 0}, {1280, 1024}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellLabel->
  "Out[239]=",ExpressionUUID->"c34454ff-31d1-4453-a7f4-10632042faf3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"newim", ",", 
   RowBox[{"ColorFunction", "->", "GrayLevel"}]}], "]"}]], "Input",
 CellLabel->
  "In[240]:=",ExpressionUUID->"f6dd8d99-a588-45f7-8525-3733d2e0ae60"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[SparseArray[Automatic, {128, 160}, 0., {1, {CompressedData["
1:eJzdzi0PgQEYheHHd6KzCaJokzRNUSSbZjaNTZHJoqKJEn/hLbIgaoqqEM21
vT/C5mxXPbsb4/lglomIVfx+WcrUadFjEmnbnoQ7BcFN+izYkfCg4qTNiDUH
Lryo5SK6TNlw4sqbaj6iw5AlW46cufHkQ7GQKv2pL1cyGWE=
      "], CompressedData["
1:eJxTTMoPSmJiYGBgZ2VgYATSdo5WNrZ29g6OTs4ubhaWVtZwnqubuzm6gIen
txkWQS9vH2MTUxwyvn745PwN8coGGBjhlQ80MMSvIIAIFUH6dFQTrEeUqlDi
lIVQV9lA2EmcMvobRlUbqaWISqmQCCUEVeCXJ6AbryxuORzi2IWxCqIIuVtD
WC6OACJpRhk=
      "]}, CompressedData["
1:eJzNmnuIF1UUxzexstcfEmZmRImVISHSw5Dwmr2ICFEjJMrKWCIiRBGJMkNE
ysxIsVLDQmSzLRHd9ZGJ7/d71dV1V133/XRXQ0LMimbuvZ8zzPn9xt/81v5o
GLj8fjNz7z3f8z3fc+6duW/8hNGF1xUUFNx4fUFBzz2PBedE8/9op6f8neu+
fMfLbO9aXtZnedmsnG3Sc1fvP38crj7+3MTW3bfQ3DF0Rq+hM75OuJ5sz7XO
OzsuczPmw2/ae+zxfUbr7l8idulW95ufffnamekXxmc+ev63T38tOJeaOy8W
975YvMzfX5TRch8tdmv7NW7x8ZPsTR8fSX7T9jFP93+x2OeurzBfvdcvOFea
ef1fCM4S398quc7vuwsv9S289Iv8n4QL4zKP7Pzvqt0Tc9rNfLCX+WKfm2ep
v2+N+fab8Fjr71/v8VknLde5f/6ZCcG5OgMvcNW8yMX//PDI9HsSj/EX/sWO
hSM3Lhi58Vd//yZpf/hwcHBuNqOnbB41ZfNWc6RPONAWP85W388WacGL/sAL
XBhX80PjkR2H9PzX8QXumuf4iXk7fDaInS8PahozqGm7OT77cvnsyzs8XrtM
xTP3Buduc2rt+8G5X/6nfaXl1uDc5e3b7u3fJrgu3npzcG4U3oEL/NRxkz0f
5B8vGh9wwR/ggb/ABf8eOxoe2zyOu83YJY8E5x7zxoFl4w4sO+Tx229Wjngn
OMuk5XrNgA1nB2w4LLhxP/jSP3z7rkfDoh4Nv0mcad1Jwula40jHDXwhzuE3
84Qnr9sHDmTgMOml7sF51Nt31Ntb7vsrN+HdfQsrzGAbcEc8/kflN/05PPYJ
z8AL3oIT/tP6o/U3XZxlxlVcx4plXOIdfWB+7r69/v8jYtcf44cF53Fvzwlj
u+lV5fupMB/ZG6tMyJqzA07J/0/s6xyyr7NCcJx8w8DgLBd+aZyIZ+KP+RJ3
cV2I8tS16hD90T/8RXfj89lpKv9+Ljj3Cj7wBbtdvJ30/j5lPll6btrSc9Xm
47adU9t2njZPrZg1fMWsGh9v1XLdxdsp84E9Tko/ttvexzyPj5jqkI7zD4q+
gRtxCP+Jh3S8Sq9Luk6Jx3mp8NzNY4fM8/cL4VFmSq/MKbkyJ8IL3ri4PO3t
rDV1tfYwFp5p9ebpMExX1nnca+W349NZH8c1grubZ6XEr+NRmcQ//iQO0FEd
l+l0Kzdu8X6KFK/XiR/RWfyMzmAHOMEbx786z5N686glTr3Pb03m/vDxeQ0m
VL/gNN2t0DVI2239A8FZZwrsUWP+CeldecZYN4w6IfGL/4hbrWv4/7+J0+kZ
9SE8Iz7hO/mbfEdcOr0/5uO10gyzQlZttoVpfXGt16MG/3y9sd32bPH9NBsL
S7dWc1M4zKIW87ztqElwhX9v247rvD8j/sFv/AfvyEPUbfg/Xu8syVFPJOOl
60j4zHjgxXzwK/5Gp8ALnFweaBSc3rVHq8e31XxhadLudb/Z/BzS8WKr+Wlc
KHTN5rNPw6PZ86nBz7vW8/yMWWfl74TkCeKVvEQeh2/wIEnf0vIsfv8SwY38
g/5TL7o4jeqFP0OzZ1f6evGMx7tO4u5BG2BN5vPhofC3Cj4O/3PmYXt0SMv/
4OrqmBaJa1ryCHxzOlsh83PP7RF9i8dLZpzG+ZaMm64zNN/ifN4k/kPP1qwO
j3Lzqj2qhGe2rBga2UfcWRj7t5qOaVbwjA2fMee9TnX45zv9OK1moCVQu8+j
LYK/m2+jx6dGeM58tL6Rv1gHxOvt4i7zjefi681Vqt7ZIv5zcXvY8++E6Ap2
oP8/FoVHo6/H2nxebTdfloQJt8PXF+3G0mZ4p/DM0nhSh7nNDnBO8AY/dA7d
hG/Uw9Qnep2g8wJ5L77vlIybrjfAK74+XSPrNuoMdEPrv/NvhJc1a0Sz6Lrz
e5t50h5RXLq8eMGE3lgwssPn3U5ziyVGm+igqxej/EpegWfEJzxjfYUeEy9J
9UdXdQ3cdXzCM/ImuOFP4hNdo7541prR4O2JdOxFe7R7vp6XfACvuE58gh/5
9HE74Uap46gLWX9Q/5K3wE2v03V8pl0/xfcjon0o8ILP8Ay+gxf1uuPPaV/n
1pkd28Oj3jxkDWqR/OnwjeIUPNy6oFP4CI7w1OlVg9TJ1IHUhehET7+OY71C
/oyv/1bl0LPc+TK+H1Iq/qC+hufU/dST8Iq6CZ3BPnhBHUGckQdsGh3SJjoF
Pk63o3rFTuv2WlknoAfoA3mJdSg4sX+g98OyrwPyX2/q/RzyM+OTN9F/6iLW
h+gK6yTws7dNbpK8R5xSd+yaGj7YKHUZ9RjxR/3CeoD6xs33uKx34T9+Rr9Y
f8bX07qezb2PkWt/h7qGugyeMT/WS8QjdaYN07G1Ep+0rv6N4gs+wSP0z9V9
dcJf/EA+1PUEeZz1HbyK5/0iwSmtzus6LL6fHO2bE4+Mjx7Ae+KS+bv5nZT9
CXhA3uxnAyJah8MXC9+Us+atmYfenHmoRvCmJe6cP4/JPhDzSVoXEX9xvUnW
9aR9dnAGF/Z3GI96j/kQd9T57GeBD/te1K9/hTCWRPs91EnojqsfIhxYb8FX
6naXF/ZJnqG+0Xhca32QxB+9boSv8Ij6jnmyb8w6F/9S7zhdOe71rUpacEDP
iFfyA/mL9Tzj6H0bcNH5X+tOvnqt+aPXOYwHPsSX3o8AJ/RA7zODD3UEOk+9
w//g6/xwUPplPP1+R++fxuuapPhJv7+s39vF9xtLM+KLeeI/vV+OXbTUo+zP
U/ehW8Qp+g8fcu2HZs9Had/X6PfTCzP0Re9T6feU5EnmCR7EFfYQ/1xHH7FT
v4chPrVOxOeT9J4/V1zoui+q//R76iQeYD98wD/6/SSt9iP1N/2hT4yn36Nc
fd+26+/r9XpU1yc6/ya9t6bFX/r9Gf6jP/3eEfyvrv9p14nJ8R2vKzK/t9B+
198b6Db+Pqooo/5J9/1Bbn8lfW+g7dE81r91fOvnk74TyT6P9LxL4p+2J7se
6/fqSd8xJX3Hk/67jux8y/29V3b7kvyX73zSzjft9a5/95K2/ReytHOv
     "]}], {{0, 0}, {
   160, 128}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellLabel->
  "Out[240]=",ExpressionUUID->"22bfbf2c-7653-4b40-8f98-b378319842dd"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["AutoCropping", "Section",ExpressionUUID->"d50a7f2d-04bb-4ede-b6af-d46ade825dd8"],

Cell["\<\
My autocropping tool went through many revisions and I eventually ended up \
with something called AutoCropSuperRevised. The code to AutoCropSuperRevised \
is a bit too complex to comment inline. Just know that it always works as \
long as you give it a non blank image (data). 

In order to use AutoCropSuperRevised, it must be given image data and a list \
of new dimensions. My code gets a list of new dimensions from the function: \
CroppingDimensions. All CroppingDimensions does is guesses the waist size and \
adds some padding to this value. CroppingDimensions then returns new \
dimensions that results in a new image that includes the beam and just a \
little bit of the background. 

Let\[CloseCurlyQuote]s see an example:\
\>", "Text",ExpressionUUID->"0cd47980-ab73-439f-adda-6e473c856bb3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"newimage", "=", 
   RowBox[{"AutoCropSuperRevised", "[", 
    RowBox[{"imdata", ",", 
     RowBox[{"CroppingDimensions", "[", "imdata", "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellLabel->
  "In[241]:=",ExpressionUUID->"d8695760-9cb2-41bf-9acd-4225f29a561f"],

Cell["\<\
Below is the original image. Below that is the autocropped image. \
\>", "Text",ExpressionUUID->"9454f54b-e1c1-4f8e-bfe1-6f4521ae083b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"imdata", ",", 
   RowBox[{"ColorFunction", "\[Rule]", "GrayLevel"}]}], "]"}]], "Input",
 CellLabel->
  "In[242]:=",ExpressionUUID->"c7a1707c-563e-4238-bee3-0a521840ac3b"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[SparseArray[Automatic, {1024, 1280}, 0., {1, {CompressedData["
1:eJztlIlTl1UUhp8jCIKKC7gisiqbC4qiuIMlbmnIKGm54goumUa2QbkjqSG5
NyoSxKgtWi5JKqmEaC4ZSVpU2mY5kFCOkFq9zfRP1PzuzDPfzJ1z7z3ve875
/KctGDPfAHPGsRzLsf4H6595rifcRGPRUnQUPcVD4nExX2wRJ8RtEaxD08Uu
USfidMEmUS1mOcH3YqL+EeVidH19xRQXqBJrXHV/A7ggUvSolzscF3MbQptG
cFm8okQe8YAmTeCSyGoKSc10rjlUiqOekOkFk1pApBJ2a6U3RVFr5dQGlrVV
ft4wqh1E+UDb9tLoq7Oi3A+O+UNBAGwMhIwgWNoB0iR6UTAsDIF5oTAjDKaG
w+ROeqezvl1gZld5EQFPd1N8d1gfCTt6wNsy62gUnO8F13vDnWho2BeC+kH/
/pA4ABYMhLWDID8GzsQqbjA4PQz+Q+RfHCQPlTfDYM9wODsCbo0Ej1HSNxrG
PQovx8O+MXA1AVzHQrdxqk0irH4MDoyHaxOg/hMQPlHxkxQ/WftTFD8V3JPk
w3RpmCG9M+HILL0/GxolQ58UmDNXOuZBmQpd70nosVBan4Lti6RpsfZSdf4Z
xS2Bnc/qzufA8wUY+iKkp8H76fL2JQhZCtOWwbblcGWF6rdKMatVjwy9uUaa
MqV3rfxYByvXw6FXVbcs8M6G+NeU20b4aBPc3QwRW+XJNsjdLm2vq092wMid
sGIXFOaoD3fL3zfkQZ7qkA+lb8KDAuW5R7nvVT/uU4+9pdzf0d676rX9yv2A
6v+eanMQ+h1STQ5D3hH4/AN5VKi9D2H2Mdh6HE6r2WuKwO8kDD8Fi09DTjFc
/BjulUBoKUw4qz48Jx2fSMd5eXIRYi6pfz7VvFyGks80H2UQeEX6yuXVF6rh
Vfl8TXd8CT4Vqv3XyuMbyP4WDl6X1htw/zto/4Py+VE9+JP8uwm7f4ZTv8DN
W8q/EsKqYNivqokGcnm1+r5Gc/Sb9P2uObsDLnfBtxai6zRLf6gu9yD1vrx6
oB78E4r/ggpNf41pgJ0MT2cjqL4R6WIMcTUSGhjT3Iz57saShkZ6IyOzsZHt
YWxrYuQ2NfKaGfnNjQJPY6eXsbmFkdXSyGhlpLU2UtsY89rqHm9jfDsj3seI
a29E+xrBfkZzf6NWVAQYRYG6M8hY2UHxHY0Y/WR8Qow6URZq7A8zVoUbiZ2M
sM7GHVHUxVjWVXdGGM7djBPi+e7SEGncEBt6GLE9jWqRE2WM6GXcFht6G+HR
xhmR3Mdw62tsF1H9tCcS+htfiTkDjFti4UCjSiQNUi4iOsbYImrF2Fhjn6gU
AYP1hkgR60Su2CsOisOiUJwUxaJElIpz4sK/XHTgwIEDBw7+A/wNMlP+fQ==

      "], CompressedData["
1:eJzt3Xm8fVVZx3HWEieMQLMcyJScSjOnTCvL2SzHKLVQs0C01HBAwAlRQEBE
wBlERRk01JxSc0wpJ9SkgDRtoGzSJBXNxAJrfV3reZ3nrt8+071nWHufzx/r
5cCP+zt77+f7Xs9ae+9z9z3gSfsdHHfbbbcL7hV2C+k/vxHy+M80vp7GZWl8
K43L07h6+oN7pfG18r/3SP/9B9P4XMj/32Xl/7tWGj9Q/pn+/LXTuDD9s4vT
+O80rqj+3J7lz+5d/ux10vihNK6Xxo+mcbM0/jrkv+ff0/hyGv+RxjfT+HYa
/5PG/6ZxZRrXcH/33uVnXez+na+WY/uu+/euKMdmx2Of4bbl7/18Gpe4f//S
8jO+Vs7Vt8txfaecF/3cq8T8M69RfuZ1yvFcP40bpHGjNP4h/bl/TOPfys/8
RvVzvpdGjPln7V5+1rXK+dqrHN+PpHHDNM5Lf/bP0rgojb9J4+/S+PuQ/45/
SeNfy9+j8/eV6lx8vfzddq3/q+OYriifJ8Stn+mq7jj3cJ/LrqGOdZ809k3j
9jGfyy+Wz2fH/8/VOb2sXFv7HP686nP8nwo1bv0sV3Of45pxVF/2eeyaXrec
M7sWVl/6bDpvXyif72/LZ7ykfMZ/SuNL5bPa+fyy+9z+HH5zzHmsa+7KjuPY
o8rEXuU86nP/cFVD+5TPf6s0fqocwwfTz/xIqYVPhJw7O+d2TFYXl4w5LstY
XeuzHKNdJ3+M36uu2e7lWtXHee1yfDd0x3ajcnx3SOMD6Wd8Mo2/KnVux2PH
Ul8nfyxf2cHxfHfK8fh8XrPDv0n1d4PqeFWLt0zjJ8r1/HD6e87vuH718fqa
9Ple9PHW2becdfltNVsfr47zxuVYdW1vXer3NqV+/7TU76fT+EwafxGy4Z8r
tdyVU1/T4/Jq/i3qHE2q8/o8jfOpzsCs57DOyI+Vc3oLVz8/Wc6tzutPp3HH
NH4h5nN6UTmXrZ/HrvmmPpeLPI923qwedd7uksbPx1yX55d6vLCcQ+tL5q3J
1s5jV9+2nXN4k5Lrm5dzqfN3h3LuPhay3+e7c7eTPPtecNbztujaW1aOdR5/
3J3LOtc2598u5nlC5/hn0vi5NN4d8lz5oZDnj4+Wc/9xd/4/Fbb6+tlyTS52
Nd0Xa9d9nfYt1+qmU66Xt/i21bW7Y7l+d0rjZ2P2RlbfNY1fTOPeabwrHe97
Qs6Srqv6POv7/7y6zp+Ycq3/MuQ+yhzjui/3utt8YtfdX++7lNzW1/y+cefX
+YJynbm+q7m+Pttm8p06ru8vp/Gradw/jfem431/GJlt+T5vxut9Idd2Lde2
Nntcju1avzYd+1tCNnzePJvZeL29az7L9R53rW/fca3vXF1r5fidIc/Rf1Ky
vIh5+oLAXN1C3sf1aXfuyL0y/0tp3C2Ne5Ta2C+Nd4RcI8r/+0qNaL/D+nTb
t6NGhl8jdy01cvdSI/dK48GuRv7Y1cn7w659AXWyWXWi+nhAGg8qdfLrafxG
Gg9P4zdj7i3OSuPsNM5N449KHb271JHmpPe6evL2ME9tbm3ZXGUO3TPmfvV+
MfesVmcPTeNhrt7eHrJV1Ncw6muZtXW3qr5kmfaz7hPzHofV26+UmnuAqzvV
2m+l8Yfp/L055PWTbHtb2DpX+jqk/vpXf8v2bd4avH+pwwfGPOc+JI1fi7vO
u6rN/Ut9Wi2+y9UjtUgtdtViVx1Oq8H94tb5WDX3ppBdfGvIJtq83FWLzM/U
5CJ9tLXIQ6q6lImPSONRcba6tN6RuqQuF1GX5qXVpubt2s56/j49nedXh7yG
fkMabwwjW33POamOsZUanqeG7ztH7XatwQ+Kea+nrlN6Aep1meZ29ai2RrJa
9XVq/cAj0/idNF4T8n6l9irPCdla9bLbrWX2nqjndfQQdY3v7+r8zFLf1ktQ
39R3S17PW9/7l7rWmu4xMfcej425Z5blrwuj+0/nUPfUfQN1P20/bbu2KwO/
ncbj0vj9NE4Lo/Wj9TZnkgfysAF5UBYOjHk+eFk6/y9P49SSB+Xg9S4L5IAc
DDUHysCTYp4LXhW2zgVnUPvU/oBr33qiA0oOTg6jueAVIc8HvkeyTGjN4OcH
eiVysgk50drhd+Oob/q9mNcRT0xDX8aieeTJabwk5LnkdJcXeilyMvScWEYe
HfP9AmVBc8qL03hlyHOJ761sr5VMkImhZsLPHZYLm0NOKdl4ach9l/VctgYn
H+RjU/NhaxJ/z+IPYs5L1xrF+i2tU1ifkCEy1J0h3fsYl59674sckSNyND5H
WvNrPtJ633o4u49Sz0nkilyRq8m5Un+nPbQ6T5qnbP+ATJEpMjV7prRH/YSY
96hPCuOzdSrZIltka+4+0OfrqWkcmsZz0nhBum4vmpC1rrmMrJE1sjZ5zWX3
XC1zB5fM6T6T9tMnzW/0j+SO3O0sd4932XtKGoelcXgc3eclf+SP/C133rPn
jJQ/9ZxPczl8RhzNhbPkkSySRbI4exbrOVB7lvbsn/J4aMnis0Ne/2nPZZ48
2vxIHskjedx+b2q59PPkITHPlU+PeZ58ZhpHjskpe6RklIyuJqN1P3tIyaj2
UY8PrCvJJblcVy7rNeYLw2i+PIVMkkkyufa5Utm0vZ/nh639LHMnOSWnbeX0
2WkcGfNcehIZJaNktKmM2h6u1qDPiuSSXJLLVnJ5eMml9m7V586yZ0tOySk5
Xf38qaxq/jwijWPStT42jRPD+PuiZJfskt31ZLfOrebYI0LeT1Jujwv5Xoye
az9hSo6Zh8kyWV7/POyz/IyS5+elcfSEXJNpMk2m+5NprYPVY2tPWX32s0LO
+XNK1o/qyLj2nf38Tc7JOTlvK+d1L96VdT0fZVnXc4zPDXle7+rReTeOfJPv
dvJdZ9tyrfvCyrHN3erVjwlb+3Xl2+ZwenUyTsbbzPisc/hz0zhe/3xC5sf1
72Sf7JP9/mX/hDjq2W2ur/NO1sk6We9P1n3GNa9rPn9myGv0o8L0uZxenoyT
8bYzbu9ZWM61Xj8mjRfE/M7/tPtr5J28k/d+5b2rf7d1+1Ex33Pr6t/JPJkn
88PIvPJ+ZMn80Wk8P+Y5X2v4SXv1OIADONB/B+o9e2+B7r9Pu2eHAziAA/13
oOv+nVnwvJg90H6A+oNjY97/q/f58QEf8GEzfdB+ga0f5IPuDeADPuDDZvvg
bVD/IBvsWX58wAd82DwfxvUO5oOeGdT6Qk7o3mP9LgBe4AVebI4Xk9Ybfk/i
uJjvXegZxBfG/JySf28QP/ADP/Bjmh+yg/4DP/ADP+bxw/cemIEZmIEZ08zQ
XseJMfcb9Bq4gRu4MetaRXZYzyFDTkrjZXH0fhbrF0zBFEzZrilax1hvgiVY
giVYslNLTtbPTrXz9IAruIIruLJzV16Uxkv0d6faeXJg/YMt2IIti7PlxTH7
8tKYjXlqGoeE3MdgDdZgDdYsan0kYw5OtXNYyGskfMEXfMGXRfmifkb3ibQP
c2jAGZzBGZxZ7H1oM+YpYWSM7fniDM7gDM4so5+xPRqZgzVYgzVYsyxrbA/4
aYEeB3dwB3dW484pMd+PUp+jZ329PbzvjDd4gzc79casMWO0j6N+x3od+hzc
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
TbaHkW3bt9N9f+Zu8k2+h5Hv+tke7ceTbbJNtvufbb/2JtNkmkz3K9OzPm+n
OVv7amScjJPx/mXc8t31fMz374+TaTJNpnuTafXik+ZtvWun513sPhjZJttk
uz/Z9n25X2Nr3lYvzr0vck2u+53rev/Mr7ftGbWjyDbZJtu9zHbXd2AcUeWZ
LJNlstx+lg+pslzPx+SX/JLftvOrHpsemtyS27ZyW2fW1sRklayS1bayqv73
2JLLE8gjeSSPa82j3QdmjiSTZLKNTB5HFskiWVx7Fp9YskgOySE5XF8Otb+j
PR1/n4T8kT/yt9z8HV3ypnmPOY/MkbnVzHma7+g3yR7ZW132yBt5I2/LzZuf
58gaWSNry53blDX1k9rDJG/kjbwtv5fU3KY9S581ckbOyFnO2XYzZvmyeYxM
kSkyNd/cpSxpn4Pej/yQn531furzTq4yRH7ID/kZ5ceyo7ycGJhnyAk5mTTP
qD/T3gEZISNkJGfi+JIFMkAGNjEDNk/YHGEZoP6p/6HXv9V+l/nUO/U+lHqX
8/Jde0vaS1K/Y85jPDU/xJp/aKl720Ol1qn1vtX6uDq3+9x6/uq0UtdnUsvU
csO1XLutWsZharePtSuLH079Ur89rF+5q+cM9D0wp1f1S+1Suy3XrvUNWufZ
HjX2Ur+t169qVz2D1m7an1DvQN1Sty3VrdWsrPX7aWdVNUp9Up/Lrs+u2vQ1
Oc5JapAaXHQNaj6Xi9aH2vpfe7DnBhykBndeg11zs8x7WGS+pc6WZ53qTcbZ
usXm2K4+j3qj3rZbb7Vv9VrZ1sj1fU6/LqYOqcNlroOtt1Ptqbc7u9SdrzNq
jBrrqjGrLdWSTLNnN7TX5/2id6O+FmGYX5v6dembSm35eqKWqKVpfdk942i/
TXVkNfSeUjvUzfDqZhE9lBxivhp+rezUGPU9b6dONqpOtjMPaQ7SXrv65neG
7rnnw9THIOpjmiO2L+7XR96P2g7caL8ufE101cMsXlj/0TWP7HT+GFcDXP/l
ueBrYNr1t2v9oeoad11fMr78a3yLjuvqr+ksveIH3LWss+pzynVczHXcaUbr
66lradettvWzHdeI6zM9Z+Ou0a1nuBaWq0+GXee4C8q12PSsTLsOk+Yzy4nP
h10DO/8fLefeW4VT25tvpjmla+B7R80vHys1r3O/qXPEvDU/qY+rz7vO+e3K
Obear625sDrf857rVs/zuHNsdX39jnNbn9dx59Ovi81zWX5RqddZzt+8dXrZ
lPM2zzmbVJe1Bb4e9+k4P35u03n4dKmpi11+v9hxHuY9/kXUy9U7jrmuDauF
m7hsqec9v+TEPLLjGHcMl5bPbjVvn91/7iuqzxtdPfvPuXfH56t7xC+UczzJ
QH9e7XPZea3Paf3Zdi/ny3LjP4fMPy90+3FJ6La56zOZE98qn+nycm2vdJ/j
KuX87FmybU7u4zL8+Y6/89Lycy8vx+d/pq+Rq5Vs7OF+ns7zl9z5tM9k10j/
3I7rq+Wcfqecw1B+ruVNf+66cVe7rFZ9Ri2TVy1/z57u39s9bq2VS8vfaz/j
/wGA3AtA
      "]}, CompressedData["
1:eJzsvQm0bV16llWxQUEdhpDYAQKCCio2NKIinCAiKtglYsAuAjLEREmhA1RE
BQJCGIKlRCCJNCpEEDGEJgSTQPpUElJJKg2pNJXq/6rUraqAqDQavffu85wz
6jn/e99vrrX2ae5/7rhjzLHWXnvtdfZea37PfL/uR/yCT/m4X/QRr3vd677+
p3/E6974O/7OJ+/546+/eBwfx8fxcXwcH8fH8XF8HB/Hx/G+j7+qbLf9j+P9
+v3u+jo8To+/6+t/HF/u+3F6ndPrvy9/5+P4sMat983e++2+3q/39boeynjU
fLXVft/13/9QrutxfPF9dm4e3Hs/772+tM5K552uy+7L83Vfru9xvN9ju3/O
zTnn4vtzrTPu+3P2OB+8tsetdnx636w+r6vXs/c5n37uXdvz1fn18fl9Ocaj
eHv1ed56/tXnpL1v63Xdt/XJXT/Xj/PB/R7P9Vwf9Zzuvd+28vXR9vmo72vv
vLN3fnscH+a4lz/3zhN7OfsoO39b41G/07n/nr3z1FH25HE8z+9x1O+Yf98/
8O/9I7/g23/Qp228746al/ae77h5bNv3cfTzclvz2lHzcvv97vo5fBzv5/24
yrvnmm9u63PPNT/e9e912xxz9DzzyD3HjPfNHtz283cuvtk/Nq7x62zv46GH
Mm+d6/NXn5e99/ddP/8vy3jUPLZqx1bvw+vjj1nHPZznbjqftXntxefZ/nvs
e99d/S539Rw9zmP3Y9z7+7Tj9j4/+TqP0W22zz97P391PkvHp+Pa9a5e//T4
2/pdjuXXrXZ/On/d9bz8OB4zrv4+bV5cPc/qfHwcf93O2K+vzXfT+bDNIw/l
e1xd52/7PW77+brr63gcX/z9r3Lf1vnt7p+v1edqdf45+npmXPSGzfPk3uNv
63fZel1Tfp6N6Tla5cq99vS2eOdxXJvfpnZv9fXp+eeft3e9uJfXts4jq+c9
93Vt/fzpeVZ/r3N9L7czbr3PH+fLl2u8LW5cnY+Pvi/Px4WrfHg7890b4rhX
Bzh6vt/6PR017553Xm7z223N79N59nEefhjz65SXzzXPHjevrs5rR3PmlAcf
yjj9nvb+LueyJ+33Wbuf7+o5fOTe2fx0365nzmOz+2rrvLyfT4853xtubE/H
257v7up61ubb2+fvoz5/9T68H+O55vv7Mn/d9bx5Xz7v4dxHR68zZ3bg5nN/
3+fr1Xn93H/P6ue9+PfpdrV9zlF/b7uPjrrfzzPfnpvPH8fZ93ru7/uuOWL7
vL51fbs6n6zOK1MuXJ1fts5f09fbePT599q3c9m/9n2/+udtz/eY2ot9dmR1
Xr+teX76Oa8Vu3Nf101776PtHLN1nbx1nb2Vs7fOy9Pj9l7H6vUc9ff9o3/1
P/A/v+3dn341rn5u+py93/fW80zXf8euj47P95k9p0c970fNU6vrkJfNbty3
7/Oo+66fb8rzq+vxo3WMc4/n+vy98/P0PM0e+HUft/p77LU/e+3lue7Pfc/f
qr6zne/uZj582eb9vfPw9HdsduVc99nDiQfx893msduah6fvO2qe9/lePF9/
Rj1uer778j1MdanVeXx1HfCwxum81uaf1flx63le1nHVPpzbDqzrPrPr36/v
TO3A9LjpPJTmwSlfbz1PO+7o8yc7uvo5q2P6/s79ve1dh+y9H8+9vthqt7Z9
7pSL985jW+3Ny2pnVtcPe9eFd80tc3uy+rxufW6n88Z0Xl3d3jofTtcJ6fP3
ztuvbn8+Y7xOWbWPq+Pq+VY/7+j7cKu+te/52p/nPJu3jpoXX3Zd6lx60V77
ctT64nz2Yfpc3padOBdf7z1fm5+n82Q6T7pO2wePP/Sbf9rT/79jfH1b9cKj
1kNb7VK6b89lZ9JzutU+rB53nnlqlaNXufiu7cDRdmRd79n2O90837l11hnP
zJ+j6Xxy9PmOthtHjW3eTuNWezS1D6v2o13n6nUftR6arn9W9bZVe7Nv/XG+
uO1j5qetOtTR532tjEfZmXOd53zrlOnzdvTY7NGq3dk6v7d5dXV+bvP13us8
asT+NDu1dT221e5sXVfttVerdmuvHVq1K+dZ16zOT6u8PrU7j/Zo2/c85YDt
utgxfLP1c9a5casO4s9dnS/26ldb39/m9b3jqh1L72/2ZmqPjl7XNTu3ej3N
3kzt0l7dbmYvjo9Xbs/1qx93Lk5eXSdN59nVefyhjlN7vXW9edu62lF+yP78
tef4aJ1+dd5Zndf3rks8v5+u73dfjen1Zkem65f2/nQdU/t41Hps6zrpaDuZ
vr9mN1fv7632qL0/ne/F+/f6AY6e37bOww9V5zvqeqf26VzcMeefreuro9dL
bZ6f2rWtdqvNQ9N5b2qfVud52wfbr73rn73rt2ZPb8uOrdq7o9Zx03Xe1D6t
3udbOXHV7q2uu2b2bGo/7sv67GUZ93JDP37r775VB1jdv3dddZQ/YHr+KRe3
eX11/bV13eTjGX/1v/S/fPU73/Q/LtuH6Xa6Hj6X0deT/r7Vv3tq59rfc/R6
6ujzbtW7p3Zrun7aaq+O4uHVcXb+rXbx6PXMyzaeb908tTdH3ber9myVV1ft
xFb/w1G63urxbX5v9iu9vrrOafauXYfH0/f4e+r1NHs2tWurdnAvj7Tfc689
PVof32sHfdyL33d8P4mj5se1zznX+uZlHc/3ux1tx1btXbuO9nxttTer66zV
+Wvq79+6rlhdl9muYEfSummv/UvX0z4v2b00Tu349PuZjs0u7eWWvXZv7/pt
+rzttYtT+3fUPHOM/dr7vru2J/d1nH4/7Xvdvj4/5n47SsdYfx6nduxcOlKb
D1ft3er6Ls3/ze5N9cPVdVS7vrbOa3Z6ak9X7Vq77vR7+Tyr9m5qX7fen6v6
Ztue2rd23FHzR5rHjrWDe+3jVv3ucZx939vXhdP1WbtPj7aDUzu5GvdxtG65
d55r893UziR7l7b/3Of/kV/7Xf/PZ1e7s7oOm458frqOrevVxgNt/9bPX/29
2/HJ7q5y1Op9vxrPsnW96ePONZ9sXSe++LhV+zWdp+/azjyU8bbW8fN1ou/v
veu8ppdMn6tp3MlR9i693ubJvfNoswPJvtge2h55f7Obq+vN1etsx0/t2HQd
uvXv27qO3soTq3pDspur9i89f9Pzpef+XHrri+eV9fXB3nl12/y9qh++Vsfj
7N9t28+t93l6fa/OOl1f7tVHm/1sdm7rfNnO2+wl4+n6f3+1l1N7umqvtp63
2d3p+nSVL6b2O/1+/vzV+2XVD9zuo+k6tG3vtaPpuFWdNs0jt70eXZ1fZ3b0
cR16Xvt5vnVnu58//PlZr3+3ah8Z9/prVu3l0euH6Xw49TdO7ebq+rPZ1ab7
bl3vTu1Ye73ZvcQVq+vTtG6e6sFHxSNN7WXjyqn+yvHNHk5fn84HU7s6m3dW
7Vtfv26zt2kev2v79FDt4na7uXUduXX9t3V9mp7H9Nzv1a+aHTy3P29qH9N6
abqeZJvx3/7hX3TxZ/6ePzC2q2l9mo5Lx7fXp3byKPs5tdvT9fSq/7TZ5XZf
NC5rdnOVO4/Sf9u4Om8c419a12/b+dbsaLMXL+u49e88n9669Xc/Sp/1c3OU
HU3Pc5s3tvor99rRpj+uzo+remOym21/Oi6d1+/z+31d7fztc7Yen97P9+f1
5uo6eOqH3aozb12ftuek2d+tus7q+nXVDjd+n+poW3XbVft5zHhuu/RQxymP
HGdnp/fZqh2cHt90oKPsZ7KXW9ehW/XBqf62Ne4z2T/bF9u56djs0d7zNXt4
+n3+YLXP07+3ccR0fZ70661xS2093da/q/7RveNeu9q2j1q3Tu3oi/fP15Vt
nbvPbr5s9vHcdm/7+VbXmYn7zmUvk53c+vzu9V+u+hFX7Wmzl21+nNoH2xvv
T3YpvW/1c1bt8PR8zd4mO7v6OVvtZ1uPtvsqvX4u/2izq95/lL3cazePtpfp
9dV15j67edd27L6OyQ6ef305e737O4/2c0zXm0dx8tSObo3P3DvP7vV3Tu0D
+5OdSdtT+8n2t/76r/xL3/BzP+fGdjvP1P41O5fOuzr6upv9Ttur682t90/j
taaH7I0LP2rdOdWD0/zT7Ot0nNrZtl45z7rp6HXeXdvJo+1t/z6bnVy1u83e
Nn5btbtT+9t03GZvp3qt54XpPNJ01Wl8T9MPp+vdpmdO16/NnrTjpvY0ve79
03Hq103c4c9vf3c63sc1Hdzj9Hfee57V9fPUz9Ds8vS5nq5np/Z7r52dzn+r
69it695tdjnZm7326q7t593Z4632tb1v7f7o9+/W9W6yy1M7vHVduzqm9ed0
3m32YnXdnOx+0lebnfH26e/+Q9X+JDvH+9N5fs///cq/+ou+7HPr5/h8W9et
5gJfX7oOj9PrnfKB1+3tvkivp/OkdfSq/3aqf6f3TdfFR/uPpuuEvXb3qPFY
u3tf1tMPfVzXm6f2dtU+r9rjo+10ey6xl6vr4VU73ealrXGs07igZrfTfNz0
3bb+a3aorXv9ftvhtO3x9L3/4bE9bOv3ZO99PdPrXOWX9Pun47f6y31fTPXt
tj1dd6/GOSe7ml5vz3Xi+9V5aNWOe/5M8+mLj7vtuk1H2+mXzT5v/fvX/cRT
Oz214+n+S36cqR1Pr2/l7GR30/bWdfaqX3mr7jyNt21c4PVkssu2W21s50n2
2HbZ26tjsp/petPY7He63n/j+Rf/R6pdn+oZTRdI/DW196v8uDU+Yrrebtzd
Rh8/XYe39ffUnjc7vjq/btXBb9feN3u1+vpDHdd18a3r6b12fHrfNru9d93d
7O7evMdpnm3zF7d1cFsXp3k1Hd9eT3YtrXOnY7LLzd61sR0/XQdPdYDpyPt8
ff67V3X0piOkMfnX/f50f6T7KOlA6XXHbaTXWxxaex6b/W72v60P0vbq/Ldq
l7fa8bX5+1z2+7W6Ll/9O7fXU5m+nu6fo+zz0fZ7NT+3va8dP113e75s67/p
umtr3Fiy38kO2e6urq/9/tP39Ufr+Dd94p/9mE/8s3/sapvrSscn+9p4Y+v6
35+XuGOVL6b+/ul52no/cV7jx8Snq/XN9q7PPU75PtnxNu5djzf7vvq+veu1
mX0+lx1/HP19tt9nK89t44b5utz7vd2ep/R64/Oj6jWsvm9a52K6PmM+n67r
p+s/27up3W/r77Q/2cVk1xm//qN++f/xr/21n3/1ukcf3+xrW3env8fX276X
KTel79+/Uzp+ygfpc5qdb7zZ7L85oK3zm15/W/ndbd45Nw/s1QVW7f0x6/i7
tpf3dVzlpu1xcPu4b/t91+x8W8/v1d3TcW0eafUlVuuKTNfXtsvJjjNvT+PX
ko7cdPKp/Urvt13EPp++v8+LI/ad7WTnky4/XZc3f0DSGZK/IHGA+abpDz5f
svONF5p9n+r80+Pb89Dse3tOm71etfdTvX6rXT+XX36vfd+3zk92667t6V2P
+/0cR9vto+1ys9dNj5+uu1tcbbLbbd2+ar+n+cNt3uV9tst+X3q/9fBVv3ay
S96fXrfdtn1mPH2ff+LG62zzOiOvW5ef/l3NXjOaI/x6+ruTjtA4KX2vjZua
bpL4L92XUz1puq63nfc4fR5X5wGPaV3Q7PnqOn2rfZ/acc/Xq/Z5nz2f2q2j
1rcPbWzXf//s+lH2e9Wu8/y157itq1e30zrC89LWOiBJR21+Wtvtpot7fZzW
zcluTe1+W49jpz0m++7Rr0//nnRc8gek9/t62vHTz1vlpzY2O2/7bj5s9206
Ptn5dpyfs6kdX7XrLb6m2fnVdfzUjje7nl5vdn5q949dt0/t8n2336vXtxrn
f/u6e7PvH36/5Ps42enV4z36eZyus6f5uF5HTOuwTXX26bq9xadPdeY0/yc9
2+thtqd+8WTvkn1P9tzr9Onrab2deCHZ5al/IF1H+h6aru/v3+t+/32Nx8yB
0zyCZP9X6wu058Hr/MTTTVdr+l2z+7b3aTy3vV+1/6vzdzpun71v69GpPXzU
9bdx1HY+mNp734fT9Xpb77cx2f/GAa2eWsrfadzg9fzq+t7zaFp3Nfuejms6
8tT+284lu5/sbDov27abv+HZ1/HD/veLn/Yr/ov/7ef8w19443X2M3L86Xv/
gqvtxAuNP1bfl/hlygMtrsC/Q/veG3exv/kPvN34NO1veQ1Tv74523y+Vd+b
+gVs95sOkPYfxQONE9o6v/HA7az/p/buoekCW/WO1e9lHid/bg5odn2rvd/L
A+aCab24KTckPcDrmen6abo+m6770/qccas9Y7RdbDq3x/S5tuuM2H1ve38a
+Rxzgreno6+f83j052/li/S56Xzt92lxhC1PYHofJr9F44TmB0jxAKt+uWlc
/179IMUBNE5o8+fU79/GvbpAOv7FdvCo9f995YH7xh89LmDKC1POvC1OSM/P
Xl5o/vxW33taR8zcMPX/p/XcNM+txQE0/bxxQrK3zX413SBxgsfT9/hFVyO8
8Jd+7F/1X33cP/cnr/azbf0hXf/0830c50mve3/ik6Z3+HyJI/b+HklXanWL
UjzIanyodYoWl+jnrNWL3NvXYSs3NB1i67iqO7T13ypfbNURZjrDUfbzoXPF
ueISjo8rbPdX44WpvrbKD4kX/HymdUJbb0x1iLTeaf5U5kOPbf02XQ+2eL9k
T5Jdsx1K9jbZvRQfaLvXOAH7z/bpe/1TVyOckPgh8Ub6XOsYTdfw9aXr9vub
7uHfJ11f4yG/3uInWt0E7291GlpcZeKHaTxty6udckXjiOS3SFzgbY73vJV4
YMoNW/WH9nqzC01n2MsXs3Gr/bxrHjjXde3N69hbv7fzwpQjzBNTfWH6/Kxy
Q/MzJD2hbU/r8pgXpvpu0nvTOjHN93v9A83OJr0irbNtR21nzQfmAkaOe8vr
v/yP/t0/7ouvRr/f3OHrT7zRuMTn9/VZB0nxFokr2veedJD0eU1nankVjl+d
1lVIfrOpP2Pap4jXk/6XRj/X5+oz0PSKKS+k/au6w9ZxKyccww1HxT28bOPe
7/O4OsFTrtga19h4e8oRiSvMF61ewarOMK0rlHSJ5MewrtDWbY03WhyCdYK0
fm3rYNu/tH96/vY52GV4wdseT/fDF0f9InFH4pXEJ4lzGvew3XSQ9P1M9RYf
b75p+kWLx2zxLYlLWnxM44xpHadpfeVWZ3mqV7T4iRaXucoZ03VamtfbfH9u
zjhWnziaTx7auKo/bH3fnD98X0y3033adLgpN2zljVX+mMZRJP4wd0zrEqex
5Um2dV/Tl52Xl7gj2b3V9Xyye4lDkh8h2XNvwxXY8c/7mv/yR372T/mSS/vz
JVfbHm33zQM+bzvO52e/z2P+8Ov+/tL3n3grcVLTczh/0quSHpX8KCmeNPlb
Ut6Oz7+1vvRqP0ePq3Ubp/EX03yQvXGde/M4joq/WF3/Tjlk23H33S9y17rH
zdfb97yqf0x1D99n0/jMvTxhrtiqdzQ/yta+RG3dtBqnOV0PtnyO5D9J/gzz
gu1esn+NQzy2+IWmMyT9wBwAfyQusd33eRI/+HP+2x/1zzz9/6VXo7knnS/Z
/6RPJL3Gf1+67sRP1j/8u6S4kMYhfn1a58PvTzrLtH5V4w9vt/pWaT3S6skk
zliNE03zXZofk/6x6neZ6iOvvj7dH8cxtXcvtqOr9narznDX/LDdn7KX97bp
W+t80eI4pxyRttu4qmskncPzyCpXTPNH7f9erTMwrePked06Q+KINKbjm58i
cYnfN7XzHrHzSedI+5tO4uvh9dPv+aUXn/Kf/3Uf8T/9y192NbIf/vDnTP06
U55If096v89jzkmcMdU/Wl5MyrdNukjLZ5nW0ZzGffi5TeuLVg+r6SBTP83W
eI/GF6vcsaqPTLliyhlte9t437jhaL3i7jhiql/49dvSM6acMY3X8PohcYXn
jxb3yXzkeSn1f3A8Z+OJ6ZjO0+xAihuY+g+SPbO/oMVF+HjbQdtH7LfteRo5
zsez7fMnbmBMnPGzvu3rPuVH/FtffjWm81hvMU+l75/R+knSU7zf183riXus
R03zZJLfjPsv+dua7tE4u9Vhb/6X9Dyv9tnw/JLWNS2erHFI446t+sZe7kj2
pI1JD1m1f/u4o+kCd80Td+VP6Tyz14+yyifT+2mVUxJvNA5Z5ZPV+I6mf3g/
81jrf7HXr9LWhY1fWryo7VDijKYj2M6ynfwFvJ7GZGexr6fv88tucII5INlp
Rp8n6Rscl7iF10+/65ffeB/HwS++zvT9pu/Fus2U29L3kn6vxCdTfrG/zfyy
Gp/c6oo1nXBaB2QaL9L8tdN6PGl+Wo0f8bbnza28sppnkLhjyifmlKk+cp7x
KP/LXfHOqv9prqsczSVbOaTdj45DNZ9s5ZHGH1vjPtJ6qPXrmNbRaPW2W93G
FOfHujL54T2P2w7YX5J0EnNJs/PNnnJ+20Neb3yAXTcHsO0x6SjpvOl8P/rH
veGtv+uTv+KGPsLI67zfr/u85pPGEUnf4fXES/57E1+1eN3mh0u8Yk7hPnQc
CtstHjbxt3WWVscs5ZGtxpNM64pNuSXpJk1/SX6dNO9OucTHpfk+cczWdW/i
ksYrx3DKuTjivusv++NJEi+ucskqt6xy89R/k54b7296ZvLjbI0faXHzU15J
eknjDs/Hqc6X52W/f5qfYt0k8UWKszC/ePR5zCeNI8wL5oDGB7bH5gQfx3nS
6M9j+2T/rkf2J77x9fL5yS/V4lX8fSWe8vdp3vHo+2Hql0r+O99307ij1Tqu
aUzrgsQtTWdp+b1pXdQ4ps1X5pjGK4lb0noybTd+SRyT4mBX822mnLKPV/Zy
ykP3C011oHWeWeWU6X3Q+CVxdbu/0/PCdtNTpnEnq3m8zZ/j/YlXUt3HlveS
4gzTejFxiefnVHcMe2B7kvjCo+1m2k5+GNtb20/zCSM8gP1lm9dPv/tXXo3N
bvO+Z1bxb/+PvvIGTyQeYeR9bL/93R/9hf/9r/mqy9/pjTdeT7zisekjaeTv
8udxHYmjrEOZn1q8cYqfSfFF5p2Wp2x+mdaNTc+H35f67FoXneouSa+d8kzi
mjQeHTfb/EKJa6b5EatxLatck7jlWP3loXPJUVyzn1+mPDPlncY5vq+mOkzT
Zfw8TesVtrz/xDNtPmn1zZL+4u0WT5v6nkz7hky5Zhq3gt1Idiut95vdTduJ
Y5J9t66R+AKOwX7bjiddxcelbXjF3MLnev/pd/jqG5zFmPgifX/Jz5P8Vom/
zGvpezfXJJ2s8Q78knQdxlQPr8X9tjo5yf/U+g+k/PxpvG6bR5p/2pzTuCat
6xrnJK5Z5Zy0zm3+pL1xu1v1mPvBNfeVh1q87Zxf9nJKGlf9kVN+Mbf4+Tia
W5r+0uL8p/XS0ut7/UarfdPa+5r+wjZ2w/EnHlucSPL3ePT6P8WZ2K6bR5Ie
Yj7w682uJ07x+Oxb/cG/+Y0Xn/kZz/599cWzX/Nv+b1fc7XN63BMOg/XaV1p
9Xvy38ffkb6H5O9q/q3mn0txOr6PUny19RrrPL6PfT8zTp8jPy/Jz5Tieaf5
Rq3OSqtr0PQc6zLTuiuNY1Z5pnHNVn7ZGzcz81Mc5Wd6reo369/LXt2l6TBT
jpner9PnYco1iWOm+cyeD7w/cUwaW/5Q63ub5tu23mx1L1LdlBSf2+qFJC5J
8Sk+zvEmfr9Hcwn237yR9BDzibkhcZJ5xVzCNvxy+p6/9mqEZ9BhfH0eE09N
OWU6Nr9Y4pppvHSLQ57mp5tjvD2NI275T+354rlKcTMe7Wfy9rS+S1s3Tevr
Nz1mGj+T4mkaxxzNNXv5ZdWv9OLjpnrEQ9djjvY/ZY5Jv9/q/infrPJM8yO1
casfKcXrJq7xceaUKcckfcZ5zCkvKPl/UnxA0mNSnxjHYaZ4mMQvaf0+jbd1
HAfHWT/A/jOaDxJn+PUUr2L/ivUSzsPnnn6nr7nil49/+u7f+oe+9oYuw364
hvdxnHko8Zf3p9c5T/pekj5kHcufk3Si5p8zxybuSXqO46ms06T+Sa1+Me+3
vpO4hu3mb2p1oZNuk3Scxjdt/vJonTrlZTa+cZ5nmq+nOk2L/53GCTfOWbN7
R8fR3LZ/576O6zzT9Jg2rvLMKsdM/U5Np2lxMF6PJJ5p8S/TMa3HrMs0jkk8
kvxDLb/Dx7U6qMmflOJUrBuYV9Jxyf4lO26uSXxj/oAvbM8dn5J0DM5nHuG8
z67+o7/wT1/+Xn/6Bsd4m/cxmo+afpNG85f1IPPTqv8rcWCKI2p6T4o3dpxV
ijdO+XSpHmLrN5n0HfPNtO6MR8fVpDHFEU/7Ek3XbS2OeKuO0+bxqU6zlWfO
HU9znnGvTvNQuWbOO1N+2cs3vn+muk3TKVd1HPNOi59puk3im6b7trr9nqeY
51JeddJnpnU5pv1+mdeTTmM7k+JD4RNzS8pT5n3J32J7yrZ1GLjA22k0B1k3
MVd4f+Ic+5vgHXNP4yDzT7reNCa/WPo+zFd8fuIjfy/mn/R7Np0pcZJ5x9sp
Pqf1T/J2qheY6uWYd1bjiVu9mqTjtNendWxW69p4Pk06+Sr3mHfSOnhv3PBW
7nmxjjDNI17lmqN556HG6/T4mvS7TXWfKQ9N44S3+qdS/rafnxZfw9jyrxPX
TOvheb/XZymeZlqfzjpO0+FbP4AU15D8CF5/m2/S+tzHW3ewX2bKF40TbL+t
X9ie265zfdZt7HdKXPPM2/JbvurrLt779G74gd/0pqvx9Dt+3dX7fd729yRO
4fp9fWybrxjZ7/Mkv17yX9nv59816XNJ92nxyInPW73FFJc85SQ/ZynerdXj
m/Zfapwz7cPU6vdN/VirdW2avtN45rb5ZpVXtuk9iUe28sr0c+6aX9b5Zi/v
NH5Z5Rvfp1PdZso707ibtD7h+Z3G87leVuIczz+pPo39VF4HpjpiiVdSnf/E
NanvTsrHTnE1yf+U/BMpb8f20LpF0msSD2CvHcdru2/esR7i+OD0uXAN3MI2
fHP6Hb7+amT/6fd609U27+f6PTp+x9fR/GPmMXNO08GSHmYOTf5Bf79spzjt
lM/m+zDpOi2v3HE907FxD89tqlfc6hG3fgopz9IctJV7Wv6VeSf5tdJ6NM3v
LZ4hrZMbBzUumnJO03OaHb4dv9fLq+dM/87p79f0nq3c4+PMNb5/2/PQeCjF
xbU6Nq1/UuIgzyN+3esvxxvbj9Xq/Kb4geSXSn0d0/rVdsNxxolzEu9M69gl
P4g5x3bfuoT1FTgCrmC/OSBxTdNT0ufDM8++/Te89Zp30HX+xb/mlz39/w03
Xud9XDej91ufSbqSucbfi/Ul7/fr5q/0PfG7Jd1q+j23+OlUh6fFMbf6TMmP
2/p6+Pmz7jONX058lPo7mH8aF7U6O2nb8+U0/7zFKzsPa5WDEv807knHJ3vX
/CFH8dGaPrPVD/ayjvl7m+pCU/6Z8lC7L1f9XdM4n8ZDrR6oeSZx0PT15I9P
8cvMg8yTKT6n6UGtL0KqT9L8XtaDUjxGylf2/hRvm+rNTO27dZakt5gjzF3m
J9t5H8f5zTlsm4O8//Q7Xb/e9KL0ehrtbzvdJ9ef59c5L9ucx/qU9ShvT+OZ
0nkc38TvlO6/VLc69S9t+V/p9Wnfs1Z/2bzU6ip7vkjxQYmT0ryU8kun9Qft
N0t+sr1+scRJU15a5aK9etH98J9NX3/ZOGqe77WXk6b+1ubHbf6y1THFPScu
SjqROcfzRNOTEh95nkp5XfabwUeMq3kqKU/L8RCuX5zqqtg/kfK+U1xr8nuk
/GrrCNYtbPfhBusziR+a/pLicTjOOhSfA3f4Otg2J/l4cwvbPo/5j9fNZ7yf
8eInPH/lBpfxujnN31/yCyb+YdvnSf5A+/FSHLjjtVLcdKoDZW5qdS2tQ6V6
342TvJ10pSk3Jb9b4qVp/LTnP0bPn1O/WuKlvfnuR+lJq3w05aSZXnG0n2yv
f+2+jvO/cy//3DcOSnHR07wv+8mmHNT0oFZHLOlB5h/We4zW15Mu1PQg+wmS
Pyz5xxzvnOJ7Ul50y59OcdH2lzmeF/trXSPpM+YG9k/tuF+3PpM+H95ghC9O
v8c33njdfAKXsM3r5iTzjnnLI+fxdbDt81u3MkeaQ/07mXu8P223OCm2W/59
GlO+Yuszlrgp8ZCfz5Tn4HGVh5JuNI2/ntZFnNZ/bv1BGwd5u3FQ8rs1Hkoc
NI0L2epPOw8X7eWK+z6uc9++32HdTzb1iyWOb+uAxknWYc1BSQ/yeifpOskP
luKEkg5k/nFcZfOXpXWl51vGpAOldW/Ka3f9wFQfkJHXzTmpzozzue1vSX4i
2+uks0x1omS3/fnmMM4P7zD+2J//k/7Ur/tV33j5vb/54gf/5t/+f/2T3+/N
V/sZ035zCuc1X3nkeJ+Hz/H18PrpfvnGG1xmnnQcuL8nf1+OI/d5zFN+f9Lp
HLeU/LKpLtGUm1qfjeSPs+6a8s683vE6yLpRqgvGPNL6rDd/Wqvj0ThoykMp
/2Xa16LZialuNB2neWarnGS7PbXva1z00Lmn889WXW6v/tPyxRq/TO9nH+/n
x7yzl3taHY5WjznliaX+VvZ/pTig1kfRcaHWe1Idn1R3J+V1uc6M+Sdxj8/D
+1M8snnHOon9THCAdZXkl7IdTnE+fr/5BN5gG57wfvjDfMTI+8wjiZPMUYlz
GH1+X591J+te8EmKyzLf+HdrfGqdLsVjO/+s1cVs9RqbrpTitD2mfEw/tykf
wv6ypA8lPYjtFk+U9CD7zzxfemx596l+SeOeqZ/M+5Mdalwz9Y/tzbc/ioNm
XND23/W4ymv9+zhGjzuOfxqfJ85pY9J9Wn/zKf+0Oh0eVzmo6TyJf1Kd25QX
k/pdpbhm+7Wsz0zzqFM9nqT7YNe87m86C6P9SthzxhYvY3tt3cVcxecknef0
vX/TxV945fkfcINzvv8X/MWnv/ibL3+nN18dx5h4ivPzfm/zuYycn9F85Osw
FyU/nbnFceOJJ82vfK9+X8qfc12E1J8jjdaLUpxa2k51shiTv9l81OoRpbpf
rV+N+ccctJp/1vxmiYfMQSlOwfpQWudu1YX26j9Tv1jjoCkXrXHPqn/socQJ
Ta9nPwe13y9xzt58sMRBU+5J8c9+7qz/TOsZpvmgjSkfjNHc0/K9Wj586u/o
+rmetz3/O3859cdyXEbimLSf93t9b3uHfcQeNu4x72DnOS7pRuYgxw9bF0l6
C7xx+r6/6YorGOEacwn73/MMN3/b9ch+84rPw8j7vvSXPNvxzRfPv8Yf+s1X
18PriY+4Tn+PKa4o/T7+XuEavrfGVx5TPLX7pTleOtXL9v1sbrdu1Oo9pHii
FDdkPkp5Z2kdlOKoU16+/e6reWXT9aA5iHk3cdC0/lCLB03r58RBTRdq9u4o
HlrloGM5aStv3PW4Ve9a9ZfNeWg1Drrx0CoHJR7y85X8YC3e2RyU9B7rzGn9
xTzU+qM7r6vF/zjOJ+UB2/+V4iCY/1McaqoH0/p1pnrLjvtxPlGys6t+qBT/
y3kT76TRuo55CA4x3yTeMc94G54xN5m/4CDG0315c9vXBw9ZH0q82fglxX0z
2u/HtvW3FKfN2PLKUt8S34dNp0x+tZQP2eKtvU5JefruS+95Ydqvw5zUuKjp
RFvzy1o9IvvPPN+bkxL/NL/aapz0Vn2o2det/rLbGe+ae24vjqjxURsbF7F/
6idrfJTu8xRfl+KFzEeJk1r+V9KNzEkpL37aR8N121KdXF5PefApTshx0KkP
FPYi1Rd0vZ9Uly+NPq/ztOwfcxyQOch+JMfjpDHlT3nbOk0a4Q3446TLfcul
fbzmEniF/R6t77Rtzvu5n/Xd/8QX/+hvueKg3/R//g+f+1N/wrde/Kd/x1/5
vv/3T3zrxe9648c+/YW+5WpMupL9fCleie895cMlfShxpn83ny/5NR2HneoY
oUO2+zmtD5J/2M9RizdK+Whst7hrr5fsV2v9zKb9W1fjjFJ8dYuz3spLjYPa
fvPS1K82tYdNd5j6ce6Wm+6ad26fk1a5qfHwNK/M92Pio9X7vulKq9zE2PTk
piuZm5Ke5P7wnu8YUx3Fad0gc1LKH0t+BtcdTJzE6+al1B/Mr9t+OX7XcSgp
zsa6SIrDsT8p2enkP4NTzDdswyvwi0deT7xkfkkjvMN52YbT4CJ4CX5iP8eZ
3/z5/l4Tr3rkeN6f4rD8O/h9nI/jrFulOHm2U7w+9xmj49p8P5qvXMcz1UOy
P671H/bz6ufZerHjk1LcIqPz0ZI/znFI07qPbE/rlnh+tj/O3NT8cWxP1+Fp
fX/b8dlT/SnZ80deug3eWuesxF1buSrdr9O47FV/Hc+bx8ZXKW67zSOJq5yn
7/wS++nMUfbXmZsc9+lt+wEcV+q47VRfOulQXs/b7iT70/pwOQ/c+WrmHccj
m5fgIHNXOs5+s6Q/wRvwh/Ulcw08c7pPb3KNeYxt+93MX+a30+95/bl83kkP
uf78T/oXnv8CN3QpRs5rvx5jihdP3JXirRy3xf7Ewx6tJ6a6mK6zkOpiOs48
3ZdeZzS/32pdeMcXNv2q5cWl+O+kU7W+tNbbPU+2OKcU783Y9CmP036zzf40
u7U3/tv2M/FT4qy9+tO2903jh+7rOL3O7d/fmp91naNe/T7Kef9+Pem2iZ8c
B26OWq0H4HqOq2Oq+2iesk7l9WaKazJHOe471blO/VuTPpXqInrdn9bxSYdK
/c+SXTt9H99wQ69IPGS/F/sTRzl+yP4ttpPuBIfAM/ALHMV++MncY/0IXvL5
eb85yufh/OhTJ17+M1fj6ff+tqvrTDpW4r4Uv8X3ah2R793v8/fM+Vv+oPUr
+w1TnL/rDqR64eYs1zdIXOV4KdcDM0elut4erWclHYv5IMVFTXmq6Vfs97ox
9bmd1p1MXMW87Xm98ZXtRbIvU51qGk+e4se38lTz592uf++1omulv3u7jnWU
f3BVv0qcNY0fbNw15a3mH2xxVKmfpOenpFtZv09+wKRbJc6y3uW6A867m+pW
2JfkT0n1G9Po91uvwv6lfLrETfbfWX8yR9ne28+HfmRdyJzFNhzDCOeYa9Jo
Px/b5inzkHkOneqf+v1/13/9k3/Wt1383F/5FZ/wK7/imrcYed16V9K1HKee
OLV97/5+7Y+0XuffN3G0+Qted71O87yPS/qW/Y9eV9j/7fgrx121+vQpLiv5
/XneU3/dVs8p8VfiscRlrR9Ki7dK3LWqZ22t79Tiq1bjrBqHrXLXNnt+bv66
a066e79g8weu6luNrxJHTfNTm3/w6Hj1xlcpfy+t+5pfMPVlMz+Zo5p/MNU1
SDoWdiBxUOKp5HdJ3OXz+P22c/Y3YU+dN5e4KulT9vNZL7KfjxFugZvStv1x
8FXSu5J/ztyWOA1e4jrgKetZjCeu/rYbx5nzmr/Q3GN/pt9vPc4cyevWJc1Z
1sfsp3S8V4p/T3XQuQ9dv8F1rOAv61upDpXrppmjpv2BzFXOC0x1o5z3x+i4
0Cl3eZ6bxm2dq15U46spZ031q+m4la8SZx3LS1v1mrvmoPPzVPu+p/xkjmr5
oOYpc1HjpZYHO+WnVh9qOpqjUr0514Ny3ILruiS/YKr7NO3XmfL9mG9Tnzbm
+aRPOf7X6/e2nrdfJfkB3a8jxUO3OG7GFPeNvWYbnmGEg8xDjHAI23AM+09/
xjWnoAcxwi3Jr2e9yH47Ptf6E59/ug/fcjWyn5Hjn2PZv/KWq+u135DPM+fY
P+rv1VxovS35H82zTb+ybuY4LsfN2W+Z6qS7Prv1LXOV/eOOg3dcFuuXlG/r
uvqu3+Z4eNZHSa9yHFaqN5Xykb0ObHxlnkr1Oe1PNFeZpzyaq1IdqlXdatVf
mHSEpDckXSvpFa3ewtR/uKp7vTb0qf261FY9Kv3OU7/fqh6VeCrV22z1xhNX
pfw/P98pPr3pUZ6frE+1PL9pH/T0vtRfxfO146vMP9adzEM+zqPjV9zXxHpB
imO2LoW9TnYZe+z4cPOA9R9zi/Un+AMegV/gFEY4xjzF2Pxu5iy2eT+f8wP/
wX/2J/4n3/mWi//vX39+JZec/Jarkc/nOtlv7uLvsp7GNtdrfczXm/ybvN/f
A+d3vBi/J7+X/YaOA7PumOp8pfxQ188w35uvvH5wHKHrqaX6DKk+qOO3XK/B
ce6pfpXrsjguy35Br/s8j/G657vUF7j1B255hXCUdaymWx3lD2z1qqbxV42r
mm61asdvxx/4UPSruQ63+j0dxVONq3xfprH5A1s9qqRXJf8ez2XK80u6dIqn
SlxljjJPsW5M+XypT2iqW+PX4SnHr7uvhef9FOeU+nRgZxwH7Lwsc1aqxwk/
2V+HnUx5c9Y9rLNYT3E+neOgzENpNNfAK6f74NtvcAscZq6y/9D+Pcelcz5/
LqP56mTPv/3qeK6P43idv8fcA19aH+P6zV3eb70v/d3stz/UdbVSnQjzVOKw
VDc1xWu5Pr6fB9d3sD6V6pCkuripbq71KucVsn7y/GG+ctx7yiP0vGX+sn7V
dKvVPnupz6jXy/ZLrPaRaZw1jb+a+gX3+gHPxVlrPJF45a7HdD3746T28tRW
XWrKT8mf1+pSeZvnyfzUOGraFybpVMwbaX2X+vvaz+d8autNia9Sv1/XOXff
DMdLwVEpfyr1yU19z1L/ldbvDTtmvx58ZT0q+ckcx8P5zCm24+Ye6zvwhrnF
I9zi93FecwXXBa+YS+y/47zWpz7waX/906/2+jpOz8d3XNrx77jxujnMHJk4
0LqdR/4O61+M1v8c32/OTfmYLc7Lv3/adr0uxlRH3zzl/AxzVYpn93HmLPv9
zFOOr0r9aewPZD4yT6X5K/kLE0+ldecqT6V49q0ctRpf1ezZUfFVq/w05al9
vHAUx9z1eLwfr3HTlKt8P0x5aho31eKkkg7VeOqoPnopr495xfOP9XavD81D
5qnETSmfz3UUrEd5vct8bp7CXpiHUv46dsb1rjne9bRT/WzHiVtnsg7lOCT7
mbwfPrFdhx/gButMcItHeAV9x8fbv+bRuo/9ivAG5+Vz+Fz46GTPvvNq+zs+
799/9v9qP8d7tC7lMXGk9Tlv8z2ax/z9Jr60Lsfv6Psg8VbKl2TbOqV1KvsD
kw7rEX+546tSfZHEXda17BdMce1Np3Iei+clc5Zft25lvnIcaaqHZc5q61vr
VczzqR77VJdq9X2SHUtcxfaUo1b9fs1eH6s/7fXzPRy+mnLR1J/X9CjzU+Mm
ths3Mfp+t+7kdYj9eV7HOF+v+fmmfWXMT8w/qX9M8uelfhSt76njUb1ehZsY
PU8nbnL9gqYzTfv7pv5z7LddS/E0qd6T48p9HvMJo7nGfjA4Ax0HPoFXOM6j
/WfWf/g885zrGvi8fC46E9fD+DXvfNPTM3zHpX3+zqttXzd/p3mJz+c6zU+O
F+O6/Pf5/OYp3u/4fX6nlAfZ4rZSHBfnc9y88xccx+77OtUVdXyg4xAZnedh
3rI+Zb9fyvszP6V4qlSPJeUDWseyn6/VvUpx6a3OAqPj05N/b8pPUx1qqkut
6lNb46W8/eF2eV2XOpav7ot+ta6/rXJRO27Vj9fizKfx5F4f+LkwNyW9KdU3
2Ou3S3UOWv/hlG+X9CX757yeNDc5rzr1E7beZF6y38Jc5D605iTH7SZucpyL
48edt+b4bNdXSvHZ1jHMKdht60rwTuIS77c/zTqOecz6VIpT5/V0HehL3oab
PH7+Rz7/4CvuQodK/kiuy3zk/X4/x/F9WOcyZ/G78Hv6d7Pf0zxtP625y/Hz
5ivnK/p+db9C+7vTdsr7sx/QdUOSX9BxUnATHJXqhbpOqHmKecrzlvWo5t/z
yLzZ6rBP+90k/cnr6ml+X4uHWs2XWuUqtvfqUau6yarf7xj96b7GVR3n35v+
Dnt5a1WvSnFSLY9vlbMcxzjt6+f1lHXrVAfB67tUzyDFjaf8PPeX8XzKvJvq
dTa/nu2F62yauxKPOS+dOJRULzz1c3EcTqrj5D4sLQ7afr0UfwS/wCWMiW/g
II5LOo95zjqU47Lsnzv9ft918am/7eO/9z/4AW+9+KWnH/Dis3/Kf/Or//z3
feeN1z/9k55/I1ecxXH+u5KOxX5zmb8fx2l5dNyW/17Xo0hxWvYHus6Xda5U
ByNxF/zvPthePzT91vkaSd/iuFa3zTqW46nMX9avPF+0/oIp3qrVDbV+BW95
bPFULT+o+f3gruTnSzpV2p/0hKYvNN5qnLXV/3ceznoo/rx2fXPdru0/2g84
1bOmulbSa6d1Olf5yX1pvG5K+lWr18n8w8g8lfJuPL+lPqvW9RNXOf7c+hUj
87r7Fjf9yvUQvb53vHmqJ+U4F3OVR/OV9Q3no5mvsLOue8Do+CTzBDrQ6ff+
rhvb8Is5yzqP+cqf4234xZ9rjnp+G3/Md1+N8Bbjyf699YaeZc5K15HitsyX
nIfPYb/1M86f6mI539H9dpxnaP+pzwdPp/h512twvDojvOU+hDw3yW9uvrKf
3ftTPVE/x65z5f7OHuEs119Iernjr5K+5fWl++K0fjjebvUVWrz6qn9wGp8y
1Q+meta5Oeu83DXll7vmq8RTc7/hUbpW46rEV75/pnw1rYuQ4qtSnm2rg57W
R/YPNv2KecRc5by+FDdlbkrrSedLO44q1Ql0nAfztf2BrmuQ+Mp9js1ZqX8M
63/7A51/l/LIku5gO8lo3SL5BeEe6ytwA1xgfoJr4BP4x8dzHsdZWSez7mOe
4nxwEhx1eg6++/L3e9vl7/vWG7yFjsV5fX7zIn+X+ch/r0deZ+S6zXXmz+Qv
TfVNrW+5D8/pubiuB+G8Rd9fjtdyvqnrWjm/gvs+1WNvum/ishT/bj3L8Viu
c+W6Vu57Yz1rGt9uvmLb+tW032DzIzK2euuMU7+hOSvpW4mzpv7CZD/PrWNN
OWsbT903jprHXW3lqxfrW72v3968P99307oJU65KupXHlteXRq+rGK1bwVOO
V09xVl4nmq+cz+fjXG/K+deMjuPwetj1om0XHFfV9KmkU2GXHJ+e6kHanmIn
E1+lOkqul5Dy/OAa7L55w5wAR6ALwS2M5iHrPNalHG9ufrH/D376mGdf68e/
7eJ3Pvv5PvJtF8/N429926X+8d1XI/zl67X+lf6eNHIdbMN9XDfb9lvyOnwF
d/I7u56F495dP973id9vnTL1FXL8HpxFXmrirNRnOvWtdD1RXrcf3n7GFM/F
8+36ouYr+w8dt2X/Yep7Y85KdRmYH11/3bzV8gQTX9kPkXgr6Vi2L8lveK56
oW20/T2KrxpnzbjjoXDV0TrXzdenfsOpjjX1F3p/4/2UJ5g4zNzF8zTVs1pc
JaOfc+tZrqOe+tDYL+j4qlR3yvOe15/Ws9z/wn5C5mXHXzneCu5KnJU4DDuC
HwXuSv11rWOZk5Kd9X5zlc/j82GPGdFNnAeInmTOsv/N/GNe4X2cB56DN+yf
M+fBQdav4Ct4Cu4yb8FZHP/84z7rpj+R85uneJ2/g/3W0Rg5D9dt/c18Zu5y
HVXnC3AftHoQKU4/3UeMicPcH9H13eEu7n/4y3XZeG78nLjuqNc11ptdh9TP
d4uXZ16wzpXyDhN3pTru8FbKK0z9bxJ3pT7Ons8Tb7mOaOItXvd6v9Vrb3pD
GpP9bLqWX7fd3qtnbdO3zhUvdfs61lF+wfT7HFV/IfkDff8m/ar5A5Mu1epW
Nf3K8VbWwdGv9uYHJp3K/ZBTfJXr5bhOuvP9mk7FPG+/IPO8/X/YidRnD32g
1UGAg+Ac7B2vp7jn5E9iv/2BKa4qxY3DBYzWhRw/bn6CJ6xvWQ/ifFwHnwMn
wUf4A+EotuEr8xbnSVzFfq6Dbb/PfMbx5ib7JRnNq/CU66iah9g2TzE6T5PR
+pXfn/yO6J6u04Celeqzs9/Hse2+hTxHKZ7ReSepH2fyH5qnHK+FnpV0LOYj
61ds209o3Sr1afaIf8A8ZT+i9ayUv9TqiJqrUnxW4qmkYzW7OPULTvWtaf2G
fdw09Q/edlzWzc+b/j2rvDnVm6a/Y7pPWr5F4qfGTdafpnU9m59vqjsxmpvY
tt8v6U/TuHT0Jq8XXcfT8enwk+tzTutNue6U+87a74c9sN7k/sTuR2y9yXbN
dSQdf5x0KF73eR2XnbjJdh9+SFzBmHQoc5D9epwP3oGDTr/XNRc9/1l/yNuv
eOj0+739av/pz7w+Dq7iPHCP/x72c16OZ+T62Lbexese/XmOs7JfNNV5d/y/
62W4TpjrYlinso7lvkOOn0/9o+0XdByh++FYx4K3HA9vXYrn1/VGHddujvJ8
wDbzhXWpVEc0xVtZj2p11x3PnvraeNt81fjJ62vsBqP9Gkl3SvzU4ttbXmDi
qOYfTPb41e119ve9+vZt1we9L3698+lUSZ9a5a2pTjXtV2O+ajrVtI5CGlPc
euvv1/rSeB5qddGdp8O261fBW8m/l/rQtPpV5iuvk5Ofz/Hq2BvskOsVud6U
60GluuTWGVb9g9Y9XIfcuhScZb4w9yQ+gUOs19hf6M/hvKff6W2Xv9PbLn+P
t1/+Dm+/eP62T7zmql/8v/6NT7/q6/2McBjnM3fZn8h18ffwvqR/pe/DI5zF
55i3XD8MXvLouqzOA+D96IPOH0h1X11vy/Hwqb+O62OxvnBfHPbDWR7dN8fr
G8dh8Ty7r7n1q1a/IcW9O58w1clyfLvri9r/1/yBSbdK87LrtJu7pvFXTb9q
utWUs6a6VfMDtu2kV63qV8dwVeOs2+aweX7gi/Wsde56db9s/n2ncVVNz0r1
rFIcFeNqffVUDzjVs/Jz7HpW7vfgvMDWv89x6+Yu16lJepb5ynHr7suX8v6s
Uzm+w/4/Rtbh2AnW99gX+//gHnPVtJ63uctxM9jDpFu4HmfSsRwPbn+bucMc
0/QejreOBVehR8FXn/D8h3zHxdueWfV3vf3yd3rHxZue3lWf/knvuMFfHMd5
+Dy4jG04KPEex/N3MVo347rtn+Tvsv+R79t6Yuq34/2OgzNfWS/zcT5fu8+4
b30/u95aqg/v/Twf9hemOHnnnaR+z6mOKfOC/YOJu1jXWd9idF+txFuuP8r6
1GOKe0/5he5DaJ2LMfkHE2el+Kvkb2m81fgqcdZUx0rHTTkr8cQ+feuu49zX
6y00bkpcap3K2+33MjetclTyD5qfttatavUVkh8wPa+OR2c9lvIAva6b1q1i
v/mJeQ2dCo5i/mN+9PqVMcVFtfy+1AfZI/bAdUCd72f+sV/HdTRTvU3HL2Pn
kg7G+Zx/hz03N6HDwANwh3UijrNeBZ9Y54KrzB+cF93J+hPcxHj6fd5x+btc
b/M++Iv3m3/4e3zdjmv3dfJ+uI0RXYzP4Xjzk+PS+P5dB8w6luvNe7/5CX+s
ecr8lep1pfvPcYCOD3SdtVRP3vmxzucwT/l5TXVIp/Ww2E59oJlfUvx66r8F
T6X+OPYbJv0qxWElrmIed57gXt0qxa0k3Wo1f7D5CRsvreYJmgcaP61x1F3r
UOf3E079fx73xlv5vjCHt/j1xFmpPqj96i2vr/GVOavFq7uOlftFpHrqaeQ4
x40yr5mvGFlXMl963eq+Nvb7ub+s61TZ72euwi4wul6V607BQat1yX180ru8
bf+R7bL9gOYi++fgEbgDroA7/H7zi/kD/oGHrD95NFf5dXMV/GO9ir+L6zBH
+joZzVWM5kGO9/dm3nKcGnqV64LxOzkPwDqj8zUdL+/ze4S7HMdlHct5iY4j
bPW3Em9Z77UubM5iveTnPOlVrMNSvffkJ2T+YT6yf7DVZ2j9nV2vwWOr25Di
2VPe91S/av7B5i+c6lbJH9g4a1WnanmCiaf28dZ95ax1HWuNR/fzVuOq9Po0
3n1vPfbVOPemZzkeM/W5MWe5Pmjiq1RvfdrPhtF9NLzetV8h8VSqA+r8cOc9
MZqzHM+Cv8X5XK6rmeJtUp8628HkT3IdAPvt7NeCFzyaQ+At8xk8Zn+f46bw
+8FRz/Hke99xabfeeel/fefFz/h+b/7L/+EffMflfX99HK/zfrjN/kJzl/8O
jxzP++E98yHbfp95zvFYrtdgjuL3cj5lqg9hP6Q/x/xm3cvxWqlvj/mL+zv5
F11vzf5E94nmebKexXPoeEiea+KzrGt52/2k7R9M9RlS3VHr98lf6PpYibtS
vHziLetaLZ+wxcUn/pryVop/b7w15apkl1sdhqZvJa7a5h+8r3HuW+PAtsdp
rfJX+52n41b+YjR/Oe+26cZN/0p1Vfx8O1/Gce/MK9P6VlMOs84Fh6V+gq5j
5fVxyxdMPOY+ghzvfKpUP9R5XOYv+3Ecn5z8PLaHnM/10LGr2FvscYprd/w4
vOS8PutW1pe83zzENvwFX5nDPuPZr/GX33nx7Nv/qF/+zosf//zfNZfBY+zn
PJwXzvN1WZey/sbr5kTzHcczEhfmzzePOt7N+Y+pHj28Zb5y/Qh4LNWLgPtS
/VPfR14XpPvS9btcH9X9fRy3ZR5DT055v15nuR+1dbBU9yH5GR0f73ycFL+V
uMxj6m9oPkvxW46X9+g4+aZ/mcNW/Y2r/sWp3jXVRab61yqXbeOxxi/n5qb7
659s/Jbiv6Z5ilt5zePe+hDmtVantPkpk1+S5916WYqnT3VJU36idf7UV4d5
0fUg7F/wfGx9rMV9Oc4rve44eo53XIvjjuE16wnWJxKvYT+tq5n7sLfOS8Qe
2x/p+Ha4wvl/cIj5xPzlOCz2248IZ3FeOA2d7MTD11wGt53uq+v9cB3vZ+R1
+IrP4e+0n9VxaOYz63H8PWxzPLoafx/nS3Fj9vs6Ho3XW14ofxccmN6XuBB+
S/mU+DFX1xfuIwSvuY6J+1fzPLm+hPUzxxUwuv4w8wLrOs8Xra6E63Kl/ole
dzre1fzmPtVwWuK3xm0t39F6Wlrvu67ENL8x9fU5Ki7MXDblvK2cNvVjHqun
3TcOm3Ln3I/Z/JmNz1f9mN4/1dG4zz0mHks6tJ+zaV5jqm/c8hpbf56Wz+h5
zPVMPR+ax+yvcL1Sr7tT/L1HH8fovEbXN0UfcF8V9C7rEPY3Mjo/jePtr3S8
tePuXS/BcV3mMetdcIdfRw/yfnOZ47zgLvQu9C/2m79Ofq13RR7jfZyf8/G5
XIfju5wHAE8xcn2M9qtax2Pbfx+jOdZ5A6l+q3VOv87vx/dv3ZPfyfXHHF/G
/eL4Mu4nRvb7/kz9ul0fxXXnEo85/zGtk/x8O2/Z+pr7LJrLzGeOI3Pcfutz
kfKQ7O80h3lM+ZBsu/48XNb6/KSxxe8nv+ZqnYmpzrE1fmw1jv+8/DXlsbvm
sq4DNp1xymHTfMipDtY4LNXvSn5M+y8bZ6U6Xc6fSXqY/ZXmLsdFeH2X4sga
fyXuYl3KfJjqyLP+TRyV6qCm/jvOc+d1x49hN1L8GH4c+xmtI2C/sGuMqa4T
rzs+LNWLsE5iv571o7Rt/x12nm1zjPUj8wy8hQ72kc8dW++6+PU/8pmH7V1X
/HWyXzc5DP6Bt9jmc5Iuxd/F8VynuY7rOXH2uy6eHfXnPv+dVyPXY140Bzq/
k+uCp+w3dh0LXk/+ZMexuY5Z08cctwaHuY+A8y8Tj7kOLPe/4/nRj10HjNH5
Mc6bcf8fP+/WxVP/a3iMeSbFlxFX4fxtx5k1DvN6NeVVtn6M03h+9/+xvyTx
l+OYzV/2a67WVU3+I9vTpIsk+310XFnjjH3c9dDGrbzZ6tYeF1eWeGxrXJn1
MJ6HlkeZ4vxT3Kfj+nmued4dx+/6qc7TNo+luqkemb+Y7xzH774+rkvhOqgp
jsz7/fq0LgV6mP2S7sfj/nb2S7oOl+0Zds71BNxHJvU5hMdsn61jua4WPGUe
Y7/jsOyXtA5mziFODI75vqdf0uu//F1X/PPLnhvKd188vdinFv/dVzwEp8FD
cJzjyVy/gr/DPMn1Wdfi/OZDj7wOV7LNdZlP/T2bF63TtTHxMr8Pvzdjqs+f
+kpaJ/Po47kfzWfOR2GdApe5Pljq3+h6Fu4/lPo4up6fuYz1nPtle74xn6GP
Od7MdcOcJ+6428Rn9l86zizF/6e+jMk/kuLNrIt5tP+m+SlTvP/UfznVzWzP
kx6W8iunnJZ0oqYjvVx81v2U6XtMXLzqp/R24vvV+mHmsfQcMLY6YuY2c1iL
E0t17VP/RfZP4/sdL+Z+1Y67tV/SeeyprmrK17Kf0tv2R5rDXM8CLsNPid1J
faThLvOY/ULuP+M6U6kPNXbXcfnNT+e4e3MOo/Ue5yHyfs4Hh5lf0L/gLvjs
dN9c8xkjOhTnsf/QdS+cz+k6GfAiuhacyLavk9e5Hq6XkeuDyzgPn8P3ka6T
75PjzJH+fv13mY+tr7murOvRwmfut+k6GvCX8wXSfeu6r/Zb2l/J88U6yM+j
ucxjqo/hecE6u/mMecb5mYxwGfo+81eKL0t5AcyPnl8Tl1k3M5d5nZ3yM5tu
ZruT4sgSl03jyLx/qnsk+7zKY1v1szX+eqh62ap/dR7PP/Vfrsbzr3JZqjfW
4vjTmOIxrZu1+q1NJ3P8fqq749HrQs9L9l86ft/5lq7byjxqLnPcV5uf2baf
BLvQ8i0dr+w4L8dHu46U6xLYPwS3pboI2FPsLHbXfkjrRIzmKO93/S/rU453
h0c8wjlw1+n7vOau031xzTu8zvHwG1wGB8F9vl5fl/U6626cFz0MHrNOZn3P
+hnnY+RzGVM+guPqnGcKf3L9HG8d03oo/lD3U3J/AOutqR6t+5y7vpnXG+i8
rp/hOhmuj2F92vnPXjfBb8nv6fVX6p/huhrO22Sd6Hqw5jN0s6SftToaqZ+k
52n3jzSHpbj+VCfJfsykm7W6+i0vM23bjiY7az5rXJY4rek3q/FSU165H9y1
Gj82f1/jsVXdbFUfm/KY1xGMXnf4/m/xZYnHUv/HxGPWy8xjKY7MfJZ0M+dT
Oq/SepnjyZgfU59H9x1KfsnEba0fkeP33S/I9StS3mPSFxzP4zh910dwvXxG
62PWh7Dn2HnsPvYefkg6mbfNQc57hH/gmV/4nz1Tht59xTPw10l/vOYztnmd
96Nbcb0eHe8P38BJ9p/CX/Ah18fnn3Scaz40hzE63szcx3a6Xo4zN8KfPp/z
COwndR6G4wxdZwPOSn5x92eH63zfcr/CZ+Yy15NlPQOX8Zy5D6WfR+dlmtec
HwCnpXxNdDLX2/F6EJ3euj5cljgNv4DzMb3OZbRe5vh+j9P6Ga2erO1KskeJ
y6Z8lvQz29WmnyUua5zWuCBx2xpvPBQe28prq1zX+kTd5LIWb5b82dM4s6k/
M/WXTHVkm45mf+Y0vszrMtZt7iPZ/JitnpnzLt23230j3afX+ZYp3sz6mOOH
vd7268z3zP/YD/yY7qOd/Jj2Z5rX0Mts55JegX20Xna6T67jwLHTjsc3pzke
zPqN8xkdj2ZuMxfyOY6nty5m3QxOYuT4J5dxaOYh86b9oPav8rnp80/c8J4r
bvv2H/S3/tMf+vprbuM64Dt4zzoa18fr6brsV/X7uU4fb27jd7P/mfvBebjk
c7oOrfsNwG3oaakfgfU37m/7N4nDdPwZzxfPm+ucOb4AXrPuZo4zt3n95v7h
jkszr5nbWFeSt8kIt8Frzt90/K3Xve4D4Pys1F+J7ZQnYF5rdWdTHJr9mh5t
91qdjHPlaU7rYU11tH362ZSHHsq4vU5Z0sumeQBTPc3rgKlf0378xmXJn8mY
+ic5D9P6mePMUn/KaT1/x5tZ3099vfFnprr97kPp9bD1s8RfKc7Y8z92gvgY
90ly/qXrYDhODC5z3DT7k26BvYPD3PcH3czxVin+yf5H+9lcPxU7bz3NvAc3
2D8IX8A1cBfcY92M4+xXZDSnwDt8rvM++Xz7Tc1fX/0MB37Oey4+9tnP/Nvf
c8kNr1zet++5GuE0c56vw9vwGaP1OH9vbJvzrMvxu9vv7D4H9nMywvuM3g+P
8X6vF7ye4H42l7GOOc2Db4l1zMxnjM4bcH0N4kHNZ+437vg06/HW01J/TLjM
fk/nDcBnzt9M69vUHyDpau57ab9nyhdw/FmqXzbtA5DGlh/Q8gKSrpbsedJf
Eoft5bMZjz20emXn57OZ/3lebzhx2ta+S8m/6efCz4f1s9Tf0vq2uSzVKbNe
Zv5KfJbyNJmXUp8l5jfHmzFPwmnOt0z9lezHZNs85jgW5nPXx8COuE+48ygZ
iR9DP7AuZj8n9s7+J/unsLOOM3LdMMe9Y8fZz+g6EqmOvfMIXK/CfkT4A56A
g+AaOOnjnl/YtU5l/cz+0KRTpTwD9C3OB1+xjU7Gdf39zw945eKPP5dB33N5
377nav/pfrjJafaHwpf20/K6edT5BuY+f5/OX7Xeye8Jt7uOBryV8ji571xP
jfsPbrM/1PkCbKMrux4fnOY4Tufb8Bwy8nrjN8exTePSPO8k/cz9y12P1nmd
zH9erzp/07pZ0s8ap7U6G6lfwGp+QKpjtsppSf9Ifqu9+lnisVXd7MWc1jjm
vvDV3tfn+QBTTlvN39zLadP8gMRtKV8gxaOlvM0Uh2a/pnkt1ZN1vf9UX8N+
TfR+96mD17xebf2YUj0Nx5u5/6X5LHEa63z7NdHR7N90v2n3R4TTXC/Kfk/H
oWFvU18h8xn+L+su2HVzmvM4U717c5rjq+AKOASOQa+y35A4NEZzjzkOrnH+
gT/XPGQ9DO5CP4Pb4LIf8g89I4tXLn7LVz17EF+5+L2f+Y9/8O/7+a9cHcff
4Tg263Xsh8PgON5vvrN/1/Fw8Brfu/3T/G7O53SfADjM+prr2/K6/eruS+A4
NY/uU8Hz4/7n5ja2eR6JB3V9Dvfl5DlGX3O8GvMCY8rztJ7Gdsorh9fcf9P+
Tutqzc/pvgCOI3Zep0fm/ZTX6fi05L9J/k7zWPJ7tvi05qfay2ts7+W0xCVr
nHbf68+eX39b9Yeucl3zl6b1wDS/IOluqT4a26l/U8ov4HlNfQFSPTTXqXU9
NOdzeh4yz1l/Yx3qPE/Xp/X8mfpk2q/Bejr1N7efxPM+9gC7gV1BJ8DuuB4t
2/Aadiz5RV3fwPyHnmF76joN2HHzmvMGHU+W6kW4zoP7kNsfar8oepF5B16D
nxjhKo/mO86X6mKwHz0P7mJER8PfCZ+dft+b/GbdDX8p5+f6/Hc+UVxb0gH5
+xPnss37nYfqer6prh38774D+E3Zz5jq6Kb3wXXuS+D73f2hzHM8R84T9XPn
PgTW6cx1ro/r5999o9xn3fOQ66q5vhrzmfND4Tjrb8yjzgM1zzFPMzrO2Ot0
x8FgB7ALjmd2nXPrcNP4NesWrY4a28kvutr/aaq/NZ5LXDfjs739BO67Xpd0
uf06Xfs9Wr2Vxm9Jn/P2qi6X4ttaHnWKF3W8G89r6rfJaJ6D3zya11LegfW4
1Hcg1VHzetjxba2fk/0kbLMOR4dzPihc5/6a7i/gvAPX3bA/KeWB2u6Z57Cn
2FF4Djvt+rL2j3p0vVjX6Wp5oOY65zeiG8EjcBQcxAgnwVNsWz+DZ6yHOR+A
MfEhvPYD/s1//ku+9se894rX2P41f/77nv6i7734i7/xc/7Cb/yc917a21du
cB/+Vf4O57c6fs9+1CfS5fx3ml/Nh3AyuqT7yae+7vaLuz8p95f7fLHfXOiR
+9L5CejK7msA3/H8uG+780vd35Zt913juWU03znuzfqc6+Zan4PjUn9PRvan
vISUP+p6ay3erdX7MMc5jzT1K7B/NdX5MM9Zp0sc1/yqrY5HssuN31K8W+I7
88UxPHfX/HX++LYptyV/atPjGq8l/W1Vd2v1b+G2lCfa8hMc/4Zubj3d+lvr
x+l1YYp3M6+lurfuy8l61etc624p38vbqR6T/aesy6274bdxP/TU78n10qw7
ON7N/Oa6ati5ZEcdf5bqRKDPOC8UrnOdtRQ/ZT5z3L/rZNg/CjfBP+hZcJHj
zdg2xzhOzvvhNfiP88Njr38Oltdcdrof33dp7997aafee0OH43o4L7wGnzm/
wfVBrNNxveZYuJTj7aeF+8h3sP/Uv6f7llo/s7819XfwedyPi/M6j4H7GF3O
OrPjENwnDX3OcaZwGyPPKTq58x1Sv3ZzW+pD5bwodLmkvxEPl/IUnD/qPAXX
YXM9NnOb88pSv6nkT2312aY6XKqXm/S5ad2Pab7C1ni31Ti41zavnY/TjuIz
xqTjtrpr0/yEVh/XnGY+4/mb5iVYT0t81uqxOc6NEb8onMZ8xTxm/6j7vdjv
aZ0s1V1zvijb+EtS/wHmedbrth+Ob2N0PyhzHPzmfj3wGXoE/ifbRfcTSPFt
zqs0r6W+4Ek/S/Uz4DR0H/MG3GQ+c14m/AO/sN/5nNa1OB+6F/utmzHCZ/Da
K88u+ye+79L8vvfS3t/kNLadpwBHebQ/1P5a/i7//dYh2eb75fdktL876aK+
f5wPzLb95K7v5nrL1tdS3RB04tT/IPVt53lzXyrrbnCa+4jyHFs3d56S85im
fQ+Yr9DbVvu0r9bNZXR8curL7vkeO5D6GjR/acsztc6W7J39Th5TPQbnMTR9
rXFa29/0tRYHt8ZtD5XjVuP7Mrc1Xt4a19bi2Ri9jkjrDefpJH7ztuuwtTq5
zf/pOLbkB00j803KS3B9SecnOJ7N61nXvWW0H8P5Y85DcJ0156uZ1xy3lurd
Wi+zbub+BXAaugP2zfHh6CC2x9hp+yMZrbe5fhn2PsWt2Y/K+1z/H56AV+AQ
uAOegnsYvR8eglPgInjG/k2Ot06H3xPdDA5jG26D057j3H/8vqvX2Y8e5zg3
x+eZw5Lex3X6+4FDGc2t9rOmvqj8Tu6r5Togjn9z3zDXjbFu5/fBg45/Y3S9
XeI1eX7Mbc635rlDZ2O035T4ONflZR3G8+44N+eZOq7CnOY42qazpf7ujPgd
Uh8qr5M9Tyd/qf2jHrELrg9ivc15DCkOx7pC09lanJv5rOlrU11tWl9i1T/6
qLtN+LNz3Iv393i3VX5L99dUf3P9tjSa67zucdyB9Tc/r45rTfpbGqf5p/aP
Jv3N/dqdl+86usy3Xi973Wx/KPO26zzhF2W9Tl4C/hfW+9gT62twmrets9mP
av4zzxH33eLYrL+5vpfrg7lOKzyX4uDsb3WcvOt+2B/KaP8jvAVnwWHO72Q0
t/m86Gv4OxnhtJO9f9/V9re865f+O9//C953yenfc7UfXQ6Og+u4bvjLeRb2
gzpuLX0v/N3On7DOyOfAeU+UB2E91X5v8xw8lvzlfr91PteLM88Rj+l1Cfe3
6xT6eUh9c811rLPMcdbleK5d343Rfa0cD2v93/WJmK8c/+a+o+Y61w1h3kx1
d5Mf1fkM5jrm/eQ/TfVDEtc1XQ57leyaec5ctzVvYarDbfWnfvjY8k336m4v
G9/N9bpVf2ri8cR1vm8S17W8hBT31niu1Q9JPOc8cvOcn3/nm3pMPJfi4Fzn
zX5U4t3cR9T+VPerSvXd7Gd1vRDnJTiuGXsAz1mXSzznPNOkO/h19w113VPs
IzyHfXWfA/Q3/Jyuu+Y+nfAedpr3p35XrtdhvQjegL9S/Jh1OXiO4+3PtH7n
vAO4y/yGn9TbT++J3/nGj/2eS/v/vqvxxO3Xx3FePse6oOPxHO/GfudlWG90
PgSj8yBcVw6e5vPc78t5xPaX8/tax/X94HhJ922F59D1uE+dv+p6v85PTX3o
eU5YB7kOifO+k1+VeIlUr9d9VJhXHK+R8txTvRHXg0s6nfNQU93e5Ge1Xmee
c7ycdTvXhZvGwaW68Emfm9bxneYtJI5LcXBT/a3pcs2f+trU49bj5JIfusXJ
pd9pWieu6XLWiVNcQPOvTv2uiefsZ035CzzXjKluSPO7mufcJz7VgXNcnHU5
5kXmS9cB8eg+8Pa3WpdzvTfmf9b1rmvgeDf7g9y/CjsE/zG6nq/7QqLLYQeT
nuL6HXCa7bD7nDteDrvMyOvYefQf1wVxPwL0pJTPaW6Dz9jG/8m2R+tZjOhn
8Jx1OPQ39Dh4jv1sw3G8n+vm8+Ev63HW0ZK/1HVI4ESP5jnez+e53jC/j+Mi
k589xU/6/vB94r6p1gFdh454udPznOsDOz/V/US8/nH8nHU6/K6Mqf+p+2lR
J455w+vE1M/FfeddXyTV9yXOhPgTeC71xzLPMdpvMs13MM+lPvSpr2nys9p/
lOyf9Y3Ec0mfaxzXeM5cl3S45Fd99e2pXjfnnfvBY8fx24t5Ln/vLX6x5T80
jvP6YVovxLrcqj7ndVDT5eC4pst5XZfqwTkv1TpcipeD4xxf4r5YjJ43U90Q
1/FlZH52XoP9quY34qvNbYzus2A/quuJOC8CPcI6HPyGvuF+odhL62bW4byd
+iSY29jv/FLqYLieh/2D8Jt1NngLXmO/63mY01ynjfdxHnjLutvPfg7q19s/
5jnIvf/GfnQ563dcj/NRnXfhfAzHv6Er8v1Yn2TbfOvzMLreCL+T+3ClvqnW
b+E3++Htn/d57KdHl3OdEvcPSfWE4Td4D74zz1mfcx8u4iJYlzleznqc81Kd
x+54juR3dXxv6tPANnHCrivi/AdG+11THlqqH+c6I61/gzkO+5LyU81xtmdT
fktxdKv1RGy/E7/tjZP78OPW48HWOO7hc137HqZ6XBobx7W4ucZxyc/a4uU8
prwHj453cB0456H7eU9cZ/9q86sy4kdgZF5znXP7VdPo9bLnWedBMF+z/mZ+
Z3ScjfNTsRvOX0hxcOht7DcHwnEchx1z3VV4Dl3O/UrNX7bD1l/SNvac8+BH
hQeeXMZnsR+9iRHucl4onHX63a/zChjNcXCb6+2a/1y3jTg3eMy62x/+qc8+
8SbPcbx5jvPxeeh97rNlvmK/69yZC81v/hzHDSbdD55Ofbm8bW5jv/tKcB+Z
E+2nh+NYZ7Du4L5NdYWJo4PbXB/YdUmsc3udRB6E65Hgb3X/LXjOfezNc55P
zHGO003xc+Y3bzMfst6F54incz1gx9FZj7Ne1/qmtv5b2BHGVv831YtrcXOt
7siU59hOdnxWx2LOD1N/6zZ/7DTe7K55bb8ut8pvrc5f8q9yH3nbHNf6MrS6
vuY263bWr11/hOeK563lPySea3zn/FX8qc5jdX04x8klnsNvkeZH1r9Jn7NO
Z/8qHIcuhz+GdT12Ielr2A/rcq6Dhf1JfRjwq6JPmOOwjyl/FZ0FO536bNp/
5j6jtve8z3Fx8ITj1uwndV0P5x3ALa77Ad9xXnMP285PdXzc6ff7novf/cn/
3d/wM3/2+y95/P2Xz8P7b+h38BzXb55yX1TnKcBV6GrO5+D64UT+fv4Of198
D9Yp7eeFp/G38jtZT3XfMrjNxz1RXjLb3C/2yztfhvvU9YTd98H5EYzE0/E8
kCfhOoteV/E8uv8q+pz7cLGuSzpdiqNLcbmuU2m/q+c515NLfbrs32j1gO2H
Nc+5bsmU6+C4FD+XxlSfPvVXnepzzd/a9JhVXa7VI3n1/Znf1rjurrns/JzX
4uQa363WlWv+1lQXp/lbm1+15bV6XWR/K89f67dlv6t5Lul0KU7O8R/2szpe
jnmOeBPXAWC/Oc/1ORPPsQ5nPsfvAs+xjnfdKrgOu4FfB72OODj7f+yHTX1S
sVPud499I/6o9bmC6+A19313/033q8K+s+1+oHBD0p+syzmPFI6DW+Awjodv
HKfm+DuOd91eRj4HnkOPY/tk76/j5NDtfL2cj+syp8F3rvtmjnMcoHU/581a
17T/meuwPuj4PHPeE/WHMP+5jjIjvz+j66G475c5zvVL8L+mPg/W7cx1zptw
HKv7eZ1+x7fU/qrmO+YLc53jcJ1fz3yT4umcH2GuY53reDr4zvF1LQ/WXJfq
0Znrkk6X6pc0P6zj6mzvbB/Nc1OuS3zX4ui8f1oHeKrb7dPnHhrXretwjdtS
fFyLh7T+xv2R6uCk/r+r/tRUT876teuR8Fw53yH5VV1H0uu2lOfQ8hpcf8Q6
HPNVqv/L/Od5z+td93NgXsVfwrzMfO16v/hTU92RVufX++1PTdyGHuf4IOc5
oG84fh0Osw4Ht2FvHRfH6/Ba0mGw8/AB/OC8U/MYupbzB9h2XTfrX3Ba4hl4
yp+HroY/FU6D3zzCeYzwm3nS8WuprjHH8f3473R+LNv265pj2eZ78edaJ3Q9
u1RP2f3IeD8c6joz3Cfcd9bj0I3Nayn/IfVxZXS/LutxrlPCOst5D6zPeO6d
/wC/sZ3qF7nfqnU657cyj5nfkh7nuDnXD/Z86ng69zlMea6Ol1vltqTPYX/s
J0p+pRQ3N/WvTv2sLV5ua9zcVl7b51e963FrHsP2vNRpPqrH1vcj8VrS21Ie
ttcjyV/a+mrxPFlfc35q4jXrbMTLJr9p8pcy38Bpnqesr9l/6tett9lvmvoz
MB8zb7t/tuuLpvoi7rPFyHHedpxcymfAbqFHwGnOH3Xdjyehn7r9oPCa+wqw
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
l/Uu68jmL8eHpXh9c5f7eqZ4MM8vrl/m0Xnkzqd0nUjiMtC9WJ+idzGPMs+a
u6x3OT+y6V34PbAH2AvXacIuOS/N/RlTniSj/Y/Ol3Q8GPqFeYv4L+soqR86
Ogpc4Lr97E86i/t4Ot4MnrD/Ei4xx7AN58AzjuNHd7IeBkehU8FhPp7jOD9+
wxNvX3PWJz9/MJ9c3hfX+zmfecv+Reer2m/oeiFwruuGcB7XT3Pcv/uLus4Z
95c5C70LvoK7uJ/Z79etg3kdgv899ZVC73I8v/vsOn7T6yr3m4K7nNfj/Ez3
hXc/E9erZb5yvrjr1jI6Psz9350nRV578i86Pz7F78NjibscH5bi+Vt8WPI7
Jt0r1Z1KfsfGXd42b039jVP+WuObKTfddRzY/jj/qU626qec6mYprn/aLyrx
W8q3THqZ68y4z2fTzdzP133czW2tDgb8hn7m/uzmNutkrCutl7m+I3EYrmPm
/gGO63XdMuZvtlN9i8Rv+E3Qy/BbYn+wS9bJnF/pPtvuD0B8v/ttm+vIq/T7
rZs5T89+L/jJcfrwAKPjrKx/oc/wOfAbuhk8kXQy61OMz83ZZz65eMdv+Hef
nvEDV5xk/cr+Q17nPLzO58BrnN9xX7wfbmM8PV8fuOI3HwfvWT+D4xzX73g7
x315NMfBb6kffdLNnKfrvBLXQ4bnnDdsXrPexrb1NOdhWn+m/4D1M9c7S/Vs
eM4d/+/Rfk3ixhK/sX50fJjr+XgetE7W6tK6z4D7gqb+Uamfu8eUh5n6R2GH
zG+OE2v1MmwPp35L2+HEcVN/pfktcVp6fZ+f8r7yWepPtZ5/2b7H9L0mbpty
2moc/9TP2XQ2Px8pnixxm3W3VN8s1Zv1fAGvtfoYzE8e3Z+9cRzzn+PLXC+S
+dX1MdDbmK9d1yLlWzKiqzHCafhh3Jca/cD6A/UGHL+f9DT33bb/yf2dUj0M
7DK8xOh4LvOT8xThC+s6zmNMupv1Pc4Pp5mjzGPoWYzw0s/7YX/b+3/6L/zA
DW5L8V5wGBwFV3Fe3gd3wWMnTvjgxTf8sWc35AeuuJHtk939wNV5rN/hb0Vv
S3kR5mT2u45IypNN9dHcP959ArjPuL/gLO5b+ssywmkcxzY8x373j3I/UOtv
rk/r+hnob9TXcP1nP8/2f7q/G+s7+kgxf7D+g9dSX1D3L2G+YrS/wTqb40Tc
H4oRvS3lYVpnS/09vV5PvObRfp7GbR7tX0r+zlR/alWHm/o5t/o7j40vu6/c
NtfXGr/5e2vf7956tNwH6b5pOlviOHPbVGfz8+N6GUlva/U0eN5dN4N5wn5S
dDbmHbjNeQGMrnfGPOZ8JftN4Tv372S963pE8Jv7OsFtjO7D7rx862+s7+E2
trEr6ARwGzoCdgq7ht2Dwxzfn/qrkz9gjkt5AvAbehscR90KdDDnAZrjnC/o
OHTHo5vfUhy78zxdpwx/KNzECC/BbfAVvJa4jfPBabzuz+F88OBJR73mMsb0
uvkSToRLnaeQ8ixc983+ZLiO1/m97N+Gl/ndXe/M/T65/1wPGZ7j/m18x7bP
k/I4zW+uW4vuBq+lPgOp34A5zvVsmSfMb45XS3mZ7gflurTOx2Rk3nReQIpP
M79Zb0v9PF1HI9XVSDpA8pua47BX5jb7S1s9tKSP7O0LtVdvS/z26ttb+wjc
NZfNOW3Ka1NOa37rFs9m3a3pbS3PoPlFU70MnotUN8PPWeI3x7W5bkbq65Tq
ZjDPmNus+1uHs7+A9aj9oY5nS30CWA8z39ovStyK+/rBZ+x3vIz9Lqz33T8d
vQ07g45g+4QdQ1dL3OV+TWxbr7N/1HFK1ttcr9R+NvtJzWvWeVIfSutq6D7O
C0V/wh+J/gVPwWU/87nQd61vwUnwFdvwGlwGjzHCTxwHp+EXtb+T88JnJzv7
wRt8x3VxXse18XcSR8f34LwMx7W5r715Db7me05xbfwe6GzEtZnXrO/CZe47
5rrJ9vdzf5r/XN8Wf2rqN+C6talfu+vWoIu7Ho7XYc47QHdzfVv3bzevJf8o
683Uh53R8WzMr6lObapPa/+o49uss7Fud76B7UbrL9D0tql/1LrblNcSt9mu
Jz5b1dsSj2yLb7uvnLbuL22cOvveun/0KI5L95W5bau/lNFxbamfQOI1627O
C3WfTvcRsO7GvGLdzX5Tx22Y45jXrLcx77FeJR/U9c+YT+E39DbXP3IdNPf3
c16Z8/yZ5/HLYC9cjxa7g86G3wg/kf1MrlNrO+j+T9hN6x68n/gk6m64vhVx
Tc7PtK7jPNHU59L+VfvrUl8CRuLkUjwa/IQ/Er4yV7ENh8FXnI/zw28cx/ut
k8GLjKf79YNX4496Dm4fvPKforc5/g2Ow/+Ln5TvEd7i+/Tv4H5aHOc8Dse1
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
HLfal4H1Vuqf5TxV1yeC3xidL5/yH+C4xG+sW90vy35T8hqo2wS/Ob/BPMe2
R/ebZr5nHe+8ONeFo04C9sj16l3H3v2H2O/+kLzfdbfIiyDOCB0EO4rddV8E
+0XNY6kvU/Kj8j73FYA74Bn0N9cLgZPI/zSv2V9KvBvnQwdznQ/nqbp+nPMS
/Dkpn8L5EK4XzN/tPvWtXgvH8X25T725jtH1WlJcY+obC9fbzw7Xme/gNkbe
B98xsp6wf9/5DsQXuM+8/ajmN/fdcnwczyvPr/U4/Kfuw8B60BzH+pF5iHWl
uQ5+g9u8jR7nvoHmuKTHpbq/7tNgv6r9qOY39Djsgtf9qxyX+mutclyr8zut
N9L8qNP4N3PGlEvWdLm53/J+cdx2fkv65lSHS1zWeK3pcCmPwfVFzG+OJ0j+
1OQ/9Zjq+7LuQmd3HAXzAfxmbrN/1XFx9qeyvnQciPNRmfesv+FHbdxGHBzb
rhvnkXncdeNS/Jv9qcmP6nwEj85nNc/BbfCf6/ziT8Veoodgb/GfuX5b4jLX
qWj1eeE2RniC0XFnzhcgPwFOQo+Dr1w3xP0X4DfyBuA1RutwnMdxdWxzfeiA
vj7H23E+98my7sb35fwRRniP7819v/ge/ffBbeY+fg/3pXfcnfNY4TnuF/fV
YJv7y6P9r08u4+TQ4bhv3VfV/JbyGMxr7ptqvZy4N/MbzznPPfMA/GY/qvMZ
Ur6q9TjXu3RcHPOf64+4zqZ1OOc1OP6l1ZOz/9Txb9iHxG+pzq/5bbVuXKqL
n/jN27bXid9aPFziu8Zta7wyzU+dvn4uDsvXs5XLzGcf/r12fa3FPU7j3Mxn
qQ4co/MUUr6CeS3lKaCrmc+cf2qdzXkKPO+s45gXvM6z3uYx5SkQ5+b+9M5P
IF6Y+RJOI96N+dX14Mxx5jdzGn5S6g4Q5wynOT/B+hq8Zf8pY9LR3CcSjnN9
OOKF3G+LOHE4zfFN7ktvPQZ/J6+7n4LrhHAc+pB1IfcpZUQ/g8fQueAl139D
l2u8Zn+s/ZfOM+VzHT8Hpzm/FT5zfiv6GpzGtuPU+J743tk2l7n+sP+ulH8B
t3Fe63vmbuctwGuM3m/ed10S9DjWC9yPjnfjfuU58LqGvgzW107z5rW+hn/U
/lL32+L5hdPcF9VxE857Qs9n3mEeSiM6nP2ocJrzGZj/zGvMk87/Yj5N/VAZ
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
VvsOdP/vtC7aqt+z1bG1Xpbq2TadLOUBNC7juWpcZp0s1bP1+ivlbeLv9LwC
j9nvyTzlODT7PeE09/e0/9N6meujuY5GqlvLutp1NFiHu66GuY1t7IX9ntYJ
sD/YM+tk5ifsI9voaHCV9QzsKHFCzvO0foauluqrwWeuc2G9zPVcHadm7nA+
Ju9z3Vh0MvgF7nF8GfxFHiR8xsjxxIfBYXAenJbi/K2buR4GvMf1wW2O/3f9
XHiP78n1MuAyeCzVn019AzjefZ4Sl3G/oaMmfyfrCe5jdGDub9Yd1LV13KX1
MfjMfQp4bljn8Jzx3KGPub4Gfk+ed7iM+FPi0Fqfz1QHjfWh+0G5fga6mOdF
52daH4PLmGddR9zzstfZyf9pnSxxWYpHQx9zPdukl6U+Ueayppetclnyb5rH
mt4z5bBtXDb1K963cV6/dsprR/Fb4zbracm/2bgt5XP6eTC38TyluhrO17Te
zXaqs5F0NOaNlC/A/OT+KGwzr7lPsePXUr1bx60xn9ov4XmYedv5mszv+Dnh
N9bpcJv7Ebg+GhznerfE4WCfsGOuf2Y9zf14nEfANroa25wHewsPwm+cD95z
/238XvACeQOuJ+t8SsdXmfPgMvcHdR8BRvsx4S70KfgLHoLb2O/jrX8l/kLv
cp4Ax7MfHmPb+Zeuk+v+C/Zn8r3xfRMn6Lp0/D7Ow2Tb/k34zn5Ovx9+h+e5
z1gHkNfCfQu3md/gNh/nOmlwHTzH+3g99S8gfs310Xh+ea4dp8a6zXFqrm/L
eo/5BG5rfaEY8ReY24j3cB00r3vNcc4fwI/heDXHqzhPzPHLthPW18xrTVdL
cWutnm3yRyU/Z/Jrrupp03zNxnPnjU+7b/y2zmdb9TXGpq8xJj5LcWgpz9Px
k0lf4372/e/4M9ZBPF8pr8D5PYyOV/Bz7rpo7hfFvJH8ncxPp7/zmtOYxxxv
m+LR7A9lXcu86b5Q7i/APMx8zfxtvyf5+a5b63rn5JWZ0xyHZk5L/aCwf66r
4Tpo8BX74S+4DP3DfUCdN4rOZr+n+0TZH+n6/44j8/G8bn+meQ9O4XjXoYVv
4B/izE6/04eutpOe5nxKx5XBS667a33PeQzuI+DrdX0z+I/zmM9S3qbrZ7he
nf2ebLvPgLnM8YvENVrfdT0NuAtd2HU2uK/t14fDGK23wWeMrqdmXc3+TvI6
zWmszxKnsY5zHgGj+6+zzTzEPGVdzXXPzGfMm84rsN/T/k/mX+d5JX3N+QRT
/+e0fu00/myaV9A4bWsewV5OW9XVXsxr95XDtnPa1C+8lddS3Npqf6jkD235
oa2erfMFUt9110Hzesl9Pc1rzt9O/aJYzzEyjzDPOL8cXmO0vsa8hp6G/9Px
a+y3/8H92t3fBV3NflBzG/M88z7rc+LWnGfW+g/AbfhvUv4n9g2+wi7CbfCW
8wngNXMb7+M8+K3Ma/i7nHcAF+AHTf5P9yGHw1xvw7zmfpzJX4qO5b5SxJ0x
kuf5uuf/vvdGPQ70NdeHdV6n69HCae7z7rob7mfq1+E4x73xvfD9oV/CX3AX
3Ma2+0Q4Hs35A+znvOyH+3i/84PRZ81rT0L+p/sMsN99B5wv6tF5B67TQZyB
69fyvDLSf531mOvWMh+k+DTXqXXdRXiNeYj1JP4B62kePU+in8FxcJnr17b8
Aa+zUz0O1+VwPE3yg5rTGLFTKf+T0Xzm0bw29YMmTmu6WvKLJp1oyinn8Y/e
vb9zymtb9bTGY+k+SPmcUz2NsfVfT3mcKV+A0RzmPGxzmf2bzitI+QLmMeIu
GBuPOa+TEQ5jXer4NPs3mTfhMfwUzLvMx8zTrK+d5+W+f8S5ND6Dx6yfwWPE
2Th+BzuFfcPeMVpXg8+wkxzH67aXHu3vdFya+0XBUa7PZX+m62y437i5y/0D
nB9grnE8PvwFl6Gfue6G67/CX3CX+3y6HgbXBY/xfnQ3dDL34bQ/0/VLGPn+
4DH3t7ee6T4Bjj/jOH4//KQpfs19BByfhl7LeoGR+xLdjPuLbfIKOB5/p+up
cf8nPQ3dmefJ8QXoZ+jefm4dnwaPmc9Yt8FjrruR6s/CYawfmb+83rSfM/UP
YEz9nlwnzXFq5rGUz9n6CZjHWl+B1Hd9tR7H1L+Z9JLkB2N/i4fayl0z/999
56/t8WdH8Zj9mkkfS3m8U53MHMb96PxNxtbXyXpZqlfr585xB84jgMucv2kO
8/zA+o75xPzFPMQ8ZR6zf5N5DV2Mec91NZgvmT/dT4951noYXIYuxvwNj9kv
Yi7jdcenYS+Ih7E/M8VRY8/gKnOU+wjYX4kd9Ovu4wmHuf4t9tx9HJ23CVew
bT5DH7P/0v5N11PDr4duBdfAVWzDW/gx4TLX4ceP6fj/VP/f+Qm87rpocBjX
yWh/KNu8n7+X7wf+cp8m9Cv3QeV1x51xvDkOv6jPy/ns54TH0Ml8n/i+NI9x
v/E6uhj89f+3dy9HkiQ9koApWR6HhCVhr8PNkrCENBFz6FVp+b8qTcDcPTIy
q/Nk4vF+uANqCoUix9Y51ZvZ55nrx7lq4aXlx3Jd5vrOmn7N9AW0umZ0Zvr1
OHfOvk11GeptxWNZw49Zz8wqLmv9nPZxWs9s853MD61vwHqmeaj51Mo3nPJj
yaeNB2l4TFw21S9P/Wlfw4/drW++Ct+d9gX8719+r21fgP/f1brlKV/WcFnr
32z9ANYt3d80vqzpz1p/gHXL8OVZEzcSV6Z6pXMFgsec7xSeTN1Z9qeJk9Hp
2gcfXGb/pv4aWRPPE9+Dz4LH1KWZB4LLzB+ptyTf6HeWPGWdR5yV1XyYNc/L
/VnDm6XemTqlfvLhT6JDT15vfZpZ5dGaD61zAILHxEfBX/qRZZX/Cj+WNbcH
P4W/kg9zznnwYj6XeNG6pngs9zu3yv4Hj4OD87s7zzx4KvjKPlv1ZXm94L3g
v9zfeLicB/pr2F8iDnMfIF+mLi18mXyY8weCx7K/cU5AeGp9NILD1CfooyEe
C6+e/Z3zSlKn1J/Wvs3Etb/j+z+rc4ejN0u8bHOc1Jdlzf7YuqX+GonnEx47
5cm2/Fib22Q+3PJk1qvM140fm+qUp/qyU3y2q1d+Vd5s79d2lz/z/5lwWtaJ
NxOfedx0ZRNOaz7Obb5Am7fpmusx12fDaerLnCuQtc3XtK7pnHT5fv03Wj1T
PZk+tPJnicPWNRPHE9fFYc5Lz+3WPbN/dy5n+jbVl5mXkrdcg9uyJs/pcyA+
a3qyrMm/0ZMFHyR/t75M+y6tW6ofCy5zrlMeF/yjv5l+YvZZqhsLX5a6YVbn
lovPnBNq32g+Z/BX8KpzRIMH8/n15bVuaV9FcKx8WPBT+LLwXnlccFvwdPBZ
Xs/6qM9XXxb+LDjePmHPL+vv1tvlzXK+5nxOHdO5BM5/EqcFn2WfFD1o1tQv
c53re2Yfd/BZ9GXhz9JXZB9A9onBaVkTv5znFJzmsXHRPqrsexNXsx/WdyN4
zblP6lOiM7MvQJw29QMEp6mvEa8lj03zNcVnW5z2at+zbX3zYxx314/2/T61
T+GwhscaDst6yo+1Ps3TOmbjyezLDP4Sh3m7uCzXm3hM30L7MXO9b+ecJ64k
3rhfVF/W6pvZj8qTJS5av3ROnnyZfVrZR4vLXO3bTNwP/gpflrwRHUzqMfFx
Sn4JT5Y6pnqb4DH10eaz5DnxWPiN4C/npqsjCx5LPteHLPgkeCr5PjhAfiw4
QD/b4J/gFPGS8y+Dw/SjyKqOPq/jHIJ8H4/Fl7lfPi14TL1+3i/3W+cNXs33
z+9hnVGcZL0yv2seL+4Kvsv3kS/Tz1ZdWs6L4LGcL/adiLf0abEP2Dp8zlN1
ZMFf6b/U1znXV3CYc81zfXp962+WeOCcc/VkrY7pXKeszjW3LzNxTVzW/NCm
+efBY/rStjkB+p6Jv8Rh+mc0vqz50U79mBP+annVvCxfIg4TjzVe5uP62h53
3Ktbfl/e7Gl85jrxZFMfZsNtjbcNPrP/0vM814F+GdYzG2+W1f7MXI+tL1N/
M+uZ4rOmkxCntblOWdWdic+ar5l8WeJt9seJ08FjrtZBxGvOTW8+aOHJkldS
l9EXXX+n4DTrPsFn4jZ9o4Lvwls0P7PwY/ovJG+H11GnLw7I48Vh4o7gttwe
XBT8Ep6p6eWdkykfpk9YeCznQ6l/k7cKPsvnsh+01WGDz9TN5f2dm5k1v5v4
TJ2f+jLxlv4leT/xWfi3/O/OQY9viv7G+tIGf+U8U7/Y9GaNH9MXI32W0QNE
35/rrPnOqu/PdS1Oc/55eDLnMjkXwH2h/ZfOPZf/z+o+NHFv8j1LHbPhs8Rn
dWatDzPxv+lgWh+m+jLzVevDdE6TPFnDY63vLvl5y5c1nNb4sqf9M+7xZq/G
azNevKan2+Owhr/a/zzVLac5TtYvp3lNnvfiMPWYDX81vkwf2uYzKw6zX1u+
TL9E+43Un7W+zMS5xMHUD5pvWfBX6pXZBwePZb/s3BbjdvQo1jNTv8z+3D7M
4K/kE33L1PvrAxA8llWfM+cKBI8l/5k/U59MHSr51j5L8YH+FtbXwqvZ9yd+
cK5A8Ix9jcEz1v8aL5Vj+SznCwSP6LuWz6VvmPo5cVmbE5rPE9yW5+X1rNfm
c+R30lfW+Zk+P99T/k8eMLiu9ROoMxS3B381/aK8WNbsC6y/x2dZ/1hxV1br
keIv9Z+5boO71JXl+lffL0/W5gE0nky9v33l6mezBneJv4yfDX85H8C+ywmH
ZXWOpvhLfqz5lLm2OmWbA9B4slan3M7NbDzZxN+c4q6PcdjXq0Nu67Cv4rnE
WQ1PnfZV5nyT72r1R/Vg9hnLe+XYfUvzkbX+2Pop9bsRV4m31PNbp9RHNqs8
lz7+iXPBVYmLiZfqwlr9ofVXyYuJr6ILSx1Sf3/9xpJPXJNv5Lv0y9RXs/nL
Ot88/lGpLyW/Jp/Lh6izFw/kecFR6pdyLC8TfKXOSrykvj78lrgrjxOvWQ/N
mtvlnfL99U9TJxbcpH5fXCXPZT03n8M1v7fzD8Jfydvl9fTN8HPn+8qnBU+l
/hjcHTye+qK8Vm63X9c6o75izoMNv5X6fPYj6XuJ/7J1R/ua9aOxf9J9VfZP
iQOJD84jD65yDrl6iPBd4qvwWvqPqQtLvHP/6T7VOmTisHMxt/hq8u2f/Cym
eqOr+Gqr22967DZnqd0+6cG2/v2TDuxaHfKrrL9+vqfri6c811YPdoq/mi5/
qje2tfFduZ6aLt/+yanOmOs++6yGv3Js/VF+y/1d4pJ+Y8Ff4bUSHxv+Sv1A
/W2OG+9lnM7+2HmZ6vFTXwzuSj6JDsw5zMk78lrJV/IA6saS3+QdrPuYX/UR
tf4lzyUPEx4rOCx+CMFdWfP44I/ghqz2F+r75dwi50QGn038m3xW8Ig4M6u8
VN5P/wpxovMF7Efw91W3ZR1X/w992OSz8v75Pfwd8r+lzpzzInVF56uKu5qf
hedh+KzsE3Ie5/wP7grvq39r9jPW88VZOc4aviv4y+vW+Zbht7JPC/5Sj9/m
XdrHLY9l/PL+4DDjYPPnF3clHqv/muqL6vC3+Ct5punu1ctMfmLyW3fx1zT/
svEuV335z/DXu3ituZ4oTjzluyZ/ilN+a6u7b+eNdUNx1bbv0fni+rlMuq7g
q0nHlX1T+Oq/v98/fmHOqZzqivZDql/Ifs/9Yfofo6OIvsL6Yfan1gXku6Lj
SLwVX8l3JW4njkdvnzX8VvBV5uglj7ifTz2x9UFaV8xxdDDBWcFVyYPWf4Kr
UieS3xJnOcfIvjn75fRJCN7K/dbHrO9ltf+x4S718/JWqZeFx1H3n1X8E/zi
+4VXU88fHNZ0/faN5nP5vnkd67XyWznWR0Pf3Dwu/2d+h/wf8ljBWc0/Xx+7
4C79wKxv5zzO+e6cyejoszrHaPKHCc5quMr+mVzH6gfU2avfSnyR59JP2nm7
4qw2DylxUH6r7VsTdycfff3B7HN0vz3VDZ0/2fBV629s+Grit6Y6ojjK46s6
rqv81o7Penc9seOvhrc+/l4z7hJneSw/eRVvNfzVdFttjpH9ju4vctzqjMFf
1hfltZrPRMNd2V+1uGBdUZ5L/CXuiq7B+UapK0ZXET5LvNVwV/gu97PWH/V1
TPxOnE8eUDefvsbs15NvsgZ/ibuCr5Kv1NkHl6mzVz+TuUbhK5JX9WMVd8l/
6AuW24OrnJ8TPKfvVPCY9TP5GueFyy9ZT5PHCr5TLy7e0h/Vul3Ti6W+aV0z
a9Pn2/8pDyc/pW+/vGD7XfRhEycHH8tjqc9KfdC+DPsU7fOQzwrecm6E+vjU
4aPTSh0x/Ja+yfJZWb0+szbdVnCXfdHpvxFvhU8PHgufpe9E8Je+E63vsenl
mw9Y9ByJx/p/ZdVXwvUq7prmFbV64rau2PT05t+tfqvhrqv465k64rtw17mO
/2Mcdq6Pd534rcnXq+F0ea6Gt3Iszpr8WFtdUZ5L/VauP/FW9k/qBHKdW090
lf/Sp1Udl34TTceVuJc4KM/V8Jb6LuuNWe07D95KXVH/fOcUBW+F50ofVvCW
unn9JsRbOZb/Cq+QPGh/YnBW9NDRcenX6dzn4LEcO9cmrxf/9NSlfB3rlfqN
tnlHjccRz8gHyeuoD8/96suta+rbZR9k+iOda5TP6bwA65Z53/we+tk2vbt9
Bt6vX4RziPJ/BV9ltW6YuqA69+ZvH/yv3jDne87/8Fu5LoK34r8S3ZZ9ifpG
tPkU4rLwYdYR1Xdln5W4kDgir5W443H2f6krBm+p52p9itlvqofX/94+8fBc
1g3luRLfs7923eriT+cQtbXVDxvPNfl6tbrUhLMa3prqZq/RbT2Ft67jqal+
OPFW2/rgxGO1/z/Hni/B8Q3v5/bgpYajsspbyV/JV6mD178+OCpr8JPXs8fe
7r7L+ZD60SS+JA4FR4WXT9xyHxkeK3Ewx9mHhtfKGr4rOCs4KvgpcTb4KXE5
cTx1wsT/5AXnCWUVRzV9lvXD6FnMU+rgrRdGB5/8GfwjrtIf0/vNw1nDg+U4
fIg8ljxYcFVwhXUxdUrijvBN+lLl9YOj5N3Ul6l3Us8eHBVf1vhPRI/lvEj9
vPy8W92bPg76VjgHKfjTOd3BUcHTOS/CV4WnUt8eXC6O0mck+EndYI6tE2Z/
4XwgfR1yPeX6yvUWfGSd3vkT4q1ct+GvnLsdHJXrP3Ej+zN18dErJA7pk5p4
pe9W4przhZz3mPjofO3E36z6bwVH6a84+aAGP7me1gknH67kO+s2DUdN/peT
j/2En8RRU51w4q92uOXz9VZnPFrHVxNP9fs+zl9x7RZnTTr3VhdU5+552OqD
7g+2fJU8lfuUXH/uc+w3DF8lzsqxc171gZG3sj4oT+UcR/sNw8fnOPHPPuzE
ydwefNXqhVkTf7PP1Xc++2jnA0Vfol+QvFXwVY5TP0leUreV1xNfRWccnkEf
h+Cs4J/osoKL/sajv+ri87ysed3gqrx+XievK58lvlJfbj+efXnql+x/DM7S
58vnWZcLHpr6B8NLRXclntJfPnjIz2V/pzoxv699muIs8VlwlT4NwVWpF4fP
dN6Ux+r9cr5llT+1zp19RnBVroscB0flunE+duqCwUnWC4PHmh99jvP86LXU
ZQVfhbe2Lpj9mz4y4aWav1bTX6nD0jdLf3n17DlufYXq3BtP1fzlJ/+G5uPQ
dFmtPmg+zLrVYU11wav1wIa3Gp66hq++bh3wrE64x1vb+uDTcxlbX2Gbm93O
a/FW47P01cr11uqBbd6PdUHnZ8tnGT+Ct9TB21fY5v4krmU/qa9g8Jbxcaof
6mcYPay+WtHb6mfqvlxfh6zq4oO31GnJg8lv6a8VHiL5NDyFvllTP1lwV27P
mucFd1lXUketHj48i/VB+R5xkb4M1vf0m2r+U8Ej+pTqO6p/V/Tu6t7tIwwe
sm8gvJrzevJ58nmzqqPK7fZBytdZ/3NeT/7X8J1tnmfqgTmvnBfa5ihaF7TO
HdyVNXpFfbLEWerf7TcMn2UdMfgr9zu/y7pgrv/sw+SzrAfqn2U9ULzVfOTV
ueuPlTXxNXgrcdh43XisNg+79RPqVyqv1eqCbT721F+45bPU5Wzrgluc1fit
bf3va/Ba2/rjeb3wKr461WFtfeNdrROKr+SxXBuf5XXgfqThK30b3A+Jr4Kr
sp8KvpLPFm81Piv1QvsMo0uwXqhvjas8vvhKv4emvwq+yr43dQb1HonjyQ9/
/67/8FnBUcFXOY7OV/wVfJXHibdShzGvBV9lDV8RfBRclLwbPJT823zBxV/6
hZu/w3M1fNV4J/03g4vCz+RxeR3nQuurLq5quvroqIKnrAvm/uCu8FvqwOTV
xH/OP5TfEkc5t1qf+NRh8/tYz83/FrydNXxnzhP5qfStpi4Y3GU/a471cwuf
ZZ0w53d4rPBX4ix5quxbxE/6arU6oXO4ch3Ht0H/rPBYwVfOvU6csS6YY/Xs
8lj6B2ZtOit1F21OT+OvEt/ls8RXbb518op1QvUrrW7Y9FZb34amu5L3mPCV
OOvUF37CV18DVz3Pb23xlb/fFldd1bk3/mrSZTUeq/FX8lj2FTZde64r6/PO
rc51qz4r13lW51kHX7mqywqPJc7KPk8f+OZPKr7K2vCYPJZzrrOfTRzWF955
ieraw1MFZ1kPVJdi32FW510nX4mvsoaPiJ4mOpus1o1yHLwUXObz/mKuT9a8
TvBV03/ZzyYOETeoRw9foz+XfYrirzxPPXx4oujRw09FZ9V86FMnnObd6H/v
/EPxlvMm7XP099CHIbg2ODn4Of+r+CprzpfwU/JVbV568x+13zX17Zy/8ldZ
rRd6HDwVfiu4S19gfUzTRyhv5dzE7KfUbWY/pn49cSXxKLxVVn3erRPqBxjd
hHhK/VV4K+uFkx7LuYiNx2r1w+QT+wgbfyXOkk9odcM2L2VbN9ziqwlnNXw1
4a0znPUu//f7OKvhra1P1lX8daqHb3XD5p/V9PANd01+WuIu8Zb+KpN/Vusv
tI5o3TBr8JZzERveyv4xcS1xz/ph4mLW3J+4mWP18PYdOo9HnVbiu/qs5Ink
E/mtPC79U3l8jvUzzarfQ/KbeTJ58S/8u4Ov4nukTse5w+rq5UPyuvJfwVnO
vRZnBF81Py5X647BVeKtvL5zdoKTohuPv6m6q+Cr4K/wWs6XDm6zf098Fd5J
/ZRzwOW5/J72J6izazyW86GDs/S5sk/QuTq+jjgtvFbwVuqG8rme3+GBvS5y
/eijlesuOCy4K/sf/Ryif29+Wdlf5foPn6XeXZ8sea3mNxodROqGiXPZZzZd
lnVC97XON2z8lv7viff6NTSdVsNbyTeNF5hwlvXCrU/W1reh4a0c3/Vn2K5f
A289z3t9zOv9isP+83edfeEn3qvhsa3PQ+O95L9yPOEw647q5uW/9IXPqn9p
1lzfTcclH2adsfUp6u9gX2LimHp5+xL1sdFP0P7r7GftW8y+N3FZHy39HFLP
SJ5IfnGuSFb3+8k/2bc718e5ieG9UrdJ3ksdSJ4i+TL5NMeuwVXiLR+nHj84
TN1WcIK+pk3HFNykf0RwmnjO4zxOny7xkvp4+a3gLedKB7epy1JflvcP/kp/
p32BjQ/U5yrfL69j36f14uDq8F3B08HlqQfqi2V9MTyW50fTeeX1wsdGZ6ge
Ud28+5ac97k+5LfEYbldHBbeK/sl524Ff+X6tv9Q3adxJHxX4pBzDoO75LeC
wxLvoq9IPFSPoe974m3DX1mtW+gHLw7TF14c1ny0Jt18021NOGzqO9z6ZpnX
G+811csmXLarx311/PV6P61TfVc73uKuVodsPJh8mPhr28fYdF7iL1fx16Sn
169YXWdwV/PZyv6vzelp/n/y/ImH2ZfqFxFcpr4r8TarOvrE58RtfbSSDxL3
k0esg6hTMa+oFw4PoP5L/9PGgyWvOicl+VSezLyqL6p+XerzU3dMHcy51vrH
q8NS/6R/V/BH1rxecE0eb90v+Ci4SX/64C1xV+4P7rKvUF171nye4Ej9NHKc
3ye4UR8zcVeen7pi9HT5H3Ls/6g+Pvgra84T50GJz3Ie5PasOS/UeTmHqvWP
uB/J6n5FvlmdfR6f/VBwV/iv4K3oCKLjyvWuL0zwl3N4mk4++EufLH0e9Cc1
Lsp/WW8Uf2VtfYpNP998S099tbK2uqN6rpb3rDO2PNp085P/w9SPeJUPO8Ut
3wVfTTjrFG9t643i51ZnFJc3nsvzTH5rqjs2vVebU61PvNeZOvrmv+XaeHB1
XokjTdeV+ONcHvsUW99iw11ND2a/Ypvfk/1x9LcNZ2W1ryr7bfGW+SH7/ezz
wwOoP1ZH77xqfZH0lZQPk99Qv5M8Gz4rvEnqluG39NkKXgqPJf8TXBKcEVyk
D728kH6q1vX0fxBfpR8x+El/VNfgKuud+pDFtzV8k7dnDb7Kcb5PqyPaJ5rf
PXg3OFmfrPyP4m7xlX6k1hWdb5jzIs/L64Xfynkprsoqr5X9hrxWVvcfXmf2
If6v/98/HJ189kn2H9t/GFyVNfVFfd9z7DzD5veQfWN4rcn3wf4k8ZT8lvvf
xO3ms6Wuq+nmJ1ylfl581fis1pc41Rdfha9OcdX3xFl7f62Jr9v9Hp3X2uq9
5LOu8lryp+08bPjL89o6YpvTo67LuqJ+8VndJ4m/Gp+lDlR/iMSfrOq6Eq8S
x+S1EufsZ9RP3rpj8FbiqvquxGXnIUaXm31y9s36cbW+qeAs6x45Tv6wriLO
Cv5KXnOej/7x6u5zf/KlenzxV/Jw8ro8ivN+go/ET+Gz1HWJy8RZ8ljBJTkO
jtMHQr8J/dT1+dLvSr9UP1fwUL53cJQ+ZDm2nzCPl/fK66VeKN4KzkpdN/jX
flV5LeuKjb9Uz+XcnfBWOa9ynPOqzTsMPxu+Vv1W89/K2ny2cn0FZ+mvZd0w
17lzpO1rTrwQZyW+GI+sI6rfSpxr/Yj6PlhH1Gfa+Gt8dh7PNF96wl3mFeuJ
zc9062vadPOTv/hTeGvyf2h47HNw1vt8uiZea8tz3a0vTjzXtq9RPdcWd3l+
T7ir6enFXfJc+nO1umLDX/pHqN8SfyVO6Ssfft66onNdxWH6ETrXJ2vz47KO
GB1X4ntwmPxX7s8qHgtOy+P1TbWvMat+qNHV6zef/Gf/vn7f8mTiMX0CxFvB
AeG3go/Ui6uzUs+V1Tpa8EdeT3yjf7xzEFsdUb+v4Kv0I+qPlfpgvp9+ZsFH
OdY/NnyWfKB4VV/a3J/n2W9qP+JUJw5P1eqNDa+Jx8Tn+nIFdwVvBV85b9p+
Ev0igq+aD0SO9YHIfil1Q+edWi/Uvy94KzgrcUReS38t64fO2wn+muZv6CMv
7lK/Jb/V/CJOea7Wv9j0W/pENJ7LvDf1KW59t5p+fsJfV3muq/W59+CpLZ67
7hsx8V0f49uZ52p4q9UZXU919K6tf7Hp5sVdXnf6tzS+a6o3tvqi83ycZ+8c
avt/pjmu4q0cJ15mTXxNvLWumHpi8+XKGr4rcV78lftdg7fkubKPT95xHlDW
8FrqlJtfl/gqehp9KoOvgrvURaeu2PxUrfM5bzF8lnr3xvMEpwR35H2Ct9TX
688groofgz4N9g+q61ePFjwUfKS/WVbrh+G38njxap6X19V/Nn2iwVF/0ecQ
XBTcFP5LfBVclufncfl/5c+sI+oPkfMo+F9fFP1P7Cuxzt508Nm35PrJ9Za+
llynuW7tSwzOaj6miQvuz8Jzqdea+hTbPGnncKjXyirecu6hOnnjcOJ1m9+T
/bb78BxbV9SXazsPseGt1q+4rR+ezuvZ4qwt3trhrq1+6vPw0/S5n+avsoqH
s0681VYH3/gr8ZS4yjmJ8lYTf6VOK9eZeknxlf4Q+nM536f5nepvqv+WvJX6
rAlnBUfJ91svdF6i8xDtHxdPZQ2v5fza3G/8d56ivo3JN+IpeaschzfI7Vnl
q5r/d1bntSSf6mcaPKCeu+mvgnuCt7KKN4Kb9LlvdbbwSXmfxmMFN+X+PF7/
dVfrfs5hDp8XnJP7gwfFgfZr6sef47y+fJU8U8NT6uucL9Bw1F/ovawXWid0
7mH8HqwLBkc591Be1+sh/K/7kBwHR2317cFR+vOpL7A+KH6St5K/Co5yvxje
Xp4q8VE/HeuEWVv9oPlB2H+49Y2Xr3L/Ll/VdO8TfjJfTrhpy1f9nge572P6
MZ7a8kBfr++w4ay7dcIJb1kfbPr4CW9NPqcNZ011Q3Xx4iz9t3JdNbzV9Fri
Lv3z3DdN8xSzb2u8lf3RrupOc2w9Ud1W4qn9h8FdwVvhr4K3nEMt7spx8Jb7
6OAv64dtzqL9iearNr86q/5cyYO53fvzOuq6ktf1ywyucP60OqrgleCq3C++
si4mvrK+pr+XuilxX/BWVvXzbc6N76+fVXCQvmb5fcI7ye/pB5vvpU+pvv15
3+Af+Sl5Kv0acr/4THylv0PwWs4PfbVy/sTPV57q73jyD09lv606Ruvr8sH6
wmdfk+tTHZbzo/XnE2d57LzD5hfv/B31WYl36uC3/qbqX8NfbfVZ8lWJ/62v
sOGtNudky1Nt64KTn0PDXfJUV/mrLd7a1tc+5pe+Dt6a1i3e2uKwCR9v9VlP
+T14/l7lufQ9nfRabW3zfoK79OESbxlv5LmMV86n1i/Qfh/5MH0h9MvR9yH7
4MTt7Jezf05cz2pdMbc3X0XritmnJ89YNwzPpe+pc6ydRxdclnqN+ExeIsep
+9jHrz9qcEZwReOfgqvs1xM/iVPUNzmHSD97+/msR+rflfvzOcWPwUf5nPl8
4pvgIOuo+bz5nE0/L85SB6+fRv6P1HGjb2/zpNvtwVnqvFofo36m4vfwWurg
c/6mDmgfbs539e1Zg8dy3bivyfWlT3z0WOIu+S1xVvZjwWPhuXK/uqw2b1qd
aeKbutTm76C/1sRztb4lfU63vlrirtZvOPUdyis03cxUJ9zirS3f9e/sQ3wd
HjvDpx2XnerjW71x8oXwvJt86FvdsfFfEw7Tf0tcpm6y1SPVc8l764eqbku9
vLqGHIvPnD/m3Iy/f5//94tfvfot/ejDf0Uv33zog7uyBq85Fyj3hzeTH8va
6o7JV/rW2+cVfGW/vfgseTKPl/8KbnMOdvJx1uAC51eLI6yjtfmN+kY1vkdc
k8fldcV7+oI6P3viuewDVOf0F3W64Jh8LuuJ6r6s0/r76VuqHksfh9aHaD2y
1RWtU+b2vL7ze3Ietbpi01/lvA7P69zppssKzyX/nOvMeahZcz2rg9c/Xj2W
uMw+xclfvvlAtDnUwWX6QzefU/XxDX9N86n1mbcPsfk+nNYXp7riVT/Tp3HY
tp72DB77Kviq37+ts06/09W64inf1XTyU71xqi9OfvJZxVniq8Z/OXex+XLl
Om/1xezj1HPJdyUuBVclPom75LsS5/SLSDxsvluJv86vDu+VuqN4y/4m8Zb+
EdYb7UdMnkkdJrqXhq/sUwzPYP1R/wj9uqKr148reVr8kPzvnGrxifhJP1R9
C9Rl+3hfN+8nnrGOZ73SfsGG9yZ8Jb+V3yfvm7XxW1nFn/JneT/9GsRXwV3q
t5puXn5L//ngKvsv9CXN+nd8+rV/UN7KeYfW3bMGV3n95PrKddf8HPQl9XrX
j89Vnsv5Pe7ncqwePvEr+0fnybY6Y/MvVa8lrsq+V15LfUnWU/2W9UR5rqv1
xNO6YsvPT+Grj2//rn2H1/X0E791VefV+K0Jf3k84S71XlNfYuO32lyfVm8U
f7U+RX2Fm84+x9t5P80HImviknrT4LLEL3GY+Mt42HxPnetjnVFfiOAv9V/e
Lv8V/OX83NRNrC8Gd4UnSJ3GvsTgsByLr3LsPEd9JMJzWWcM3nCedfK1eEjd
U3BL41eCV8QJf6EzyutMunU/h/jH/sEJB8rzWKfz8zVcGFylb6l81lTvs77o
3ENxl3p6641Z8/i8fuqW0XEFd4UHdQ6P9UN9GnJ+N/4quEy9Vq6b8MOpH+a6
k7/K6hye8FLBW+Ivea42l0JdV+JM9nn2ISZOub8UZ2U/2ubUWldUx+W69XlQ
z5X80foMxVvNT6vxB1uf+MlP6yqvdU/PddVna+KP3o23zvmwu3hrW0fMccPd
k55+0te3uqLn8+Qz33BWVq8zdfaN9/r7c/zfX65n/SHEXQ1vNf+t4K3Ep4bL
5LsS58KTJQ7av2gdMau4K/vn9DXmdusV1h1zbD0xOCtr+C519PoPNf8t5821
x9n3mNuDt4LPUidyvp68iLxX8IX4RbwgLtCXQHzjKk7L+6tfz+fJcdbgxda3
55yi5qeQ7y8vls+hvk19mH0BeR117fkczl9yzrTzd9Tj6eOR2/N6WfN8dfLq
Bz3/9HvPvkFdvHVD8VXq6/qT5jrSF77p5FMvDN5q8+zFZbnfvkX7F+W1sjqn
R5zlnMSsbT5PqyO2+TxNv3W3bmg9peEtcZV8V5uHaJ/i0zzX0z5bZ7jru+Cr
2UdrwqNTP2Ljr8RPE54SR036rAlXWQ+fdFne7nzRNm9UHks8pR+E9cKpbih/
ntU+HnGV/JW6LP21nEstj2V8DX5SPy/Oympdsc2x1mcr+/usyUvO61Fv7Lzr
4K7wXXle7pfnUpelb6n8iHyHPFaOxR3OhwkP4hxj++jEVfJawS3yRPk8zmHO
5/P11ZE3PZM4R3yW9xdH6R+v/7u+o22+s/N29HOPfj3/n98nrysvlTXnQfBS
zpPm6x5+1fNX/KRvQ+7Xv8E+En3e5Y+tD4qfnB8dnJTbc73Lb7U5h/r0Jc7Y
r5N9XKsPqoMXL3msb5Y4yjph46kaX5X99eSLJZ5KHmp6rFYvbHXDCT/l9qke
mPsnX6cz3mr2n/pe+Ol+PXDCT1d9HTye9FieV+Ip5/LkvPX89fxuOKr5a1l3
b/On1V81PkoeSj945/A4d0K9Z1uDoxK37ENs8xDVU+RYf0LncIinEsetFzY+
Kvvs5A/nJSYPZV+vr0ObV6JvtnN41cdHl5V8GTyV/Jp8nOPkZetQ8iLN99L8
bh73/XK7eifxRnCOeMY+SHkdcYn4RH3TX0VnFRwXPGSfYvTz6v3DQ4k7xany
Rc6hbP9XjvM9nHOZx+m7lvNAXZ++V+qmgo/ETeFbPd9zrC+DfqLNFys4yuuu
zc8JXpKP8np3PpdzUxuOcs5O4tHk42A81LfBOdGJq/JP+ru3Ol/rHzQvNJ1V
8xudcFTDT5MOaztfZ8JVV+t/H/M07+4nvO/DsK3b3dWlT7hoi49a/S7nXZuT
03TpUx+g10fDRVmbTso6nde5PgzZX+mzp5+7+ih1UvYDBhfpf6XfctbgosRD
dRP2CyX+hn9KXFYvpU+p/qPpZ0rdQjyUfOScXPGP/VVZ8zj5pfBS6qOSL9Nf
7/zCrOZfdezOTbGPUH9KHy8+ERdZr8vadFjiOXGQuE1cEZyi34I+6vYN6i+q
Xj+fO/hIXOnv65zvrPkd/Z/0p9LPP8fOCQwvGTxtn17wjX15WfWlsv9CPKRv
QnCQ/R7iouarIM/kPkc9lGvigHOfg4f0OVYPFV781F+hzXeWT9J/UJ9C47X9
R8Z784R4qM0ZtD5nna7lNfPe5LdwiovM31ue6TV1uc/il+77sU+/w4STJryU
dcsjTbqnxiNZj2t1OfG/68QvySs1//Zcl/qzq2dyTVxwvmDjl/SzUt+kf4Jz
n/VJcN6NOtHWxyN+Sr0ucVn+KKv9fOKm7LudJ9hwU3BQ8JF+oh7n8fYDBj+F
J4huxXk5zi1Jnk3+zZrHOdcwrxc8lmN9vIO/8r7qqqz/5VgfJ3VJTR8tLhM/
iVus/+mTZT9g84PI8/XxVM+dz+M8SH93f1d1aeqU8v+oU3KuX/B0zjP5InFQ
eCH3A22uU+4PbtKHN9dLVq8r9ePqmqzPiZ9yHQcXOT9QvCQ+yhoeKfs041Gb
09x0TPbnWX9Tt5Q4rI+N+qVWf2s6jcYj3cVLjU/a1uVOeaSGixqPdE/PdOpD
8L662ymOuluXazj2lIfyPLiqc5r0Te28t89CnwSPmz9C45uaPjyrOqfWZ2Ld
LvszcVX4JvXhzsPRB8H5FE3n5H4za+OlEp+DrxLvkweyj7YvTxxlPc4+J/0R
1eGmrmd9r80fDI5KfS71GOfmJO/q265fqD4L+i04n1AcljW4QT1z45/0D1dH
pU5afkn8oi48+E09enCTuu/mq2DfX943n0s+yd9Fn9aGf8XB9l3az5nzIXhb
/jLnaXilVndrur08r/FOzT9X3kk8Zf+GeMp5y60Ol9Xrv/lJ2X8njtJPKnEs
qz6eOU681D+qzaURR23xkzhqO185a/OjnnwPGm6a6nAtv57ip1ZvajjqXr3t
XfhpX587xU3+TlvcNPFQ2zrepBO3707clPM1a6vb6W9gPa/xULnuvA5znTbc
1OZSyUM1HGX/nX6eiUPRWWbVb0rcJO/kvBrnTxg3c7s+68ZnfQ/0W09+yD49
+aXpmbLa/23+aqvzavVHiK+BPtfqxcNT6MOe27PqA+rr+nzxWfBS8r76cPVJ
9vsFj6iXyipusv4oH/QXfXfBSeqXsjq3Tx8o5xTLhzmnUZya31Uc1HBUfnf9
K3IcHjL4KOdLm2NsHS7nYXCTvJTndV7HeZn20eW6abhJ3wLrdfJP1uey/4mu
qdXn9C0QL03zZ6Y5f8ZB+abolVp9Tr4pdYJWl2u8U8NNV+ckb32jJv1Sw0cT
bvrPx/2Kjz4HN30dnPRxfU4c1fHl1Tpde9xdnNTON3GRq7hIXsl6Xeujsy5n
fc55fs1vs831TFwwTlivc1/W/AeCj1p9TrxkP4y6hcTHho/sW058Tty2Ltf0
3s6Tsa8oecjHqyfx9sZTZXW+WnQtLZ/qZ5D8msfpa5A176PPuvjI+px9Yfa3
qd92vkrwVvCH+qDcr566zceTH2p+oM3HSl25eiPrbcGd/m7Bl23N/5Dn5/8N
LpY/0p9JPKTvfvijxhvJQ8l3Wp/LviF8UtbouMMbOffY/UmuP+vnrR9OPjnX
uXOo9CcPLgq/nXjkPi7xK7xR64PLmvio7kEfAX2PG590io8an+T++1TX3fCR
ebDxSdPaeKVTXLStX+1wyl28M93+Or9L8ZC4puGdCS81HDTpl1qdTZw+6bwb
b2S9rflgNt+AiTea8JB9HPJG6piy72r+mPJEWfVLUW9gH4t1OfXgrc4mDgpf
lLiuTsm+n+QHdR7JR8k/8kwNT1m/S55L/tNnIPqU4JbgGO9v/gR5vHlXv4Lg
LefHqPO2b6711QW/2G/v/BFxVupV9t1Zz3O1TiY+s08/nyffL7jP+b/+PvJ4
zc80q/hTPij/mzq35vvt+en5J06Xv2y4KOetPgG5TsIT2c8mzsl1pz4pq3ok
+1zFQbnem7+SdXx947K2Opq6AnVJzoe3jy3x1n1p9qtZt7qkyUfculrDQad4
6Go/21X803iQa3qkr8IP3eeVruqRtrip8UkTb+TxhJMaXsrxVp90ip/kk3Kd
NfykX4B8ktd99kHyS/JJ+gtkzT4s66TvTr1NnCSOcn+YY+cZJ54650XclHid
+B7cpN7CuS3JR1nb7clX+l/qg2n+ct6Y+iTxT3Tl+g+0/jz1476uPuXBCfpl
2tclbtKXQBwV3KO/dXt99dPyVsE/+m7LD6kzsr6nPjt4UT4oeMm+xay5X//I
ps/O/5n/xz4AeaPGQ4rns4rLcyzuD+7K6+sDnusj+4rmA9B02rnucj06f0mf
78Yb537nm9v/H95IXxN9v5vvpLxR4p/x0jiaOCtOajpS8dI0d2XyWUqecd9u
Xpr0SJOeu+XRlnc/1sfs59Z9D7y055G2+Kjhn2lt/8NV/qjpjFr9djsnuPl8
T3W2hoNy3QUP6ZvUeKQJF6lLbH6V4ZESd8RDiVOJW9EDJJ7l2H2ha/CQfkv6
CKjvTJzWL6DxSM41ze3xidE3xtV59PJKbQ5e+KPgmKz6C4h7gm/y+OTV5s8k
HgoOSt63T73V0VLPCu6Z+uTVg9sHlvcRB7nqF6CvkbjH12s8kfMGxS36YomL
5OO83X5GfY5Sz7K/X57Hepp8prip4aHgeHmo5s+tr2SuJ+vW6q7VD8kTuZ+x
rp7jNsfXfn/71sJv28emvrL5b8sXNf6o4R/1Rs2fW11R0xfpL2l+cT8+4aBJ
j22enPiiu3Wza3qiz8JHk3/lvn/tKj809QlOPNFWT3Tql+R519YtP9RwkPNN
1BfJC9m/lutVfNR4oaytv22a92sdTX5IHwDxkDpK+SDnz2VVx6mfZJvzqw7b
/mb726I79XniqazNry84KHhHPXbyZ/KljzOfBv/IH+X25PXk5+iB5YHUW7e5
wcEd+ktaDwvuaX11uV3foAlf2UefY/0O1EdbB2u+6vqBer/1zfa85guRfkV1
aJ4v1ruabqjV0Rof5NxdcVCuD3VE+kGqk87q/JHm+5jrWZ2Qc0iCe4KD1FGr
E9LvqPme2Iemrto4mtW6mfohbz+tn7k2vWrTEzUc1PRDLT82HmGqn0146Jm6
2bv9Ic/70Sbc0363Uz5owkHNv6HxQA3/tLrYxA81/LPVEzVdkXVtcVHWxge1
/n55IPs32ny3xCtxUPihdru+29bNmp4oOEhdp/vY4KHgGNfE/+Ad5/EGR+X+
5A3xT/ig5CPxT/BLy5Nt/ql9Sfoqqde2nhMexH4zeSB9lnJ78JA8iz5MwR3O
E7Y/S5wkT6QOKas+TXl+wz/qz60jZvX+rMFB4qjgHnkf/RytWzV8Yz9Z1vBG
6ovsI3O1/yx1W/2wg/dzfsujhl+1ztX6Rb1O1UkH91jvSlxI/Gi+14k/+t4G
/zTf66zGvakP33lsTTck/5PVvhl9ICc9tXlkO2fk1M/oKv8z9eM/qxt6tw/k
9TpZ44tOdUPbellbt/xQ6zPb4iLx0YTnpzlu1se8DuWHcmzfg/hIvsi4IG9s
fNF3W35Iv0h1RFmDn4yH1tMSP4OP7NN3/kDid/CR/S72y+i/Yh9Nbs9xcJNz
PrO/Tp0s+Sf7cfNY8pv91s4ftf9fvZG6XOtlLZ8HL+jPo65Hnib3B5cEh6if
sT8ruMTHhafK44KTGs8j3mlzX9X7iHcmHk6eTd/Ohoeaz7Xz0vRz8DwJrs7t
eV7jj1o9TR11+CDxUM5jeaBcP+p/1EXbR2q/hPxurmv1P4kXiQ+tb0wdkPV8
/a+t/xvnmp56wkPiojYX6rQu1vrKgotOdUFbHNR4hVaHmfigrS7oGX7o3brp
iU/653NOOOgpXDTxRI3/m/rvrZuJzyfeyPO59enLFzlXRL5o6s+XT5I3si5u
f1pW+/KNS23ebZu3LZ/k7YmPWcMntXlt6ojUc7a+GOdCuT9ua3BT8FHW6IvU
Iekbk7xlP3Tymr5I4qas8kk5zpq8bj0n/E3whHxRcEird+mXJB4J/rK+5Hzf
rOI1cVt4rcY/5fnqfsQ14qHUreSLxEF5vaZfz++ax/v6+oCq9wk+tu9RXNT8
HppPUZ4fHCReDw6yjqw+KNePPJHXnzog5wj9/Tv+s88RByUeJA60uWiJO85F
s26mTsg6mfFOnWXiY5s7m2P7y+T5W52szQ3ZzlFrPthbv6EtLmr451QvNOGh
xqPs8M9n46PrfkSnuiFxUMNFU72s1c3EO61/rM0Labo1+c2mm3Z/0HBPjtt1
GFzT8FDutx4u/mn+RPqauV9r+CfxTNyTY3mjHIcXStyc5tU6D9x9bPNDsb5m
/5l8kXWz5JHUH6JHbbjH/vx2v/pX+QR5I+s99qOFJwl+aD7a+g+Kl8Q36mby
fuqIfV4+T9bgGX0m1TWrXw6u0Qc6v4d+m+qs5Ifyevkd5X1crU/K21kf8/8M
vrEvUV6n6aVzLH5S3x98PumBrIvlunL+oX2d9jkE/1gPV/fT6mCTr6J4p/nM
Og9NfaS+i+HN5YPkheSB5POti8n/tH5688a2r36qi4lzxD8T7tnim6vr9+R7
9nWxV+GeU710zodJRybvs+V75Hkm3OP1If5puiF52XZ7822c9ELZN01+1VnV
DbV1wkHqhhJH9R+yf17dkPG73W+/mfNq9eNVL2Q9TJ2Q+3LrFj6u+Rc1/2zr
YI2f0Kdaf2txUPBIcIZ5X12w75vH6bfdfH30cZZXkcdRb5Xj8C3yY869sw/P
1fm/k2+iOug2z1VcHLwc3KPPovM3cqz+Oedf8I78jn6JOc/tb3c/0XRAOW7z
ytT9NLxj/1fwTpvbqB6ozSdqfrP6Kbb+Ev0UxT3G5y3ukd8xX2x1QFmnPjD3
/00HdMrr3MU5O97n3TzP87hpWxe8i5O2PNGEkyZ/xmmubMPvnvetn0x+yOvL
67Ct1s0m3XX2P/aVTT5DzadRvkheO48Lb5S4GdyU46zhz4OT1A85fzZxPLgn
q7pr+331JxIvWT9TXy0/pC+Rvi7mSfkB6xr26esrk3xsncy5t62/Xp5GXY9+
OU237apvgJ8jrzf1rbf+rBwHl4gbrSfKp6lP18dJ3Cd+Ck7K7y2fZx1rwkFN
b6a/lf5X1mMbH2Q9OOe7c8b0R9Qf3vpXm0OWtc0hEydlTZwQB+kT1PwVPRYf
WQ9rOCnx0TgqL9Tw0TTPrNW/kjdOeaCmk976LG7rYk/3i33MD836m6+1nvNE
0+93iocm3Verk53iIPVCE280+Yuqn/a4zQ2ceKTtnA/5oi0eavyRx9s5aOoF
wheFZxcPZZ3mfRjf1RW5Lw4OSh3N+R/2nQUH6d9oXpM3MC8mn+XY+5P3kh/l
mdQJiRvkjYJ37LdqemP71+SpGg6zHuXtjZ/JKt7Qp9C5Fm0OrzpmX886o3Uz
fwd163kf61nNV7rhIHGO59Pf1/8/erTwlM5r1R9Rfij7AnGQ/V/BOw33hBdK
Xfu0LibfbL+88ca6WJvLKO6xT6TN32h6y8lvWj3QNJ9MnmjrL914oQkPyQO0
PDnVyZ6qm+1w0HfTTd/vr9/iotM+e/HPKT+09R1q/kOnvJD9lV5n4iH9qZ13
Jt/rdd5wkHjI+nuLT/aZtdV9oH1nWfUnEg+pH3Ifq67TOWjipObfaL1M3ZD9
9fr5un931ffOuWryS9bT1FHbF6VORpzT/BytM7U+uFaXEjeIl/L5nF+h/kZe
p+lyxD/qldv7+70nHNZ4IPkc/cjzf4e3yXHjd5yfIe5JH1jwec5L9W/2w1sf
8/rImjpY24cE79gPaj+YOMh9UdMHNfzT5myoi87t+iiKgxr+aXWyVh/b1sna
XNZJB33KB5n3Jr5g6ksyP9/FP/dw0Lv0QR333Ksjdlx5qhO6WwcT93g+NtyT
83nylW54p+mH2lzXqe8+17O8rzrprPrPi3eMP22umX4fiWvqixIv9ae2j775
LjafWvWbOU6cF+8kH2SfnPxhv72+i+axplN1X588pp+jfJJzOfUjTv4WF9jH
rS+Rehd5kry+fJO+yOINfZTU74hb7KvK8+0b93b70rPqY9i+v/yT/WTqgPJ5
29ww/3//35wv9hWKY/I4+9v1u9IHSJ2z/oZtX9D4nvA7rd418T0N18gPqw+a
fILkf6Y59I3vce6q+0R5duNwi+NXcU5W99nbeteEd8yLH+Oa/+a445zfH5/y
H18F5+z5nadwzYRzGq/zn/9T7//b8jquTacWnNN8HsQ9jQ9t+wbryOKbXI/q
ou0bE+e0vrA2p1W9tMfiHXkd/YUSH/VVNJ7qO62/Yo7FQ+o2rY8F7yQ/RA9h
X5h+QeqixTXJV+Ih512a/5Lf8njrXy3vJ5/nWHxhXcZ+JfuUrK+p6xbvBA8F
H4kzxB/qdawXZW3zca0rWddqvJJ6HutYra7n91SvJX7Vnzn/t//v5OMZPBOc
LX8TfKPeP+e157vXgXP9nOclzyq+aXyOdazmpzH1e7U6lnUu+91d1fWIb9o8
sMbntD72Se886Z4nPmeLc1reazjn9/l1719zFefs8M73wzcN77TfcfIdaHi1
rVf5nKme1fwQc75P8zE8brfL46hvnvx+xDnND9H9kX1hbbVu1frE2txVj427
ztvwccFB9uG6n9XXLfqd5I3ml5i8lTwkPsnt+ic6j1JdUPKZedA61jTnXhwi
L5NVnW2bDyuflNeTV2n6meCZPM/nOx9UHa+fM8fyW/JD1tPs22r6nKziLHGN
8ybkceRhxC05j3KeiGfiy6AeWTyjPq358bgfsD8910273vQ1dX6X/I3zuxpv
0+abtnpVVnGNeh31y60+ZZ2q8efNp8c4L2+j7rPpdRq+OfV7nvTLLY9+rJe9
7vt8evy18M1/jZ/7FL9Nv+fdulWrY7V61sTrtP6uCe9Yx5rmxjc81Pgc61bq
8rKfaXNUm35Hvkf/MHFQ0+8k/tn3nnWqY4lzPFY/IP+uLqH1wVu/im5HXsc5
Y/rGmefUlWb19dRn2Ndlv7N9Xq2/Oq+jjsQ+IOsxOZa30Z86a3CE/VVZwyNZ
F7Me1Pqe9BNoOiL1O60epf4nr+f75fNYl5Kn83+3/y+366Og3jj4O+dn60fU
B8J6VXB/roPgnlwf9l/J5+hL2OZ1ydvq3yPeaX3r4h5xTvPvaXPdsyYu2uex
7Vdv/E3jbRL31XOKcya8c6pXvopz7vZrfZzXT+dcvIu3eUqP/Cuu2darJnxz
yu9cxTnWqzyvt/4++jrn9uaHrh45q/uT5meY6118I54J3sn91rGMO+Kcpstp
OMf9oqt9W+12+R3jevicVrdyHy0ucT52O07+Cu4JXsrr2/+uLiN5s+l77Ouy
L8zb7etxfpm6IOeYWbeSn8nt4gh1NOpbcizekl+yftb0Sr6ffFPT9Ygb1Yu3
uqT4Nv9n/kd9dPQPDK6WTwye0b9KHGNd1jqUvKZ4Rx7UfUXDN1lTf574nKzN
f9B9k3HGenrDM+pwrE9N/ebb+RNbHsd9cI4bXrlbpzL/bXHNlIfv6Wu+iu74
19efvsddHNN+363+ZtKVNxzTzqfWbyU+3/oUtvldub/xNupx9AVt896tU+nT
LF8jb+Nx87PQJ7759ATHJA66/2tzvoyrbY7FxNNkHyuecR58cId8TdtnJ0+p
29HHRx7IeoV1r6br8PbGI7R6iXlZ3bQ8jfUw52iG9xDnNL8h9T72nzX9UW73
fawrNT9HcZR6I3/npvvV98/6Y/O7aXOw5GHsA9f/RhxjH7h8jHph7/dYHbH8
aniahlvU17Q+BXV+be668Ug+Rvwijmn94ts6VNMPi2MafjmtO014ptUlzHtP
45fX4Jr31aG2eGbCOVs8M+ltrvaRu251NtZPxTETfp/6yK1Heb15XQbH6Bc4
6W7cz3h78I56nKY7FsdYZ7dfvM2jsJ4vrhH3tP5y9ZP2jWT/a5+4+2XndIlL
nHua57XXaXMsrGc1HU/Lq+p8rIOoa80qHgof4pxL52Kom8njxC3NN6it+sbo
pyiu8nOqk2l1JOtu+u4FnzifQRwr/9J8jINXct41nUzOU+tH4hZ1M813U5zT
5qJbv9Un3XqSeEX+pc2DSLzQn8L5oE0/k/jU+rwn/GJ/xl38MuloTutH276o
CcdcrTPd1dN8Lbyy1wtv8cwWxzRcM+GWp/vDPd9aXWnyv9n64eR6an3j1pfE
NY2XaTqaCcdk3frkyBsnflln0vfGuaLilIZ35GWMx4nbU31JH0BXfQHbPEXX
PF9845yu4Bjxhv0y1jGsg9mvrn4jz3feV/CLfczWeawniWsa/9J8Ddv7ystk
9XVzHPzSdM/qhuSpxIX5/cSd+f+CX5y/1nQvuV1c03BLVvv/5Fsar9L4GG9X
L2P9SPyiT9+EX1rdqM3ttK7tGhwjfhG3NPxi3FQfY/y1zymr+1jXxrds60ct
L21xy2fxMd+Lf+l64Kv4Zff77HHMFt+c8jNX5z24imdaHUqc03TD1nO9Xtvc
h+CbrOpoPG78TesPt0+qzeNrfd/6vquncX/o46xT2UelXkAfwObvJy6xD8X5
W+Ik18b7BN+IS5JH5QeCR5JX5XnyevZxWddqfivqVpoOufEh4o3gl1Yfa351
WYNzmi7I+pO+Qj6/9av5e1knVE+VY/GtPIz6c/Uw0zzN4BB5FnFJ69f2fvFN
8L99hU0X47wq/a7si2z1o8QL60dtLmebSz7pfI2T2z7UU1zTfEC2Ot+2j251
JfHNts70FJ7Z4ZtJf/uc/uUUrzT8MvFPDbdM+PFuHcn/udUjW13J83SqLzU+
JuvU12Qdd/Lhc21zquRpTn37tjil+a57e5trFZyS+Jlj8Urzs2n6GHGL+2Fx
h3Mf2pwH+6Ncm+7T+oR8i8+Tz9G/xPxr37h+x80fedLd2ifVdDr6z6mfbb6E
za936iuStxLn6e8iHg2uFL+qCxe3OidNX7zmG6kPXuNZmt7F+lB7HfXybc6m
vEvTtWx1utnfyKu4PzIeue+a+o+Ml+733AdO+KT5A7t/Pe1H2vIw5ivxicdP
9Sk1PuIaPng37/Jc/ei0jtRwy8Sjtf+58So5bvxfwysTbpFXaX1K07zNaS55
qyfpHyV+SdzI2nS/6l/007MPe8It09wp/dfVA6d+ZL+FeoDWjyquEd9kbXOr
xC3ut60jiSvsX7Iu0fb59rWIb5Kn1dkkz4tP5DOs+7T5V3m91oeuj2BW62PW
c6b+5oZL1F3ndxaHyIO0/826oP3Q+d+d8youbvhEP4HWF+3t0zxL+ZTgEuuz
4S1z3Xkd5/re4pLWFy1eSZxp+r0Wz5r/qHFyq3MRr2xxSuNTTnUtV3HKe3S6
78Yfr9O5bOtB2zrRFq/k9lOd7la363kr73JaB/K49VNnX+H16+3TXHDxivWh
7HvUzekbo67FvqPmG+P+LTxzbre+rr9e8Ip91a3un3Wa39fqSMkz4hZ998xj
4g5xiXUF9Z7qKHK/ryvvYr3JPl/7hO1n1te29TPpd9PmYen/Zt+5fjzqZuWJ
9PsXz/n7qJOVJ2uruKXNy1YP3nS3bV6keGSLP1wnX7vUW3P96McrPlG3Ii5x
FacEl+jn0PqFtr51bR834ZOsxmFxSuK58b6tW7wy4ZMJt0z6zqs45Sy/v1uv
8hw+uYpXtnWf9rhT3e1WryKfssUnkx63zWtSf2v9R17Feq045RSXtPkF1qfb
/qvNVwke0RemzWtRr5L9oDpceW55lYZjGk6RjxGXtLnerU/JPln39/bJtn28
eEYfPvu15VHUkViXsb4i7rC/xnqTehl1OfZT2W+c1e+T46aDlv9Q99p02E23
1J7f6obi2OCS5kek7784RRzj41s/kPWcpjuxf9l6TptvpG7WY3VwwSXWdab+
nxb3jI/WzeVJmj9Fq9O3uo64pO1nJzwy8SatruOx+KPhktP8/b1wyetxzN06
0CmekTebcMwpz9JwTMM1rl4vrR7U8EyrDzV9i3xMm7PdfGCMW+GBXZueRTxj
PXzqp9YfRhyjnqXhm9YHan6Rl3F+k3Uk9bviDPuvxR/iljzePOvq69iPnXwv
fpB3sb9Ifar8iP029t24yn+0upb8SOszF8/Je1ivU2/ddEhNL936mH19+Tj1
s+38E3+IU+QRvd3zP/yJ/UBZm3+cdR59EFqdp+llxS1Nl+K+yzgnbmnxcOuf
a/xt/MpWRzvpZu/WfyZ9yimPcoZrWt5/Nw75Orim/f5bfDPhnPz/Db9Mx+38
bHjG87/xMupfch1l9fpruKXNmZRXNU7Iy4hnGj/T+ofUubS5km1t/QfiG/Ut
9hXZP63+Rb8Y6/364umDp26m4Rr39eIPcU3rp1Uv01639XE3XkY8ol+J/TWN
dxGf2P/b8Iq8lPUwH+f3E/cFT4gv2ip/0vrl/Z+cv+X76rfScIw6LM+3dp56
PopnPP+d3xgcIy861YPcx9jv0+aVBMckjrT5jJOP3DRf7nQOwFQfcp18W+7q
V3LcdA5bHDPhmV0+PsU178YfXw/PbPFK+1/Fr65X60zimKn+earbbfzntO9o
+Kbp11qdybqz+GXy5028a/q9rNP98jf69aqH0e9O3lzeJvG93e5xVvNO6kzm
Qff94hDxh/v/5vvh62UVx1hfavil8SfqW9W1Nl6k+bD5vMZHNf+TtlrP8fdR
Dytv1uYKNZ1142Hyeq1Puels5VUan9jOz2netDxm+BfnDsnDBL803GLdyP5D
+dymt1Wn1+LWVEfa+uRO9aSmx7WO5D522x806S4nvDLlxTO9xikf86filXP8
creu1PDMhGMabpn8gNr52vQyWbe6mKzNb9c67zQXe5qT1HiYqT9avrj1ScvP
yNPIU+dYPiZr08vYr2Tcbn3VuV180vKDPr4T/5J8Zn3DPD/5qpp/2zxu8Utw
gzjGOk7DOfrb23cjDjPPyzPle4t35FWsC8lzOKfZuk2O5T/aPPNWXxKf5Pt4
f57f8Iq8ifxKzrOGoxufYp3I89618ZvNJ27qB2rzR+Rb9Fkx/ohLpv2Zcc74
Z3yUZzG+yrtMOGWqI7lOOper/MpVvuUabnk3nngdLpnw3IRTTnHMpHOZeJUt
z9LO14ZPms6l8SqT39ypLqbpeq0PtXjT+JWmg2k6voZX5Fuazld80tY8rvVb
208tLrH/Qh8Y596JK9yfN1/U1m9tf6z4pNUxzP/6kbS6i7yG9anW5y2/MeEV
8Zk6E98nr9vmCzZfttbPLg/j9/Fx1o3y+OZjO/El8iHiEOudOW/t+8n9Oc9b
H1BwiHpbfVPkSdp1L/7IcfPhb/xJjhsO2eKPLR7JcdOxqMuVV2n6x4lHEX9s
9SuneOSMH/nueOT699vyT1ucscUdnhftPNnij6nPedKnqK/1emnzLyZ8Iv6Y
fOUSJ6a5i4kzrm3/1Hz+xSETL2I8tU9aXNLWhlPUu8iHuN81v7U6gXmuzY+x
Dyl5zMeLO9qqvkV80fgL86s8QuNtXOVNXOWDzPtZ/f6N7xAHTp9v8gl09f/O
+9q3Y3/OxHPYj9/6edqcZf3x9Zlt8webLrat4gtxhnhD3DH5uk18x8QPtzh5
qp8VbzTcsa3fNF3BKd7Y5cVzvcnv7ze/t7z/bvyxxSW/3n6KP9rvPuGPqS4z
4Y4tHtnqTZq+pOF0b2/4ox3f5UEmX1txiPukrR5Ffxbnura+oTZfrfm3NH8X
6zjOLcpqn1BwQqvP6EO6nb/b9Ag+Xt6l7evd3zccoG9Z+x7m+Wm+pO/f6ixZ
W3+4PINrcIC/j59P/CFe8bi9f95H/ao4RLwhHhH/Tnxe689RL9L4jYZD1IV4
fauXbzhEvWvzQ2n15IZHxBnbOYWTbmSLP7a445T3yDrxHeKRHT75U/mPcx5k
iyu2PMi27/gqHmn6kW2/Tqu/bH1Tmo580ml5fbrfMA7IhzSdiPubyWfFfh5X
/fYn323jbPNfkUfxfvFHq8Nk1dd20oc0XkM8YV+z/T+TH13zzW38S9N5tjqP
ebvxEU2fIS5q/bfNf9Xjpg/197A/xu/X6l8+Tp6j6TtaHaX5JTu/WHzRzus2
J2fyobdPJuvEazacYRyY+m22eKPhjIY3rLfIe7jfm/CGx1P/ZtuvNn6j8R3X
+oSvzxX8GJ+8G0+8jvd4mgfZ4pOreGTCte08PK3PeJ1MPMm0Nvzi9ZzrfZr/
03zeGh7Jsbhl22+cY+sz9gE0nd22D1l8ok+/+aP1GTcflTY3qO3bxSX2X7T+
5MaXOG9OXsG87edqPI+v2+byNpwyrT6v+ZX5O7ffW38af/emr2l8VV6v4ZDw
Hq2uIs8hD+facMjWT0080vBHq7uKQ8QjHk/zi7M235IJj7S6s3HOuHiX/5AH
MT+0fHG17nKKMyb8cY0XmfL7V12n+tHn4ZIJh051ugmfTOtWt7rFJ5PPydR3
0+o0+udvcck0V7nVdTx2/9X6b+wHbjij+aVMeEXdif7703xl8YirOEN8Mflo
6Z+SY3mBCQc1HJPj5kPXfOl8H/O6/FDTh/r4hjv8fPk97Evxd2+/Q5sX3OYd
tLl71u30BXQ+w4Q3Gh+SVXwujp/qLW1tvovikOZn1PpiJl/6pmPL8cT/Nh3q
xItMulPj9ykOyTr5Utz1H/ncesxXwyN7/uMp/NFw4/Z/fQqHtHrNpA+ZfGEb
3vD+HE94o/X9qled9CLuZ9qcnqn/N3ij9fnKg9jf6+2uPq7VexrusN8geURc
0Pou7aPxcW3/rH6g1YOaj5t5ueGJVlfIKq/TcI66i+bX3upU4gFxjXjLY/uU
mq+7/MX0/fzd1HPYryLfMemQ5OHaPGDrLTmPJ58Pcb1r03E03Zd8prfb77Ll
O1p9pdVZtj5nOd7yHVt/s6luP/EepzzI79epf/Quzvhq+OK5+suEP6bjCY9c
xRlTH42PbzxHbm/4Y/KlP63P2E8z9fM2ferkY29cOa3TyPvKczSdSMMV6vzt
75Uv2eKO7Ef1T2t9Ms4VND+JI6a+iOY3G1wizml8gJ9THsV9uu/T/GobX2D9
ZJqbOPlqiAP83M3H1Mc3fCYeE1c2vWjr6z7tU1G3JM5wbTzGhDOmesvEY3gd
y2823NHm68lnTP20TZ9vPGxxdasrFWc0vLHNI1seY8trtDx4D2+cPu7dvMbr
6ylXeYy7vMZ0HjY+buq/bbc3XuMujzEdT3yH+vU2H8e+XXHF1P/S5qXbtyuu
mPgM9aatnqJPmTy5+cY6TB4n3mj7Yt+n4Qv39bndPNj8q9r95tfGh1ifyaoO
Qj1u4y0mvkf84/du81waH+Lr51hewvpHwwsNP7R10mdMvhtbHUbTiU7Hja+0
PtL8TiedhnGp6TIanjidLzP5S57yFnf5iru6gav7913+fjeO2OOJ6fe4Wydp
OOMqj2EdpJ2P8hLqRcUL27pJ63fxOpt0ofKP27kMjc9oeo2GIyZf91YvETc0
XkMfEHmNpstI/JfXbv6nbX+afNP8ypzrZ9+C8z7EE/pJtXzbdK7We8QRvt40
P1a+oelOG26wLuT38PNueR/xgqv+n/4/+T88H5peU75B/NrmzImbm24i+KFd
Tw0X+DjrHPIR6iua7tO6R6uDtLpH41Gbn9GEH1rc3eKHCUec6iuexhHP8hPf
pf6xxRvndY+7uGKLNxq+yLHnWTtPt/2xk//Mth7ScLz7gKlvfeIx7FcJv2l/
/VQHmfw7xBvBEVOdZKqftH7btn/MfrPll+Y7pk7P+8UN9iOY55p+UF9K+y7b
/Js236/hFfUeydfqFeQdxB/yD/IC0/eceJ4Jh/l9fX3/14l3aP1Q4ohWzxAv
2x/S+IgJD1hnPO0naf6h6q6mfpHT+SryD62eMfERW1whjrjLT2zzzl1e4jW4
4rvijPv6zo9v/xUvXMUb7XUan+F52fqxJ/6i8RZX+03EGVN9pF33xo22Js4k
7lgfsQ7b4l/DGZNvWJ5nPWXy95DPcF/Z/Dyav1jb37b7mz/qxH9M++22WtfZ
5m3ngqhnaL4X6ihbfWLy2fR3aHWnhttafcrf1TpY/r/muy+e8DwST1jfcD5b
6/sQj9uPNflfyB+2vhDvb7qJHMtTTHjCeNT2RfahbnFGwxUTvhBXGN8nPcVd
nPH7+7fzyfZ1gK+BB16FL/Z441lct8cVni/tPJvO01O/863+ouGJVidp+4Pm
B9b2H61e0vpKmi+6cdL6SG53nfCHcflUd9H4jObP2I6tr7S+Q3GGOr9W12/5
sOkE2zzfNh8st1ufUA8a/NB8M53zLg8jfsjnanyQc8ua/6s4yse1OfLqG6bz
pK3Nn9/6h+d74w8m/xnvtz/L213VRU19pU0nscULrb4x8RKfpZvY4oi7+OFz
eYnvsj6HE679zvfrHI132OopruKGVvdoc1MaPzHppMUXk79e02m6T2l4Yarv
Wh82Hub+5ovc5tW2OL7tT22+oz7O+vnUTzL5LLV9svhA/4NpTt1U/0ieb/2c
jVdo80kn/+ysjd/J4/0+4jm/f+vbbHoH87u8gcc+r/nGTX2gEy/Qbp/wwBYn
yCM+hROyGp8mPcSEE672aXjccMFpXWPCEa+uZ/zn46Z8+25c8Hz9ouGHj28/
xwfT+TKtE569ihOymv/bdTf5ZOX2hhMmnebUJ2ocOuVRW1224QfxRuMbWj9I
ywuNl2h4YvI3bzqLrK2OMen/zXcNJ8hnuF9PHm7zWKb+iTxvmp/R5tk1XNPw
gHnf37n5N7ia/5uflPig8QXtPLO+Jl/W8n67Xry95X/rC7lOGy6YeMVtX4V1
h8YfTHHQePkULtj2613VU17N/x/f/13y//X+zWv8gThp5nuu8gSeR1veYOIP
Gj8gDmj1hYYHtnWIxivIF7Q5q9YVrC80n8wW56Y42HCB8VX+wPjc8IF99+IF
43vWqT9U/6FWV2h5fNLftTpHe9/TekPzdbQusPVBaPX/7fec5mK0upJrwwFT
fcrzYdI5TnrEnNfybFO9oPU7medbn+Xkbz3N+Zr2IVmNZ03HeMoHtHxvvJ74
gS0vMOX9hgN2ef671wtOP+fr+yYmfLDti5h4gi1+mPDAdD2c6g/k5Vr+b2vz
nd3qDqa+THFCq3e2x/u8xg9s9QlN79AeL24QT7R+z+Svxo83ncI0n6HpJFp/
qa/v/j3H05xM6xoND2x1Gc2X0ec33Wnb17f/yce3fN76bXx84wGc09XqZaf8
v9dH8n/zkbVvuvkt3MUDxp/mUzPt/6/yAKd4YIr/V/spt/zAn4UHzvP/FjdN
v+823094cFobDt3md+tgHrd6wHR9bff9Lc/bv9D8Fra+kY1/NE41HtN9UNMd
uP83r3u/+zLzffPfc35Yqw+0/Nb2wVM+b/qFiQdoc9tbnWDqE9zOi2qff/L5
tA7f8nnLq61vZdvX0vj8ae7VpAPY8vZeFy2Pt7y+rfO3/gLrg/o7tzwuj/mU
LnDa32/39Vt+v+X5a/vO7b7/Vfvs99f3r+bz0zw+5fXtPr3x+q0u1epZ7fa2
f5/8oqd+Atet7q/t36e8P+X/LY/f5nq2voSWv0/3+1mn+RdTvdnn5XFNX2Z+
a3O8zO+tHj7VCab5pOofW99d481bv3/bF7e87P/r/zfhs1bPafm89Q2av9u+
3Hzd/A3Nz83vcKrHb/fhLX9f3Y9P+fu0P/CUn9/q9abHX83ff9Z+/Hod/mM8
c77/fop/97jtw3P7tv40+QxMa8vj7bptPgIT397mvbT83vT++hq1/Xfbv7Q6
5ZT3m3+L/QHG6a1Or+m/Wl23ve5UT26fY7u/n+YQtT6GaT6Gn2vqfzMvus8W
T23nPHv/pNtsflieB+288byb9tFTf93WD6hdx7numx9Qjrd9+1mn+PWqPryW
z7dx/uP4f94n1vLU98zX2895P49Pef00n0/79Jbf27677b+n837af0/6+5bP
G5/eru/mP2iebsft9rb/Ns61fUvT56lDmtbJf63t38xD5q+Wz+Tf5YWn+mzT
b23nYrpfbzhhOm7fq32uSYd4dz5h41GmNa8z4YW2r296OM/HaV/d1ilvT759
k07GelzTwRtHWv42zk376tN997Q+xZdP+fvqfvR75fH7vPmWP2+/+5S3fdy0
H298zSl/vs3f07580s1P+dv9+OTzN/kNT3MNpnjV9iVTnbyt0zyEiW+f9G8t
P235V/N223/K87Z6rLr8xk9P+97W/90+/1Qvbo93X7vVj5uv2//acJl5ezsf
KO8znW/2oTWeu+XnKV9v/TBOffynuNL0ak/x4hMf3u5/Kk/v8syflq+3/Xbn
/Wo7vmLmz6d99+k+u61X9eltv/1Z++ztHMPW3+7+vPnoyae3PD3l7/b4tv9u
cwam/dhUd228ap4nDmj7TPNH2w+249N6cfN7bXX+6f3b+7XvJ/88+dY3Xrrh
re3+u83L2erH2vk98d5TXjYfm5fdNze+e8uD3/W1nfjHU/675e/TvLzdTz+7
r/7q+fp1++/pd9zm86vr73UL5z417run9VV18W0+3+7HW5/6tj+t5fspLrb4
6ePN+1N/W/MHMx9MPG/jWVtfW/P7PfXzneYKTP107fb2Ofz+jWcwv7c6tL/X
1J/d8Nm0327z8Vrebjqzqa/7lPdu/R+N/275uu2nT33ojR9X69otHk785bR/
Os3XU/6+mod2ee3defbz+PIpT5/hp/N8PZ03pzx505tv16nu3fL0dk6O9ydv
T/n7VOfmsfGuxcNtnGx5vPHtLe63PGn+2tZTzVPTfnLK99s5rY1fbrdPPr4T
jtjqubbz26b+QY/tz2pr67duc+O2++qpfjTpyMzT03665ee7OrOmEzeutfzc
9jktbp7y36d5+dn99Lvz56v58tN8/c/jTvnxU/580qU1fLfdb5u/29rw6tQf
vuXP2z679YVv9+HGm5bH5dXb6v6k9ZNt+9DavrvN6008n/Je26e1dfL3av4d
U15t+en0c0x5tdUPWh5vuKJ9nmmO+6RjmHxQGh6YeJp2nm33z6f676xepy1v
b3m2iQef+romfrzl7dw+8d13efBreeEnbz+T35+rf2/z+Wke3+LGbb7e5vG7
+Xvix1qdbPJzMW8bfyZdetOfT/XBKb9vefS2z2r7t8lP0zzScMHkW7v1r2+v
N+GElj8n/5tpv77VjTXd9ena9uXT/rnx3I3fVmfZ9tGN3576qtv1N/HdXuet
L6Xl8dM8PeXrFg+3++bpeBv/d/nhJx9fy9ev16u9mjff7ru365S3t3l8i7sn
fq3FEfNzW5tP21Z/nnW7X298ZovXzc9q0rVNOuLWvzbxv43PbfXXtt+cfEDa
92q4odX73Ufn9sYD+Hn9X1p+bj7+Pq/l46lPuuHDhjenevTEg5uvt9en+XbK
w6frlg83X2958VfpyKb8fC1ft33lu/Pn18nXV/+Hq/x4y8un++ppbc+7q0+b
9tnT/dP+27jS8nHTm2/7xabnGzebXn3rzzbNe532ZZPOfevb3vLzNOdiwgUT
r9x856Y6wMTvt/3tlD8bvtrqGbb89YQXp/rzqS/41G+l71i7rrf5+Gp9uuXf
Fse2up+refj3cXvuD762vjsffp398fR7bv+Pp/bN2zzc8uuUrz3/23rKc2/1
Z9t981S3Nh9PebXVrae69nR/i8enerQpTzQft7Z/m+qqW5524m+nPrhpH97q
xhNv0L5nwy+tPtH2rz6v5dGWZ9vjT/e7rl4HybNeJ9P+t+XX7f0tz27zrvl3
G8+2+bjtg7Z599r+9zT//un5+O7vdD3fbvPsdv97NR9v86z59hT3Tnl66qMU
r7f6snm36V+mfXGbN7bVmU35dorzU//MVn8+7ee2+7r2uNw+6ddzvPV/m/y3
Wh9SO55+x+l40klPfYFTv0E7f1ueNd9Ouq2rfLLX4bYvc6vfanm25c3T1bh6
Fp9P+5+2efTfsv+9vs/dHj+9f53Ot21enfKs14PXy+n11fDtqc5LvN7i0rQm
vrXnTbdvddxbH1Mf3+J5i/sTn326j/b57XWn93OfuZ3HuPVpm/apWx/qSde3
1S1v86V12ClvenvTR2zrtqf4d9JRneqrcjztWycd1bRezZuv5Ym/C8/83P7z
1Xny9HjL+7bzdjrfp37k9ritnqr1IbZ96JYHNs5M8ag9z33pKb881XWneD3N
69r2T233vdv9cNuHTvXPiadu/HGre17VF233j1M+bLxry4Me+/xWL52ul2m/
6XU44dm7eXHaZ07xre0vJx73WX726f3kV8uHr8uXW152myfNl9PxxOdO+0jX
6byfro/pupr0D+36b/HD9bQP+DSebePntu41za/d+n+1PLjVr27nckyP2/LH
0zrxyD5+q+851eFO+8PJn2LaDzbcd3WfeLpvnHSI23y4zY8tX2751lMedtrP
vCY/bp/3VfPnc/lwypNX8+NpHt3ytO18bef59rrY3t+u0+0+8lXrqY+Gt2+f
N8Xfad857SuTP3xcy5OnPOQ0x2rK022d6oenPGjDH+1/O/1/t/MJpry5Pc+3
fotTXmz58Gr+m/LilB+3eXHKh9t9y934/3H++mp86d195NfR95zmwW1ePK0/
en1M10E73u4fp7w46W8bvp7Wad85xcdtXj2tm57OYZx4021e2fblNr3opEfa
7kOnzzfx36e4Zdq3eX41vn86n3K7+azxqZNPUsuHLe/leItnJ55pwuGtnrhd
J/70ND4/mwe/a158vq447RPv/u/bfHia/7Z5cboupjw64dLTfhRv3/q7tLy5
zX+Tr/K0P5jqmY03Pd23TfrMSee77Y+d9q8tL079OhNv2X7v7e1Tftrironn
n/Jme1zLe0/rZNq+reW30/x3d793tq+YdR8f56mr+8B357PTz3P+O2z3dTu8
cp73pn3fVZ3N3bXlu6keMfE4W71qy4/TvnKL00/rl9t9gPuVxueZH9rtW73k
1Mfi60/zCqfXbXU78/6U39r9rm3fNuWXU9x0NZ9t89tpvW/L20z5K3Fkun+q
653W9+7mubP1av74avnu/fu+3x+f/8/tPGp5cpv3Xr3murqaB7d8TdsXbvPj
Ng9OeW97/1b3OvkSTbqPrX7H9216oCkf+bhtfrqqy9zyyk/ln6nPb+uDMZ2H
277gptuersN2vW75yru85bvy3sePP90H/Sn57/Pqe3d5zynPtXw3Hbfzvz3e
66jlN6+7tm7rgE/xolPemx4/xb22H5zqguaDKb/5eF9nyrP5HE3n2D7XVu8x
5aX2OSe8cFoHPs03V/1jfN+Jj7yrOznNX9t6yJaXbHHsNG/dy2un+ej0eV8l
r139/lsc8Ovzpv/p49ufz2en65Tvtvdv89jVPDf1L03xaYpXU9zy/tN8tu2z
aPlt0iVOeafllbZe1Ste1eFOupHT/djdvDbhmdPz6Ok8Nl2f27x1uj9rcewu
f3W6T/s4zn+XetvdPLfNe8/zlE/t5zz/Wl6bbv/svDddr9v8tq1XGEcm/Nz2
d1PenOLeFK9P897E502vu80r276yq3nnav5qt7f90un/ehUfTefftr42XSfb
67Fd59u6fstjU3571Xovj/2pee00v53igfP8tj0vJny0zWtX93XTdXKaz7a4
07y2ra+3+NLi2jZebfd9Ld6e7ldO9fAt7rfPta03tnw95ZvtvtbnT/npaj3r
Kh7a5qO7epB2fZziz22eerp+tr1/ylu/z2N3ebh3553P5iOf05G8al+21Sld
3Z+d5rvt/szbzVNez96/zVNP4+bTfdm0rzjdN13l1U51Ei1/bHUVV+uWp99v
6ydyqpvf7v+v+ilczUvt+mz5aJufzvLLq/UeLf5u89JXz1fX615P5aHT/DSd
P9t9/jbfbG8/zTvb/dJ23caJrR7sav6Z/MlaXtrue6bXmx5nPJ/ygzxqi/vT
7+Dvtd0HnfJxp/qItn9px6c6+IavWt7Z5qO79akp/7Q8czVfPZN3vno++ax9
0TYf73m8j/PT/ymP359Xd/PSdt90uj+ajrf56Wq9assHtsdveT3j6cRbbfUd
Uxw/5Sm3+eW0XnOar6c8cnWf0/LLdPv2caf7/lPeYZtvpjjxzL7ls/QT784D
r+bX2n7oPg+3/d9O88j29qv55yo/t807Xq/T9b31+Wj5Z4pDV3UWV+O3+4IW
V6fj7T5uitfb+kfbx9zdj5zWW6bzpOWNdv61dXs+X72+Xr1/Oc0f117nZx/z
bF667gt8db16/j2dd1o+ma7PiTfb8uzT89rrT887jbdTnN7eP+0Drh6fxuun
P+c2n0zxv91/+rhpP73dT3x2vtjmk4/zxVV/1qf85b/6es5TXc0DV/N9+79P
4/+r9iFtf3G3bvL0ms9xtX675b1O9yvT+92tB92tZ5/ml5YPrubrbR64uk9o
+Ga6/Wq8b49v8WAb759e/+y4f38fcDVPbPcJp+dDO7+u7kNOz+923Zxer9v7
T+OFt2/jeouLvs7d1z193unafp9TvdzdPDT9L1sdRsMbd+sF7fg07nvdTc/7
rDj+DF804efvsr4+rp/G+6d4o6vrFt9PeP9qfD9dT/PBFAfb8TZ/bN9nu4+4
Wp+d8t42z0043+ef/n/T+dRw+jbOt7h+ev6fXkevxuc//M2dz/tcnD+N46+q
E9yN76d8ztX4f8rPXo3/r+aftnWJbZw//fyn3+90X9GeN32OqzzMFqf7uNPz
fnv79nW2fO6zvPDduT7vjttP4/bt/uT1uP4uz/OqeL+N/+16vJoPttf9VXy4
jf/b/cgUN7fx/urnat/v6ueb1un9r/6Pd3mXdn18Fm66G9en+HIWr6d4993j
+/y9rv5unxXHPztOb/mZ7fXY4v72+p94/wnHTvngNK5t495pPnpqvfs+p7h5
u7bz77PwyhSPt3H4Xny9G4/v8hOfH1+vru33fjWO3u6bWnyd4vBd3Nyuy7uP
uxunr8Yh4+cWb273CVfj5XbfsY2jp7/7KV9xlU9+V7x95nq8i2e/O77dxufr
uPbj25//P1+Fk0/j7zY+b/Huq+L0Kc6ccPApvj6Nw1e/x93f46n4+lQdr8XF
dnwaV0/fZ4qv9/DvFJfeHSffhY/nOH36v9zNo18l7m5f9+p1fvq46X3u4uEp
Lht3r8a9Kd/4+tvfefs/XM2rd8+X7Xl9Gofb/Vdxz/b4Wtz9t6xX+exfn3c1
753h6Ovx/PT8nuLp9var17Fxob3PKa7exuGJ59zG8W1d89X7grv8wGfH3dP4
+PTztzjo2nqK+/5t6/T9n+OHr/6Pz55P++tjG5efrsM89bqnePQUn75q3eLU
7f95mi+3rzvF0zMcsPeVeG1cna7/bdz4WdvvOP0Pz+a/+zzCNs+fXjfb6/Ap
PHT6uCk+nu77n8Jxp/nkNO9cfd/tfuVpPPnUdfDs9ffuePPudfs73K0P3n/+
q/Y17fnTdXEaL+/G3atxdosTG7/w6u/zVF46/b1OP9+z59t5veI167vjz3dZ
t7j7Kl5/Lj5O8fJp3uj0Ot5ef0/Hhaf3/U/Fu6d5kBxvP/92X3F1f3w1zj0b
B0/xzp+2Po3fTnnb5/fDd+Pc1fP/qXh0Nz62uHZ6/914dRpP7v7OLb5Nn3cb
z7bn3d04de15p9fzu+POu+La03Hp+bjWzoPTeHUXT9zlF7ePf/e6jWOnj9t+
z6v56e73uMqfvXYfOl1P0/V+Gh/eHae+Snw8/f2f+l/7653m1af2rac45ir+
PI1Ldx9/mi/a99j+Dl91/f3nP9+HPhvntnHp34bjPgsHfr311ef9tec/76c4
fa7t404/98fx+34fx1O/27V89VX8K55+3M/6njj23Pu9Ol68Kn591nU8xY97
v+N5vHpVPjr9fZ89T3/iz58Zr66//tPX+enrbOPl3Xj69PV/9/eb4tK113ue
z78Wf35w0Xvjy9V8cPXx5/Hn6ev67nm8vQ5Pr9O773v38V/tf7mHa37Wr7Xe
3S+1uHUf17z3vH3uOr6LW66+3qu+56v3UdfWp/Lsu6/Dd3+Or/Y9nt9HXd1X
fNb19u71VfFyGz+2n+M18WN7/j51nv8p1/1nf9+7cX8bL+7jl3vn4fd5/T8r
Hm7x8c/671zfFR+m8/D7xIs/a333+fizvvf6n66Tp67T6f23r/9Vr+vt7/6q
PH71dX7iwJ+1nl4v2/hw93Ocnr9Pv+/d63n7+U/j2NXP//Tv9rNeO8+eOi8/
Kw581vNPv/fTv89T+ftqfPi5Hr/Wevc8etfneRpXf9b3+jn//+z16fPp9Hr4
Od9+1ifOp6df9+p5vH380/uAn+vmZ/3K68/5+bN+p/Phq3++7/55f9af//dn
/Vl/1p/1Z/1Zf9an1/8Bi8iU+A==
     "]}], {{0, 0}, {1280, 1024}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellLabel->
  "Out[242]=",ExpressionUUID->"fa6e1566-d2ac-41a7-a760-aa0cf50dbb22"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"newimage", ",", 
   RowBox[{"ColorFunction", "\[Rule]", "GrayLevel"}]}], "]"}]], "Input",
 CellLabel->
  "In[243]:=",ExpressionUUID->"eedc17f4-3cb5-4414-b129-a53f7f574eee"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[SparseArray[Automatic, {410, 410}, 0., {1, {CompressedData["
1:eJzVlPtXD3YYx1+PS0kpKpdKN0UqlxIRhbLJbYwOjc0tdylrrNktm3sMo7m2
g7SsQ7uwhTE0tMTIrDG2trGbrZPJ1qFh29s5+w/8tO85r+/3nM95Ps/neb+f
5/kGpswdlW5A7oOvh/g8uN5AOIlmopXoIHqIR8STIl1sFsfETRGiS1PFDlEv
EpVgo6gVMxrCj2J8I7gkRjTWr5jkADfESkflbwLnRKoe9WwKR8UcZ/BygQvi
NRXymCu4ucF5sa45TGmhe+5QIw55wCpPmNASolSwU2u9KUraqCYvWOyt+nxg
eFuI9gVvP2n0111xKQCOBEJhO9gQBNnBsKg9ZEn0vBDI6AhpoTAtDCaHw8RO
eqezfrvA9K7yIgKejVR8N1gbBdu6w7sy61A0nO0JV3tBXQw494HgWIiLg+S+
MLcfrO4Pu+LhVILiBkDDRyFwoPxLhNmD5M1g2D0ETg+F6mHgOlz6RsCYx+HV
kVA0Ci4ngeNoiByj3iTDiidg31i4Mg4aPwXh4xU/QfETdT5J8ZOh6RT5MFUa
pknvdDg4Q+/PBJfZ0DsVZs2RjjSoVKMbPA3dM6T1Gc3WPGmar7NM3X9OcQtg
+/PK+QJ4vASDXoaFWfDhQnn7CnRcBCmLYesSuLhU/VuumBXqR7beXClNq6R3
tfxYA8vWwv7X1bd14JMDI99QbRvgk41wexNEbJEnWyE/V9re1Jxsg2HbYekO
OJynOdwpf9+SBwXqwy4ofxvuF6rO3ap9j+axSDP2jmp/T2fva9b2qvZ96v8H
6k0xxO5XTw5AwUH48iN5dFhnH8PMI7DlKJzUsN8qgYDjMOQEzD8JeaVQ8Snc
LYPQchh3WnN4Rjo+k46z8qQC4s9rfj7XvlyAsi+0H5UQdFH6Lsmrr9TDy/L5
inJ8Db5V6v23quM7yPkeiq9K6zW49wP4/aR6ftYM/iL/rsPOX+HEb3C9WvXX
QNgNGPy7eqKFXFKrub+lPfpD+v7UntWBw23wvwMx9dqlv9SXu5B5T17d1wz+
DaX/QJW2/5ZpgRsaHo2M4MZGlIMx0NFIamKkOBnpTY0FzsZCF2NVMyPH1djq
ZuQ3NwpaGLvcjUIPY7unsamlsa6Vkd3ayGpjZHoZad7K42OMbWuM9DUS/YwY
fyMkwHAPNO6IqnZGSZByBhvL2iu+gxGvPxnfjka9qAw19oYZy8ON5E5GWGej
TpR0MRZ3Vc4Io1GkcUy82E0aooxrYn13I6GHUSvyoo2hPY2bYn0vIzzGOCVm
9zac+hi5IjpWZyIpzvhGzOprVIuMfsYNMaW/ahEx8cZmcUeMTjCKRI1oN0Bv
iFSxRuSLPaJYHBCHxXFRKspEuTgjzv1Hxf+AfwEHwF9M
      "], CompressedData["
1:eJzt3Xm8bWVdx/HfujmXQ5appSZYDilFoyJS5yihCDigKOLAvYigl/nCBcHp
amWm5pAZZTlkUog5NNCcbklFM6HAMjHpmoE2qWRJg5XPt+f5vfbvPHfts/e5
Zw9r7fP543kpejl3r7V+3/fze5611j4HnHTWsWduM7OrH9FYk/7zQ2X8SRof
TOPKND6SxlVpfDqNG9L4QPnnvWn8fRq/Xv63K8v/9pk0/q78f/rzn0vj0jQu
S+PP0rim+nOfLX/2xvJnP5/GP6TxL2n8axr/lcY7yt/zx2m8N41BGh9O46Np
/Hkaf5HGtWlcH/7uG8vPuiz8O+8vx3Z1+PeuKcfmx+Of4ZZN/nvfmcbl4d+/
ovyMD5Rz9dFyXB8r50U/95PlZ15ffubny/F8IY0vpvHlNH47jd9J44/Kz/xQ
9XM+nsZfl591XflZnynn64ZyfP+cxpfSuDiNn0/j7Wm8K43fTOO3yt/xB2n8
Yfl7dP7eV52LD5a/26/1n7Yc0zXl83yi+kyfCse5N3wuv4Y61pvSuDmNWzf5
XL6nfD4//t+vzumV5dr654jnVZ/jL9P4q+qz/E34HH9rw/ryz+PX9B/LOfNr
4fWlz6bz9u7y+X6jfMbLy2f83TR+r3xWP5/vDZ87nsMPjziPdc1d23Ic+twx
EzeU86jP/U+2toZuKp9fwd3W5GP4mfSPP2e5Ft5oOXd+zv2YvC4uH3FcnrG6
1ic5Rr9O8Rg/Xl2z68q1qo/zc+X4vhSO7cvl+G6TxmvTf31TGr9muc79ePxY
6usUj+V9mzieq8ccT8ynaq/2b736+2J1vKrF/0njfy1fz9en/3xzy/WrjzfW
ZMz3tI+3zv7ecrxtfnvN1ser4/z3cqy6tk2p368r9fuzluv3l9N4axq/Ytlw
+a9abstprOlReXX/pnWO1qvz+jyN8qnOwKTnsM7Iv5Vz+lUb1s//WT63Oq+3
SOO2aXxjk8/p28u57Pp5bJtv6nM5zfPo521bOG93SONOTa5LZVH1eGk5h96X
bLQmu3Ye99r6bk16Dr9iOdf/Xc7lLYrdOne/aNnvN4dzt5k8x15w0vM27dqL
522aOdZ5/I9wLutc+5x/qzLv6xzfLo07pvEKy3Pl6yzPH28o5/6Xwvl/i631
9W3lmlxmw5rui7WLvk43l2v1n2OuV7T4ltW1u225fl+fxjcUb2T1ndP4pjS+
NY2Xpx/zSstZ0nVVn+d9/y9U1/mNY671r1ruo9wxrvtsr7vPJ37d4/W+Q8lt
fc3v0Wz+Ol9SrjPXdz7XN2b7NuEa19f3nmncO40D0nhV+jGvsaHZnu+LJ7ze
l3JtF3Jta7NH5div9XnpR77EsuEbzbObjdf7d80nud6jrvWtW6717atrrRy/
zPIc/dOWszyNefoSY67uQt5H9Wm3b8m9Mv/NadwljbuW2rh/Gj9puUaU/1eX
GtF+h/fpvm9HjSx/jdy51Mi3lBq5exrfGWrkp0KdvMb27Quok61VJ6qPA9P4
jlInD0jju9I4KI3vLr3FhWlclMaL0vixUkevKHWkOelVoZ6iPcxTW7e2fK5y
h+7W5H71Xk3uWb3OHpjGg0K9vdSyVdTXctTXLGvrLlV9yTLtZ31bk/c4vN6+
vdTcgaHuVGvfk8YL00d7seX1k2z7CVs7V8Y6pP76V3+z9m2jNXhAqcP7lDn3
vmncr2XeVW0eXOrTa/HloR6pRWqxrRbb6nBcDd6/WTsfq+b2WHbxxy2b6PNy
Wy0yP1OT0/TR1yL3repSJn5vGt/fTFaX3jtSl9TlNOrSvfTavF+LnfX8fU76
+Lssr6Gfn8YLbGhr7DnXq2NspYY3UsP32EDttq3BD23yXs8eW1un9ALU6yzN
betRfY3ktRrr1PuB70vjh9I41/J+pfYqn2fZWvWy+1vL7D1Rz4voIeoaPzjU
+XMt17f3EtQ39d0lrzda3weXutaa7qFN7j0e1uSeWZafb8P7TzKduqfuF133
4/bT9td2ZeAH0jgsjR9J4ywbrh+9t5H/5IE8LHselIVDynywMx3WaWmcaTkP
ysEFNswCOSAHy5oDZeBHy1xwtq2dC3YbtU/tL2/te0/0kJKDZ9lwLjjd8nwQ
eyTPhNYMcX6gVyInWyEnWjs8uBn2TT/c5HXEw9M4vMwjR6TxbMtziXLjeaGX
IifLnhPPyA82+X7BEWVOOTWNMyzPJbG38r1WMkEmljUTce7wXPgccorlbDzH
ct/lPZevwckH+diq+fA1Sbxn8Ygm56VtjeL9ltYprE/IEBlqz5DufYzKT733
RY7IETkanSOt+TUfab3vPZzfR6nnJHJFrsjV+rlSf6c9tDpPmqd8/4BMkSky
NXmmtEe92uQ96pNtdLY0Z5EtskW2NtYHxnw9Ko2j0nhiGiem0/FMG521trmM
rJE1srb+msvvuXrmDi+Z030m7aevN7/RP5I7cre53K2E7D0yjaPTOKYZ3ucl
f+SP/M123vPnjJQ/9ZyPDjl8bDOcCyfJI1kki2Rx8izWc6D2LP3ZP+XxqJLF
Yy2v/7TnspE8+vxIHskjedz/3tRzGefJI5s8Vz6myfPk49I4ztpzyh4pGSWj
88lo3c8eWTKqfdRnGOtKckkuF5XLeo25w4bzpeZKMkkmyeRi50pl0/d+nmpr
+1nmTnJKTruV02PTOK7Jc6lySkbJKBntTkZ9D1dr0Mc35JJcksuu5PKYkkvt
3arPnWTPlpySU3I6//lTWdX8+YQ0Tkin8GlpnGSj74uSXbJLdheT3Tq3mmOf
YHk/Sbl9uuV7MXqufbutn2PmYbJMlhc/D8csP7bk+clpPMVG55pMk2ky3Z9M
ax2sHlt7yuqzH28550+0nPXjbd+M77C18zc5J+fkvFs5r3vxtqzr+SjPup5j
fJLleb2tR+fdOPJNvruT7zrbnmvdF1aOfe5Wr669s9ivK987LOebXp2Mk/Fu
ZnzSOfxJaTxD/7+Nzvyo/p3sk32y37/sb2+GPbvP9XXetxtZJ+tkvS9ZjxnX
vK75/HGW1+jK97i5nF6ejJPxbmfc37PwnGu9fkIaJzb5nf9x99fIO3kn7/3K
e1v/7uv245t8z62tfyfzZH6vkfllyLzyflzJ/FPSeGqT53yt4dfbq8cBHMCB
/jtQ79lHC3T/fdw9OxzAARzovwNt9+/cgicXD7QfoP7gaU3e/6v3+fEBH/Bh
a/pwfDNcP8gH3RvAB3zAh63tQ7ThhGKDP8uPD/iAD1vPh1G9g/ugZwa1vpAT
uvdYvwuAF3iBF1vHi/XWG3FP4ulNvnehZxB3NPk5pfjeIH7gB37gxzg/ZAf9
B37gB35sxI/Ye2AGZmAGZowzQ3sdJzW536DXwA3cwI1J1yqyw3sOGXJyGjub
4ftZrF8wBVMwZX9N2dEMexMswRIswZLNWvIs/ex0SR5juIIruIIrm3flmWk8
W393uiRHGOsfbMEWbJmeLacWX55TjHlUGkda7mOwBmuwBmumtT6SMYenS3K0
5TUSvuALvuDLtHxRP6P7RNqHOcpwBmdwBmemex/ajXmkDY3xPV+cwRmcwZlZ
9DO+RyNzsAZrsAZrZmWN7wE/2uhxcAd3cGc+7pzS5PtR6nP0rG+0h/ed8QZv
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
B3jgBpB/8k/+lz//x4T8+/3LtndJsQALsGD5LZADek7y5CZnnryTd/K+XHlX
1jW3M6eTcTK+fBnXfK57gNrT0zpeGSfbZJtsL0e2fd9O9/2Zu8k3+V6OfNfP
9mg/nmyTbbLd/2zHtTeZJtNkul+ZnvR5O83Z2lcj42ScjPcv457vtudj/v/+
uJFpMk2m+5Jp9eLrzdt6107Pu/h9MLJNtsl2f7Id+/K4xta8rV6ce1/kmlz3
O9f1/llcb/szaso42SbbZLt/2W77Dgw9txLzTJbJ8l4jy13P8pFVluv5mPyS
X/Lb7fyqx6aHJrfktlu5rTPra2KySlbJareyqv5Xva9yud3II3kkj4vMo98H
Zo4kk3uNTHYhk+pbtxtZJItkcZFZfHjJIjkkh+RwcTnU/o72dOJ9EvJH/sjf
bPOnZwOVN817zHlkjszNZ87TfEe/SfbI3vyyR97IG3mbbd7iPEfWyBpZm+3c
pqypn9QeJnkjb+Rt9r2k5jbtWcaskTNyRs5yzvY3Y54vn8fIFJkiUxubu5Ql
7XPQ+5Ef8rO53k99nvq7mCHyQ37IzzA/np0Hl3mHeYackJPR84z6M+0dkBEy
QkZyJvSemLJABsjAVsyAzxM+R3gGqH/qf9nr32u/zXzqnXpflno/qPiuvSXt
Janfcecxnppfxpp/YKl730Ol1qn1vtX6qDr3+9x6/kr7N6pr1TO1TC13tZZr
t1XLOEzt9rF2ZfFB1C/1a/2rX7mr5wz0PTBaA8b6pXap3S7XrvcNWuf5HjX2
Ur9dr9/7lJ5BazftT6h3oG6p2y7Vrdfsgc3a/TTVaaxR6pP6nHV9ttVmrMlR
TlKD1OC0a/CexUXvQ339rz1Y1SAOUoObrcG2uVnmPahhvqXObGbW3bUY5+sW
n2Pb+jzqjXrb33qrfavXyr5Gru9zxnUxdUgdznId7L2dak+9nfZmXljVGTVG
jbXVmNfW3Ytp/uzGA5q1ftG7UV/TMCyuTeO6dI/l2or1RC1RS+P6srs1w/02
1ZHX0CtL7VA3y1c30+ih5BDz1fLXymaNUd/zUupkS9XJ/sxDmoO0166++WXW
Pve8nvpYivoY54jvi8f1UfSjtgM3ul8XsSba6mESL7z/aJtHNjt/jKoBrv/s
XIg1MO76+7V+XXWN264vGZ/9Nf5qy3WN13SSXvG14VrWWY055TpO5zpuNqP1
9dS19OtW2/q2lmvE9Rmfs1HXqJngWniu3mT7znGXlGux1bMy7jqsN595TmI+
/Br4+X9DOffRKpzav/lmnFPbqt5R84ssems591t1jthoza/Xx9XnfVsx6Hah
5t9ia625tDrfGz3XXT3Po86x1/UXWs5tfV5Hnc+4LnbPZbnq910Tnr+N1umV
Y87bRs7ZenVZWxDr8aaW8xPnNp0H1ZZqSjn2/L6n5Txs9PinUS+fbjnmuja8
Fr5iw2yp51W/9A4beuTHMeoYriif3WveP3v83NdUn1ef1es5fs4bWz5f3SO+
u5zj9QyM59U/l5/X+pzWn+26cr48N/FzyPyLrd0Pnac2m9s+kzvxkfKZrirX
9trwOT5Zzo9q9QYbOnmTDTP8zpa/84ryc68qxxd/ZqwRnf/ry7n3n3dz+Xl+
Pv0z+TW6ORzX+8s5/Vg5h58oP9fzpj8n52u7vFZjRj2Tnyp/z2fDv3edra2V
K8rf6z/ja4K1Ibw=
      "]}, CompressedData["
1:eJzsvQm0bV16llWxQUEdhpDYAQKCCio2NKIinCAiKtglYsAuAjLEREmhA1RE
BQJCGIKlRCCJNCpEEDGEJgSTQPpUElJJKg2pNJXq/6rUraqAqDQavffu85wz
6jn/e99vrrX2ae5/7rhjzLHWXnvtdfZea37PfL/uR/yCT/m4X/QRr3vd677+
p3/E6974O/7OJ+/546+/eBwfx8fxcXwcH8fH8XF8HB/Hx/G+j7+qbLf9j+P9
+v3u+jo8To+/6+t/HF/u+3F6ndPrvy9/5+P4sMat983e++2+3q/39boeynjU
fLXVft/13/9QrutxfPF9dm4e3Hs/772+tM5K552uy+7L83Vfru9xvN9ju3/O
zTnn4vtzrTPu+3P2OB+8tsetdnx636w+r6vXs/c5n37uXdvz1fn18fl9Ocaj
eHv1ed56/tXnpL1v63Xdt/XJXT/Xj/PB/R7P9Vwf9Zzuvd+28vXR9vmo72vv
vLN3fnscH+a4lz/3zhN7OfsoO39b41G/07n/nr3z1FH25HE8z+9x1O+Yf98/
8O/9I7/g23/Qp228746al/ae77h5bNv3cfTzclvz2lHzcvv97vo5fBzv5/24
yrvnmm9u63PPNT/e9e912xxz9DzzyD3HjPfNHtz283cuvtk/Nq7x62zv46GH
Mm+d6/NXn5e99/ddP/8vy3jUPLZqx1bvw+vjj1nHPZznbjqftXntxefZ/nvs
e99d/S539Rw9zmP3Y9z7+7Tj9j4/+TqP0W22zz97P391PkvHp+Pa9a5e//T4
2/pdjuXXrXZ/On/d9bz8OB4zrv4+bV5cPc/qfHwcf93O2K+vzXfT+bDNIw/l
e1xd52/7PW77+brr63gcX/z9r3Lf1vnt7p+v1edqdf45+npmXPSGzfPk3uNv
63fZel1Tfp6N6Tla5cq99vS2eOdxXJvfpnZv9fXp+eeft3e9uJfXts4jq+c9
93Vt/fzpeVZ/r3N9L7czbr3PH+fLl2u8LW5cnY+Pvi/Px4WrfHg7890b4rhX
Bzh6vt/6PR017553Xm7z223N79N59nEefhjz65SXzzXPHjevrs5rR3PmlAcf
yjj9nvb+LueyJ+33Wbuf7+o5fOTe2fx0365nzmOz+2rrvLyfT4853xtubE/H
257v7up61ubb2+fvoz5/9T68H+O55vv7Mn/d9bx5Xz7v4dxHR68zZ3bg5nN/
3+fr1Xn93H/P6ue9+PfpdrV9zlF/b7uPjrrfzzPfnpvPH8fZ93ru7/uuOWL7
vL51fbs6n6zOK1MuXJ1fts5f09fbePT599q3c9m/9n2/+udtz/eY2ot9dmR1
Xr+teX76Oa8Vu3Nf101776PtHLN1nbx1nb2Vs7fOy9Pj9l7H6vUc9ff9o3/1
P/A/v+3dn341rn5u+py93/fW80zXf8euj47P95k9p0c970fNU6vrkJfNbty3
7/Oo+66fb8rzq+vxo3WMc4/n+vy98/P0PM0e+HUft/p77LU/e+3lue7Pfc/f
qr6zne/uZj582eb9vfPw9HdsduVc99nDiQfx893msduah6fvO2qe9/lePF9/
Rj1uer778j1MdanVeXx1HfCwxum81uaf1flx63le1nHVPpzbDqzrPrPr36/v
TO3A9LjpPJTmwSlfbz1PO+7o8yc7uvo5q2P6/s79ve1dh+y9H8+9vthqt7Z9
7pSL985jW+3Ny2pnVtcPe9eFd80tc3uy+rxufW6n88Z0Xl3d3jofTtcJ6fP3
ztuvbn8+Y7xOWbWPq+Pq+VY/7+j7cKu+te/52p/nPJu3jpoXX3Zd6lx60V77
ctT64nz2Yfpc3padOBdf7z1fm5+n82Q6T7pO2wePP/Sbf9rT/79jfH1b9cKj
1kNb7VK6b89lZ9JzutU+rB53nnlqlaNXufiu7cDRdmRd79n2O90837l11hnP
zJ+j6Xxy9PmOthtHjW3eTuNWezS1D6v2o13n6nUftR6arn9W9bZVe7Nv/XG+
uO1j5qetOtTR532tjEfZmXOd53zrlOnzdvTY7NGq3dk6v7d5dXV+bvP13us8
asT+NDu1dT221e5sXVfttVerdmuvHVq1K+dZ16zOT6u8PrU7j/Zo2/c85YDt
utgxfLP1c9a5casO4s9dnS/26ldb39/m9b3jqh1L72/2ZmqPjl7XNTu3ej3N
3kzt0l7dbmYvjo9Xbs/1qx93Lk5eXSdN59nVefyhjlN7vXW9edu62lF+yP78
tef4aJ1+dd5Zndf3rks8v5+u73dfjen1Zkem65f2/nQdU/t41Hps6zrpaDuZ
vr9mN1fv7632qL0/ne/F+/f6AY6e37bOww9V5zvqeqf26VzcMeefreuro9dL
bZ6f2rWtdqvNQ9N5b2qfVud52wfbr73rn73rt2ZPb8uOrdq7o9Zx03Xe1D6t
3udbOXHV7q2uu2b2bGo/7sv67GUZ93JDP37r775VB1jdv3dddZQ/YHr+KRe3
eX11/bV13eTjGX/1v/S/fPU73/Q/LtuH6Xa6Hj6X0deT/r7Vv3tq59rfc/R6
6ujzbtW7p3Zrun7aaq+O4uHVcXb+rXbx6PXMyzaeb908tTdH3ber9myVV1ft
xFb/w1G63urxbX5v9iu9vrrOafauXYfH0/f4e+r1NHs2tWurdnAvj7Tfc689
PVof32sHfdyL33d8P4mj5se1zznX+uZlHc/3ux1tx1btXbuO9nxttTer66zV
+Wvq79+6rlhdl9muYEfSummv/UvX0z4v2b00Tu349PuZjs0u7eWWvXZv7/pt
+rzttYtT+3fUPHOM/dr7vru2J/d1nH4/7Xvdvj4/5n47SsdYfx6nduxcOlKb
D1ft3er6Ls3/ze5N9cPVdVS7vrbOa3Z6ak9X7Vq77vR7+Tyr9m5qX7fen6v6
Ztue2rd23FHzR5rHjrWDe+3jVv3ucZx939vXhdP1WbtPj7aDUzu5GvdxtG65
d55r893UziR7l7b/3Of/kV/7Xf/PZ1e7s7oOm458frqOrevVxgNt/9bPX/29
2/HJ7q5y1Op9vxrPsnW96ePONZ9sXSe++LhV+zWdp+/azjyU8bbW8fN1ou/v
veu8ppdMn6tp3MlR9i693ubJvfNoswPJvtge2h55f7Obq+vN1etsx0/t2HQd
uvXv27qO3soTq3pDspur9i89f9Pzpef+XHrri+eV9fXB3nl12/y9qh++Vsfj
7N9t28+t93l6fa/OOl1f7tVHm/1sdm7rfNnO2+wl4+n6f3+1l1N7umqvtp63
2d3p+nSVL6b2O/1+/vzV+2XVD9zuo+k6tG3vtaPpuFWdNs0jt70eXZ1fZ3b0
cR16Xvt5vnVnu58//PlZr3+3ah8Z9/prVu3l0euH6Xw49TdO7ebq+rPZ1ab7
bl3vTu1Ye73ZvcQVq+vTtG6e6sFHxSNN7WXjyqn+yvHNHk5fn84HU7s6m3dW
7Vtfv26zt2kev2v79FDt4na7uXUduXX9t3V9mp7H9Nzv1a+aHTy3P29qH9N6
abqeZJvx3/7hX3TxZ/6ePzC2q2l9mo5Lx7fXp3byKPs5tdvT9fSq/7TZ5XZf
NC5rdnOVO4/Sf9u4Om8c419a12/b+dbsaLMXL+u49e88n9669Xc/Sp/1c3OU
HU3Pc5s3tvor99rRpj+uzo+remOym21/Oi6d1+/z+31d7fztc7Yen97P9+f1
5uo6eOqH3aozb12ftuek2d+tus7q+nXVDjd+n+poW3XbVft5zHhuu/RQxymP
HGdnp/fZqh2cHt90oKPsZ7KXW9ehW/XBqf62Ne4z2T/bF9u56djs0d7zNXt4
+n3+YLXP07+3ccR0fZ70661xS2093da/q/7RveNeu9q2j1q3Tu3oi/fP15Vt
nbvPbr5s9vHcdm/7+VbXmYn7zmUvk53c+vzu9V+u+hFX7Wmzl21+nNoH2xvv
T3YpvW/1c1bt8PR8zd4mO7v6OVvtZ1uPtvsqvX4u/2izq95/lL3cazePtpfp
9dV15j67edd27L6OyQ6ef305e737O4/2c0zXm0dx8tSObo3P3DvP7vV3Tu0D
+5OdSdtT+8n2t/76r/xL3/BzP+fGdjvP1P41O5fOuzr6upv9Ttur682t90/j
taaH7I0LP2rdOdWD0/zT7Ot0nNrZtl45z7rp6HXeXdvJo+1t/z6bnVy1u83e
Nn5btbtT+9t03GZvp3qt54XpPNJ01Wl8T9MPp+vdpmdO16/NnrTjpvY0ve79
03Hq103c4c9vf3c63sc1Hdzj9Hfee57V9fPUz9Ds8vS5nq5np/Z7r52dzn+r
69it695tdjnZm7326q7t593Z4632tb1v7f7o9+/W9W6yy1M7vHVduzqm9ed0
3m32YnXdnOx+0lebnfH26e/+Q9X+JDvH+9N5fs///cq/+ou+7HPr5/h8W9et
5gJfX7oOj9PrnfKB1+3tvkivp/OkdfSq/3aqf6f3TdfFR/uPpuuEvXb3qPFY
u3tf1tMPfVzXm6f2dtU+r9rjo+10ey6xl6vr4VU73ealrXGs07igZrfTfNz0
3bb+a3aorXv9ftvhtO3x9L3/4bE9bOv3ZO99PdPrXOWX9Pun47f6y31fTPXt
tj1dd6/GOSe7ml5vz3Xi+9V5aNWOe/5M8+mLj7vtuk1H2+mXzT5v/fvX/cRT
Oz214+n+S36cqR1Pr2/l7GR30/bWdfaqX3mr7jyNt21c4PVkssu2W21s50n2
2HbZ26tjsp/petPY7He63n/j+Rf/R6pdn+oZTRdI/DW196v8uDU+Yrrebtzd
Rh8/XYe39ffUnjc7vjq/btXBb9feN3u1+vpDHdd18a3r6b12fHrfNru9d93d
7O7evMdpnm3zF7d1cFsXp3k1Hd9eT3YtrXOnY7LLzd61sR0/XQdPdYDpyPt8
ff67V3X0piOkMfnX/f50f6T7KOlA6XXHbaTXWxxaex6b/W72v60P0vbq/Ldq
l7fa8bX5+1z2+7W6Ll/9O7fXU5m+nu6fo+zz0fZ7NT+3va8dP113e75s67/p
umtr3Fiy38kO2e6urq/9/tP39Ufr+Dd94p/9mE/8s3/sapvrSscn+9p4Y+v6
35+XuGOVL6b+/ul52no/cV7jx8Snq/XN9q7PPU75PtnxNu5djzf7vvq+veu1
mX0+lx1/HP19tt9nK89t44b5utz7vd2ep/R64/Oj6jWsvm9a52K6PmM+n67r
p+s/27up3W/r77Q/2cVk1xm//qN++f/xr/21n3/1ukcf3+xrW3env8fX276X
KTel79+/Uzp+ygfpc5qdb7zZ7L85oK3zm15/W/ndbd45Nw/s1QVW7f0x6/i7
tpf3dVzlpu1xcPu4b/t91+x8W8/v1d3TcW0eafUlVuuKTNfXtsvJjjNvT+PX
ko7cdPKp/Urvt13EPp++v8+LI/ad7WTnky4/XZc3f0DSGZK/IHGA+abpDz5f
svONF5p9n+r80+Pb89Dse3tOm71etfdTvX6rXT+XX36vfd+3zk92667t6V2P
+/0cR9vto+1ys9dNj5+uu1tcbbLbbd2+ar+n+cNt3uV9tst+X3q/9fBVv3ay
S96fXrfdtn1mPH2ff+LG62zzOiOvW5ef/l3NXjOaI/x6+ruTjtA4KX2vjZua
bpL4L92XUz1puq63nfc4fR5X5wGPaV3Q7PnqOn2rfZ/acc/Xq/Z5nz2f2q2j
1rcPbWzXf//s+lH2e9Wu8/y157itq1e30zrC89LWOiBJR21+Wtvtpot7fZzW
zcluTe1+W49jpz0m++7Rr0//nnRc8gek9/t62vHTz1vlpzY2O2/7bj5s9206
Ptn5dpyfs6kdX7XrLb6m2fnVdfzUjje7nl5vdn5q949dt0/t8n2336vXtxrn
f/u6e7PvH36/5Ps42enV4z36eZyus6f5uF5HTOuwTXX26bq9xadPdeY0/yc9
2+thtqd+8WTvkn1P9tzr9Onrab2deCHZ5al/IF1H+h6aru/v3+t+/32Nx8yB
0zyCZP9X6wu058Hr/MTTTVdr+l2z+7b3aTy3vV+1/6vzdzpun71v69GpPXzU
9bdx1HY+mNp734fT9Xpb77cx2f/GAa2eWsrfadzg9fzq+t7zaFp3Nfuejms6
8tT+284lu5/sbDov27abv+HZ1/HD/veLn/Yr/ov/7ef8w19443X2M3L86Xv/
gqvtxAuNP1bfl/hlygMtrsC/Q/veG3exv/kPvN34NO1veQ1Tv74523y+Vd+b
+gVs95sOkPYfxQONE9o6v/HA7az/p/buoekCW/WO1e9lHid/bg5odn2rvd/L
A+aCab24KTckPcDrmen6abo+m6770/qccas9Y7RdbDq3x/S5tuuM2H1ve38a
+Rxzgreno6+f83j052/li/S56Xzt92lxhC1PYHofJr9F44TmB0jxAKt+uWlc
/179IMUBNE5o8+fU79/GvbpAOv7FdvCo9f995YH7xh89LmDKC1POvC1OSM/P
Xl5o/vxW33taR8zcMPX/p/XcNM+txQE0/bxxQrK3zX413SBxgsfT9/hFVyO8
8Jd+7F/1X33cP/cnr/azbf0hXf/0830c50mve3/ik6Z3+HyJI/b+HklXanWL
UjzIanyodYoWl+jnrNWL3NvXYSs3NB1i67iqO7T13ypfbNURZjrDUfbzoXPF
ueISjo8rbPdX44WpvrbKD4kX/HymdUJbb0x1iLTeaf5U5kOPbf02XQ+2eL9k
T5Jdsx1K9jbZvRQfaLvXOAH7z/bpe/1TVyOckPgh8Ub6XOsYTdfw9aXr9vub
7uHfJ11f4yG/3uInWt0E7291GlpcZeKHaTxty6udckXjiOS3SFzgbY73vJV4
YMoNW/WH9nqzC01n2MsXs3Gr/bxrHjjXde3N69hbv7fzwpQjzBNTfWH6/Kxy
Q/MzJD2hbU/r8pgXpvpu0nvTOjHN93v9A83OJr0irbNtR21nzQfmAkaOe8vr
v/yP/t0/7ouvRr/f3OHrT7zRuMTn9/VZB0nxFokr2veedJD0eU1nankVjl+d
1lVIfrOpP2Pap4jXk/6XRj/X5+oz0PSKKS+k/au6w9ZxKyccww1HxT28bOPe
7/O4OsFTrtga19h4e8oRiSvMF61ewarOMK0rlHSJ5MewrtDWbY03WhyCdYK0
fm3rYNu/tH96/vY52GV4wdseT/fDF0f9InFH4pXEJ4lzGvew3XSQ9P1M9RYf
b75p+kWLx2zxLYlLWnxM44xpHadpfeVWZ3mqV7T4iRaXucoZ03VamtfbfH9u
zjhWnziaTx7auKo/bH3fnD98X0y3033adLgpN2zljVX+mMZRJP4wd0zrEqex
5Um2dV/Tl52Xl7gj2b3V9Xyye4lDkh8h2XNvwxXY8c/7mv/yR372T/mSS/vz
JVfbHm33zQM+bzvO52e/z2P+8Ov+/tL3n3grcVLTczh/0quSHpX8KCmeNPlb
Ut6Oz7+1vvRqP0ePq3Ubp/EX03yQvXGde/M4joq/WF3/Tjlk23H33S9y17rH
zdfb97yqf0x1D99n0/jMvTxhrtiqdzQ/yta+RG3dtBqnOV0PtnyO5D9J/gzz
gu1esn+NQzy2+IWmMyT9wBwAfyQusd33eRI/+HP+2x/1zzz9/6VXo7knnS/Z
/6RPJL3Gf1+67sRP1j/8u6S4kMYhfn1a58PvTzrLtH5V4w9vt/pWaT3S6skk
zliNE03zXZofk/6x6neZ6iOvvj7dH8cxtXcvtqOr9narznDX/LDdn7KX97bp
W+t80eI4pxyRttu4qmskncPzyCpXTPNH7f9erTMwrePked06Q+KINKbjm58i
cYnfN7XzHrHzSedI+5tO4uvh9dPv+aUXn/Kf/3Uf8T/9y192NbIf/vDnTP06
U55If096v89jzkmcMdU/Wl5MyrdNukjLZ5nW0ZzGffi5TeuLVg+r6SBTP83W
eI/GF6vcsaqPTLliyhlte9t437jhaL3i7jhiql/49dvSM6acMY3X8PohcYXn
jxb3yXzkeSn1f3A8Z+OJ6ZjO0+xAihuY+g+SPbO/oMVF+HjbQdtH7LfteRo5
zsez7fMnbmBMnPGzvu3rPuVH/FtffjWm81hvMU+l75/R+knSU7zf183riXus
R03zZJLfjPsv+dua7tE4u9Vhb/6X9Dyv9tnw/JLWNS2erHFI446t+sZe7kj2
pI1JD1m1f/u4o+kCd80Td+VP6Tyz14+yyifT+2mVUxJvNA5Z5ZPV+I6mf3g/
81jrf7HXr9LWhY1fWryo7VDijKYj2M6ynfwFvJ7GZGexr6fv88tucII5INlp
Rp8n6Rscl7iF10+/65ffeB/HwS++zvT9pu/Fus2U29L3kn6vxCdTfrG/zfyy
Gp/c6oo1nXBaB2QaL9L8tdN6PGl+Wo0f8bbnza28sppnkLhjyifmlKk+cp7x
KP/LXfHOqv9prqsczSVbOaTdj45DNZ9s5ZHGH1vjPtJ6qPXrmNbRaPW2W93G
FOfHujL54T2P2w7YX5J0EnNJs/PNnnJ+20Neb3yAXTcHsO0x6SjpvOl8P/rH
veGtv+uTv+KGPsLI67zfr/u85pPGEUnf4fXES/57E1+1eN3mh0u8Yk7hPnQc
CtstHjbxt3WWVscs5ZGtxpNM64pNuSXpJk1/SX6dNO9OucTHpfk+cczWdW/i
ksYrx3DKuTjivusv++NJEi+ucskqt6xy89R/k54b7296ZvLjbI0faXHzU15J
eknjDs/Hqc6X52W/f5qfYt0k8UWKszC/ePR5zCeNI8wL5oDGB7bH5gQfx3nS
6M9j+2T/rkf2J77x9fL5yS/V4lX8fSWe8vdp3vHo+2Hql0r+O99307ij1Tqu
aUzrgsQtTWdp+b1pXdQ4ps1X5pjGK4lb0noybTd+SRyT4mBX822mnLKPV/Zy
ykP3C011oHWeWeWU6X3Q+CVxdbu/0/PCdtNTpnEnq3m8zZ/j/YlXUt3HlveS
4gzTejFxiefnVHcMe2B7kvjCo+1m2k5+GNtb20/zCSM8gP1lm9dPv/tXXo3N
bvO+Z1bxb/+PvvIGTyQeYeR9bL/93R/9hf/9r/mqy9/pjTdeT7zisekjaeTv
8udxHYmjrEOZn1q8cYqfSfFF5p2Wp2x+mdaNTc+H35f67FoXneouSa+d8kzi
mjQeHTfb/EKJa6b5EatxLatck7jlWP3loXPJUVyzn1+mPDPlncY5vq+mOkzT
Zfw8TesVtrz/xDNtPmn1zZL+4u0WT5v6nkz7hky5Zhq3gt1Idiut95vdTduJ
Y5J9t66R+AKOwX7bjiddxcelbXjF3MLnev/pd/jqG5zFmPgifX/Jz5P8Vom/
zGvpezfXJJ2s8Q78knQdxlQPr8X9tjo5yf/U+g+k/PxpvG6bR5p/2pzTuCat
6xrnJK5Z5Zy0zm3+pL1xu1v1mPvBNfeVh1q87Zxf9nJKGlf9kVN+Mbf4+Tia
W5r+0uL8p/XS0ut7/UarfdPa+5r+wjZ2w/EnHlucSPL3ePT6P8WZ2K6bR5Ie
Yj7w682uJ07x+Oxb/cG/+Y0Xn/kZz/599cWzX/Nv+b1fc7XN63BMOg/XaV1p
9Xvy38ffkb6H5O9q/q3mn0txOr6PUny19RrrPL6PfT8zTp8jPy/Jz5Tieaf5
Rq3OSqtr0PQc6zLTuiuNY1Z5pnHNVn7ZGzcz81Mc5Wd6reo369/LXt2l6TBT
jpner9PnYco1iWOm+cyeD7w/cUwaW/5Q63ub5tu23mx1L1LdlBSf2+qFJC5J
8Sk+zvEmfr9Hcwn237yR9BDzibkhcZJ5xVzCNvxy+p6/9mqEZ9BhfH0eE09N
OWU6Nr9Y4pppvHSLQ57mp5tjvD2NI275T+354rlKcTMe7Wfy9rS+S1s3Tevr
Nz1mGj+T4mkaxxzNNXv5ZdWv9OLjpnrEQ9djjvY/ZY5Jv9/q/infrPJM8yO1
casfKcXrJq7xceaUKcckfcZ5zCkvKPl/UnxA0mNSnxjHYaZ4mMQvaf0+jbd1
HAfHWT/A/jOaDxJn+PUUr2L/ivUSzsPnnn6nr7nil49/+u7f+oe+9oYuw364
hvdxnHko8Zf3p9c5T/pekj5kHcufk3Si5p8zxybuSXqO46ms06T+Sa1+Me+3
vpO4hu3mb2p1oZNuk3Scxjdt/vJonTrlZTa+cZ5nmq+nOk2L/53GCTfOWbN7
R8fR3LZ/576O6zzT9Jg2rvLMKsdM/U5Np2lxMF6PJJ5p8S/TMa3HrMs0jkk8
kvxDLb/Dx7U6qMmflOJUrBuYV9Jxyf4lO26uSXxj/oAvbM8dn5J0DM5nHuG8
z67+o7/wT1/+Xn/6Bsd4m/cxmo+afpNG85f1IPPTqv8rcWCKI2p6T4o3dpxV
ijdO+XSpHmLrN5n0HfPNtO6MR8fVpDHFEU/7Ek3XbS2OeKuO0+bxqU6zlWfO
HU9znnGvTvNQuWbOO1N+2cs3vn+muk3TKVd1HPNOi59puk3im6b7trr9nqeY
51JeddJnpnU5pv1+mdeTTmM7k+JD4RNzS8pT5n3J32J7yrZ1GLjA22k0B1k3
MVd4f+Ic+5vgHXNP4yDzT7reNCa/WPo+zFd8fuIjfy/mn/R7Np0pcZJ5x9sp
Pqf1T/J2qheY6uWYd1bjiVu9mqTjtNendWxW69p4Pk06+Sr3mHfSOnhv3PBW
7nmxjjDNI17lmqN556HG6/T4mvS7TXWfKQ9N44S3+qdS/rafnxZfw9jyrxPX
TOvheb/XZymeZlqfzjpO0+FbP4AU15D8CF5/m2/S+tzHW3ewX2bKF40TbL+t
X9ie265zfdZt7HdKXPPM2/JbvurrLt779G74gd/0pqvx9Dt+3dX7fd729yRO
4fp9fWybrxjZ7/Mkv17yX9nv59816XNJ92nxyInPW73FFJc85SQ/ZynerdXj
m/Zfapwz7cPU6vdN/VirdW2avtN45rb5ZpVXtuk9iUe28sr0c+6aX9b5Zi/v
NH5Z5Rvfp1PdZso707ibtD7h+Z3G87leVuIczz+pPo39VF4HpjpiiVdSnf/E
NanvTsrHTnE1yf+U/BMpb8f20LpF0msSD2CvHcdru2/esR7i+OD0uXAN3MI2
fHP6Hb7+amT/6fd609U27+f6PTp+x9fR/GPmMXNO08GSHmYOTf5Bf79spzjt
lM/m+zDpOi2v3HE907FxD89tqlfc6hG3fgopz9IctJV7Wv6VeSf5tdJ6NM3v
LZ4hrZMbBzUumnJO03OaHb4dv9fLq+dM/87p79f0nq3c4+PMNb5/2/PQeCjF
xbU6Nq1/UuIgzyN+3esvxxvbj9Xq/Kb4geSXSn0d0/rVdsNxxolzEu9M69gl
P4g5x3bfuoT1FTgCrmC/OSBxTdNT0ufDM8++/Te89Zp30HX+xb/mlz39/w03
Xud9XDej91ufSbqSucbfi/Ul7/fr5q/0PfG7Jd1q+j23+OlUh6fFMbf6TMmP
2/p6+Pmz7jONX058lPo7mH8aF7U6O2nb8+U0/7zFKzsPa5WDEv807knHJ3vX
/CFH8dGaPrPVD/ayjvl7m+pCU/6Z8lC7L1f9XdM4n8ZDrR6oeSZx0PT15I9P
8cvMg8yTKT6n6UGtL0KqT9L8XtaDUjxGylf2/hRvm+rNTO27dZakt5gjzF3m
J9t5H8f5zTlsm4O8//Q7Xb/e9KL0ehrtbzvdJ9ef59c5L9ucx/qU9ShvT+OZ
0nkc38TvlO6/VLc69S9t+V/p9Wnfs1Z/2bzU6ip7vkjxQYmT0ryU8kun9Qft
N0t+sr1+scRJU15a5aK9etH98J9NX3/ZOGqe77WXk6b+1ubHbf6y1THFPScu
SjqROcfzRNOTEh95nkp5XfabwUeMq3kqKU/L8RCuX5zqqtg/kfK+U1xr8nuk
/GrrCNYtbPfhBusziR+a/pLicTjOOhSfA3f4Otg2J/l4cwvbPo/5j9fNZ7yf
8eInPH/lBpfxujnN31/yCyb+YdvnSf5A+/FSHLjjtVLcdKoDZW5qdS2tQ6V6
342TvJ10pSk3Jb9b4qVp/LTnP0bPn1O/WuKlvfnuR+lJq3w05aSZXnG0n2yv
f+2+jvO/cy//3DcOSnHR07wv+8mmHNT0oFZHLOlB5h/We4zW15Mu1PQg+wmS
Pyz5xxzvnOJ7Ul50y59OcdH2lzmeF/trXSPpM+YG9k/tuF+3PpM+H95ghC9O
v8c33njdfAKXsM3r5iTzjnnLI+fxdbDt81u3MkeaQ/07mXu8P223OCm2W/59
GlO+Yuszlrgp8ZCfz5Tn4HGVh5JuNI2/ntZFnNZ/bv1BGwd5u3FQ8rs1Hkoc
NI0L2epPOw8X7eWK+z6uc9++32HdTzb1iyWOb+uAxknWYc1BSQ/yeifpOskP
luKEkg5k/nFcZfOXpXWl51vGpAOldW/Ka3f9wFQfkJHXzTmpzozzue1vSX4i
2+uks0x1omS3/fnmMM4P7zD+2J//k/7Ur/tV33j5vb/54gf/5t/+f/2T3+/N
V/sZ035zCuc1X3nkeJ+Hz/H18PrpfvnGG1xmnnQcuL8nf1+OI/d5zFN+f9Lp
HLeU/LKpLtGUm1qfjeSPs+6a8s683vE6yLpRqgvGPNL6rDd/Wqvj0ThoykMp
/2Xa16LZialuNB2neWarnGS7PbXva1z00Lmn889WXW6v/tPyxRq/TO9nH+/n
x7yzl3taHY5WjznliaX+VvZ/pTig1kfRcaHWe1Idn1R3J+V1uc6M+Sdxj8/D
+1M8snnHOon9THCAdZXkl7IdTnE+fr/5BN5gG57wfvjDfMTI+8wjiZPMUYlz
GH1+X591J+te8EmKyzLf+HdrfGqdLsVjO/+s1cVs9RqbrpTitD2mfEw/tykf
wv6ypA8lPYjtFk+U9CD7zzxfemx596l+SeOeqZ/M+5Mdalwz9Y/tzbc/ioNm
XND23/W4ymv9+zhGjzuOfxqfJ85pY9J9Wn/zKf+0Oh0eVzmo6TyJf1Kd25QX
k/pdpbhm+7Wsz0zzqFM9nqT7YNe87m86C6P9SthzxhYvY3tt3cVcxecknef0
vX/TxV945fkfcINzvv8X/MWnv/ibL3+nN18dx5h4ivPzfm/zuYycn9F85Osw
FyU/nbnFceOJJ82vfK9+X8qfc12E1J8jjdaLUpxa2k51shiTv9l81OoRpbpf
rV+N+ccctJp/1vxmiYfMQSlOwfpQWudu1YX26j9Tv1jjoCkXrXHPqn/socQJ
Ta9nPwe13y9xzt58sMRBU+5J8c9+7qz/TOsZpvmgjSkfjNHc0/K9Wj586u/o
+rmetz3/O3859cdyXEbimLSf93t9b3uHfcQeNu4x72DnOS7pRuYgxw9bF0l6
C7xx+r6/6YorGOEacwn73/MMN3/b9ch+84rPw8j7vvSXPNvxzRfPv8Yf+s1X
18PriY+4Tn+PKa4o/T7+XuEavrfGVx5TPLX7pTleOtXL9v1sbrdu1Oo9pHii
FDdkPkp5Z2kdlOKoU16+/e6reWXT9aA5iHk3cdC0/lCLB03r58RBTRdq9u4o
HlrloGM5aStv3PW4Ve9a9ZfNeWg1Drrx0CoHJR7y85X8YC3e2RyU9B7rzGn9
xTzU+qM7r6vF/zjOJ+UB2/+V4iCY/1McaqoH0/p1pnrLjvtxPlGys6t+qBT/
y3kT76TRuo55CA4x3yTeMc94G54xN5m/4CDG0315c9vXBw9ZH0q82fglxX0z
2u/HtvW3FKfN2PLKUt8S34dNp0x+tZQP2eKtvU5JefruS+95Ydqvw5zUuKjp
RFvzy1o9IvvPPN+bkxL/NL/aapz0Vn2o2det/rLbGe+ae24vjqjxURsbF7F/
6idrfJTu8xRfl+KFzEeJk1r+V9KNzEkpL37aR8N121KdXF5PefApTshx0KkP
FPYi1Rd0vZ9Uly+NPq/ztOwfcxyQOch+JMfjpDHlT3nbOk0a4Q3446TLfcul
fbzmEniF/R6t77Rtzvu5n/Xd/8QX/+hvueKg3/R//g+f+1N/wrde/Kd/x1/5
vv/3T3zrxe9648c+/YW+5WpMupL9fCleie895cMlfShxpn83ny/5NR2HneoY
oUO2+zmtD5J/2M9RizdK+Whst7hrr5fsV2v9zKb9W1fjjFJ8dYuz3spLjYPa
fvPS1K82tYdNd5j6ce6Wm+6ad26fk1a5qfHwNK/M92Pio9X7vulKq9zE2PTk
piuZm5Ke5P7wnu8YUx3Fad0gc1LKH0t+BtcdTJzE6+al1B/Mr9t+OX7XcSgp
zsa6SIrDsT8p2enkP4NTzDdswyvwi0deT7xkfkkjvMN52YbT4CJ4CX5iP8eZ
3/z5/l4Tr3rkeN6f4rD8O/h9nI/jrFulOHm2U7w+9xmj49p8P5qvXMcz1UOy
P671H/bz6ufZerHjk1LcIqPz0ZI/znFI07qPbE/rlnh+tj/O3NT8cWxP1+Fp
fX/b8dlT/SnZ80deug3eWuesxF1buSrdr9O47FV/Hc+bx8ZXKW67zSOJq5yn
7/wS++nMUfbXmZsc9+lt+wEcV+q47VRfOulQXs/b7iT70/pwOQ/c+WrmHccj
m5fgIHNXOs5+s6Q/wRvwh/Ulcw08c7pPb3KNeYxt+93MX+a30+95/bl83kkP
uf78T/oXnv8CN3QpRs5rvx5jihdP3JXirRy3xf7Ewx6tJ6a6mK6zkOpiOs48
3ZdeZzS/32pdeMcXNv2q5cWl+O+kU7W+tNbbPU+2OKcU783Y9CmP036zzf40
u7U3/tv2M/FT4qy9+tO2903jh+7rOL3O7d/fmp91naNe/T7Kef9+Pem2iZ8c
B26OWq0H4HqOq2Oq+2iesk7l9WaKazJHOe471blO/VuTPpXqInrdn9bxSYdK
/c+SXTt9H99wQ69IPGS/F/sTRzl+yP4ttpPuBIfAM/ALHMV++MncY/0IXvL5
eb85yufh/OhTJ17+M1fj6ff+tqvrTDpW4r4Uv8X3ah2R793v8/fM+Vv+oPUr
+w1TnL/rDqR64eYs1zdIXOV4KdcDM0elut4erWclHYv5IMVFTXmq6Vfs97ox
9bmd1p1MXMW87Xm98ZXtRbIvU51qGk+e4se38lTz592uf++1omulv3u7jnWU
f3BVv0qcNY0fbNw15a3mH2xxVKmfpOenpFtZv09+wKRbJc6y3uW6A867m+pW
2JfkT0n1G9Po91uvwv6lfLrETfbfWX8yR9ne28+HfmRdyJzFNhzDCOeYa9Jo
Px/b5inzkHkOneqf+v1/13/9k3/Wt1383F/5FZ/wK7/imrcYed16V9K1HKee
OLV97/5+7Y+0XuffN3G0+Qted71O87yPS/qW/Y9eV9j/7fgrx121+vQpLiv5
/XneU3/dVs8p8VfiscRlrR9Ki7dK3LWqZ22t79Tiq1bjrBqHrXLXNnt+bv66
a066e79g8weu6luNrxJHTfNTm3/w6Hj1xlcpfy+t+5pfMPVlMz+Zo5p/MNU1
SDoWdiBxUOKp5HdJ3OXz+P22c/Y3YU+dN5e4KulT9vNZL7KfjxFugZvStv1x
8FXSu5J/ztyWOA1e4jrgKetZjCeu/rYbx5nzmr/Q3GN/pt9vPc4cyevWJc1Z
1sfsp3S8V4p/T3XQuQ9dv8F1rOAv61upDpXrppmjpv2BzFXOC0x1o5z3x+i4
0Cl3eZ6bxm2dq15U46spZ031q+m4la8SZx3LS1v1mrvmoPPzVPu+p/xkjmr5
oOYpc1HjpZYHO+WnVh9qOpqjUr0514Ny3ILruiS/YKr7NO3XmfL9mG9Tnzbm
+aRPOf7X6/e2nrdfJfkB3a8jxUO3OG7GFPeNvWYbnmGEg8xDjHAI23AM+09/
xjWnoAcxwi3Jr2e9yH47Ptf6E59/ug/fcjWyn5Hjn2PZv/KWq+u135DPM+fY
P+rv1VxovS35H82zTb+ybuY4LsfN2W+Z6qS7Prv1LXOV/eOOg3dcFuuXlG/r
uvqu3+Z4eNZHSa9yHFaqN5Xykb0ObHxlnkr1Oe1PNFeZpzyaq1IdqlXdatVf
mHSEpDckXSvpFa3ewtR/uKp7vTb0qf261FY9Kv3OU7/fqh6VeCrV22z1xhNX
pfw/P98pPr3pUZ6frE+1PL9pH/T0vtRfxfO146vMP9adzEM+zqPjV9zXxHpB
imO2LoW9TnYZe+z4cPOA9R9zi/Un+AMegV/gFEY4xjzF2Pxu5iy2eT+f8wP/
wX/2J/4n3/mWi//vX39+JZec/Jarkc/nOtlv7uLvsp7GNtdrfczXm/ybvN/f
A+d3vBi/J7+X/YaOA7PumOp8pfxQ188w35uvvH5wHKHrqaX6DKk+qOO3XK/B
ce6pfpXrsjguy35Br/s8j/G657vUF7j1B255hXCUdaymWx3lD2z1qqbxV42r
mm61asdvxx/4UPSruQ63+j0dxVONq3xfprH5A1s9qqRXJf8ez2XK80u6dIqn
SlxljjJPsW5M+XypT2iqW+PX4SnHr7uvhef9FOeU+nRgZxwH7Lwsc1aqxwk/
2V+HnUx5c9Y9rLNYT3E+neOgzENpNNfAK6f74NtvcAscZq6y/9D+Pcelcz5/
LqP56mTPv/3qeK6P43idv8fcA19aH+P6zV3eb70v/d3stz/UdbVSnQjzVOKw
VDc1xWu5Pr6fB9d3sD6V6pCkuripbq71KucVsn7y/GG+ctx7yiP0vGX+sn7V
dKvVPnupz6jXy/ZLrPaRaZw1jb+a+gX3+gHPxVlrPJF45a7HdD3746T28tRW
XWrKT8mf1+pSeZvnyfzUOGraFybpVMwbaX2X+vvaz+d8autNia9Sv1/XOXff
DMdLwVEpfyr1yU19z1L/ldbvDTtmvx58ZT0q+ckcx8P5zCm24+Ye6zvwhrnF
I9zi93FecwXXBa+YS+y/47zWpz7waX/906/2+jpOz8d3XNrx77jxujnMHJk4
0LqdR/4O61+M1v8c32/OTfmYLc7Lv3/adr0uxlRH3zzl/AxzVYpn93HmLPv9
zFOOr0r9aewPZD4yT6X5K/kLE0+ldecqT6V49q0ctRpf1ezZUfFVq/w05al9
vHAUx9z1eLwfr3HTlKt8P0x5aho31eKkkg7VeOqoPnopr495xfOP9XavD81D
5qnETSmfz3UUrEd5vct8bp7CXpiHUv46dsb1rjne9bRT/WzHiVtnsg7lOCT7
mbwfPrFdhx/gButMcItHeAV9x8fbv+bRuo/9ivAG5+Vz+Fz46GTPvvNq+zs+
799/9v9qP8d7tC7lMXGk9Tlv8z2ax/z9Jr60Lsfv6Psg8VbKl2TbOqV1KvsD
kw7rEX+546tSfZHEXda17BdMce1Np3Iei+clc5Zft25lvnIcaaqHZc5q61vr
VczzqR77VJdq9X2SHUtcxfaUo1b9fs1eH6s/7fXzPRy+mnLR1J/X9CjzU+Mm
ths3Mfp+t+7kdYj9eV7HOF+v+fmmfWXMT8w/qX9M8uelfhSt76njUb1ehZsY
PU8nbnL9gqYzTfv7pv5z7LddS/E0qd6T48p9HvMJo7nGfjA4Ax0HPoFXOM6j
/WfWf/g885zrGvi8fC46E9fD+DXvfNPTM3zHpX3+zqttXzd/p3mJz+c6zU+O
F+O6/Pf5/OYp3u/4fX6nlAfZ4rZSHBfnc9y88xccx+77OtUVdXyg4xAZnedh
3rI+Zb9fyvszP6V4qlSPJeUDWseyn6/VvUpx6a3OAqPj05N/b8pPUx1qqkut
6lNb46W8/eF2eV2XOpav7ot+ta6/rXJRO27Vj9fizKfx5F4f+LkwNyW9KdU3
2Ou3S3UOWv/hlG+X9CX757yeNDc5rzr1E7beZF6y38Jc5D605iTH7SZucpyL
48edt+b4bNdXSvHZ1jHMKdht60rwTuIS77c/zTqOecz6VIpT5/V0HehL3oab
PH7+Rz7/4CvuQodK/kiuy3zk/X4/x/F9WOcyZ/G78Hv6d7Pf0zxtP625y/Hz
5ivnK/p+db9C+7vTdsr7sx/QdUOSX9BxUnATHJXqhbpOqHmKecrzlvWo5t/z
yLzZ6rBP+90k/cnr6ml+X4uHWs2XWuUqtvfqUau6yarf7xj96b7GVR3n35v+
Dnt5a1WvSnFSLY9vlbMcxzjt6+f1lHXrVAfB67tUzyDFjaf8PPeX8XzKvJvq
dTa/nu2F62yauxKPOS+dOJRULzz1c3EcTqrj5D4sLQ7afr0UfwS/wCWMiW/g
II5LOo95zjqU47Lsnzv9ft918am/7eO/9z/4AW+9+KWnH/Dis3/Kf/Or//z3
feeN1z/9k55/I1ecxXH+u5KOxX5zmb8fx2l5dNyW/17Xo0hxWvYHus6Xda5U
ByNxF/zvPthePzT91vkaSd/iuFa3zTqW46nMX9avPF+0/oIp3qrVDbV+BW95
bPFULT+o+f3gruTnSzpV2p/0hKYvNN5qnLXV/3ceznoo/rx2fXPdru0/2g84
1bOmulbSa6d1Olf5yX1pvG5K+lWr18n8w8g8lfJuPL+lPqvW9RNXOf7c+hUj
87r7Fjf9yvUQvb53vHmqJ+U4F3OVR/OV9Q3no5mvsLOue8Do+CTzBDrQ6ff+
rhvb8Is5yzqP+cqf4234xZ9rjnp+G3/Md1+N8Bbjyf699YaeZc5K15HitsyX
nIfPYb/1M86f6mI539H9dpxnaP+pzwdPp/h512twvDojvOU+hDw3yW9uvrKf
3ftTPVE/x65z5f7OHuEs119Iernjr5K+5fWl++K0fjjebvUVWrz6qn9wGp8y
1Q+meta5Oeu83DXll7vmq8RTc7/hUbpW46rEV75/pnw1rYuQ4qtSnm2rg57W
R/YPNv2KecRc5by+FDdlbkrrSedLO44q1Ql0nAfztf2BrmuQ+Mp9js1ZqX8M
63/7A51/l/LIku5gO8lo3SL5BeEe6ytwA1xgfoJr4BP4x8dzHsdZWSez7mOe
4nxwEhx1eg6++/L3e9vl7/vWG7yFjsV5fX7zIn+X+ch/r0deZ+S6zXXmz+Qv
TfVNrW+5D8/pubiuB+G8Rd9fjtdyvqnrWjm/gvs+1WNvum/ishT/bj3L8Viu
c+W6Vu57Yz1rGt9uvmLb+tW032DzIzK2euuMU7+hOSvpW4mzpv7CZD/PrWNN
OWsbT903jprHXW3lqxfrW72v3968P99307oJU65KupXHlteXRq+rGK1bwVOO
V09xVl4nmq+cz+fjXG/K+deMjuPwetj1om0XHFfV9KmkU2GXHJ+e6kHanmIn
E1+lOkqul5Dy/OAa7L55w5wAR6ALwS2M5iHrPNalHG9ufrH/D376mGdf68e/
7eJ3Pvv5PvJtF8/N429926X+8d1XI/zl67X+lf6eNHIdbMN9XDfb9lvyOnwF
d/I7u56F495dP973id9vnTL1FXL8HpxFXmrirNRnOvWtdD1RXrcf3n7GFM/F
8+36ouYr+w8dt2X/Yep7Y85KdRmYH11/3bzV8gQTX9kPkXgr6Vi2L8lveK56
oW20/T2KrxpnzbjjoXDV0TrXzdenfsOpjjX1F3p/4/2UJ5g4zNzF8zTVs1pc
JaOfc+tZrqOe+tDYL+j4qlR3yvOe15/Ws9z/wn5C5mXHXzneCu5KnJU4DDuC
HwXuSv11rWOZk5Kd9X5zlc/j82GPGdFNnAeInmTOsv/N/GNe4X2cB56DN+yf
M+fBQdav4Ct4Cu4yb8FZHP/84z7rpj+R85uneJ2/g/3W0Rg5D9dt/c18Zu5y
HVXnC3AftHoQKU4/3UeMicPcH9H13eEu7n/4y3XZeG78nLjuqNc11ptdh9TP
d4uXZ16wzpXyDhN3pTru8FbKK0z9bxJ3pT7Ons8Tb7mOaOItXvd6v9Vrb3pD
GpP9bLqWX7fd3qtnbdO3zhUvdfs61lF+wfT7HFV/IfkDff8m/ar5A5Mu1epW
Nf3K8VbWwdGv9uYHJp3K/ZBTfJXr5bhOuvP9mk7FPG+/IPO8/X/YidRnD32g
1UGAg+Ac7B2vp7jn5E9iv/2BKa4qxY3DBYzWhRw/bn6CJ6xvWQ/ifFwHnwMn
wUf4A+EotuEr8xbnSVzFfq6Dbb/PfMbx5ib7JRnNq/CU66iah9g2TzE6T5PR
+pXfn/yO6J6u04Celeqzs9/Hse2+hTxHKZ7ReSepH2fyH5qnHK+FnpV0LOYj
61ds209o3Sr1afaIf8A8ZT+i9ayUv9TqiJqrUnxW4qmkYzW7OPULTvWtaf2G
fdw09Q/edlzWzc+b/j2rvDnVm6a/Y7pPWr5F4qfGTdafpnU9m59vqjsxmpvY
tt8v6U/TuHT0Jq8XXcfT8enwk+tzTutNue6U+87a74c9sN7k/sTuR2y9yXbN
dSQdf5x0KF73eR2XnbjJdh9+SFzBmHQoc5D9epwP3oGDTr/XNRc9/1l/yNuv
eOj0+739av/pz7w+Dq7iPHCP/x72c16OZ+T62Lbexese/XmOs7JfNNV5d/y/
62W4TpjrYlinso7lvkOOn0/9o+0XdByh++FYx4K3HA9vXYrn1/VGHddujvJ8
wDbzhXWpVEc0xVtZj2p11x3PnvraeNt81fjJ62vsBqP9Gkl3SvzU4ttbXmDi
qOYfTPb41e119ve9+vZt1we9L3698+lUSZ9a5a2pTjXtV2O+ajrVtI5CGlPc
euvv1/rSeB5qddGdp8O261fBW8m/l/rQtPpV5iuvk5Ofz/Hq2BvskOsVud6U
60GluuTWGVb9g9Y9XIfcuhScZb4w9yQ+gUOs19hf6M/hvKff6W2Xv9PbLn+P
t1/+Dm+/eP62T7zmql/8v/6NT7/q6/2McBjnM3fZn8h18ffwvqR/pe/DI5zF
55i3XD8MXvLouqzOA+D96IPOH0h1X11vy/Hwqb+O62OxvnBfHPbDWR7dN8fr
G8dh8Ty7r7n1q1a/IcW9O58w1clyfLvri9r/1/yBSbdK87LrtJu7pvFXTb9q
utWUs6a6VfMDtu2kV63qV8dwVeOs2+aweX7gi/Wsde56db9s/n2ncVVNz0r1
rFIcFeNqffVUDzjVs/Jz7HpW7vfgvMDWv89x6+Yu16lJepb5ynHr7suX8v6s
Uzm+w/4/Rtbh2AnW99gX+//gHnPVtJ63uctxM9jDpFu4HmfSsRwPbn+bucMc
0/QejreOBVehR8FXn/D8h3zHxdueWfV3vf3yd3rHxZue3lWf/knvuMFfHMd5
+Dy4jG04KPEex/N3MVo347rtn+Tvsv+R79t6Yuq34/2OgzNfWS/zcT5fu8+4
b30/u95aqg/v/Twf9hemOHnnnaR+z6mOKfOC/YOJu1jXWd9idF+txFuuP8r6
1GOKe0/5he5DaJ2LMfkHE2el+Kvkb2m81fgqcdZUx0rHTTkr8cQ+feuu49zX
6y00bkpcap3K2+33MjetclTyD5qfttatavUVkh8wPa+OR2c9lvIAva6b1q1i
v/mJeQ2dCo5i/mN+9PqVMcVFtfy+1AfZI/bAdUCd72f+sV/HdTRTvU3HL2Pn
kg7G+Zx/hz03N6HDwANwh3UijrNeBZ9Y54KrzB+cF93J+hPcxHj6fd5x+btc
b/M++Iv3m3/4e3zdjmv3dfJ+uI0RXYzP4Xjzk+PS+P5dB8w6luvNe7/5CX+s
ecr8lep1pfvPcYCOD3SdtVRP3vmxzucwT/l5TXVIp/Ww2E59oJlfUvx66r8F
T6X+OPYbJv0qxWElrmIed57gXt0qxa0k3Wo1f7D5CRsvreYJmgcaP61x1F3r
UOf3E079fx73xlv5vjCHt/j1xFmpPqj96i2vr/GVOavFq7uOlftFpHrqaeQ4
x40yr5mvGFlXMl963eq+Nvb7ub+s61TZ72euwi4wul6V607BQat1yX180ru8
bf+R7bL9gOYi++fgEbgDroA7/H7zi/kD/oGHrD95NFf5dXMV/GO9ir+L6zBH
+joZzVWM5kGO9/dm3nKcGnqV64LxOzkPwDqj8zUdL+/ze4S7HMdlHct5iY4j
bPW3Em9Z77UubM5iveTnPOlVrMNSvffkJ2T+YT6yf7DVZ2j9nV2vwWOr25Di
2VPe91S/av7B5i+c6lbJH9g4a1WnanmCiaf28dZ95ax1HWuNR/fzVuOq9Po0
3n1vPfbVOPemZzkeM/W5MWe5Pmjiq1RvfdrPhtF9NLzetV8h8VSqA+r8cOc9
MZqzHM+Cv8X5XK6rmeJtUp8628HkT3IdAPvt7NeCFzyaQ+At8xk8Zn+f46bw
+8FRz/Hke99xabfeeel/fefFz/h+b/7L/+EffMflfX99HK/zfrjN/kJzl/8O
jxzP++E98yHbfp95zvFYrtdgjuL3cj5lqg9hP6Q/x/xm3cvxWqlvj/mL+zv5
F11vzf5E94nmebKexXPoeEiea+KzrGt52/2k7R9M9RlS3VHr98lf6PpYibtS
vHziLetaLZ+wxcUn/pryVop/b7w15apkl1sdhqZvJa7a5h+8r3HuW+PAtsdp
rfJX+52n41b+YjR/Oe+26cZN/0p1Vfx8O1/Gce/MK9P6VlMOs84Fh6V+gq5j
5fVxyxdMPOY+ghzvfKpUP9R5XOYv+3Ecn5z8PLaHnM/10LGr2FvscYprd/w4
vOS8PutW1pe83zzENvwFX5nDPuPZr/GX33nx7Nv/qF/+zosf//zfNZfBY+zn
PJwXzvN1WZey/sbr5kTzHcczEhfmzzePOt7N+Y+pHj28Zb5y/Qh4LNWLgPtS
/VPfR14XpPvS9btcH9X9fRy3ZR5DT055v15nuR+1dbBU9yH5GR0f73ycFL+V
uMxj6m9oPkvxW46X9+g4+aZ/mcNW/Y2r/sWp3jXVRab61yqXbeOxxi/n5qb7
659s/Jbiv6Z5ilt5zePe+hDmtVantPkpk1+S5916WYqnT3VJU36idf7UV4d5
0fUg7F/wfGx9rMV9Oc4rve44eo53XIvjjuE16wnWJxKvYT+tq5n7sLfOS8Qe
2x/p+Ha4wvl/cIj5xPzlOCz2248IZ3FeOA2d7MTD11wGt53uq+v9cB3vZ+R1
+IrP4e+0n9VxaOYz63H8PWxzPLoafx/nS3Fj9vs6Ho3XW14ofxccmN6XuBB+
S/mU+DFX1xfuIwSvuY6J+1fzPLm+hPUzxxUwuv4w8wLrOs8Xra6E63Kl/ole
dzre1fzmPtVwWuK3xm0t39F6Wlrvu67ENL8x9fU5Ki7MXDblvK2cNvVjHqun
3TcOm3Ln3I/Z/JmNz1f9mN4/1dG4zz0mHks6tJ+zaV5jqm/c8hpbf56Wz+h5
zPVMPR+ax+yvcL1Sr7tT/L1HH8fovEbXN0UfcF8V9C7rEPY3Mjo/jePtr3S8
tePuXS/BcV3mMetdcIdfRw/yfnOZ47zgLvQu9C/2m79Ofq13RR7jfZyf8/G5
XIfju5wHAE8xcn2M9qtax2Pbfx+jOdZ5A6l+q3VOv87vx/dv3ZPfyfXHHF/G
/eL4Mu4nRvb7/kz9ul0fxXXnEo85/zGtk/x8O2/Z+pr7LJrLzGeOI3Pcfutz
kfKQ7O80h3lM+ZBsu/48XNb6/KSxxe8nv+ZqnYmpzrE1fmw1jv+8/DXlsbvm
sq4DNp1xymHTfMipDtY4LNXvSn5M+y8bZ6U6Xc6fSXqY/ZXmLsdFeH2X4sga
fyXuYl3KfJjqyLP+TRyV6qCm/jvOc+d1x49hN1L8GH4c+xmtI2C/sGuMqa4T
rzs+LNWLsE5iv571o7Rt/x12nm1zjPUj8wy8hQ72kc8dW++6+PU/8pmH7V1X
/HWyXzc5DP6Bt9jmc5Iuxd/F8VynuY7rOXH2uy6eHfXnPv+dVyPXY140Bzq/
k+uCp+w3dh0LXk/+ZMexuY5Z08cctwaHuY+A8y8Tj7kOLPe/4/nRj10HjNH5
Mc6bcf8fP+/WxVP/a3iMeSbFlxFX4fxtx5k1DvN6NeVVtn6M03h+9/+xvyTx
l+OYzV/2a67WVU3+I9vTpIsk+310XFnjjH3c9dDGrbzZ6tYeF1eWeGxrXJn1
MJ6HlkeZ4vxT3Kfj+nmued4dx+/6qc7TNo+luqkemb+Y7xzH774+rkvhOqgp
jsz7/fq0LgV6mP2S7sfj/nb2S7oOl+0Zds71BNxHJvU5hMdsn61jua4WPGUe
Y7/jsOyXtA5mziFODI75vqdf0uu//F1X/PPLnhvKd188vdinFv/dVzwEp8FD
cJzjyVy/gr/DPMn1Wdfi/OZDj7wOV7LNdZlP/T2bF63TtTHxMr8Pvzdjqs+f
+kpaJ/Po47kfzWfOR2GdApe5Pljq3+h6Fu4/lPo4up6fuYz1nPtle74xn6GP
Od7MdcOcJ+6428Rn9l86zizF/6e+jMk/kuLNrIt5tP+m+SlTvP/UfznVzWzP
kx6W8iunnJZ0oqYjvVx81v2U6XtMXLzqp/R24vvV+mHmsfQcMLY6YuY2c1iL
E0t17VP/RfZP4/sdL+Z+1Y67tV/SeeyprmrK17Kf0tv2R5rDXM8CLsNPid1J
faThLvOY/ULuP+M6U6kPNXbXcfnNT+e4e3MOo/Ue5yHyfs4Hh5lf0L/gLvjs
dN9c8xkjOhTnsf/QdS+cz+k6GfAiuhacyLavk9e5Hq6XkeuDyzgPn8P3ka6T
75PjzJH+fv13mY+tr7murOvRwmfut+k6GvCX8wXSfeu6r/Zb2l/J88U6yM+j
ucxjqo/hecE6u/mMecb5mYxwGfo+81eKL0t5AcyPnl8Tl1k3M5d5nZ3yM5tu
ZruT4sgSl03jyLx/qnsk+7zKY1v1szX+eqh62ap/dR7PP/Vfrsbzr3JZqjfW
4vjTmOIxrZu1+q1NJ3P8fqq749HrQs9L9l86ft/5lq7byjxqLnPcV5uf2baf
BLvQ8i0dr+w4L8dHu46U6xLYPwS3pboI2FPsLHbXfkjrRIzmKO93/S/rU453
h0c8wjlw1+n7vOau031xzTu8zvHwG1wGB8F9vl5fl/U6626cFz0MHrNOZn3P
+hnnY+RzGVM+guPqnGcKf3L9HG8d03oo/lD3U3J/AOutqR6t+5y7vpnXG+i8
rp/hOhmuj2F92vnPXjfBb8nv6fVX6p/huhrO22Sd6Hqw5jN0s6SftToaqZ+k
52n3jzSHpbj+VCfJfsykm7W6+i0vM23bjiY7az5rXJY4rek3q/FSU165H9y1
Gj82f1/jsVXdbFUfm/KY1xGMXnf4/m/xZYnHUv/HxGPWy8xjKY7MfJZ0M+dT
Oq/SepnjyZgfU59H9x1KfsnEba0fkeP33S/I9StS3mPSFxzP4zh910dwvXxG
62PWh7Dn2HnsPvYefkg6mbfNQc57hH/gmV/4nz1Tht59xTPw10l/vOYztnmd
96Nbcb0eHe8P38BJ9p/CX/Ah18fnn3Scaz40hzE63szcx3a6Xo4zN8KfPp/z
COwndR6G4wxdZwPOSn5x92eH63zfcr/CZ+Yy15NlPQOX8Zy5D6WfR+dlmtec
HwCnpXxNdDLX2/F6EJ3euj5cljgNv4DzMb3OZbRe5vh+j9P6Ga2erO1KskeJ
y6Z8lvQz29WmnyUua5zWuCBx2xpvPBQe28prq1zX+kTd5LIWb5b82dM4s6k/
M/WXTHVkm45mf+Y0vszrMtZt7iPZ/JitnpnzLt23230j3afX+ZYp3sz6mOOH
vd7268z3zP/YD/yY7qOd/Jj2Z5rX0Mts55JegX20Xna6T67jwLHTjsc3pzke
zPqN8xkdj2ZuMxfyOY6nty5m3QxOYuT4J5dxaOYh86b9oPav8rnp80/c8J4r
bvv2H/S3/tMf+vprbuM64Dt4zzoa18fr6brsV/X7uU4fb27jd7P/mfvBebjk
c7oOrfsNwG3oaakfgfU37m/7N4nDdPwZzxfPm+ucOb4AXrPuZo4zt3n95v7h
jkszr5nbWFeSt8kIt8Frzt90/K3Xve4D4Pys1F+J7ZQnYF5rdWdTHJr9mh5t
91qdjHPlaU7rYU11tH362ZSHHsq4vU5Z0sumeQBTPc3rgKlf0378xmXJn8mY
+ic5D9P6mePMUn/KaT1/x5tZ3099vfFnprr97kPp9bD1s8RfKc7Y8z92gvgY
90ly/qXrYDhODC5z3DT7k26BvYPD3PcH3czxVin+yf5H+9lcPxU7bz3NvAc3
2D8IX8A1cBfcY92M4+xXZDSnwDt8rvM++Xz7Tc1fX/0MB37Oey4+9tnP/Nvf
c8kNr1zet++5GuE0c56vw9vwGaP1OH9vbJvzrMvxu9vv7D4H9nMywvuM3g+P
8X6vF7ye4H42l7GOOc2Db4l1zMxnjM4bcH0N4kHNZ+437vg06/HW01J/TLjM
fk/nDcBnzt9M69vUHyDpau57ab9nyhdw/FmqXzbtA5DGlh/Q8gKSrpbsedJf
Eoft5bMZjz20emXn57OZ/3lebzhx2ta+S8m/6efCz4f1s9Tf0vq2uSzVKbNe
Zv5KfJbyNJmXUp8l5jfHmzFPwmnOt0z9lezHZNs85jgW5nPXx8COuE+48ygZ
iR9DP7AuZj8n9s7+J/unsLOOM3LdMMe9Y8fZz+g6EqmOvfMIXK/CfkT4A56A
g+AaOOnjnl/YtU5l/cz+0KRTpTwD9C3OB1+xjU7Gdf39zw945eKPP5dB33N5
377nav/pfrjJafaHwpf20/K6edT5BuY+f5/OX7Xeye8Jt7uOBryV8ji571xP
jfsPbrM/1PkCbKMrux4fnOY4Tufb8Bwy8nrjN8exTePSPO8k/cz9y12P1nmd
zH9erzp/07pZ0s8ap7U6G6lfwGp+QKpjtsppSf9Ifqu9+lnisVXd7MWc1jjm
vvDV3tfn+QBTTlvN39zLadP8gMRtKV8gxaOlvM0Uh2a/pnkt1ZN1vf9UX8N+
TfR+96mD17xebf2YUj0Nx5u5/6X5LHEa63z7NdHR7N90v2n3R4TTXC/Kfk/H
oWFvU18h8xn+L+su2HVzmvM4U717c5rjq+AKOASOQa+y35A4NEZzjzkOrnH+
gT/XPGQ9DO5CP4Pb4LIf8g89I4tXLn7LVz17EF+5+L2f+Y9/8O/7+a9cHcff
4Tg263Xsh8PgON5vvrN/1/Fw8Brfu/3T/G7O53SfADjM+prr2/K6/eruS+A4
NY/uU8Hz4/7n5ja2eR6JB3V9Dvfl5DlGX3O8GvMCY8rztJ7Gdsorh9fcf9P+
Tutqzc/pvgCOI3Zep0fm/ZTX6fi05L9J/k7zWPJ7tvi05qfay2ts7+W0xCVr
nHbf68+eX39b9Yeucl3zl6b1wDS/IOluqT4a26l/U8ov4HlNfQFSPTTXqXU9
NOdzeh4yz1l/Yx3qPE/Xp/X8mfpk2q/Bejr1N7efxPM+9gC7gV1BJ8DuuB4t
2/Aadiz5RV3fwPyHnmF76joN2HHzmvMGHU+W6kW4zoP7kNsfar8oepF5B16D
nxjhKo/mO86X6mKwHz0P7mJER8PfCZ+dft+b/GbdDX8p5+f6/Hc+UVxb0gH5
+xPnss37nYfqer6prh38774D+E3Zz5jq6Kb3wXXuS+D73f2hzHM8R84T9XPn
PgTW6cx1ro/r5999o9xn3fOQ66q5vhrzmfND4Tjrb8yjzgM1zzFPMzrO2Ot0
x8FgB7ALjmd2nXPrcNP4NesWrY4a28kvutr/aaq/NZ5LXDfjs739BO67Xpd0
uf06Xfs9Wr2Vxm9Jn/P2qi6X4ttaHnWKF3W8G89r6rfJaJ6D3zya11LegfW4
1Hcg1VHzetjxba2fk/0kbLMOR4dzPihc5/6a7i/gvAPX3bA/KeWB2u6Z57Cn
2FF4Djvt+rL2j3p0vVjX6Wp5oOY65zeiG8EjcBQcxAgnwVNsWz+DZ6yHOR+A
MfEhvPYD/s1//ku+9se894rX2P41f/77nv6i7734i7/xc/7Cb/yc917a21du
cB/+Vf4O57c6fs9+1CfS5fx3ml/Nh3AyuqT7yae+7vaLuz8p95f7fLHfXOiR
+9L5CejK7msA3/H8uG+780vd35Zt913juWU03znuzfqc6+Zan4PjUn9PRvan
vISUP+p6ay3erdX7MMc5jzT1K7B/NdX5MM9Zp0sc1/yqrY5HssuN31K8W+I7
88UxPHfX/HX++LYptyV/atPjGq8l/W1Vd2v1b+G2lCfa8hMc/4Zubj3d+lvr
x+l1YYp3M6+lurfuy8l61etc624p38vbqR6T/aesy6274bdxP/TU78n10qw7
ON7N/Oa6ati5ZEcdf5bqRKDPOC8UrnOdtRQ/ZT5z3L/rZNg/CjfBP+hZcJHj
zdg2xzhOzvvhNfiP88Njr38Oltdcdrof33dp7997aafee0OH43o4L7wGnzm/
wfVBrNNxveZYuJTj7aeF+8h3sP/Uv6f7llo/s7819XfwedyPi/M6j4H7GF3O
OrPjENwnDX3OcaZwGyPPKTq58x1Sv3ZzW+pD5bwodLmkvxEPl/IUnD/qPAXX
YXM9NnOb88pSv6nkT2312aY6XKqXm/S5ad2Pab7C1ni31Ti41zavnY/TjuIz
xqTjtrpr0/yEVh/XnGY+4/mb5iVYT0t81uqxOc6NEb8onMZ8xTxm/6j7vdjv
aZ0s1V1zvijb+EtS/wHmedbrth+Ob2N0PyhzHPzmfj3wGXoE/ifbRfcTSPFt
zqs0r6W+4Ek/S/Uz4DR0H/MG3GQ+c14m/AO/sN/5nNa1OB+6F/utmzHCZ/Da
K88u+ye+79L8vvfS3t/kNLadpwBHebQ/1P5a/i7//dYh2eb75fdktL876aK+
f5wPzLb95K7v5nrL1tdS3RB04tT/IPVt53lzXyrrbnCa+4jyHFs3d56S85im
fQ+Yr9DbVvu0r9bNZXR8curL7vkeO5D6GjR/acsztc6W7J39Th5TPQbnMTR9
rXFa29/0tRYHt8ZtD5XjVuP7Mrc1Xt4a19bi2Ri9jkjrDefpJH7ztuuwtTq5
zf/pOLbkB00j803KS3B9SecnOJ7N61nXvWW0H8P5Y85DcJ0156uZ1xy3lurd
Wi+zbub+BXAaugP2zfHh6CC2x9hp+yMZrbe5fhn2PsWt2Y/K+1z/H56AV+AQ
uAOegnsYvR8eglPgInjG/k2Ot06H3xPdDA5jG26D057j3H/8vqvX2Y8e5zg3
x+eZw5Lex3X6+4FDGc2t9rOmvqj8Tu6r5Togjn9z3zDXjbFu5/fBg45/Y3S9
XeI1eX7Mbc635rlDZ2O035T4ONflZR3G8+44N+eZOq7CnOY42qazpf7ujPgd
Uh8qr5M9Tyd/qf2jHrELrg9ivc15DCkOx7pC09lanJv5rOlrU11tWl9i1T/6
qLtN+LNz3Iv393i3VX5L99dUf3P9tjSa67zucdyB9Tc/r45rTfpbGqf5p/aP
Jv3N/dqdl+86usy3Xi973Wx/KPO26zzhF2W9Tl4C/hfW+9gT62twmrets9mP
av4zzxH33eLYrL+5vpfrg7lOKzyX4uDsb3WcvOt+2B/KaP8jvAVnwWHO72Q0
t/m86Gv4OxnhtJO9f9/V9re865f+O9//C953yenfc7UfXQ6Og+u4bvjLeRb2
gzpuLX0v/N3On7DOyOfAeU+UB2E91X5v8xw8lvzlfr91PteLM88Rj+l1Cfe3
6xT6eUh9c811rLPMcdbleK5d343Rfa0cD2v93/WJmK8c/+a+o+Y61w1h3kx1
d5Mf1fkM5jrm/eQ/TfVDEtc1XQ57leyaec5ctzVvYarDbfWnfvjY8k336m4v
G9/N9bpVf2ri8cR1vm8S17W8hBT31niu1Q9JPOc8cvOcn3/nm3pMPJfi4Fzn
zX5U4t3cR9T+VPerSvXd7Gd1vRDnJTiuGXsAz1mXSzznPNOkO/h19w113VPs
IzyHfXWfA/Q3/Jyuu+Y+nfAedpr3p35XrtdhvQjegL9S/Jh1OXiO4+3PtH7n
vAO4y/yGn9TbT++J3/nGj/2eS/v/vqvxxO3Xx3FePse6oOPxHO/GfudlWG90
PgSj8yBcVw6e5vPc78t5xPaX8/tax/X94HhJ922F59D1uE+dv+p6v85PTX3o
eU5YB7kOifO+k1+VeIlUr9d9VJhXHK+R8txTvRHXg0s6nfNQU93e5Ge1Xmee
c7ycdTvXhZvGwaW68Emfm9bxneYtJI5LcXBT/a3pcs2f+trU49bj5JIfusXJ
pd9pWieu6XLWiVNcQPOvTv2uiefsZ035CzzXjKluSPO7mufcJz7VgXNcnHU5
5kXmS9cB8eg+8Pa3WpdzvTfmf9b1rmvgeDf7g9y/CjsE/zG6nq/7QqLLYQeT
nuL6HXCa7bD7nDteDrvMyOvYefQf1wVxPwL0pJTPaW6Dz9jG/8m2R+tZjOhn
8Jx1OPQ39Dh4jv1sw3G8n+vm8+Ev63HW0ZK/1HVI4ESP5jnez+e53jC/j+Mi
k589xU/6/vB94r6p1gFdh454udPznOsDOz/V/US8/nH8nHU6/K6Mqf+p+2lR
J455w+vE1M/FfeddXyTV9yXOhPgTeC71xzLPMdpvMs13MM+lPvSpr2nys9p/
lOyf9Y3Ec0mfaxzXeM5cl3S45Fd99e2pXjfnnfvBY8fx24t5Ln/vLX6x5T80
jvP6YVovxLrcqj7ndVDT5eC4pst5XZfqwTkv1TpcipeD4xxf4r5YjJ43U90Q
1/FlZH52XoP9quY34qvNbYzus2A/quuJOC8CPcI6HPyGvuF+odhL62bW4byd
+iSY29jv/FLqYLieh/2D8Jt1NngLXmO/63mY01ynjfdxHnjLutvPfg7q19s/
5jnIvf/GfnQ563dcj/NRnXfhfAzHv6Er8v1Yn2TbfOvzMLreCL+T+3ClvqnW
b+E3++Htn/d57KdHl3OdEvcPSfWE4Td4D74zz1mfcx8u4iJYlzleznqc81Kd
x+54juR3dXxv6tPANnHCrivi/AdG+11THlqqH+c6I61/gzkO+5LyU81xtmdT
fktxdKv1RGy/E7/tjZP78OPW48HWOO7hc137HqZ6XBobx7W4ucZxyc/a4uU8
prwHj453cB0456H7eU9cZ/9q86sy4kdgZF5znXP7VdPo9bLnWedBMF+z/mZ+
Z3ScjfNTsRvOX0hxcOht7DcHwnEchx1z3VV4Dl3O/UrNX7bD1l/SNvac8+BH
hQeeXMZnsR+9iRHucl4onHX63a/zChjNcXCb6+2a/1y3jTg3eMy62x/+qc8+
8SbPcbx5jvPxeeh97rNlvmK/69yZC81v/hzHDSbdD55Ofbm8bW5jv/tKcB+Z
E+2nh+NYZ7Du4L5NdYWJo4PbXB/YdUmsc3udRB6E65Hgb3X/LXjOfezNc55P
zHGO003xc+Y3bzMfst6F54incz1gx9FZj7Ne1/qmtv5b2BHGVv831YtrcXOt
7siU59hOdnxWx2LOD1N/6zZ/7DTe7K55bb8ut8pvrc5f8q9yH3nbHNf6MrS6
vuY263bWr11/hOeK563lPySea3zn/FX8qc5jdX04x8klnsNvkeZH1r9Jn7NO
Z/8qHIcuhz+GdT12Ielr2A/rcq6Dhf1JfRjwq6JPmOOwjyl/FZ0FO536bNp/
5j6jtve8z3Fx8ITj1uwndV0P5x3ALa77Ad9xXnMP285PdXzc6ff7novf/cn/
3d/wM3/2+y95/P2Xz8P7b+h38BzXb55yX1TnKcBV6GrO5+D64UT+fv4Of198
D9Yp7eeFp/G38jtZT3XfMrjNxz1RXjLb3C/2yztfhvvU9YTd98H5EYzE0/E8
kCfhOoteV/E8uv8q+pz7cLGuSzpdiqNLcbmuU2m/q+c515NLfbrs32j1gO2H
Nc+5bsmU6+C4FD+XxlSfPvVXnepzzd/a9JhVXa7VI3n1/Znf1rjurrns/JzX
4uQa363WlWv+1lQXp/lbm1+15bV6XWR/K89f67dlv6t5Lul0KU7O8R/2szpe
jnmOeBPXAWC/Oc/1ORPPsQ5nPsfvAs+xjnfdKrgOu4FfB72OODj7f+yHTX1S
sVPud499I/6o9bmC6+A19313/033q8K+s+1+oHBD0p+syzmPFI6DW+Awjodv
HKfm+DuOd91eRj4HnkOPY/tk76/j5NDtfL2cj+syp8F3rvtmjnMcoHU/581a
17T/meuwPuj4PHPeE/WHMP+5jjIjvz+j66G475c5zvVL8L+mPg/W7cx1zptw
HKv7eZ1+x7fU/qrmO+YLc53jcJ1fz3yT4umcH2GuY53reDr4zvF1LQ/WXJfq
0Znrkk6X6pc0P6zj6mzvbB/Nc1OuS3zX4ui8f1oHeKrb7dPnHhrXretwjdtS
fFyLh7T+xv2R6uCk/r+r/tRUT876teuR8Fw53yH5VV1H0uu2lOfQ8hpcf8Q6
HPNVqv/L/Od5z+td93NgXsVfwrzMfO16v/hTU92RVufX++1PTdyGHuf4IOc5
oG84fh0Osw4Ht2FvHRfH6/Ba0mGw8/AB/OC8U/MYupbzB9h2XTfrX3Ba4hl4
yp+HroY/FU6D3zzCeYzwm3nS8WuprjHH8f3473R+LNv265pj2eZ78edaJ3Q9
u1RP2f3IeD8c6joz3Cfcd9bj0I3Nayn/IfVxZXS/LutxrlPCOst5D6zPeO6d
/wC/sZ3qF7nfqnU657cyj5nfkh7nuDnXD/Z86ng69zlMea6Ol1vltqTPYX/s
J0p+pRQ3N/WvTv2sLV5ua9zcVl7b51e963FrHsP2vNRpPqrH1vcj8VrS21Ie
ttcjyV/a+mrxPFlfc35q4jXrbMTLJr9p8pcy38Bpnqesr9l/6tett9lvmvoz
MB8zb7t/tuuLpvoi7rPFyHHedpxcymfAbqFHwGnOH3Xdjyehn7r9oPCa+wqw
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
l/Uu68jmL8eHpXh9c5f7eqZ4MM8vrl/m0Xnkzqd0nUjiMtC9WJ+idzGPMs+a
u6x3OT+y6V34PbAH2AvXacIuOS/N/RlTniSj/Y/Ol3Q8GPqFeYv4L+soqR86
Ogpc4Lr97E86i/t4Ot4MnrD/Ei4xx7AN58AzjuNHd7IeBkehU8FhPp7jOD9+
wxNvX3PWJz9/MJ9c3hfX+zmfecv+Reer2m/oeiFwruuGcB7XT3Pcv/uLus4Z
95c5C70LvoK7uJ/Z79etg3kdgv899ZVC73I8v/vsOn7T6yr3m4K7nNfj/Ez3
hXc/E9erZb5yvrjr1jI6Psz9350nRV578i86Pz7F78NjibscH5bi+Vt8WPI7
Jt0r1Z1KfsfGXd42b039jVP+WuObKTfddRzY/jj/qU626qec6mYprn/aLyrx
W8q3THqZ68y4z2fTzdzP133czW2tDgb8hn7m/uzmNutkrCutl7m+I3EYrmPm
/gGO63XdMuZvtlN9i8Rv+E3Qy/BbYn+wS9bJnF/pPtvuD0B8v/ttm+vIq/T7
rZs5T89+L/jJcfrwAKPjrKx/oc/wOfAbuhk8kXQy61OMz83ZZz65eMdv+Hef
nvEDV5xk/cr+Q17nPLzO58BrnN9xX7wfbmM8PV8fuOI3HwfvWT+D4xzX73g7
x315NMfBb6kffdLNnKfrvBLXQ4bnnDdsXrPexrb1NOdhWn+m/4D1M9c7S/Vs
eM4d/+/Rfk3ixhK/sX50fJjr+XgetE7W6tK6z4D7gqb+Uamfu8eUh5n6R2GH
zG+OE2v1MmwPp35L2+HEcVN/pfktcVp6fZ+f8r7yWepPtZ5/2b7H9L0mbpty
2moc/9TP2XQ2Px8pnixxm3W3VN8s1Zv1fAGvtfoYzE8e3Z+9cRzzn+PLXC+S
+dX1MdDbmK9d1yLlWzKiqzHCafhh3Jca/cD6A/UGHL+f9DT33bb/yf2dUj0M
7DK8xOh4LvOT8xThC+s6zmNMupv1Pc4Pp5mjzGPoWYzw0s/7YX/b+3/6L/zA
DW5L8V5wGBwFV3Fe3gd3wWMnTvjgxTf8sWc35AeuuJHtk939wNV5rN/hb0Vv
S3kR5mT2u45IypNN9dHcP959ArjPuL/gLO5b+ssywmkcxzY8x373j3I/UOtv
rk/r+hnob9TXcP1nP8/2f7q/G+s7+kgxf7D+g9dSX1D3L2G+YrS/wTqb40Tc
H4oRvS3lYVpnS/09vV5PvObRfp7GbR7tX0r+zlR/alWHm/o5t/o7j40vu6/c
NtfXGr/5e2vf7956tNwH6b5pOlviOHPbVGfz8+N6GUlva/U0eN5dN4N5wn5S
dDbmHbjNeQGMrnfGPOZ8JftN4Tv372S963pE8Jv7OsFtjO7D7rx862+s7+E2
trEr6ARwGzoCdgq7ht2Dwxzfn/qrkz9gjkt5AvAbehscR90KdDDnAZrjnC/o
OHTHo5vfUhy78zxdpwx/KNzECC/BbfAVvJa4jfPBabzuz+F88OBJR73mMsb0
uvkSToRLnaeQ8ixc983+ZLiO1/m97N+Gl/ndXe/M/T65/1wPGZ7j/m18x7bP
k/I4zW+uW4vuBq+lPgOp34A5zvVsmSfMb45XS3mZ7gflurTOx2Rk3nReQIpP
M79Zb0v9PF1HI9XVSDpA8pua47BX5jb7S1s9tKSP7O0LtVdvS/z26ttb+wjc
NZfNOW3Ka1NOa37rFs9m3a3pbS3PoPlFU70MnotUN8PPWeI3x7W5bkbq65Tq
ZjDPmNus+1uHs7+A9aj9oY5nS30CWA8z39ovStyK+/rBZ+x3vIz9Lqz33T8d
vQ07g45g+4QdQ1dL3OV+TWxbr7N/1HFK1ttcr9R+NvtJzWvWeVIfSutq6D7O
C0V/wh+J/gVPwWU/87nQd61vwUnwFdvwGlwGjzHCTxwHp+EXtb+T88JnJzv7
wRt8x3VxXse18XcSR8f34LwMx7W5r715Db7me05xbfwe6GzEtZnXrO/CZe47
5rrJ9vdzf5r/XN8Wf2rqN+C6talfu+vWoIu7Ho7XYc47QHdzfVv3bzevJf8o
683Uh53R8WzMr6lObapPa/+o49uss7Fud76B7UbrL9D0tql/1LrblNcSt9mu
Jz5b1dsSj2yLb7uvnLbuL22cOvveun/0KI5L95W5bau/lNFxbamfQOI1627O
C3WfTvcRsO7GvGLdzX5Tx22Y45jXrLcx77FeJR/U9c+YT+E39DbXP3IdNPf3
c16Z8/yZ5/HLYC9cjxa7g86G3wg/kf1MrlNrO+j+T9hN6x68n/gk6m64vhVx
Tc7PtK7jPNHU59L+VfvrUl8CRuLkUjwa/IQ/Er4yV7ENh8FXnI/zw28cx/ut
k8GLjKf79YNX4496Dm4fvPKforc5/g2Ow/+Ln5TvEd7i+/Tv4H5aHOc8Dse1
cR7ztHkOrof7yW9xvrHrorlOjO9P68e8z/VmuL/huZS/wHMFtzlvlOfQcQzo
4vCc+7o5P4n5wHXTyHciLsP+UveBYr5yXQ77Tc1zzJNJf0N3a3XRHO+W8hQY
Xa+JMeluqa9n4rhW19YcZ/2t5Y023S35S7fWq21cN/WjznjuvvJd5rnp97Dq
N03cbb+peY1t3y9pXNXhGL1ucd0a11Pzc+T4BHOcn1OvwxLHsc7z/MG60P1N
zGv2pzJaf0v1PdDlzHHMo8yr5jj0OOZj5mf3HWh1bb0fXc7xN9bhXL8D/QGe
w99kvQ375uOtYzByPDqK69iit5BXiN/MdT2w++5Dbn+q61A438B5kIzuG+D+
Ta6PAV+Z2+CmP/mOv/fp/w9e7XecGducF35Dj2M/+hncBS/Cb6ff+Zrfnv4R
P+9Lf8kHr/Q4Pp/jzYXu++6+ns4vSP2n7Bd1HjCv+3tH/zS/Ef/mflHOVzan
uY4M9537FrDfOrPjNhm5z3luGIlDsP7mPgXodDyX9qOSR+T+IM5Ddd0P63Do
b9bh4Dk4zv4E5jNGx7+5vi3zJByX6qyRr+A6a46Hcxyc62kmnrMu0DgOv1Hq
x25+Y7TOwWg7mjhutQ/BKs8dVffj5dLlun818d2qfvfq32/2fzeuS/kuiec8
Jn3O93WLh3McnP2tft4Ykx7n9Zm5jnkh9WFPfQk8png5+1cdF8f8h78C/6rr
5LpOiOswuT4AXOc6Tuxnnke/sz8G++D+A46Hc79q599hx8xn2Dl40PVJU/4q
egj5p/hX3T/IfZxcj826G5wGh1iPs45nfYnjXJcff6rzFOAruM1cxYgeBofx
fnQ3x8PBj46HgxsZ4UbrgvAco/c7Lg9+xL/K328utr/aupw5zfGE1uVcd9f1
RRjRZ+E59DmvB1z/74nq0rifu/U963jmOp4L9Gb3qeJ5YnQ+qrnO9XXR69Dn
GNHhrdOzHmSE64i3Zd5Bj4PrUp/21F/KoznPeajOR4XvmI8ZWYcnvyvzvEf7
X63PJTuTdDnsV8tHTX7VxHVb4+Can3WV76b+1xnXNR3uvnHe9rpvU/2u6XNH
8VzKb2j5qua4FCe3Gi+XOC7pdfBbqrtrjrMuZ45zvJx5Dh2v9Z8yvzF63nQ+
g/v/ua6T81IdF5P0ODgOfsNvg51wnV38QvAbPGZucx159DfsGu+D+6zPOV7c
dUSwr/jR3Pfb/dUdH++4N/PbNK4evkCfIp4ffnOeAqM5jm10MDiL4xNHuU6u
8xjYDxdyPXyer4Mx+Vc5r/2r/N3JH2291HF07jdhvdNclzjbfRTgfEb0Orgf
Pkv9ysx18KB1O3Md6xb4zf1G8bOid6PHsV7ieWOE6/C38lya46zLuV8C/MY8
4rq7+AOsy7nvgfU563RevzIPOt+B+RV9jvmXkfW181ThONeJS3mrieeanzXF
yaW6IinPwTrHtG/otC5c0uUax3n/Kret6nMz3rtv/Pb6G9ef/u4pr23NR231
mX2/TP2qidvsV3Ue6rRfQqp7zXPnfKSU38A8wLzg+YJ5hPg4uMx+Vvevcn04
1xVJfanwo7pOL+tj9/lzfXT3c2fkdeen8n7rbtgB7AR2g/hsdAPXL3Vct/P3
XD/L76Pvj/2x6G7YSewndhV7jN7ivkXuM8m2/Xnui+C4e+tJ5g3X00Uvc30O
cxKvJ/0LPya6GiN5rehs8JvzEVJ+KXzI6/bj8vlwGp+L/xZ9kTg2vge+T/en
gHPdzwEu8+g+D+xv/m94jfsBjiduEl4jDwLuZ6SOIP1lvT7g/uM4XmeE3xw/
wHPBfW7d7TQ/XMfFOS7V+91vgeeX59n558wD6PbMI+j7rA+Zh5yHyjwFr1mH
Y3/iNG+3Pu+M7vOe8lSdr+q4uRQ/Z/9NynNI/RRSfoO3k181xccxrsbHJbs/
1d8St035bVW/ehg63LpfdVV3W+U367Aem1/V/tNpPZHkR03c5m3XXUy6G89j
0t3cP9g6fdPhmF/gPOtyrS8WPOd8Bve5gt9cB879rhLHeb/rjjDPk9cAv2EX
4Dj0AOwPo/Uztq2vYcdc5573eURvI56cEZ0EfQQ7i+5GnJT7f5rLkh7nvNSU
P0ndOPQm+AJ+M0+hn8FncBPxZ/Dc8/ITn/vBGzoZ74enrLsx8vnoc3w+nGhu
S/vNgdb14EdGvh/3WzBnWV9zf6zkh2YkD9Z9VN0P1n5ueM11R7h/4DvWA+zn
ON5vDjS/ocNxv3Lf8zyw7kl9say3occ578H7HSfn/AbHUzBvmOPQ4VJ+A/MV
3EbeaupDmvowMy+iv3n+dL0492VIfbGc95Dq/bKud3+GVN/X+lviOI/Yv5an
OvWnJp5Lulvjt7R/K7dt47jER3fNb02Xy1y3plPO/agp/nHKc02PO6ounPnN
HLfal4H1Vuqf5TxV1yeC3xidL5/yH+C4xG+sW90vy35T8hqo2wS/Ob/BPMe2
R/ebZr5nHe+8ONeFo04C9sj16l3H3v2H2O/+kLzfdbfIiyDOCB0EO4rddV8E
+0XNY6kvU/Kj8j73FYA74Bn0N9cLgZPI/zSv2V9KvBvnQwdznQ/nqbp+nPMS
/Dkpn8L5EK4XzN/tPvWtXgvH8X25T725jtH1WlJcY+obC9fbzw7Xme/gNkbe
B98xsp6wf9/5DsQXuM+8/ajmN/fdcnwczyvPr/U4/Kfuw8B60BzH+pF5iHWl
uQ5+g9u8jR7nvoHmuKTHpbq/7tNgv6r9qOY39Djsgtf9qxyX+mutclyr8zut
N9L8qNP4N3PGlEvWdLm53/J+cdx2fkv65lSHS1zWeK3pcCmPwfVFzG+OJ0j+
1OQ/9Zjq+7LuQmd3HAXzAfxmbrN/1XFx9qeyvnQciPNRmfesv+FHbdxGHBzb
rhvnkXncdeNS/Jv9qcmP6nwEj85nNc/BbfCf6/ziT8Veoodgb/GfuX5b4jLX
qWj1eeE2RniC0XFnzhcgPwFOQo+Dr1w3xP0X4DfyBuA1RutwnMdxdWxzfeiA
vj7H23E+98my7sb35fwRRniP7819v/ge/ffBbeY+fg/3pXfcnfNY4TnuF/fV
YJv7y6P9r08u4+TQ4bhv3VfV/JbyGMxr7ptqvZy4N/MbzznPPfMA/GY/qvMZ
Ur6q9TjXu3RcHPOf64+4zqZ1OOc1OP6l1ZOz/9Txb9iHxG+pzq/5bbVuXKqL
n/jN27bXid9aPFziu8Zta7wyzU+dvn4uDsvXs5XLzGcf/r12fa3FPU7j3Mxn
qQ4co/MUUr6CeS3lKaCrmc+cf2qdzXkKPO+s45gXvM6z3uYx5SkQ5+b+9M5P
IF6Y+RJOI96N+dX14Mxx5jdzGn5S6g4Q5wynOT/B+hq8Zf8pY9LR3CcSjnN9
OOKF3G+LOHE4zfFN7ktvPQZ/J6+7n4LrhHAc+pB1IfcpZUQ/g8fQueAl139D
l2u8Zn+s/ZfOM+VzHT8Hpzm/FT5zfiv6GpzGtuPU+J743tk2l7n+sP+ulH8B
t3Fe63vmbuctwGuM3m/ed10S9DjWC9yPjnfjfuU58LqGvgzW107z5rW+hn/U
/lL32+L5hdPcF9VxE857Qs9n3mEeSiM6nP2ocJrzGZj/zGvMk87/Yj5N/VAZ
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
VvsOdP/vtC7aqt+z1bG1Xpbq2TadLOUBNC7juWpcZp0s1bP1+ivlbeLv9LwC
j9nvyTzlODT7PeE09/e0/9N6meujuY5GqlvLutp1NFiHu66GuY1t7IX9ntYJ
sD/YM+tk5ifsI9voaHCV9QzsKHFCzvO0foauluqrwWeuc2G9zPVcHadm7nA+
Ju9z3Vh0MvgF7nF8GfxFHiR8xsjxxIfBYXAenJbi/K2buR4GvMf1wW2O/3f9
XHiP78n1MuAyeCzVn019AzjefZ4Sl3G/oaMmfyfrCe5jdGDub9Yd1LV13KX1
MfjMfQp4bljn8Jzx3KGPub4Gfk+ed7iM+FPi0Fqfz1QHjfWh+0G5fga6mOdF
52daH4PLmGddR9zzstfZyf9pnSxxWYpHQx9zPdukl6U+Ueayppetclnyb5rH
mt4z5bBtXDb1K963cV6/dsprR/Fb4zbracm/2bgt5XP6eTC38TyluhrO17Te
zXaqs5F0NOaNlC/A/OT+KGwzr7lPsePXUr1bx60xn9ov4XmYedv5mszv+Dnh
N9bpcJv7Ebg+GhznerfE4WCfsGOuf2Y9zf14nEfANroa25wHewsPwm+cD95z
/238XvACeQOuJ+t8SsdXmfPgMvcHdR8BRvsx4S70KfgLHoLb2O/jrX8l/kLv
cp4Ax7MfHmPb+Zeuk+v+C/Zn8r3xfRMn6Lp0/D7Ow2Tb/k34zn5Ovx9+h+e5
z1gHkNfCfQu3md/gNh/nOmlwHTzH+3g99S8gfs310Xh+ea4dp8a6zXFqrm/L
eo/5BG5rfaEY8ReY24j3cB00r3vNcc4fwI/heDXHqzhPzPHLthPW18xrTVdL
cWutnm3yRyU/Z/Jrrupp03zNxnPnjU+7b/y2zmdb9TXGpq8xJj5LcWgpz9Px
k0lf4372/e/4M9ZBPF8pr8D5PYyOV/Bz7rpo7hfFvJH8ncxPp7/zmtOYxxxv
m+LR7A9lXcu86b5Q7i/APMx8zfxtvyf5+a5b63rn5JWZ0xyHZk5L/aCwf66r
4Tpo8BX74S+4DP3DfUCdN4rOZr+n+0TZH+n6/44j8/G8bn+meQ9O4XjXoYVv
4B/izE6/04eutpOe5nxKx5XBS667a33PeQzuI+DrdX0z+I/zmM9S3qbrZ7he
nf2ebLvPgLnM8YvENVrfdT0NuAtd2HU2uK/t14fDGK23wWeMrqdmXc3+TvI6
zWmszxKnsY5zHgGj+6+zzTzEPGVdzXXPzGfMm84rsN/T/k/mX+d5JX3N+QRT
/+e0fu00/myaV9A4bWsewV5OW9XVXsxr95XDtnPa1C+8lddS3Npqf6jkD235
oa2erfMFUt9110Hzesl9Pc1rzt9O/aJYzzEyjzDPOL8cXmO0vsa8hp6G/9Px
a+y3/8H92t3fBV3NflBzG/M88z7rc+LWnGfW+g/AbfhvUv4n9g2+wi7CbfCW
8wngNXMb7+M8+K3Ma/i7nHcAF+AHTf5P9yGHw1xvw7zmfpzJX4qO5b5SxJ0x
kuf5uuf/vvdGPQ70NdeHdV6n69HCae7z7rob7mfq1+E4x73xvfD9oV/CX3AX
3Ma2+0Q4Hs35A+znvOyH+3i/84PRZ81rT0L+p/sMsN99B5wv6tF5B67TQZyB
69fyvDLSf531mOvWMh+k+DTXqXXdRXiNeYj1JP4B62kePU+in8FxcJnr17b8
Aa+zUz0O1+VwPE3yg5rTGLFTKf+T0Xzm0bw29YMmTmu6WvKLJp1oyinn8Y/e
vb9zymtb9bTGY+k+SPmcUz2NsfVfT3mcKV+A0RzmPGxzmf2bzitI+QLmMeIu
GBuPOa+TEQ5jXer4NPs3mTfhMfwUzLvMx8zTrK+d5+W+f8S5ND6Dx6yfwWPE
2Th+BzuFfcPeMVpXg8+wkxzH67aXHu3vdFya+0XBUa7PZX+m62y437i5y/0D
nB9grnE8PvwFl6Gfue6G67/CX3CX+3y6HgbXBY/xfnQ3dDL34bQ/0/VLGPn+
4DH3t7ee6T4Bjj/jOH4//KQpfs19BByfhl7LeoGR+xLdjPuLbfIKOB5/p+up
cf8nPQ3dmefJ8QXoZ+jefm4dnwaPmc9Yt8FjrruR6s/CYawfmb+83rSfM/UP
YEz9nlwnzXFq5rGUz9n6CZjHWl+B1Hd9tR7H1L+Z9JLkB2N/i4fayl0z/999
56/t8WdH8Zj9mkkfS3m8U53MHMb96PxNxtbXyXpZqlfr585xB84jgMucv2kO
8/zA+o75xPzFPMQ8ZR6zf5N5DV2Mec91NZgvmT/dT4951noYXIYuxvwNj9kv
Yi7jdcenYS+Ih7E/M8VRY8/gKnOU+wjYX4kd9Ovu4wmHuf4t9tx9HJ23CVew
bT5DH7P/0v5N11PDr4duBdfAVWzDW/gx4TLX4ceP6fj/VP/f+Qm87rpocBjX
yWh/KNu8n7+X7wf+cp8m9Cv3QeV1x51xvDkOv6jPy/ns54TH0Ml8n/i+NI9x
v/E6uhj89f+3dy9HkiQ9koApWR6HhCVhr8PNkrCENBFz6FVp+b8qTcDcPTIy
q/Nk4vF+uANqCoUix9Y51ZvZ55nrx7lq4aXlx3Jd5vrOmn7N9AW0umZ0Zvr1
OHfOvk11GeptxWNZw49Zz8wqLmv9nPZxWs9s853MD61vwHqmeaj51Mo3nPJj
yaeNB2l4TFw21S9P/Wlfw4/drW++Ct+d9gX8719+r21fgP/f1brlKV/WcFnr
32z9ANYt3d80vqzpz1p/gHXL8OVZEzcSV6Z6pXMFgsec7xSeTN1Z9qeJk9Hp
2gcfXGb/pv4aWRPPE9+Dz4LH1KWZB4LLzB+ptyTf6HeWPGWdR5yV1XyYNc/L
/VnDm6XemTqlfvLhT6JDT15vfZpZ5dGaD61zAILHxEfBX/qRZZX/Cj+WNbcH
P4W/kg9zznnwYj6XeNG6pngs9zu3yv4Hj4OD87s7zzx4KvjKPlv1ZXm94L3g
v9zfeLicB/pr2F8iDnMfIF+mLi18mXyY8weCx7K/cU5AeGp9NILD1CfooyEe
C6+e/Z3zSlKn1J/Wvs3Etb/j+z+rc4ejN0u8bHOc1Jdlzf7YuqX+GonnEx47
5cm2/Fib22Q+3PJk1qvM140fm+qUp/qyU3y2q1d+Vd5s79d2lz/z/5lwWtaJ
NxOfedx0ZRNOaz7Obb5Am7fpmusx12fDaerLnCuQtc3XtK7pnHT5fv03Wj1T
PZk+tPJnicPWNRPHE9fFYc5Lz+3WPbN/dy5n+jbVl5mXkrdcg9uyJs/pcyA+
a3qyrMm/0ZMFHyR/t75M+y6tW6ofCy5zrlMeF/yjv5l+YvZZqhsLX5a6YVbn
lovPnBNq32g+Z/BX8KpzRIMH8/n15bVuaV9FcKx8WPBT+LLwXnlccFvwdPBZ
Xs/6qM9XXxb+LDjePmHPL+vv1tvlzXK+5nxOHdO5BM5/EqcFn2WfFD1o1tQv
c53re2Yfd/BZ9GXhz9JXZB9A9onBaVkTv5znFJzmsXHRPqrsexNXsx/WdyN4
zblP6lOiM7MvQJw29QMEp6mvEa8lj03zNcVnW5z2at+zbX3zYxx314/2/T61
T+GwhscaDst6yo+1Ps3TOmbjyezLDP4Sh3m7uCzXm3hM30L7MXO9b+ecJ64k
3rhfVF/W6pvZj8qTJS5av3ROnnyZfVrZR4vLXO3bTNwP/gpflrwRHUzqMfFx
Sn4JT5Y6pnqb4DH10eaz5DnxWPiN4C/npqsjCx5LPteHLPgkeCr5PjhAfiw4
QD/b4J/gFPGS8y+Dw/SjyKqOPq/jHIJ8H4/Fl7lfPi14TL1+3i/3W+cNXs33
z+9hnVGcZL0yv2seL+4Kvsv3kS/Tz1ZdWs6L4LGcL/adiLf0abEP2Dp8zlN1
ZMFf6b/U1znXV3CYc81zfXp962+WeOCcc/VkrY7pXKeszjW3LzNxTVzW/NCm
+efBY/rStjkB+p6Jv8Rh+mc0vqz50U79mBP+annVvCxfIg4TjzVe5uP62h53
3Ktbfl/e7Gl85jrxZFMfZsNtjbcNPrP/0vM814F+GdYzG2+W1f7MXI+tL1N/
M+uZ4rOmkxCntblOWdWdic+ar5l8WeJt9seJ08FjrtZBxGvOTW8+aOHJkldS
l9EXXX+n4DTrPsFn4jZ9o4Lvwls0P7PwY/ovJG+H11GnLw7I48Vh4o7gttwe
XBT8Ep6p6eWdkykfpk9YeCznQ6l/k7cKPsvnsh+01WGDz9TN5f2dm5k1v5v4
TJ2f+jLxlv4leT/xWfi3/O/OQY9viv7G+tIGf+U8U7/Y9GaNH9MXI32W0QNE
35/rrPnOqu/PdS1Oc/55eDLnMjkXwH2h/ZfOPZf/z+o+NHFv8j1LHbPhs8Rn
dWatDzPxv+lgWh+m+jLzVevDdE6TPFnDY63vLvl5y5c1nNb4sqf9M+7xZq/G
azNevKan2+Owhr/a/zzVLac5TtYvp3lNnvfiMPWYDX81vkwf2uYzKw6zX1u+
TL9E+43Un7W+zMS5xMHUD5pvWfBX6pXZBwePZb/s3BbjdvQo1jNTv8z+3D7M
4K/kE33L1PvrAxA8llWfM+cKBI8l/5k/U59MHSr51j5L8YH+FtbXwqvZ9yd+
cK5A8Ix9jcEz1v8aL5Vj+SznCwSP6LuWz6VvmPo5cVmbE5rPE9yW5+X1rNfm
c+R30lfW+Zk+P99T/k8eMLiu9ROoMxS3B381/aK8WNbsC6y/x2dZ/1hxV1br
keIv9Z+5boO71JXl+lffL0/W5gE0nky9v33l6mezBneJv4yfDX85H8C+ywmH
ZXWOpvhLfqz5lLm2OmWbA9B4slan3M7NbDzZxN+c4q6PcdjXq0Nu67Cv4rnE
WQ1PnfZV5nyT72r1R/Vg9hnLe+XYfUvzkbX+2Pop9bsRV4m31PNbp9RHNqs8
lz7+iXPBVYmLiZfqwlr9ofVXyYuJr6ILSx1Sf3/9xpJPXJNv5Lv0y9RXs/nL
Ot88/lGpLyW/Jp/Lh6izFw/kecFR6pdyLC8TfKXOSrykvj78lrgrjxOvWQ/N
mtvlnfL99U9TJxbcpH5fXCXPZT03n8M1v7fzD8Jfydvl9fTN8HPn+8qnBU+l
/hjcHTye+qK8Vm63X9c6o75izoMNv5X6fPYj6XuJ/7J1R/ua9aOxf9J9VfZP
iQOJD84jD65yDrl6iPBd4qvwWvqPqQtLvHP/6T7VOmTisHMxt/hq8u2f/Cym
eqOr+Gqr22967DZnqd0+6cG2/v2TDuxaHfKrrL9+vqfri6c811YPdoq/mi5/
qje2tfFduZ6aLt/+yanOmOs++6yGv3Js/VF+y/1d4pJ+Y8Ff4bUSHxv+Sv1A
/W2OG+9lnM7+2HmZ6vFTXwzuSj6JDsw5zMk78lrJV/IA6saS3+QdrPuYX/UR
tf4lzyUPEx4rOCx+CMFdWfP44I/ghqz2F+r75dwi50QGn038m3xW8Ig4M6u8
VN5P/wpxovMF7Efw91W3ZR1X/w992OSz8v75Pfwd8r+lzpzzInVF56uKu5qf
hedh+KzsE3Ie5/wP7grvq39r9jPW88VZOc4aviv4y+vW+Zbht7JPC/5Sj9/m
XdrHLY9l/PL+4DDjYPPnF3clHqv/muqL6vC3+Ct5punu1ctMfmLyW3fx1zT/
svEuV335z/DXu3ituZ4oTjzluyZ/ilN+a6u7b+eNdUNx1bbv0fni+rlMuq7g
q0nHlX1T+Oq/v98/fmHOqZzqivZDql/Ifs/9Yfofo6OIvsL6Yfan1gXku6Lj
SLwVX8l3JW4njkdvnzX8VvBV5uglj7ifTz2x9UFaV8xxdDDBWcFVyYPWf4Kr
UieS3xJnOcfIvjn75fRJCN7K/dbHrO9ltf+x4S718/JWqZeFx1H3n1X8E/zi
+4VXU88fHNZ0/faN5nP5vnkd67XyWznWR0Pf3Dwu/2d+h/wf8ljBWc0/Xx+7
4C79wKxv5zzO+e6cyejoszrHaPKHCc5quMr+mVzH6gfU2avfSnyR59JP2nm7
4qw2DylxUH6r7VsTdycfff3B7HN0vz3VDZ0/2fBV629s+Grit6Y6ojjK46s6
rqv81o7Penc9seOvhrc+/l4z7hJneSw/eRVvNfzVdFttjpH9ju4vctzqjMFf
1hfltZrPRMNd2V+1uGBdUZ5L/CXuiq7B+UapK0ZXET5LvNVwV/gu97PWH/V1
TPxOnE8eUDefvsbs15NvsgZ/ibuCr5Kv1NkHl6mzVz+TuUbhK5JX9WMVd8l/
6AuW24OrnJ8TPKfvVPCY9TP5GueFyy9ZT5PHCr5TLy7e0h/Vul3Ti6W+aV0z
a9Pn2/8pDyc/pW+/vGD7XfRhEycHH8tjqc9KfdC+DPsU7fOQzwrecm6E+vjU
4aPTSh0x/Ja+yfJZWb0+szbdVnCXfdHpvxFvhU8PHgufpe9E8Je+E63vsenl
mw9Y9ByJx/p/ZdVXwvUq7prmFbV64rau2PT05t+tfqvhrqv465k64rtw17mO
/2Mcdq6Pd534rcnXq+F0ea6Gt3Iszpr8WFtdUZ5L/VauP/FW9k/qBHKdW090
lf/Sp1Udl34TTceVuJc4KM/V8Jb6LuuNWe07D95KXVH/fOcUBW+F50ofVvCW
unn9JsRbOZb/Cq+QPGh/YnBW9NDRcenX6dzn4LEcO9cmrxf/9NSlfB3rlfqN
tnlHjccRz8gHyeuoD8/96suta+rbZR9k+iOda5TP6bwA65Z53/we+tk2vbt9
Bt6vX4RziPJ/BV9ltW6YuqA69+ZvH/yv3jDne87/8Fu5LoK34r8S3ZZ9ifpG
tPkU4rLwYdYR1Xdln5W4kDgir5W443H2f6krBm+p52p9itlvqofX/94+8fBc
1g3luRLfs7923eriT+cQtbXVDxvPNfl6tbrUhLMa3prqZq/RbT2Ft67jqal+
OPFW2/rgxGO1/z/Hni/B8Q3v5/bgpYajsspbyV/JV6mD178+OCpr8JPXs8fe
7r7L+ZD60SS+JA4FR4WXT9xyHxkeK3Ewx9mHhtfKGr4rOCs4KvgpcTb4KXE5
cTx1wsT/5AXnCWUVRzV9lvXD6FnMU+rgrRdGB5/8GfwjrtIf0/vNw1nDg+U4
fIg8ljxYcFVwhXUxdUrijvBN+lLl9YOj5N3Ul6l3Us8eHBVf1vhPRI/lvEj9
vPy8W92bPg76VjgHKfjTOd3BUcHTOS/CV4WnUt8eXC6O0mck+EndYI6tE2Z/
4XwgfR1yPeX6yvUWfGSd3vkT4q1ct+GvnLsdHJXrP3Ej+zN18dErJA7pk5p4
pe9W4przhZz3mPjofO3E36z6bwVH6a84+aAGP7me1gknH67kO+s2DUdN/peT
j/2En8RRU51w4q92uOXz9VZnPFrHVxNP9fs+zl9x7RZnTTr3VhdU5+552OqD
7g+2fJU8lfuUXH/uc+w3DF8lzsqxc171gZG3sj4oT+UcR/sNw8fnOPHPPuzE
ydwefNXqhVkTf7PP1Xc++2jnA0Vfol+QvFXwVY5TP0leUreV1xNfRWccnkEf
h+Cs4J/osoKL/sajv+ri87ysed3gqrx+XievK58lvlJfbj+efXnql+x/DM7S
58vnWZcLHpr6B8NLRXclntJfPnjIz2V/pzoxv699muIs8VlwlT4NwVWpF4fP
dN6Ux+r9cr5llT+1zp19RnBVroscB0flunE+duqCwUnWC4PHmh99jvP86LXU
ZQVfhbe2Lpj9mz4y4aWav1bTX6nD0jdLf3n17DlufYXq3BtP1fzlJ/+G5uPQ
dFmtPmg+zLrVYU11wav1wIa3Gp66hq++bh3wrE64x1vb+uDTcxlbX2Gbm93O
a/FW47P01cr11uqBbd6PdUHnZ8tnGT+Ct9TB21fY5v4krmU/qa9g8Jbxcaof
6mcYPay+WtHb6mfqvlxfh6zq4oO31GnJg8lv6a8VHiL5NDyFvllTP1lwV27P
mucFd1lXUketHj48i/VB+R5xkb4M1vf0m2r+U8Ej+pTqO6p/V/Tu6t7tIwwe
sm8gvJrzevJ58nmzqqPK7fZBytdZ/3NeT/7X8J1tnmfqgTmvnBfa5ihaF7TO
HdyVNXpFfbLEWerf7TcMn2UdMfgr9zu/y7pgrv/sw+SzrAfqn2U9ULzVfOTV
ueuPlTXxNXgrcdh43XisNg+79RPqVyqv1eqCbT721F+45bPU5Wzrgluc1fit
bf3va/Ba2/rjeb3wKr461WFtfeNdrROKr+SxXBuf5XXgfqThK30b3A+Jr4Kr
sp8KvpLPFm81Piv1QvsMo0uwXqhvjas8vvhKv4emvwq+yr43dQb1HonjyQ9/
/67/8FnBUcFXOY7OV/wVfJXHibdShzGvBV9lDV8RfBRclLwbPJT823zBxV/6
hZu/w3M1fNV4J/03g4vCz+RxeR3nQuurLq5quvroqIKnrAvm/uCu8FvqwOTV
xH/OP5TfEkc5t1qf+NRh8/tYz83/FrydNXxnzhP5qfStpi4Y3GU/a471cwuf
ZZ0w53d4rPBX4ix5quxbxE/6arU6oXO4ch3Ht0H/rPBYwVfOvU6csS6YY/Xs
8lj6B2ZtOit1F21OT+OvEt/ls8RXbb518op1QvUrrW7Y9FZb34amu5L3mPCV
OOvUF37CV18DVz3Pb23xlb/fFldd1bk3/mrSZTUeq/FX8lj2FTZde64r6/PO
rc51qz4r13lW51kHX7mqywqPJc7KPk8f+OZPKr7K2vCYPJZzrrOfTRzWF955
ieraw1MFZ1kPVJdi32FW510nX4mvsoaPiJ4mOpus1o1yHLwUXObz/mKuT9a8
TvBV03/ZzyYOETeoRw9foz+XfYrirzxPPXx4oujRw09FZ9V86FMnnObd6H/v
/EPxlvMm7XP099CHIbg2ODn4Of+r+CprzpfwU/JVbV568x+13zX17Zy/8ldZ
rRd6HDwVfiu4S19gfUzTRyhv5dzE7KfUbWY/pn49cSXxKLxVVn3erRPqBxjd
hHhK/VV4K+uFkx7LuYiNx2r1w+QT+wgbfyXOkk9odcM2L2VbN9ziqwlnNXw1
4a0znPUu//f7OKvhra1P1lX8daqHb3XD5p/V9PANd01+WuIu8Zb+KpN/Vusv
tI5o3TBr8JZzERveyv4xcS1xz/ph4mLW3J+4mWP18PYdOo9HnVbiu/qs5Ink
E/mtPC79U3l8jvUzzarfQ/KbeTJ58S/8u4Ov4nukTse5w+rq5UPyuvJfwVnO
vRZnBF81Py5X647BVeKtvL5zdoKTohuPv6m6q+Cr4K/wWs6XDm6zf098Fd5J
/ZRzwOW5/J72J6izazyW86GDs/S5sk/QuTq+jjgtvFbwVuqG8rme3+GBvS5y
/eijlesuOCy4K/sf/Ryif29+Wdlf5foPn6XeXZ8sea3mNxodROqGiXPZZzZd
lnVC97XON2z8lv7viff6NTSdVsNbyTeNF5hwlvXCrU/W1reh4a0c3/Vn2K5f
A289z3t9zOv9isP+83edfeEn3qvhsa3PQ+O95L9yPOEw647q5uW/9IXPqn9p
1lzfTcclH2adsfUp6u9gX2LimHp5+xL1sdFP0P7r7GftW8y+N3FZHy39HFLP
SJ5IfnGuSFb3+8k/2bc718e5ieG9UrdJ3ksdSJ4i+TL5NMeuwVXiLR+nHj84
TN1WcIK+pk3HFNykf0RwmnjO4zxOny7xkvp4+a3gLedKB7epy1JflvcP/kp/
p32BjQ/U5yrfL69j36f14uDq8F3B08HlqQfqi2V9MTyW50fTeeX1wsdGZ6ge
Ud28+5ac97k+5LfEYbldHBbeK/sl524Ff+X6tv9Q3adxJHxX4pBzDoO75LeC
wxLvoq9IPFSPoe974m3DX1mtW+gHLw7TF14c1ny0Jt18021NOGzqO9z6ZpnX
G+811csmXLarx311/PV6P61TfVc73uKuVodsPJh8mPhr28fYdF7iL1fx16Sn
169YXWdwV/PZyv6vzelp/n/y/ImH2ZfqFxFcpr4r8TarOvrE58RtfbSSDxL3
k0esg6hTMa+oFw4PoP5L/9PGgyWvOicl+VSezLyqL6p+XerzU3dMHcy51vrH
q8NS/6R/V/BH1rxecE0eb90v+Ci4SX/64C1xV+4P7rKvUF171nye4Ej9NHKc
3ye4UR8zcVeen7pi9HT5H3Ls/6g+Pvgra84T50GJz3Ie5PasOS/UeTmHqvWP
uB/J6n5FvlmdfR6f/VBwV/iv4K3oCKLjyvWuL0zwl3N4mk4++EufLH0e9Cc1
Lsp/WW8Uf2VtfYpNP998S099tbK2uqN6rpb3rDO2PNp085P/w9SPeJUPO8Ut
3wVfTTjrFG9t643i51ZnFJc3nsvzTH5rqjs2vVebU61PvNeZOvrmv+XaeHB1
XokjTdeV+ONcHvsUW99iw11ND2a/Ypvfk/1x9LcNZ2W1ryr7bfGW+SH7/ezz
wwOoP1ZH77xqfZH0lZQPk99Qv5M8Gz4rvEnqluG39NkKXgqPJf8TXBKcEVyk
D728kH6q1vX0fxBfpR8x+El/VNfgKuud+pDFtzV8k7dnDb7Kcb5PqyPaJ5rf
PXg3OFmfrPyP4m7xlX6k1hWdb5jzIs/L64Xfynkprsoqr5X9hrxWVvcfXmf2
If6v/98/HJ189kn2H9t/GFyVNfVFfd9z7DzD5veQfWN4rcn3wf4k8ZT8lvvf
xO3ms6Wuq+nmJ1ylfl581fis1pc41Rdfha9OcdX3xFl7f62Jr9v9Hp3X2uq9
5LOu8lryp+08bPjL89o6YpvTo67LuqJ+8VndJ4m/Gp+lDlR/iMSfrOq6Eq8S
x+S1EufsZ9RP3rpj8FbiqvquxGXnIUaXm31y9s36cbW+qeAs6x45Tv6wriLO
Cv5KXnOej/7x6u5zf/KlenzxV/Jw8ro8ivN+go/ET+Gz1HWJy8RZ8ljBJTkO
jtMHQr8J/dT1+dLvSr9UP1fwUL53cJQ+ZDm2nzCPl/fK66VeKN4KzkpdN/jX
flV5LeuKjb9Uz+XcnfBWOa9ynPOqzTsMPxu+Vv1W89/K2ny2cn0FZ+mvZd0w
17lzpO1rTrwQZyW+GI+sI6rfSpxr/Yj6PlhH1Gfa+Gt8dh7PNF96wl3mFeuJ
zc9062vadPOTv/hTeGvyf2h47HNw1vt8uiZea8tz3a0vTjzXtq9RPdcWd3l+
T7ir6enFXfJc+nO1umLDX/pHqN8SfyVO6Ssfft66onNdxWH6ETrXJ2vz47KO
GB1X4ntwmPxX7s8qHgtOy+P1TbWvMat+qNHV6zef/Gf/vn7f8mTiMX0CxFvB
AeG3go/Ui6uzUs+V1Tpa8EdeT3yjf7xzEFsdUb+v4Kv0I+qPlfpgvp9+ZsFH
OdY/NnyWfKB4VV/a3J/n2W9qP+JUJw5P1eqNDa+Jx8Tn+nIFdwVvBV85b9p+
Ev0igq+aD0SO9YHIfil1Q+edWi/Uvy94KzgrcUReS38t64fO2wn+muZv6CMv
7lK/Jb/V/CJOea7Wv9j0W/pENJ7LvDf1KW59t5p+fsJfV3muq/W59+CpLZ67
7hsx8V0f49uZ52p4q9UZXU919K6tf7Hp5sVdXnf6tzS+a6o3tvqi83ycZ+8c
avt/pjmu4q0cJ15mTXxNvLWumHpi8+XKGr4rcV78lftdg7fkubKPT95xHlDW
8FrqlJtfl/gqehp9KoOvgrvURaeu2PxUrfM5bzF8lnr3xvMEpwR35H2Ct9TX
688groofgz4N9g+q61ePFjwUfKS/WVbrh+G38njxap6X19V/Nn2iwVF/0ecQ
XBTcFP5LfBVclufncfl/5c+sI+oPkfMo+F9fFP1P7Cuxzt508Nm35PrJ9Za+
llynuW7tSwzOaj6miQvuz8Jzqdea+hTbPGnncKjXyirecu6hOnnjcOJ1m9+T
/bb78BxbV9SXazsPseGt1q+4rR+ezuvZ4qwt3trhrq1+6vPw0/S5n+avsoqH
s0681VYH3/gr8ZS4yjmJ8lYTf6VOK9eZeknxlf4Q+nM536f5nepvqv+WvJX6
rAlnBUfJ91svdF6i8xDtHxdPZQ2v5fza3G/8d56ivo3JN+IpeaschzfI7Vnl
q5r/d1bntSSf6mcaPKCeu+mvgnuCt7KKN4Kb9LlvdbbwSXmfxmMFN+X+PF7/
dVfrfs5hDp8XnJP7gwfFgfZr6sef47y+fJU8U8NT6uucL9Bw1F/ovawXWid0
7mH8HqwLBkc591Be1+sh/K/7kBwHR2317cFR+vOpL7A+KH6St5K/Co5yvxje
Xp4q8VE/HeuEWVv9oPlB2H+49Y2Xr3L/Ll/VdO8TfjJfTrhpy1f9nge572P6
MZ7a8kBfr++w4ay7dcIJb1kfbPr4CW9NPqcNZ011Q3Xx4iz9t3JdNbzV9Fri
Lv3z3DdN8xSzb2u8lf3RrupOc2w9Ud1W4qn9h8FdwVvhr4K3nEMt7spx8Jb7
6OAv64dtzqL9iearNr86q/5cyYO53fvzOuq6ktf1ywyucP60OqrgleCq3C++
si4mvrK+pr+XuilxX/BWVvXzbc6N76+fVXCQvmb5fcI7ye/pB5vvpU+pvv15
3+Af+Sl5Kv0acr/4THylv0PwWs4PfbVy/sTPV57q73jyD09lv606Ruvr8sH6
wmdfk+tTHZbzo/XnE2d57LzD5hfv/B31WYl36uC3/qbqX8NfbfVZ8lWJ/62v
sOGtNudky1Nt64KTn0PDXfJUV/mrLd7a1tc+5pe+Dt6a1i3e2uKwCR9v9VlP
+T14/l7lufQ9nfRabW3zfoK79OESbxlv5LmMV86n1i/Qfh/5MH0h9MvR9yH7
4MTt7Jezf05cz2pdMbc3X0XritmnJ89YNwzPpe+pc6ydRxdclnqN+ExeIsep
+9jHrz9qcEZwReOfgqvs1xM/iVPUNzmHSD97+/msR+rflfvzOcWPwUf5nPl8
4pvgIOuo+bz5nE0/L85SB6+fRv6P1HGjb2/zpNvtwVnqvFofo36m4vfwWurg
c/6mDmgfbs539e1Zg8dy3bivyfWlT3z0WOIu+S1xVvZjwWPhuXK/uqw2b1qd
aeKbutTm76C/1sRztb4lfU63vlrirtZvOPUdyis03cxUJ9zirS3f9e/sQ3wd
HjvDpx2XnerjW71x8oXwvJt86FvdsfFfEw7Tf0tcpm6y1SPVc8l764eqbku9
vLqGHIvPnD/m3Iy/f5//94tfvfot/ejDf0Uv33zog7uyBq85Fyj3hzeTH8va
6o7JV/rW2+cVfGW/vfgseTKPl/8KbnMOdvJx1uAC51eLI6yjtfmN+kY1vkdc
k8fldcV7+oI6P3viuewDVOf0F3W64Jh8LuuJ6r6s0/r76VuqHksfh9aHaD2y
1RWtU+b2vL7ze3Ietbpi01/lvA7P69zppssKzyX/nOvMeahZcz2rg9c/Xj2W
uMw+xclfvvlAtDnUwWX6QzefU/XxDX9N86n1mbcPsfk+nNYXp7riVT/Tp3HY
tp72DB77Kviq37+ts06/09W64inf1XTyU71xqi9OfvJZxVniq8Z/OXex+XLl
Om/1xezj1HPJdyUuBVclPom75LsS5/SLSDxsvluJv86vDu+VuqN4y/4m8Zb+
EdYb7UdMnkkdJrqXhq/sUwzPYP1R/wj9uqKr148reVr8kPzvnGrxifhJP1R9
C9Rl+3hfN+8nnrGOZ73SfsGG9yZ8Jb+V3yfvm7XxW1nFn/JneT/9GsRXwV3q
t5puXn5L//ngKvsv9CXN+nd8+rV/UN7KeYfW3bMGV3n95PrKddf8HPQl9XrX
j89Vnsv5Pe7ncqwePvEr+0fnybY6Y/MvVa8lrsq+V15LfUnWU/2W9UR5rqv1
xNO6YsvPT+Grj2//rn2H1/X0E791VefV+K0Jf3k84S71XlNfYuO32lyfVm8U
f7U+RX2Fm84+x9t5P80HImviknrT4LLEL3GY+Mt42HxPnetjnVFfiOAv9V/e
Lv8V/OX83NRNrC8Gd4UnSJ3GvsTgsByLr3LsPEd9JMJzWWcM3nCedfK1eEjd
U3BL41eCV8QJf6EzyutMunU/h/jH/sEJB8rzWKfz8zVcGFylb6l81lTvs77o
3ENxl3p6641Z8/i8fuqW0XEFd4UHdQ6P9UN9GnJ+N/4quEy9Vq6b8MOpH+a6
k7/K6hye8FLBW+Ivea42l0JdV+JM9nn2ISZOub8UZ2U/2ubUWldUx+W69XlQ
z5X80foMxVvNT6vxB1uf+MlP6yqvdU/PddVna+KP3o23zvmwu3hrW0fMccPd
k55+0te3uqLn8+Qz33BWVq8zdfaN9/r7c/zfX65n/SHEXQ1vNf+t4K3Ep4bL
5LsS58KTJQ7av2gdMau4K/vn9DXmdusV1h1zbD0xOCtr+C519PoPNf8t5821
x9n3mNuDt4LPUidyvp68iLxX8IX4RbwgLtCXQHzjKk7L+6tfz+fJcdbgxda3
55yi5qeQ7y8vls+hvk19mH0BeR117fkczl9yzrTzd9Tj6eOR2/N6WfN8dfLq
Bz3/9HvPvkFdvHVD8VXq6/qT5jrSF77p5FMvDN5q8+zFZbnfvkX7F+W1sjqn
R5zlnMSsbT5PqyO2+TxNv3W3bmg9peEtcZV8V5uHaJ/i0zzX0z5bZ7jru+Cr
2UdrwqNTP2Ljr8RPE54SR036rAlXWQ+fdFne7nzRNm9UHks8pR+E9cKpbih/
ntU+HnGV/JW6LP21nEstj2V8DX5SPy/Oympdsc2x1mcr+/usyUvO61Fv7Lzr
4K7wXXle7pfnUpelb6n8iHyHPFaOxR3OhwkP4hxj++jEVfJawS3yRPk8zmHO
5/P11ZE3PZM4R3yW9xdH6R+v/7u+o22+s/N29HOPfj3/n98nrysvlTXnQfBS
zpPm6x5+1fNX/KRvQ+7Xv8E+En3e5Y+tD4qfnB8dnJTbc73Lb7U5h/r0Jc7Y
r5N9XKsPqoMXL3msb5Y4yjph46kaX5X99eSLJZ5KHmp6rFYvbHXDCT/l9qke
mPsnX6cz3mr2n/pe+Ol+PXDCT1d9HTye9FieV+Ip5/LkvPX89fxuOKr5a1l3
b/On1V81PkoeSj945/A4d0K9Z1uDoxK37ENs8xDVU+RYf0LncIinEsetFzY+
Kvvs5A/nJSYPZV+vr0ObV6JvtnN41cdHl5V8GTyV/Jp8nOPkZetQ8iLN99L8
bh73/XK7eifxRnCOeMY+SHkdcYn4RH3TX0VnFRwXPGSfYvTz6v3DQ4k7xany
Rc6hbP9XjvM9nHOZx+m7lvNAXZ++V+qmgo/ETeFbPd9zrC+DfqLNFys4yuuu
zc8JXpKP8np3PpdzUxuOcs5O4tHk42A81LfBOdGJq/JP+ru3Ol/rHzQvNJ1V
8xudcFTDT5MOaztfZ8JVV+t/H/M07+4nvO/DsK3b3dWlT7hoi49a/S7nXZuT
03TpUx+g10fDRVmbTso6nde5PgzZX+mzp5+7+ih1UvYDBhfpf6XfctbgosRD
dRP2CyX+hn9KXFYvpU+p/qPpZ0rdQjyUfOScXPGP/VVZ8zj5pfBS6qOSL9Nf
7/zCrOZfdezOTbGPUH9KHy8+ERdZr8vadFjiOXGQuE1cEZyi34I+6vYN6i+q
Xj+fO/hIXOnv65zvrPkd/Z/0p9LPP8fOCQwvGTxtn17wjX15WfWlsv9CPKRv
QnCQ/R7iouarIM/kPkc9lGvigHOfg4f0OVYPFV781F+hzXeWT9J/UJ9C47X9
R8Z784R4qM0ZtD5nna7lNfPe5LdwiovM31ue6TV1uc/il+77sU+/w4STJryU
dcsjTbqnxiNZj2t1OfG/68QvySs1//Zcl/qzq2dyTVxwvmDjl/SzUt+kf4Jz
n/VJcN6NOtHWxyN+Sr0ucVn+KKv9fOKm7LudJ9hwU3BQ8JF+oh7n8fYDBj+F
J4huxXk5zi1Jnk3+zZrHOdcwrxc8lmN9vIO/8r7qqqz/5VgfJ3VJTR8tLhM/
iVus/+mTZT9g84PI8/XxVM+dz+M8SH93f1d1aeqU8v+oU3KuX/B0zjP5InFQ
eCH3A22uU+4PbtKHN9dLVq8r9ePqmqzPiZ9yHQcXOT9QvCQ+yhoeKfs041Gb
09x0TPbnWX9Tt5Q4rI+N+qVWf2s6jcYj3cVLjU/a1uVOeaSGixqPdE/PdOpD
8L662ymOuluXazj2lIfyPLiqc5r0Te28t89CnwSPmz9C45uaPjyrOqfWZ2Ld
LvszcVX4JvXhzsPRB8H5FE3n5H4za+OlEp+DrxLvkweyj7YvTxxlPc4+J/0R
1eGmrmd9r80fDI5KfS71GOfmJO/q265fqD4L+i04n1AcljW4QT1z45/0D1dH
pU5afkn8oi48+E09enCTuu/mq2DfX943n0s+yd9Fn9aGf8XB9l3az5nzIXhb
/jLnaXilVndrur08r/FOzT9X3kk8Zf+GeMp5y60Ol9Xrv/lJ2X8njtJPKnEs
qz6eOU681D+qzaURR23xkzhqO185a/OjnnwPGm6a6nAtv57ip1ZvajjqXr3t
XfhpX587xU3+TlvcNPFQ2zrepBO3707clPM1a6vb6W9gPa/xULnuvA5znTbc
1OZSyUM1HGX/nX6eiUPRWWbVb0rcJO/kvBrnTxg3c7s+68ZnfQ/0W09+yD49
+aXpmbLa/23+aqvzavVHiK+BPtfqxcNT6MOe27PqA+rr+nzxWfBS8r76cPVJ
9vsFj6iXyipusv4oH/QXfXfBSeqXsjq3Tx8o5xTLhzmnUZya31Uc1HBUfnf9
K3IcHjL4KOdLm2NsHS7nYXCTvJTndV7HeZn20eW6abhJ3wLrdfJP1uey/4mu
qdXn9C0QL03zZ6Y5f8ZB+abolVp9Tr4pdYJWl2u8U8NNV+ckb32jJv1Sw0cT
bvrPx/2Kjz4HN30dnPRxfU4c1fHl1Tpde9xdnNTON3GRq7hIXsl6Xeujsy5n
fc55fs1vs831TFwwTlivc1/W/AeCj1p9TrxkP4y6hcTHho/sW058Tty2Ltf0
3s6Tsa8oecjHqyfx9sZTZXW+WnQtLZ/qZ5D8msfpa5A176PPuvjI+px9Yfa3
qd92vkrwVvCH+qDcr566zceTH2p+oM3HSl25eiPrbcGd/m7Bl23N/5Dn5/8N
LpY/0p9JPKTvfvijxhvJQ8l3Wp/LviF8UtbouMMbOffY/UmuP+vnrR9OPjnX
uXOo9CcPLgq/nXjkPi7xK7xR64PLmvio7kEfAX2PG590io8an+T++1TX3fCR
ebDxSdPaeKVTXLStX+1wyl28M93+Or9L8ZC4puGdCS81HDTpl1qdTZw+6bwb
b2S9rflgNt+AiTea8JB9HPJG6piy72r+mPJEWfVLUW9gH4t1OfXgrc4mDgpf
lLiuTsm+n+QHdR7JR8k/8kwNT1m/S55L/tNnIPqU4JbgGO9v/gR5vHlXv4Lg
LefHqPO2b6711QW/2G/v/BFxVupV9t1Zz3O1TiY+s08/nyffL7jP+b/+PvJ4
zc80q/hTPij/mzq35vvt+en5J06Xv2y4KOetPgG5TsIT2c8mzsl1pz4pq3ok
+1zFQbnem7+SdXx947K2Opq6AnVJzoe3jy3x1n1p9qtZt7qkyUfculrDQad4
6Go/21X803iQa3qkr8IP3eeVruqRtrip8UkTb+TxhJMaXsrxVp90ip/kk3Kd
NfykX4B8ktd99kHyS/JJ+gtkzT4s66TvTr1NnCSOcn+YY+cZJ54650XclHid
+B7cpN7CuS3JR1nb7clX+l/qg2n+ct6Y+iTxT3Tl+g+0/jz1476uPuXBCfpl
2tclbtKXQBwV3KO/dXt99dPyVsE/+m7LD6kzsr6nPjt4UT4oeMm+xay5X//I
ps/O/5n/xz4AeaPGQ4rns4rLcyzuD+7K6+sDnusj+4rmA9B02rnucj06f0mf
78Yb537nm9v/H95IXxN9v5vvpLxR4p/x0jiaOCtOajpS8dI0d2XyWUqecd9u
Xpr0SJOeu+XRlnc/1sfs59Z9D7y055G2+Kjhn2lt/8NV/qjpjFr9djsnuPl8
T3W2hoNy3QUP6ZvUeKQJF6lLbH6V4ZESd8RDiVOJW9EDJJ7l2H2ha/CQfkv6
CKjvTJzWL6DxSM41ze3xidE3xtV59PJKbQ5e+KPgmKz6C4h7gm/y+OTV5s8k
HgoOSt63T73V0VLPCu6Z+uTVg9sHlvcRB7nqF6CvkbjH12s8kfMGxS36YomL
5OO83X5GfY5Sz7K/X57Hepp8prip4aHgeHmo5s+tr2SuJ+vW6q7VD8kTuZ+x
rp7jNsfXfn/71sJv28emvrL5b8sXNf6o4R/1Rs2fW11R0xfpL2l+cT8+4aBJ
j22enPiiu3Wza3qiz8JHk3/lvn/tKj809QlOPNFWT3Tql+R519YtP9RwkPNN
1BfJC9m/lutVfNR4oaytv22a92sdTX5IHwDxkDpK+SDnz2VVx6mfZJvzqw7b
/mb726I79XniqazNry84KHhHPXbyZ/KljzOfBv/IH+X25PXk5+iB5YHUW7e5
wcEd+ktaDwvuaX11uV3foAlf2UefY/0O1EdbB2u+6vqBer/1zfa85guRfkV1
aJ4v1ruabqjV0Rof5NxdcVCuD3VE+kGqk87q/JHm+5jrWZ2Qc0iCe4KD1FGr
E9LvqPme2Iemrto4mtW6mfohbz+tn7k2vWrTEzUc1PRDLT82HmGqn0146Jm6
2bv9Ic/70Sbc0363Uz5owkHNv6HxQA3/tLrYxA81/LPVEzVdkXVtcVHWxge1
/n55IPs32ny3xCtxUPihdru+29bNmp4oOEhdp/vY4KHgGNfE/+Ad5/EGR+X+
5A3xT/ig5CPxT/BLy5Nt/ql9Sfoqqde2nhMexH4zeSB9lnJ78JA8iz5MwR3O
E7Y/S5wkT6QOKas+TXl+wz/qz60jZvX+rMFB4qjgHnkf/RytWzV8Yz9Z1vBG
6ovsI3O1/yx1W/2wg/dzfsujhl+1ztX6Rb1O1UkH91jvSlxI/Gi+14k/+t4G
/zTf66zGvakP33lsTTck/5PVvhl9ICc9tXlkO2fk1M/oKv8z9eM/qxt6tw/k
9TpZ44tOdUPbellbt/xQ6zPb4iLx0YTnpzlu1se8DuWHcmzfg/hIvsi4IG9s
fNF3W35Iv0h1RFmDn4yH1tMSP4OP7NN3/kDid/CR/S72y+i/Yh9Nbs9xcJNz
PrO/Tp0s+Sf7cfNY8pv91s4ftf9fvZG6XOtlLZ8HL+jPo65Hnib3B5cEh6if
sT8ruMTHhafK44KTGs8j3mlzX9X7iHcmHk6eTd/Ohoeaz7Xz0vRz8DwJrs7t
eV7jj1o9TR11+CDxUM5jeaBcP+p/1EXbR2q/hPxurmv1P4kXiQ+tb0wdkPV8
/a+t/xvnmp56wkPiojYX6rQu1vrKgotOdUFbHNR4hVaHmfigrS7oGX7o3brp
iU/653NOOOgpXDTxRI3/m/rvrZuJzyfeyPO59enLFzlXRL5o6s+XT5I3si5u
f1pW+/KNS23ebZu3LZ/k7YmPWcMntXlt6ojUc7a+GOdCuT9ua3BT8FHW6IvU
Iekbk7xlP3Tymr5I4qas8kk5zpq8bj0n/E3whHxRcEird+mXJB4J/rK+5Hzf
rOI1cVt4rcY/5fnqfsQ14qHUreSLxEF5vaZfz++ax/v6+oCq9wk+tu9RXNT8
HppPUZ4fHCReDw6yjqw+KNePPJHXnzog5wj9/Tv+s88RByUeJA60uWiJO85F
s26mTsg6mfFOnWXiY5s7m2P7y+T5W52szQ3ZzlFrPthbv6EtLmr451QvNOGh
xqPs8M9n46PrfkSnuiFxUMNFU72s1c3EO61/rM0Labo1+c2mm3Z/0HBPjtt1
GFzT8FDutx4u/mn+RPqauV9r+CfxTNyTY3mjHIcXStyc5tU6D9x9bPNDsb5m
/5l8kXWz5JHUH6JHbbjH/vx2v/pX+QR5I+s99qOFJwl+aD7a+g+Kl8Q36mby
fuqIfV4+T9bgGX0m1TWrXw6u0Qc6v4d+m+qs5Ifyevkd5X1crU/K21kf8/8M
vrEvUV6n6aVzLH5S3x98PumBrIvlunL+oX2d9jkE/1gPV/fT6mCTr6J4p/nM
Og9NfaS+i+HN5YPkheSB5POti8n/tH5688a2r36qi4lzxD8T7tnim6vr9+R7
9nWxV+GeU710zodJRybvs+V75Hkm3OP1If5puiF52XZ7822c9ELZN01+1VnV
DbV1wkHqhhJH9R+yf17dkPG73W+/mfNq9eNVL2Q9TJ2Q+3LrFj6u+Rc1/2zr
YI2f0Kdaf2txUPBIcIZ5X12w75vH6bfdfH30cZZXkcdRb5Xj8C3yY869sw/P
1fm/k2+iOug2z1VcHLwc3KPPovM3cqz+Oedf8I78jn6JOc/tb3c/0XRAOW7z
ytT9NLxj/1fwTpvbqB6ozSdqfrP6Kbb+Ev0UxT3G5y3ukd8xX2x1QFmnPjD3
/00HdMrr3MU5O97n3TzP87hpWxe8i5O2PNGEkyZ/xmmubMPvnvetn0x+yOvL
67Ct1s0m3XX2P/aVTT5DzadRvkheO48Lb5S4GdyU46zhz4OT1A85fzZxPLgn
q7pr+331JxIvWT9TXy0/pC+Rvi7mSfkB6xr26esrk3xsncy5t62/Xp5GXY9+
OU237apvgJ8jrzf1rbf+rBwHl4gbrSfKp6lP18dJ3Cd+Ck7K7y2fZx1rwkFN
b6a/lf5X1mMbH2Q9OOe7c8b0R9Qf3vpXm0OWtc0hEydlTZwQB+kT1PwVPRYf
WQ9rOCnx0TgqL9Tw0TTPrNW/kjdOeaCmk976LG7rYk/3i33MD836m6+1nvNE
0+93iocm3Verk53iIPVCE280+Yuqn/a4zQ2ceKTtnA/5oi0eavyRx9s5aOoF
wheFZxcPZZ3mfRjf1RW5Lw4OSh3N+R/2nQUH6d9oXpM3MC8mn+XY+5P3kh/l
mdQJiRvkjYJ37LdqemP71+SpGg6zHuXtjZ/JKt7Qp9C5Fm0OrzpmX886o3Uz
fwd163kf61nNV7rhIHGO59Pf1/8/erTwlM5r1R9Rfij7AnGQ/V/BOw33hBdK
Xfu0LibfbL+88ca6WJvLKO6xT6TN32h6y8lvWj3QNJ9MnmjrL914oQkPyQO0
PDnVyZ6qm+1w0HfTTd/vr9/iotM+e/HPKT+09R1q/kOnvJD9lV5n4iH9qZ13
Jt/rdd5wkHjI+nuLT/aZtdV9oH1nWfUnEg+pH3Ifq67TOWjipObfaL1M3ZD9
9fr5un931ffOuWryS9bT1FHbF6VORpzT/BytM7U+uFaXEjeIl/L5nF+h/kZe
p+lyxD/qldv7+70nHNZ4IPkc/cjzf4e3yXHjd5yfIe5JH1jwec5L9W/2w1sf
8/rImjpY24cE79gPaj+YOMh9UdMHNfzT5myoi87t+iiKgxr+aXWyVh/b1sna
XNZJB33KB5n3Jr5g6ksyP9/FP/dw0Lv0QR333Ksjdlx5qhO6WwcT93g+NtyT
83nylW54p+mH2lzXqe8+17O8rzrprPrPi3eMP22umX4fiWvqixIv9ae2j775
LjafWvWbOU6cF+8kH2SfnPxhv72+i+axplN1X588pp+jfJJzOfUjTv4WF9jH
rS+Rehd5kry+fJO+yOINfZTU74hb7KvK8+0b93b70rPqY9i+v/yT/WTqgPJ5
29ww/3//35wv9hWKY/I4+9v1u9IHSJ2z/oZtX9D4nvA7rd418T0N18gPqw+a
fILkf6Y59I3vce6q+0R5duNwi+NXcU5W99nbeteEd8yLH+Oa/+a445zfH5/y
H18F5+z5nadwzYRzGq/zn/9T7//b8jquTacWnNN8HsQ9jQ9t+wbryOKbXI/q
ou0bE+e0vrA2p1W9tMfiHXkd/YUSH/VVNJ7qO62/Yo7FQ+o2rY8F7yQ/RA9h
X5h+QeqixTXJV+Ih512a/5Lf8njrXy3vJ5/nWHxhXcZ+JfuUrK+p6xbvBA8F
H4kzxB/qdawXZW3zca0rWddqvJJ6HutYra7n91SvJX7Vnzn/t//v5OMZPBOc
LX8TfKPeP+e157vXgXP9nOclzyq+aXyOdazmpzH1e7U6lnUu+91d1fWIb9o8
sMbntD72Se886Z4nPmeLc1reazjn9/l1719zFefs8M73wzcN77TfcfIdaHi1
rVf5nKme1fwQc75P8zE8brfL46hvnvx+xDnND9H9kX1hbbVu1frE2txVj427
ztvwccFB9uG6n9XXLfqd5I3ml5i8lTwkPsnt+ic6j1JdUPKZedA61jTnXhwi
L5NVnW2bDyuflNeTV2n6meCZPM/nOx9UHa+fM8fyW/JD1tPs22r6nKziLHGN
8ybkceRhxC05j3KeiGfiy6AeWTyjPq358bgfsD8910273vQ1dX6X/I3zuxpv
0+abtnpVVnGNeh31y60+ZZ2q8efNp8c4L2+j7rPpdRq+OfV7nvTLLY9+rJe9
7vt8evy18M1/jZ/7FL9Nv+fdulWrY7V61sTrtP6uCe9Yx5rmxjc81Pgc61bq
8rKfaXNUm35Hvkf/MHFQ0+8k/tn3nnWqY4lzPFY/IP+uLqH1wVu/im5HXsc5
Y/rGmefUlWb19dRn2Ndlv7N9Xq2/Oq+jjsQ+IOsxOZa30Z86a3CE/VVZwyNZ
F7Me1Pqe9BNoOiL1O60epf4nr+f75fNYl5Kn83+3/y+366Og3jj4O+dn60fU
B8J6VXB/roPgnlwf9l/J5+hL2OZ1ydvq3yPeaX3r4h5xTvPvaXPdsyYu2uex
7Vdv/E3jbRL31XOKcya8c6pXvopz7vZrfZzXT+dcvIu3eUqP/Cuu2darJnxz
yu9cxTnWqzyvt/4++jrn9uaHrh45q/uT5meY6118I54J3sn91rGMO+Kcpstp
OMf9oqt9W+12+R3jevicVrdyHy0ucT52O07+Cu4JXsrr2/+uLiN5s+l77Ouy
L8zb7etxfpm6IOeYWbeSn8nt4gh1NOpbcizekl+yftb0Sr6ffFPT9Ygb1Yu3
uqT4Nv9n/kd9dPQPDK6WTwye0b9KHGNd1jqUvKZ4Rx7UfUXDN1lTf574nKzN
f9B9k3HGenrDM+pwrE9N/ebb+RNbHsd9cI4bXrlbpzL/bXHNlIfv6Wu+iu74
19efvsddHNN+363+ZtKVNxzTzqfWbyU+3/oUtvldub/xNupx9AVt896tU+nT
LF8jb+Nx87PQJ7759ATHJA66/2tzvoyrbY7FxNNkHyuecR58cId8TdtnJ0+p
29HHRx7IeoV1r6br8PbGI7R6iXlZ3bQ8jfUw52iG9xDnNL8h9T72nzX9UW73
fawrNT9HcZR6I3/npvvV98/6Y/O7aXOw5GHsA9f/RhxjH7h8jHph7/dYHbH8
aniahlvU17Q+BXV+be668Ug+Rvwijmn94ts6VNMPi2MafjmtO014ptUlzHtP
45fX4Jr31aG2eGbCOVs8M+ltrvaRu251NtZPxTETfp/6yK1Heb15XQbH6Bc4
6W7cz3h78I56nKY7FsdYZ7dfvM2jsJ4vrhH3tP5y9ZP2jWT/a5+4+2XndIlL
nHua57XXaXMsrGc1HU/Lq+p8rIOoa80qHgof4pxL52Kom8njxC3NN6it+sbo
pyiu8nOqk2l1JOtu+u4FnzifQRwr/9J8jINXct41nUzOU+tH4hZ1M813U5zT
5qJbv9Un3XqSeEX+pc2DSLzQn8L5oE0/k/jU+rwn/GJ/xl38MuloTutH276o
CcdcrTPd1dN8Lbyy1wtv8cwWxzRcM+GWp/vDPd9aXWnyv9n64eR6an3j1pfE
NY2XaTqaCcdk3frkyBsnflln0vfGuaLilIZ35GWMx4nbU31JH0BXfQHbPEXX
PF9845yu4Bjxhv0y1jGsg9mvrn4jz3feV/CLfczWeawniWsa/9J8Ddv7ystk
9XVzHPzSdM/qhuSpxIX5/cSd+f+CX5y/1nQvuV1c03BLVvv/5Fsar9L4GG9X
L2P9SPyiT9+EX1rdqM3ttK7tGhwjfhG3NPxi3FQfY/y1zymr+1jXxrds60ct
L21xy2fxMd+Lf+l64Kv4Zff77HHMFt+c8jNX5z24imdaHUqc03TD1nO9Xtvc
h+CbrOpoPG78TesPt0+qzeNrfd/6vquncX/o46xT2UelXkAfwObvJy6xD8X5
W+Ik18b7BN+IS5JH5QeCR5JX5XnyevZxWddqfivqVpoOufEh4o3gl1Yfa351
WYNzmi7I+pO+Qj6/9av5e1knVE+VY/GtPIz6c/Uw0zzN4BB5FnFJ69f2fvFN
8L99hU0X47wq/a7si2z1o8QL60dtLmebSz7pfI2T2z7UU1zTfEC2Ot+2j251
JfHNts70FJ7Z4ZtJf/uc/uUUrzT8MvFPDbdM+PFuHcn/udUjW13J83SqLzU+
JuvU12Qdd/Lhc21zquRpTn37tjil+a57e5trFZyS+Jlj8Urzs2n6GHGL+2Fx
h3Mf2pwH+6Ncm+7T+oR8i8+Tz9G/xPxr37h+x80fedLd2ifVdDr6z6mfbb6E
za936iuStxLn6e8iHg2uFL+qCxe3OidNX7zmG6kPXuNZmt7F+lB7HfXybc6m
vEvTtWx1utnfyKu4PzIeue+a+o+Ml+733AdO+KT5A7t/Pe1H2vIw5ivxicdP
9Sk1PuIaPng37/Jc/ei0jtRwy8Sjtf+58So5bvxfwysTbpFXaX1K07zNaS55
qyfpHyV+SdzI2nS/6l/007MPe8It09wp/dfVA6d+ZL+FeoDWjyquEd9kbXOr
xC3ut60jiSvsX7Iu0fb59rWIb5Kn1dkkz4tP5DOs+7T5V3m91oeuj2BW62PW
c6b+5oZL1F3ndxaHyIO0/826oP3Q+d+d8youbvhEP4HWF+3t0zxL+ZTgEuuz
4S1z3Xkd5/re4pLWFy1eSZxp+r0Wz5r/qHFyq3MRr2xxSuNTTnUtV3HKe3S6
78Yfr9O5bOtB2zrRFq/k9lOd7la363kr73JaB/K49VNnX+H16+3TXHDxivWh
7HvUzekbo67FvqPmG+P+LTxzbre+rr9e8Ip91a3un3Wa39fqSMkz4hZ998xj
4g5xiXUF9Z7qKHK/ryvvYr3JPl/7hO1n1te29TPpd9PmYen/Zt+5fjzqZuWJ
9PsXz/n7qJOVJ2uruKXNy1YP3nS3bV6keGSLP1wnX7vUW3P96McrPlG3Ii5x
FacEl+jn0PqFtr51bR834ZOsxmFxSuK58b6tW7wy4ZMJt0z6zqs45Sy/v1uv
8hw+uYpXtnWf9rhT3e1WryKfssUnkx63zWtSf2v9R17Feq045RSXtPkF1qfb
/qvNVwke0RemzWtRr5L9oDpceW55lYZjGk6RjxGXtLnerU/JPln39/bJtn28
eEYfPvu15VHUkViXsb4i7rC/xnqTehl1OfZT2W+c1e+T46aDlv9Q99p02E23
1J7f6obi2OCS5kek7784RRzj41s/kPWcpjuxf9l6TptvpG7WY3VwwSXWdab+
nxb3jI/WzeVJmj9Fq9O3uo64pO1nJzwy8SatruOx+KPhktP8/b1wyetxzN06
0CmekTebcMwpz9JwTMM1rl4vrR7U8EyrDzV9i3xMm7PdfGCMW+GBXZueRTxj
PXzqp9YfRhyjnqXhm9YHan6Rl3F+k3Uk9bviDPuvxR/iljzePOvq69iPnXwv
fpB3sb9Ifar8iP029t24yn+0upb8SOszF8/Je1ivU2/ddEhNL936mH19+Tj1
s+38E3+IU+QRvd3zP/yJ/UBZm3+cdR59EFqdp+llxS1Nl+K+yzgnbmnxcOuf
a/xt/MpWRzvpZu/WfyZ9yimPcoZrWt5/Nw75Orim/f5bfDPhnPz/Db9Mx+38
bHjG87/xMupfch1l9fpruKXNmZRXNU7Iy4hnGj/T+ofUubS5km1t/QfiG/Ut
9hXZP63+Rb8Y6/364umDp26m4Rr39eIPcU3rp1Uv01639XE3XkY8ol+J/TWN
dxGf2P/b8Iq8lPUwH+f3E/cFT4gv2ip/0vrl/Z+cv+X76rfScIw6LM+3dp56
PopnPP+d3xgcIy861YPcx9jv0+aVBMckjrT5jJOP3DRf7nQOwFQfcp18W+7q
V3LcdA5bHDPhmV0+PsU178YfXw/PbPFK+1/Fr65X60zimKn+earbbfzntO9o
+Kbp11qdybqz+GXy5028a/q9rNP98jf69aqH0e9O3lzeJvG93e5xVvNO6kzm
Qff94hDxh/v/5vvh62UVx1hfavil8SfqW9W1Nl6k+bD5vMZHNf+TtlrP8fdR
Dytv1uYKNZ1142Hyeq1Puels5VUan9jOz2netDxm+BfnDsnDBL803GLdyP5D
+dymt1Wn1+LWVEfa+uRO9aSmx7WO5D522x806S4nvDLlxTO9xikf86filXP8
creu1PDMhGMabpn8gNr52vQyWbe6mKzNb9c67zQXe5qT1HiYqT9avrj1ScvP
yNPIU+dYPiZr08vYr2Tcbn3VuV180vKDPr4T/5J8Zn3DPD/5qpp/2zxu8Utw
gzjGOk7DOfrb23cjDjPPyzPle4t35FWsC8lzOKfZuk2O5T/aPPNWXxKf5Pt4
f57f8Iq8ifxKzrOGoxufYp3I89618ZvNJ27qB2rzR+Rb9Fkx/ohLpv2Zcc74
Z3yUZzG+yrtMOGWqI7lOOper/MpVvuUabnk3nngdLpnw3IRTTnHMpHOZeJUt
z9LO14ZPms6l8SqT39ypLqbpeq0PtXjT+JWmg2k6voZX5Fuazld80tY8rvVb
208tLrH/Qh8Y596JK9yfN1/U1m9tf6z4pNUxzP/6kbS6i7yG9anW5y2/MeEV
8Zk6E98nr9vmCzZfttbPLg/j9/Fx1o3y+OZjO/El8iHiEOudOW/t+8n9Oc9b
H1BwiHpbfVPkSdp1L/7IcfPhb/xJjhsO2eKPLR7JcdOxqMuVV2n6x4lHEX9s
9SuneOSMH/nueOT699vyT1ucscUdnhftPNnij6nPedKnqK/1emnzLyZ8Iv6Y
fOUSJ6a5i4kzrm3/1Hz+xSETL2I8tU9aXNLWhlPUu8iHuN81v7U6gXmuzY+x
Dyl5zMeLO9qqvkV80fgL86s8QuNtXOVNXOWDzPtZ/f6N7xAHTp9v8gl09f/O
+9q3Y3/OxHPYj9/6edqcZf3x9Zlt8webLrat4gtxhnhD3DH5uk18x8QPtzh5
qp8VbzTcsa3fNF3BKd7Y5cVzvcnv7ze/t7z/bvyxxSW/3n6KP9rvPuGPqS4z
4Y4tHtnqTZq+pOF0b2/4ox3f5UEmX1txiPukrR5Ffxbnura+oTZfrfm3NH8X
6zjOLcpqn1BwQqvP6EO6nb/b9Ag+Xt6l7evd3zccoG9Z+x7m+Wm+pO/f6ixZ
W3+4PINrcIC/j59P/CFe8bi9f95H/ao4RLwhHhH/Tnxe689RL9L4jYZD1IV4
fauXbzhEvWvzQ2n15IZHxBnbOYWTbmSLP7a445T3yDrxHeKRHT75U/mPcx5k
iyu2PMi27/gqHmn6kW2/Tqu/bH1Tmo580ml5fbrfMA7IhzSdiPubyWfFfh5X
/fYn323jbPNfkUfxfvFHq8Nk1dd20oc0XkM8YV+z/T+TH13zzW38S9N5tjqP
ebvxEU2fIS5q/bfNf9Xjpg/197A/xu/X6l8+Tp6j6TtaHaX5JTu/WHzRzus2
J2fyobdPJuvEazacYRyY+m22eKPhjIY3rLfIe7jfm/CGx1P/ZtuvNn6j8R3X
+oSvzxX8GJ+8G0+8jvd4mgfZ4pOreGTCte08PK3PeJ1MPMm0Nvzi9ZzrfZr/
03zeGh7Jsbhl22+cY+sz9gE0nd22D1l8ok+/+aP1GTcflTY3qO3bxSX2X7T+
5MaXOG9OXsG87edqPI+v2+byNpwyrT6v+ZX5O7ffW38af/emr2l8VV6v4ZDw
Hq2uIs8hD+facMjWT0080vBHq7uKQ8QjHk/zi7M235IJj7S6s3HOuHiX/5AH
MT+0fHG17nKKMyb8cY0XmfL7V12n+tHn4ZIJh051ugmfTOtWt7rFJ5PPydR3
0+o0+udvcck0V7nVdTx2/9X6b+wHbjij+aVMeEXdif7703xl8YirOEN8Mflo
6Z+SY3mBCQc1HJPj5kPXfOl8H/O6/FDTh/r4hjv8fPk97Evxd2+/Q5sX3OYd
tLl71u30BXQ+w4Q3Gh+SVXwujp/qLW1tvovikOZn1PpiJl/6pmPL8cT/Nh3q
xItMulPj9ykOyTr5Utz1H/ncesxXwyN7/uMp/NFw4/Z/fQqHtHrNpA+ZfGEb
3vD+HE94o/X9qled9CLuZ9qcnqn/N3ij9fnKg9jf6+2uPq7VexrusN8geURc
0Pou7aPxcW3/rH6g1YOaj5t5ueGJVlfIKq/TcI66i+bX3upU4gFxjXjLY/uU
mq+7/MX0/fzd1HPYryLfMemQ5OHaPGDrLTmPJ58Pcb1r03E03Zd8prfb77Ll
O1p9pdVZtj5nOd7yHVt/s6luP/EepzzI79epf/Quzvhq+OK5+suEP6bjCY9c
xRlTH42PbzxHbm/4Y/KlP63P2E8z9fM2ferkY29cOa3TyPvKczSdSMMV6vzt
75Uv2eKO7Ef1T2t9Ms4VND+JI6a+iOY3G1wizml8gJ9THsV9uu/T/GobX2D9
ZJqbOPlqiAP83M3H1Mc3fCYeE1c2vWjr6z7tU1G3JM5wbTzGhDOmesvEY3gd
y2823NHm68lnTP20TZ9vPGxxdasrFWc0vLHNI1seY8trtDx4D2+cPu7dvMbr
6ylXeYy7vMZ0HjY+buq/bbc3XuMujzEdT3yH+vU2H8e+XXHF1P/S5qXbtyuu
mPgM9aatnqJPmTy5+cY6TB4n3mj7Yt+n4Qv39bndPNj8q9r95tfGh1ifyaoO
Qj1u4y0mvkf84/du81waH+Lr51hewvpHwwsNP7R10mdMvhtbHUbTiU7Hja+0
PtL8TiedhnGp6TIanjidLzP5S57yFnf5iru6gav7913+fjeO2OOJ6fe4Wydp
OOMqj2EdpJ2P8hLqRcUL27pJ63fxOpt0ofKP27kMjc9oeo2GIyZf91YvETc0
XkMfEHmNpstI/JfXbv6nbX+afNP8ypzrZ9+C8z7EE/pJtXzbdK7We8QRvt40
P1a+oelOG26wLuT38PNueR/xgqv+n/4/+T88H5peU75B/NrmzImbm24i+KFd
Tw0X+DjrHPIR6iua7tO6R6uDtLpH41Gbn9GEH1rc3eKHCUec6iuexhHP8hPf
pf6xxRvndY+7uGKLNxq+yLHnWTtPt/2xk//Mth7ScLz7gKlvfeIx7FcJv2l/
/VQHmfw7xBvBEVOdZKqftH7btn/MfrPll+Y7pk7P+8UN9iOY55p+UF9K+y7b
/Js236/hFfUeydfqFeQdxB/yD/IC0/eceJ4Jh/l9fX3/14l3aP1Q4ohWzxAv
2x/S+IgJD1hnPO0naf6h6q6mfpHT+SryD62eMfERW1whjrjLT2zzzl1e4jW4
4rvijPv6zo9v/xUvXMUb7XUan+F52fqxJ/6i8RZX+03EGVN9pF33xo22Js4k
7lgfsQ7b4l/DGZNvWJ5nPWXy95DPcF/Z/Dyav1jb37b7mz/qxH9M++22WtfZ
5m3ngqhnaL4X6ihbfWLy2fR3aHWnhttafcrf1TpY/r/muy+e8DwST1jfcD5b
6/sQj9uPNflfyB+2vhDvb7qJHMtTTHjCeNT2RfahbnFGwxUTvhBXGN8nPcVd
nPH7+7fzyfZ1gK+BB16FL/Z441lct8cVni/tPJvO01O/863+ouGJVidp+4Pm
B9b2H61e0vpKmi+6cdL6SG53nfCHcflUd9H4jObP2I6tr7S+Q3GGOr9W12/5
sOkE2zzfNh8st1ufUA8a/NB8M53zLg8jfsjnanyQc8ua/6s4yse1OfLqG6bz
pK3Nn9/6h+d74w8m/xnvtz/L213VRU19pU0nscULrb4x8RKfpZvY4oi7+OFz
eYnvsj6HE679zvfrHI132OopruKGVvdoc1MaPzHppMUXk79e02m6T2l4Yarv
Wh82Hub+5ovc5tW2OL7tT22+oz7O+vnUTzL5LLV9svhA/4NpTt1U/0ieb/2c
jVdo80kn/+ysjd/J4/0+4jm/f+vbbHoH87u8gcc+r/nGTX2gEy/Qbp/wwBYn
yCM+hROyGp8mPcSEE672aXjccMFpXWPCEa+uZ/zn46Z8+25c8Hz9ouGHj28/
xwfT+TKtE569ihOymv/bdTf5ZOX2hhMmnebUJ2ocOuVRW1224QfxRuMbWj9I
ywuNl2h4YvI3bzqLrK2OMen/zXcNJ8hnuF9PHm7zWKb+iTxvmp/R5tk1XNPw
gHnf37n5N7ia/5uflPig8QXtPLO+Jl/W8n67Xry95X/rC7lOGy6YeMVtX4V1
h8YfTHHQePkULtj2613VU17N/x/f/13y//X+zWv8gThp5nuu8gSeR1veYOIP
Gj8gDmj1hYYHtnWIxivIF7Q5q9YVrC80n8wW56Y42HCB8VX+wPjc8IF99+IF
43vWqT9U/6FWV2h5fNLftTpHe9/TekPzdbQusPVBaPX/7fec5mK0upJrwwFT
fcrzYdI5TnrEnNfybFO9oPU7medbn+Xkbz3N+Zr2IVmNZ03HeMoHtHxvvJ74
gS0vMOX9hgN2ef671wtOP+fr+yYmfLDti5h4gi1+mPDAdD2c6g/k5Vr+b2vz
nd3qDqa+THFCq3e2x/u8xg9s9QlN79AeL24QT7R+z+Svxo83ncI0n6HpJFp/
qa/v/j3H05xM6xoND2x1Gc2X0ec33Wnb17f/yce3fN76bXx84wGc09XqZaf8
v9dH8n/zkbVvuvkt3MUDxp/mUzPt/6/yAKd4YIr/V/spt/zAn4UHzvP/FjdN
v+823094cFobDt3md+tgHrd6wHR9bff9Lc/bv9D8Fra+kY1/NE41HtN9UNMd
uP83r3u/+zLzffPfc35Yqw+0/Nb2wVM+b/qFiQdoc9tbnWDqE9zOi2qff/L5
tA7f8nnLq61vZdvX0vj8ae7VpAPY8vZeFy2Pt7y+rfO3/gLrg/o7tzwuj/mU
LnDa32/39Vt+v+X5a/vO7b7/Vfvs99f3r+bz0zw+5fXtPr3x+q0u1epZ7fa2
f5/8oqd+Atet7q/t36e8P+X/LY/f5nq2voSWv0/3+1mn+RdTvdnn5XFNX2Z+
a3O8zO+tHj7VCab5pOofW99d481bv3/bF7e87P/r/zfhs1bPafm89Q2av9u+
3Hzd/A3Nz83vcKrHb/fhLX9f3Y9P+fu0P/CUn9/q9abHX83ff9Z+/Hod/mM8
c77/fop/97jtw3P7tv40+QxMa8vj7bptPgIT397mvbT83vT++hq1/Xfbv7Q6
5ZT3m3+L/QHG6a1Or+m/Wl23ve5UT26fY7u/n+YQtT6GaT6Gn2vqfzMvus8W
T23nPHv/pNtsflieB+288byb9tFTf93WD6hdx7numx9Qjrd9+1mn+PWqPryW
z7dx/uP4f94n1vLU98zX2895P49Pef00n0/79Jbf27677b+n837af0/6+5bP
G5/eru/mP2iebsft9rb/Ns61fUvT56lDmtbJf63t38xD5q+Wz+Tf5YWn+mzT
b23nYrpfbzhhOm7fq32uSYd4dz5h41GmNa8z4YW2r296OM/HaV/d1ilvT759
k07GelzTwRtHWv42zk376tN997Q+xZdP+fvqfvR75fH7vPmWP2+/+5S3fdy0
H298zSl/vs3f07580s1P+dv9+OTzN/kNT3MNpnjV9iVTnbyt0zyEiW+f9G8t
P235V/N223/K87Z6rLr8xk9P+97W/90+/1Qvbo93X7vVj5uv2//acJl5ezsf
KO8znW/2oTWeu+XnKV9v/TBOffynuNL0ak/x4hMf3u5/Kk/v8syflq+3/Xbn
/Wo7vmLmz6d99+k+u61X9eltv/1Z++ztHMPW3+7+vPnoyae3PD3l7/b4tv9u
cwam/dhUd228ap4nDmj7TPNH2w+249N6cfN7bXX+6f3b+7XvJ/88+dY3Xrrh
re3+u83L2erH2vk98d5TXjYfm5fdNze+e8uD3/W1nfjHU/675e/TvLzdTz+7
r/7q+fp1++/pd9zm86vr73UL5z417run9VV18W0+3+7HW5/6tj+t5fspLrb4
6ePN+1N/W/MHMx9MPG/jWVtfW/P7PfXzneYKTP107fb2Ofz+jWcwv7c6tL/X
1J/d8Nm0327z8Vrebjqzqa/7lPdu/R+N/275uu2nT33ojR9X69otHk785bR/
Os3XU/6+mod2ee3defbz+PIpT5/hp/N8PZ03pzx505tv16nu3fL0dk6O9ydv
T/n7VOfmsfGuxcNtnGx5vPHtLe63PGn+2tZTzVPTfnLK99s5rY1fbrdPPr4T
jtjqubbz26b+QY/tz2pr67duc+O2++qpfjTpyMzT03665ee7OrOmEzeutfzc
9jktbp7y36d5+dn99Lvz56v58tN8/c/jTvnxU/580qU1fLfdb5u/29rw6tQf
vuXP2z679YVv9+HGm5bH5dXb6v6k9ZNt+9DavrvN6008n/Je26e1dfL3av4d
U15t+en0c0x5tdUPWh5vuKJ9nmmO+6RjmHxQGh6YeJp2nm33z6f676xepy1v
b3m2iQef+romfrzl7dw+8d13efBreeEnbz+T35+rf2/z+Wke3+LGbb7e5vG7
+Xvix1qdbPJzMW8bfyZdetOfT/XBKb9vefS2z2r7t8lP0zzScMHkW7v1r2+v
N+GElj8n/5tpv77VjTXd9ena9uXT/rnx3I3fVmfZ9tGN3576qtv1N/HdXuet
L6Xl8dM8PeXrFg+3++bpeBv/d/nhJx9fy9ev16u9mjff7ru365S3t3l8i7sn
fq3FEfNzW5tP21Z/nnW7X298ZovXzc9q0rVNOuLWvzbxv43PbfXXtt+cfEDa
92q4odX73Ufn9sYD+Hn9X1p+bj7+Pq/l46lPuuHDhjenevTEg5uvt9en+XbK
w6frlg83X2958VfpyKb8fC1ft33lu/Pn18nXV/+Hq/x4y8un++ppbc+7q0+b
9tnT/dP+27jS8nHTm2/7xabnGzebXn3rzzbNe532ZZPOfevb3vLzNOdiwgUT
r9x856Y6wMTvt/3tlD8bvtrqGbb89YQXp/rzqS/41G+l71i7rrf5+Gp9uuXf
Fse2up+refj3cXvuD762vjsffp398fR7bv+Pp/bN2zzc8uuUrz3/23rKc2/1
Z9t981S3Nh9PebXVrae69nR/i8enerQpTzQft7Z/m+qqW5524m+nPrhpH97q
xhNv0L5nwy+tPtH2rz6v5dGWZ9vjT/e7rl4HybNeJ9P+t+XX7f0tz27zrvl3
G8+2+bjtg7Z599r+9zT//un5+O7vdD3fbvPsdv97NR9v86z59hT3Tnl66qMU
r7f6snm36V+mfXGbN7bVmU35dorzU//MVn8+7ee2+7r2uNw+6ddzvPV/m/y3
Wh9SO55+x+l40klPfYFTv0E7f1ueNd9Ouq2rfLLX4bYvc6vfanm25c3T1bh6
Fp9P+5+2efTfsv+9vs/dHj+9f53Ot21enfKs14PXy+n11fDtqc5LvN7i0rQm
vrXnTbdvddxbH1Mf3+J5i/sTn326j/b57XWn93OfuZ3HuPVpm/apWx/qSde3
1S1v86V12ClvenvTR2zrtqf4d9JRneqrcjztWycd1bRezZuv5Ym/C8/83P7z
1Xny9HjL+7bzdjrfp37k9ritnqr1IbZ96JYHNs5M8ag9z33pKb881XWneD3N
69r2T233vdv9cNuHTvXPiadu/HGre17VF233j1M+bLxry4Me+/xWL52ul2m/
6XU44dm7eXHaZ07xre0vJx73WX726f3kV8uHr8uXW152myfNl9PxxOdO+0jX
6byfro/pupr0D+36b/HD9bQP+DSebePntu41za/d+n+1PLjVr27nckyP2/LH
0zrxyD5+q+851eFO+8PJn2LaDzbcd3WfeLpvnHSI23y4zY8tX2751lMedtrP
vCY/bp/3VfPnc/lwypNX8+NpHt3ytO18bef59rrY3t+u0+0+8lXrqY+Gt2+f
N8Xfad857SuTP3xcy5OnPOQ0x2rK022d6oenPGjDH+1/O/1/t/MJpry5Pc+3
fotTXmz58Gr+m/LilB+3eXHKh9t9y934/3H++mp86d195NfR95zmwW1ePK0/
en1M10E73u4fp7w46W8bvp7Wad85xcdtXj2tm57OYZx4021e2fblNr3opEfa
7kOnzzfx36e4Zdq3eX41vn86n3K7+azxqZNPUsuHLe/leItnJ55pwuGtnrhd
J/70ND4/mwe/a158vq447RPv/u/bfHia/7Z5cboupjw64dLTfhRv3/q7tLy5
zX+Tr/K0P5jqmY03Pd23TfrMSee77Y+d9q8tL079OhNv2X7v7e1Tftrironn
n/Jme1zLe0/rZNq+reW30/x3d793tq+YdR8f56mr+8B357PTz3P+O2z3dTu8
cp73pn3fVZ3N3bXlu6keMfE4W71qy4/TvnKL00/rl9t9gPuVxueZH9rtW73k
1Mfi60/zCqfXbXU78/6U39r9rm3fNuWXU9x0NZ9t89tpvW/L20z5K3Fkun+q
653W9+7mubP1av74avnu/fu+3x+f/8/tPGp5cpv3Xr3murqaB7d8TdsXbvPj
Ng9OeW97/1b3OvkSTbqPrX7H9216oCkf+bhtfrqqy9zyyk/ln6nPb+uDMZ2H
277gptuersN2vW75yru85bvy3sePP90H/Sn57/Pqe3d5zynPtXw3Hbfzvz3e
66jlN6+7tm7rgE/xolPemx4/xb22H5zqguaDKb/5eF9nyrP5HE3n2D7XVu8x
5aX2OSe8cFoHPs03V/1jfN+Jj7yrOznNX9t6yJaXbHHsNG/dy2un+ej0eV8l
r139/lsc8Ovzpv/p49ufz2en65Tvtvdv89jVPDf1L03xaYpXU9zy/tN8tu2z
aPlt0iVOeafllbZe1Ste1eFOupHT/djdvDbhmdPz6Ok8Nl2f27x1uj9rcewu
f3W6T/s4zn+XetvdPLfNe8/zlE/t5zz/Wl6bbv/svDddr9v8tq1XGEcm/Nz2
d1PenOLeFK9P897E502vu80r276yq3nnav5qt7f90un/ehUfTefftr42XSfb
67Fd59u6fstjU3571Xovj/2pee00v53igfP8tj0vJny0zWtX93XTdXKaz7a4
07y2ra+3+NLi2jZebfd9Ld6e7ldO9fAt7rfPta03tnw95ZvtvtbnT/npaj3r
Kh7a5qO7epB2fZziz22eerp+tr1/ylu/z2N3ebh3553P5iOf05G8al+21Sld
3Z+d5rvt/szbzVNez96/zVNP4+bTfdm0rzjdN13l1U51Ei1/bHUVV+uWp99v
6ydyqpvf7v+v+ilczUvt+mz5aJufzvLLq/UeLf5u89JXz1fX615P5aHT/DSd
P9t9/jbfbG8/zTvb/dJ23caJrR7sav6Z/MlaXtrue6bXmx5nPJ/ygzxqi/vT
7+Dvtd0HnfJxp/qItn9px6c6+IavWt7Z5qO79akp/7Q8czVfPZN3vno++ax9
0TYf73m8j/PT/ymP359Xd/PSdt90uj+ajrf56Wq9assHtsdveT3j6cRbbfUd
Uxw/5Sm3+eW0XnOar6c8cnWf0/LLdPv2caf7/lPeYZtvpjjxzL7ls/QT784D
r+bX2n7oPg+3/d9O88j29qv55yo/t807Xq/T9b31+Wj5Z4pDV3UWV+O3+4IW
V6fj7T5uitfb+kfbx9zdj5zWW6bzpOWNdv61dXs+X72+Xr1/Oc0f117nZx/z
bF667gt8db16/j2dd1o+ma7PiTfb8uzT89rrT887jbdTnN7eP+0Drh6fxuun
P+c2n0zxv91/+rhpP73dT3x2vtjmk4/zxVV/1qf85b/6es5TXc0DV/N9+79P
4/+r9iFtf3G3bvL0ms9xtX675b1O9yvT+92tB92tZ5/ml5YPrubrbR64uk9o
+Ga6/Wq8b49v8WAb759e/+y4f38fcDVPbPcJp+dDO7+u7kNOz+923Zxer9v7
T+OFt2/jeouLvs7d1z193unafp9TvdzdPDT9L1sdRsMbd+sF7fg07nvdTc/7
rDj+DF804efvsr4+rp/G+6d4o6vrFt9PeP9qfD9dT/PBFAfb8TZ/bN9nu4+4
Wp+d8t42z0043+ef/n/T+dRw+jbOt7h+ev6fXkevxuc//M2dz/tcnD+N46+q
E9yN76d8ztX4f8rPXo3/r+aftnWJbZw//fyn3+90X9GeN32OqzzMFqf7uNPz
fnv79nW2fO6zvPDduT7vjttP4/bt/uT1uP4uz/OqeL+N/+16vJoPttf9VXy4
jf/b/cgUN7fx/urnat/v6ueb1un9r/6Pd3mXdn18Fm66G9en+HIWr6d4993j
+/y9rv5unxXHPztOb/mZ7fXY4v72+p94/wnHTvngNK5t495pPnpqvfs+p7h5
u7bz77PwyhSPt3H4Xny9G4/v8hOfH1+vru33fjWO3u6bWnyd4vBd3Nyuy7uP
uxunr8Yh4+cWb273CVfj5XbfsY2jp7/7KV9xlU9+V7x95nq8i2e/O77dxufr
uPbj25//P1+Fk0/j7zY+b/Huq+L0Kc6ccPApvj6Nw1e/x93f46n4+lQdr8XF
dnwaV0/fZ4qv9/DvFJfeHSffhY/nOH36v9zNo18l7m5f9+p1fvq46X3u4uEp
Lht3r8a9Kd/4+tvfefs/XM2rd8+X7Xl9Gofb/Vdxz/b4Wtz9t6xX+exfn3c1
753h6Ovx/PT8nuLp9var17Fxob3PKa7exuGJ59zG8W1d89X7grv8wGfH3dP4
+PTztzjo2nqK+/5t6/T9n+OHr/6Pz55P++tjG5efrsM89bqnePQUn75q3eLU
7f95mi+3rzvF0zMcsPeVeG1cna7/bdz4WdvvOP0Pz+a/+zzCNs+fXjfb6/Ap
PHT6uCk+nu77n8Jxp/nkNO9cfd/tfuVpPPnUdfDs9ffuePPudfs73K0P3n/+
q/Y17fnTdXEaL+/G3atxdosTG7/w6u/zVF46/b1OP9+z59t5veI167vjz3dZ
t7j7Kl5/Lj5O8fJp3uj0Ot5ef0/Hhaf3/U/Fu6d5kBxvP/92X3F1f3w1zj0b
B0/xzp+2Po3fTnnb5/fDd+Pc1fP/qXh0Nz62uHZ6/914dRpP7v7OLb5Nn3cb
z7bn3d04de15p9fzu+POu+La03Hp+bjWzoPTeHUXT9zlF7ePf/e6jWOnj9t+
z6v56e73uMqfvXYfOl1P0/V+Gh/eHae+Snw8/f2f+l/7653m1af2rac45ir+
PI1Ldx9/mi/a99j+Dl91/f3nP9+HPhvntnHp34bjPgsHfr311ef9tec/76c4
fa7t404/98fx+34fx1O/27V89VX8K55+3M/6njj23Pu9Ol68Kn591nU8xY97
v+N5vHpVPjr9fZ89T3/iz58Zr66//tPX+enrbOPl3Xj69PV/9/eb4tK113ue
z78Wf35w0Xvjy9V8cPXx5/Hn6ev67nm8vQ5Pr9O773v38V/tf7mHa37Wr7Xe
3S+1uHUf17z3vH3uOr6LW66+3qu+56v3UdfWp/Lsu6/Dd3+Or/Y9nt9HXd1X
fNb19u71VfFyGz+2n+M18WN7/j51nv8p1/1nf9+7cX8bL+7jl3vn4fd5/T8r
Hm7x8c/671zfFR+m8/D7xIs/a333+fizvvf6n66Tp67T6f23r/9Vr+vt7/6q
PH71dX7iwJ+1nl4v2/hw93Ocnr9Pv+/d63n7+U/j2NXP//Tv9rNeO8+eOi8/
Kw581vNPv/fTv89T+ftqfPi5Hr/Wevc8etfneRpXf9b3+jn//+z16fPp9Hr4
Od9+1ifOp6df9+p5vH380/uAn+vmZ/3K68/5+bN+p/Phq3++7/55f9af//dn
/Vl/1p/1Z/1Zf9an1/8Bi8iU+A==
     "]}], {{0, 0}, {410, 410}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellLabel->
  "Out[243]=",ExpressionUUID->"e1eba5c8-e8f8-4d5b-a653-08c99eb00052"]
}, Open  ]],

Cell["Pretty cool, right?", "Text",ExpressionUUID->"059b4980-a54f-47a3-aeef-24ad94075258"],

Cell["\<\
We\[CloseCurlyQuote]ve reached the end of decimating an image. Up next is \
fitting the image data to a function. \
\>", "Text",ExpressionUUID->"6c25b24a-8f2b-4f28-9363-68e8e47d9382"],

Cell[BoxData[
 RowBox[{"CellPrint", "@", 
  RowBox[{"Cell", "[", 
   RowBox[{"\"\<Fitting An Image\>\"", ",", "\"\<Chapter\>\"", 
    RowBox[{"(*", 
     RowBox[{"format", " ", "style", " ", "option"}], "*)"}], ",", 
    RowBox[{"CellTags", "\[Rule]", 
     RowBox[{"{", "\"\<fitim\>\"", "}"}]}]}], "]"}]}]], "Input",
 CellOpen->False,
 CellLabel->
  "In[244]:=",ExpressionUUID->"7300c21d-98b8-4239-8480-e57961de0e1f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fitting An Image", "Chapter",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellTags->"fitim",ExpressionUUID->"8b9b3540-ee79-43b4-a52d-59210da72198"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Home:  \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Table of Contents\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<toc\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Before:\>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Code Used to Decimate\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<decicode\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<After: \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Working With Multiple Images\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<work1\>\""}], 
      "}"}]}], "]"}]}], "]"}]}], "Input",
 CellOpen->False,
 CellLabel->
  "In[245]:=",ExpressionUUID->"b156f7e6-f68c-46cc-a515-f45841d84a11"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Home:  \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Table of Contents\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["5z372_shm", 3, 1]], 44], "toc"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Home:  ", 
   Hyperlink["Table of Contents", {
     NotebookObject[
      FrontEndObject[
       LinkObject["5z372_shm", 3, 1]], 44], "toc"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[245]:=",ExpressionUUID->"160a99bc-8d5e-4057-8d70-c32f23f52340"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Before:\"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Code Used to Decimate\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["5z372_shm", 3, 1]], 44], "decicode"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Before:", 
   Hyperlink["Code Used to Decimate", {
     NotebookObject[
      FrontEndObject[
       LinkObject["5z372_shm", 3, 1]], 44], "decicode"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[245]:=",ExpressionUUID->"f617d107-2855-43e0-b739-143bead9cbdb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"After: \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Working With Multiple Images\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["5z372_shm", 3, 1]], 44], "work1"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["After: ", 
   Hyperlink["Working With Multiple Images", {
     NotebookObject[
      FrontEndObject[
       LinkObject["5z372_shm", 3, 1]], 44], "work1"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[245]:=",ExpressionUUID->"db59c106-4214-4d93-966c-f85b59beee86"]
}, Open  ]]
}, Open  ]],

Cell["\<\
FindingSpotSize is responsible for fitting decimated image data to a 3D \
gaussian. It does this in three steps. It takes in image data and outputs a \
fitted spot size. The first step is using TotallyDecimate to decimate the \
image. The second step is using GaussianBeamfit to fit the image.\
\>", "Text",ExpressionUUID->"f57c07b3-efb8-4574-9882-32a3baee9316"],

Cell["\<\
GaussianBeamFit first uses SpotSizeGuesser to have good initial conditions. \
It then uses NonlinearModelFit to perform the fit calculations. \
GaussianBeamFit then outputs a fitted function. Arguments are supplied to \
NonlinearModelFit as follows:\
\>", "Text",ExpressionUUID->"7a1569b1-b699-40b5-ad88-1636306f9a4e"],

Cell["\<\
NonlinearModelFit[image data, {equation to fit image to}, {guesses for each \
parameter as a list of lists},{list of independent variables in order as they \
appear in image data so: height,width}]\
\>", "Program",ExpressionUUID->"61ef7a54-b815-44f2-9217-0c845f01d6c2"],

Cell["\<\
The third step is converting from pixel units to real world units \
(millimeters). 

In the end we get values for the spot size in the height and width directions \
and their respective standard errors. \
\>", "Text",ExpressionUUID->"3b0c92ae-4314-4823-a9f2-24b7d3ea7c19"],

Cell["\<\
So  we\[CloseCurlyQuote]ve done everything we need to do to one single image. \
Now we need to focus on working with multiple images, and how we use multiple \
images to determine the minimum waist and its position. \
\>", "Text",ExpressionUUID->"a012d824-c368-475b-b41b-97bf0aa7fae1"],

Cell[BoxData[
 RowBox[{"CellPrint", "@", 
  RowBox[{"Cell", "[", 
   RowBox[{"\"\<Working with Multiple Images\>\"", ",", "\"\<Chapter\>\"", 
    RowBox[{"(*", 
     RowBox[{"format", " ", "style", " ", "option"}], "*)"}], ",", 
    RowBox[{"CellTags", "\[Rule]", 
     RowBox[{"{", "\"\<work1\>\"", "}"}]}]}], "]"}]}]], "Input",
 CellOpen->False,
 CellLabel->
  "In[248]:=",ExpressionUUID->"fb1c8dba-fc14-4010-b345-778ccff4678c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Working with Multiple Images", "Chapter",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellTags->"work1",ExpressionUUID->"428b2d50-6d03-4c13-851d-5aea9613312f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Home:  \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Table of Contents\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<toc\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Before:\>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Fitting An Image\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<fitim\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<After: \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<\>\""}], "}"}]}], 
    "]"}]}], "]"}]}], "Input",
 CellOpen->False,
 CellLabel->
  "In[249]:=",ExpressionUUID->"58e243ff-7979-4558-9528-dbb227bd80a2"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Home:  \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Table of Contents\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["5z372_shm", 3, 1]], 44], "toc"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Home:  ", 
   Hyperlink["Table of Contents", {
     NotebookObject[
      FrontEndObject[
       LinkObject["5z372_shm", 3, 1]], 44], "toc"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[249]:=",ExpressionUUID->"b45bab38-244e-48d9-961d-f4cee2400535"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Before:\"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Fitting An Image\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["5z372_shm", 3, 1]], 44], "fitim"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Before:", 
   Hyperlink["Fitting An Image", {
     NotebookObject[
      FrontEndObject[
       LinkObject["5z372_shm", 3, 1]], 44], "fitim"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[249]:=",ExpressionUUID->"8969e096-5412-4a76-9c10-ac1359c45ee1"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"After: \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["5z372_shm", 3, 1]], 44], ""},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["After: ", 
   Hyperlink["", {
     NotebookObject[
      FrontEndObject[
       LinkObject["5z372_shm", 3, 1]], 44], ""}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[249]:=",ExpressionUUID->"965ee04b-0bdf-40fa-8835-be0ab64f04a2"]
}, Open  ]]
}, Open  ]],

Cell["\<\
Let\[CloseCurlyQuote]s now talk about how folders need to be organized to \
work with my program (and also Roshan\[CloseCurlyQuote]s MATLAB program). We \
decided to use an organizational method that works with both programs. \
\>", "Text",ExpressionUUID->"338108f6-1751-4350-a91d-03523be7d85d"],

Cell["\<\
There is a folder located in the documentation folder titled: test folder. 

Open it. \
\>", "Text",ExpressionUUID->"d9b7f641-7264-48a0-ad04-682572cbc7aa"],

Cell["\<\
Inside this folder is an acceptable way to organize the data. Images are \
numbered. There is also a text file. Open the text file titled \
\[OpenCurlyDoubleQuote]zpos.txt\[CloseCurlyDoubleQuote] now. I would see \
Roshan\[CloseCurlyQuote]s documentation on acceptable naming conventions. If \
I recall correctly, my implementation is more flexible than his, so default \
to meeting his programs needs. (This is not Roshan\[CloseCurlyQuote]s fault; \
Mathematica includes easily implementable parsing functions whereas MATLAB \
does not...at least I think that is the case). 

In the text file: There are two columns. The left column is the image number \
that the position is of. The right column is the position. If I recall \
correctly, only record measurements in millimeters (mainly due to that being \
what the plots are formatted for). 

There is also a Mathematica notebook titled Analysis Template. Open that, but \
put it aside for the moment. \
\>", "Text",ExpressionUUID->"89136ede-18ec-4cda-bde5-582f6108823e"],

Cell["\<\
So now I\[CloseCurlyQuote]m going to make a giant leap in topic to the \
FindingMinimumwithTable function. Inside this function a lot of magic \
happens. Let\[CloseCurlyQuote]s take a look at how to use this function. \
\>", "Text",ExpressionUUID->"a746a3d5-86e8-4053-9ebf-0acc413f1f91"],

Cell["FindBeamMinimumwT[path to folder, wavelength of light in mm]", "Program",ExpressionUUID->"461aa75d-0312-4359-9826-29542723b95b"],

Cell["\<\
The function returns three things in a list in this order: the waist \
(smallest spot size) and position for height, the waist and position for \
width, and a table of values. \
\>", "Text",ExpressionUUID->"a467a842-044b-4abf-bf27-ed63dc241d9d"],

Cell["\<\
What I haven\[CloseCurlyQuote]t told you yet is that an entirely different \
fitting function is being done. See what happens is: 

Each image gets fitted to determine its spot size. 
The data from each is collected and put into a new fitting equation. 
This fitting equation determines the waist and waist position.\
\>", "Text",ExpressionUUID->"37053555-10f8-475a-97ee-9f08497654fc"],

Cell["\<\
Let\[CloseCurlyQuote]s now head on over to Analysis Template notebook to see \
the function in action. Go ahead and run the whole notebook. It\
\[CloseCurlyQuote]ll take it a few minutes to do the analysis of the images \
in the test folder. Grab a snack while you wait. A progress bar appears to \
show you how many images have already been analyzed. Once you have done all \
of that come back here. \
\>", "Text",ExpressionUUID->"17947d82-a42f-4800-ba39-501f50340cad"],

Cell[BoxData[
 RowBox[{"CellPrint", "@", 
  RowBox[{"Cell", "[", 
   RowBox[{"\"\<The End...?\>\"", ",", "\"\<Chapter\>\"", 
    RowBox[{"(*", 
     RowBox[{"format", " ", "style", " ", "option"}], "*)"}], ",", 
    RowBox[{"CellTags", "\[Rule]", 
     RowBox[{"{", "\"\<ending\>\"", "}"}]}]}], "]"}]}]], "Input",
 CellOpen->False,
 CellLabel->
  "In[252]:=",ExpressionUUID->"cc00352c-463a-4322-bc0b-c7d2ec1e7a3c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["The End...?", "Chapter",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellTags->"ending",ExpressionUUID->"6af8ac18-9fd9-4c77-b428-e79356434469"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Home:  \>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Table of Contents\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<toc\>\""}], 
      "}"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{"\"\<Before:\>\"", ",", 
   RowBox[{"Hyperlink", "[", 
    RowBox[{"\"\<Working with Multiple Images\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\<work1\>\""}], 
      "}"}]}], "]"}]}], "]"}]}], "Input",
 CellOpen->False,
 CellLabel->
  "In[253]:=",ExpressionUUID->"a0c1f419-17d5-44ab-8203-eaeeb30c0472"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Home:  \"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Table of Contents\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["5z372_shm", 3, 1]], 44], "toc"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Home:  ", 
   Hyperlink["Table of Contents", {
     NotebookObject[
      FrontEndObject[
       LinkObject["5z372_shm", 3, 1]], 44], "toc"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[253]:=",ExpressionUUID->"f704bcda-9ac8-4ecb-ba8d-e4c0f9192c8a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Before:\"\>", "\[InvisibleSpace]", 
   TemplateBox[{"\"Working with Multiple Images\"",{
      NotebookObject[
       FrontEndObject[
        LinkObject["5z372_shm", 3, 1]], 44], "work1"},ButtonData},
    "HyperlinkDefault"]}],
  SequenceForm["Before:", 
   Hyperlink["Working with Multiple Images", {
     NotebookObject[
      FrontEndObject[
       LinkObject["5z372_shm", 3, 1]], 44], "work1"}]],
  Editable->False]], "Print",
 CellLabel->
  "During evaluation of \
In[253]:=",ExpressionUUID->"96228931-eef9-4fd6-ae1f-087ebe015ebe"]
}, Open  ]]
}, Open  ]],

Cell["\<\
So we\[CloseCurlyQuote]ve come to the end my friend. This documentation is \
not perfect but as H.G. Wells once said: \
\>", "Text",ExpressionUUID->"187d0c9b-27f4-4cd3-ae7c-203a26017783"],

Cell["\<\
\[OpenCurlyDoubleQuote]Perfection is the mere repudiation of that ineluctable \
marginal inexactitude which is the mysterious inmost quality of Being.\
\[CloseCurlyDoubleQuote] \
\>", "Text",ExpressionUUID->"bc497686-46d7-4930-aa26-6eb5960005bd"],

Cell["With that I bid you farewell. ", "Text",ExpressionUUID->"3d9e356c-114a-4fe6-a498-67f24a012084"],

Cell["\<\
There is still a lot that needs to be done. So why are you still reading this?\
\>", "Text",ExpressionUUID->"80995685-a225-4009-b657-094d1483bdee"],

Cell["Also, \[OpenCurlyDoubleQuote]Do... or do not, there is no try.\
\[CloseCurlyDoubleQuote] - Yoda", "Text",ExpressionUUID->"2b45cab9-dce5-4190-\
9b04-c7813feb6cd8"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440, 770},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
SpellingDictionaries->{"CorrectWords"->{
 "maximumintensity", "widthcenter", "heightcenter", "wspotsize", "hspotsize", 
  "backgroundintensity"}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Notebook"], Background -> GrayLevel[0.99]], 
   Cell[
    StyleData["Input"], Background -> RGBColor[1, 1, 0.85]], 
   Cell[
    StyleData["Output"], Background -> RGBColor[0.88, 1, 0.88]], 
   Cell[
    StyleData["Text"], Background -> RGBColor[0.94, 0.91, 0.88]], 
   Cell[
    StyleData["Chapter"], Background -> GrayLevel[0.9]]}, Visible -> False, 
  FrontEndVersion -> "12.0 for Mac OS X x86 (64-bit) (April 8, 2019)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "toc"->{
  Cell[3714, 104, 157, 3, 85, "Chapter",ExpressionUUID->"f5d199af-8ad5-43c5-96d1-908941c86a59",
   CellTags->"toc"]},
 "intro"->{
  Cell[10913, 302, 154, 3, 85, "Chapter",ExpressionUUID->"dbdb8db6-923e-4aaf-a43b-7973e5abb20f",
   CellTags->"intro"]},
 "links"->{
  Cell[17311, 453, 168, 3, 51, "Text",ExpressionUUID->"de8484a6-f6c8-4b36-b913-10b836142d7a",
   CellTags->"links"]},
 "intro2"->{
  Cell[28402, 740, 184, 3, 85, "Chapter",ExpressionUUID->"30a89eab-7d48-44fe-a170-d9fa680a7f24",
   CellTags->"intro2"]},
 "intro3"->{
  Cell[39439, 1005, 183, 3, 85, "Chapter",ExpressionUUID->"f19034c1-a5ab-4023-b113-d6ae69ad64da",
   CellTags->"intro3"]},
 "camera"->{
  Cell[52017, 1353, 162, 3, 85, "Chapter",ExpressionUUID->"2ea7d7fe-f123-49f0-a4a6-18738e23fdc7",
   CellTags->"camera"]},
 "deci"->{
  Cell[60667, 1598, 161, 3, 85, "Chapter",ExpressionUUID->"a5b45c8e-329a-4bee-abe9-073eb097d5eb",
   CellTags->"deci"]},
 "mod"->{
  Cell[79491, 2078, 157, 3, 85, "Chapter",ExpressionUUID->"ece04f85-ed0d-4580-ba4b-888a33113a7f",
   CellTags->"mod"]},
 "decicode"->{
  Cell[113281, 2960, 166, 3, 85, "Chapter",ExpressionUUID->"01e42782-3818-4381-b8de-4c9076698240",
   CellTags->"decicode"]},
 "fitim"->{
  Cell[1136650, 25965, 158, 3, 85, "Chapter",ExpressionUUID->"8b9b3540-ee79-43b4-a52d-59210da72198",
   CellTags->"fitim"]},
 "work1"->{
  Cell[1141665, 26108, 170, 3, 85, "Chapter",ExpressionUUID->"428b2d50-6d03-4c13-851d-5aea9613312f",
   CellTags->"work1"]},
 "ending"->{
  Cell[1148068, 26280, 154, 3, 85, "Chapter",ExpressionUUID->"6af8ac18-9fd9-4c77-b428-e79356434469",
   CellTags->"ending"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"toc", 1152065, 26398},
 {"intro", 1152195, 26401},
 {"links", 1152328, 26404},
 {"intro2", 1152459, 26407},
 {"intro3", 1152594, 26410},
 {"camera", 1152730, 26413},
 {"deci", 1152864, 26416},
 {"mod", 1152995, 26419},
 {"decicode", 1153130, 26422},
 {"fitim", 1153268, 26425},
 {"work1", 1153405, 26428},
 {"ending", 1153543, 26431}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 181, 3, 98, "Title",ExpressionUUID->"7e3262c5-9f7f-4b44-a470-af60231a8f8d"],
Cell[764, 27, 177, 4, 19, "Input",ExpressionUUID->"8d2f2eb8-9256-4415-9c6b-a431d4085b29",
 CellOpen->False],
Cell[944, 33, 557, 10, 80, "Text",ExpressionUUID->"e1b469e4-6436-41c7-a4d0-253e3fa660fa"],
Cell[1504, 45, 1765, 43, 19, "Input",ExpressionUUID->"29efaa39-b990-4be4-ab45-17160ca215a7",
 CellOpen->False],
Cell[3272, 90, 417, 10, 19, "Input",ExpressionUUID->"9bd065bc-c410-410e-9a91-c2c5a7ce329c",
 CellOpen->False],
Cell[CellGroupData[{
Cell[3714, 104, 157, 3, 85, "Chapter",ExpressionUUID->"f5d199af-8ad5-43c5-96d1-908941c86a59",
 CellTags->"toc"],
Cell[3874, 109, 288, 4, 51, "Text",ExpressionUUID->"81b3aa75-5e48-4a6d-ae3a-944eb0e22b37"],
Cell[CellGroupData[{
Cell[4187, 117, 3410, 82, 19, "Input",ExpressionUUID->"473e2580-5be6-4a37-bf8a-e2f5df76988e",
 CellOpen->False],
Cell[7600, 201, 2847, 83, 305, "Output",ExpressionUUID->"9fad301d-16a9-4c7a-9002-b68396e0adc1"]
}, Open  ]],
Cell[10462, 287, 414, 10, 19, "Input",ExpressionUUID->"57eb3855-8ab7-43cb-9e80-3c10aabbd1eb",
 CellOpen->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[10913, 302, 154, 3, 85, "Chapter",ExpressionUUID->"dbdb8db6-923e-4aaf-a43b-7973e5abb20f",
 CellTags->"intro"],
Cell[CellGroupData[{
Cell[11092, 309, 701, 19, 19, "Input",ExpressionUUID->"f170d4db-2f3f-469f-af04-8ecbf1c75967",
 CellOpen->False],
Cell[CellGroupData[{
Cell[11818, 332, 559, 16, 26, "Print",ExpressionUUID->"ea6f74fd-56ad-412c-a8d0-dffda5563740"],
Cell[12380, 350, 569, 16, 26, "Print",ExpressionUUID->"19ddb79f-a70e-42a1-a1db-88ea217306b7"]
}, Open  ]]
}, Open  ]],
Cell[12976, 370, 2698, 39, 419, "Text",ExpressionUUID->"367d294c-445f-49ae-8637-d6c30262599b"],
Cell[15677, 411, 1631, 40, 19, "Input",ExpressionUUID->"7d55376d-a580-4bdc-8e1f-b8078fedd3f0",
 CellOpen->False],
Cell[17311, 453, 168, 3, 51, "Text",ExpressionUUID->"de8484a6-f6c8-4b36-b913-10b836142d7a",
 CellTags->"links"],
Cell[17482, 458, 1120, 33, 129, "Output",ExpressionUUID->"6e61f010-ceea-4552-809b-297b4056cc2f"],
Cell[CellGroupData[{
Cell[18627, 495, 428, 11, 19, "Input",ExpressionUUID->"d7f90fec-3d60-4359-b369-4f57c062cbd0",
 CellOpen->False],
Cell[19058, 508, 625, 17, 26, "Print",ExpressionUUID->"a5407e9f-fe71-4c02-b048-447e22edfafd"]
}, Open  ]],
Cell[19698, 528, 502, 7, 74, "Text",ExpressionUUID->"c665ad7d-41f3-4ad5-95ae-bda29dfd5276"],
Cell[20203, 537, 612, 9, 120, "Text",ExpressionUUID->"3ea58f41-44c9-4f02-8a02-4fdb07726dff"],
Cell[CellGroupData[{
Cell[20840, 550, 186, 4, 46, "Input",ExpressionUUID->"ce4626d2-4cc0-4578-8e0b-cbc89356b6e2"],
Cell[21029, 556, 187, 3, 50, "Output",ExpressionUUID->"42e3f27c-bfd3-422e-9126-e1d4226cc426"]
}, Open  ]],
Cell[21231, 562, 1640, 30, 304, "Text",ExpressionUUID->"2a8a608b-c798-4562-a7c4-ebe5bf259346"],
Cell[22874, 594, 823, 13, 143, "Text",ExpressionUUID->"0cf8570c-8f60-4db5-a703-501ac880b417"],
Cell[CellGroupData[{
Cell[23722, 611, 148, 3, 46, "Input",ExpressionUUID->"330c812f-e306-4dd1-8742-1cb5a8756e3a"],
Cell[23873, 616, 187, 3, 50, "Output",ExpressionUUID->"1b3d6f9f-8b55-44be-ae3c-bdc2fe5b9aba"]
}, Open  ]],
Cell[24075, 622, 319, 5, 74, "Text",ExpressionUUID->"07bdaac6-dc5e-4eed-9ee9-d34c94b718b7"],
Cell[CellGroupData[{
Cell[24419, 631, 127, 2, 46, "Input",ExpressionUUID->"0dc598d7-f10c-48d4-a8c3-425cb74df85d"],
Cell[24549, 635, 148, 2, 50, "Output",ExpressionUUID->"d234810e-e237-4702-8f94-1c4c5c1abfa1"]
}, Open  ]],
Cell[24712, 640, 1253, 23, 304, "Text",ExpressionUUID->"cef27f20-e843-43ba-9ce0-f6483cc7cbee"],
Cell[CellGroupData[{
Cell[25990, 667, 143, 3, 46, "Input",ExpressionUUID->"95134ce1-41e6-46d4-9a3c-f717c82de983"],
Cell[26136, 672, 369, 9, 24, "Message",ExpressionUUID->"5bccf09f-33b4-409c-b365-cb82467c4ec4"],
Cell[26508, 683, 378, 9, 24, "Message",ExpressionUUID->"5bb9541d-6c40-46b3-81ff-ee0109cfc277"],
Cell[26889, 694, 389, 10, 24, "Message",ExpressionUUID->"90c8e917-00e9-4ebe-873c-2bcc196a48ae"],
Cell[27281, 706, 404, 9, 24, "Message",ExpressionUUID->"d2427018-f357-45a6-9cd3-ca18326c7f48"]
}, Open  ]],
Cell[27700, 718, 209, 3, 51, "Text",ExpressionUUID->"6ab985ff-7941-4881-88b2-d9b5fd4650c6"],
Cell[27912, 723, 453, 12, 19, "Input",ExpressionUUID->"58548d3e-a1fe-4bca-a0d4-f04a891e900f",
 CellOpen->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[28402, 740, 184, 3, 85, "Chapter",ExpressionUUID->"30a89eab-7d48-44fe-a170-d9fa680a7f24",
 CellTags->"intro2"],
Cell[CellGroupData[{
Cell[28611, 747, 995, 27, 19, "Input",ExpressionUUID->"e6fbdeb4-5034-4c59-bc5e-467d1d197f42",
 CellOpen->False],
Cell[CellGroupData[{
Cell[29631, 778, 559, 16, 26, "Print",ExpressionUUID->"4b54bfe8-2a96-420a-9082-eeb22d1f41d3"],
Cell[30193, 796, 553, 16, 26, "Print",ExpressionUUID->"538bacb2-5de4-49e9-9c8b-c31d8ab8c7f1"],
Cell[30749, 814, 569, 16, 26, "Print",ExpressionUUID->"618180b4-39d3-44d0-9e19-6570ea5532f3"]
}, Open  ]]
}, Open  ]],
Cell[31345, 834, 5403, 89, 1174, "Text",ExpressionUUID->"26a7aac9-42c0-4e85-ac46-f08b2d108bcf"],
Cell[CellGroupData[{
Cell[36773, 927, 755, 20, 19, "Input",ExpressionUUID->"21df25e2-3960-4514-9ec8-9f36dd921d01",
 CellOpen->False],
Cell[37531, 949, 1209, 31, 59, "Output",ExpressionUUID->"5fa260ed-58bb-41a1-b894-dfa096ce8104"],
Cell[38743, 982, 197, 4, 50, "Output",ExpressionUUID->"b8146ac8-97c6-479c-a665-aa933e1a02e9"]
}, Open  ]],
Cell[38955, 989, 447, 11, 19, "Input",ExpressionUUID->"79eef98c-c896-46e8-879a-c1b7e5f84d8a",
 CellOpen->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[39439, 1005, 183, 3, 85, "Chapter",ExpressionUUID->"f19034c1-a5ab-4023-b113-d6ae69ad64da",
 CellTags->"intro3"],
Cell[CellGroupData[{
Cell[39647, 1012, 1003, 27, 19, "Input",ExpressionUUID->"3b8d3c4c-ab7c-4251-984b-c4f8fae9239d",
 CellOpen->False],
Cell[CellGroupData[{
Cell[40675, 1043, 559, 16, 26, "Print",ExpressionUUID->"bce64b8c-dc17-49ef-acad-b0611d830387"],
Cell[41237, 1061, 569, 16, 26, "Print",ExpressionUUID->"6aba4f2a-1e73-4399-8942-a3a45663621e"],
Cell[41809, 1079, 569, 16, 26, "Print",ExpressionUUID->"d08e3f76-5049-45e8-aab9-2786033f9827"]
}, Open  ]]
}, Open  ]],
Cell[42405, 1099, 914, 14, 143, "Text",ExpressionUUID->"0326d5f7-9ef2-47ec-8237-b7bca7a2ca8a"],
Cell[CellGroupData[{
Cell[43344, 1117, 2269, 53, 197, "Input",ExpressionUUID->"2fb3a0a7-1400-4188-97e1-85b140b1a7c0"],
Cell[45616, 1172, 1998, 48, 59, "Output",ExpressionUUID->"9b6a162b-db76-432f-9270-d79b55ae0844"],
Cell[47617, 1222, 198, 4, 50, "Output",ExpressionUUID->"29d76e4d-dc9d-44bb-b4fc-3d9b949171d6"]
}, Open  ]],
Cell[47830, 1229, 3725, 107, 473, "Text",ExpressionUUID->"bbe5752d-4025-4e84-9c60-303875aa88ec"],
Cell[51558, 1338, 422, 10, 19, "Input",ExpressionUUID->"50cba043-94b0-4f1e-af91-3157ac83d249",
 CellOpen->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[52017, 1353, 162, 3, 85, "Chapter",ExpressionUUID->"2ea7d7fe-f123-49f0-a4a6-18738e23fdc7",
 CellTags->"camera"],
Cell[CellGroupData[{
Cell[52204, 1360, 1002, 27, 19, "Input",ExpressionUUID->"d0524762-b6bc-48bc-a839-d8573860494c",
 CellOpen->False],
Cell[CellGroupData[{
Cell[53231, 1391, 559, 16, 26, "Print",ExpressionUUID->"aa9aa95f-9efc-4776-81cf-304adff94998"],
Cell[53793, 1409, 569, 16, 26, "Print",ExpressionUUID->"7f117dd9-9aad-45b7-bad1-be7c7a1f38da"],
Cell[54365, 1427, 567, 16, 26, "Print",ExpressionUUID->"598eb711-2be8-4c29-9efb-4daad3d78b12"]
}, Open  ]]
}, Open  ]],
Cell[54959, 1447, 1409, 29, 419, "Text",ExpressionUUID->"c32e4e7a-54d4-4fde-b20e-d7112b5628a3"],
Cell[CellGroupData[{
Cell[56393, 1480, 764, 20, 19, "Input",ExpressionUUID->"799dbbd3-9306-4797-8188-439fb91f81b8",
 CellOpen->False],
Cell[57160, 1502, 1239, 32, 59, "Output",ExpressionUUID->"f6c06673-8d63-4551-9a70-e73b6f2a36a7"],
Cell[58402, 1536, 198, 4, 50, "Output",ExpressionUUID->"97f0687d-bad8-4fa5-8c62-8ce319d02fe7"]
}, Open  ]],
Cell[58615, 1543, 585, 8, 97, "Text",ExpressionUUID->"03841e15-e54a-4862-b365-e60b851b5c8d"],
Cell[CellGroupData[{
Cell[59225, 1555, 298, 8, 19, "Input",ExpressionUUID->"457e299c-d6cd-4fd1-93ba-fba8cb124ff2",
 CellOpen->False],
Cell[59526, 1565, 250, 7, 52, "Output",ExpressionUUID->"7ac037a8-7814-4972-9223-7e870a898313"]
}, Open  ]],
Cell[59791, 1575, 415, 6, 74, "Text",ExpressionUUID->"1a1811cf-2089-4ccf-bfa9-3bfb67afd4bc"],
Cell[60209, 1583, 421, 10, 19, "Input",ExpressionUUID->"20b90f28-492e-4bf5-bae9-f2b81b28aaf8",
 CellOpen->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[60667, 1598, 161, 3, 85, "Chapter",ExpressionUUID->"a5b45c8e-329a-4bee-abe9-073eb097d5eb",
 CellTags->"deci"],
Cell[CellGroupData[{
Cell[60853, 1605, 1007, 27, 19, "Input",ExpressionUUID->"d2b663a0-30d7-4c1f-9fce-b58628b1b028",
 CellOpen->False],
Cell[CellGroupData[{
Cell[61885, 1636, 559, 16, 26, "Print",ExpressionUUID->"019a7d02-113d-48d2-ae8b-6b6b0760ca19"],
Cell[62447, 1654, 569, 16, 26, "Print",ExpressionUUID->"371fa625-013d-4cd3-b74a-b6c86fafd700"],
Cell[63019, 1672, 577, 16, 26, "Print",ExpressionUUID->"f3368446-4e7e-4842-b56b-7aa20d5aaf1e"]
}, Open  ]]
}, Open  ]],
Cell[63623, 1692, 440, 6, 74, "Text",ExpressionUUID->"d689d1a9-873b-495c-bcc6-135aa13a9460"],
Cell[64066, 1700, 1063, 20, 258, "Text",ExpressionUUID->"60a2e22f-8b06-4833-9eca-522164bf4c75"],
Cell[65132, 1722, 224, 3, 51, "Text",ExpressionUUID->"03b662bd-513a-4ddc-b3f3-b2fd09f9b451"],
Cell[65359, 1727, 682, 12, 166, "Text",ExpressionUUID->"3862630d-9649-4abc-9338-bda01398d32d"],
Cell[66044, 1741, 582, 14, 163, "Input",ExpressionUUID->"5d2a305d-f2da-48a1-8359-585014ebc490"],
Cell[66629, 1757, 352, 5, 74, "Text",ExpressionUUID->"38ffcf31-df78-4b5a-aca1-6044fc4ec1f2"],
Cell[CellGroupData[{
Cell[67006, 1766, 556, 14, 46, "Input",ExpressionUUID->"ae8f37d1-bbc6-4657-bb0d-a1d86fa41566"],
Cell[67565, 1782, 2989, 67, 407, "Output",ExpressionUUID->"0c8bad68-7f5e-4e68-85a1-e95ab42ba87e"]
}, Open  ]],
Cell[70569, 1852, 206, 3, 51, "Text",ExpressionUUID->"0beb34b8-9899-497f-a407-9aab1dc52741"],
Cell[70778, 1857, 368, 10, 46, "Input",ExpressionUUID->"1093e79d-8257-4238-8389-b265c450f9c7"],
Cell[CellGroupData[{
Cell[71171, 1871, 162, 3, 46, "Input",ExpressionUUID->"21b688a1-45b7-4cc7-a4da-ecc004415cdf"],
Cell[71336, 1876, 653, 20, 110, "Output",ExpressionUUID->"7fea39d3-8f24-4a29-a748-aeb7113ec689"]
}, Open  ]],
Cell[72004, 1899, 147, 2, 51, "Text",ExpressionUUID->"365f8cea-1d52-4330-b2bc-2cf208e776cc"],
Cell[CellGroupData[{
Cell[72176, 1905, 565, 14, 46, "Input",ExpressionUUID->"bbfab33e-35f6-4fe6-8bb4-68bb7217d4a1"],
Cell[72744, 1921, 1931, 47, 407, "Output",ExpressionUUID->"8e21452b-957d-43e1-b467-38a0eeef1c59"]
}, Open  ]],
Cell[74690, 1971, 571, 8, 97, "Text",ExpressionUUID->"86bc1f6d-4634-428b-a2f7-8b1004e1a401"],
Cell[75264, 1981, 513, 7, 97, "Text",ExpressionUUID->"d748072d-fb83-4628-84d8-3d6d085d064f"],
Cell[75780, 1990, 537, 9, 212, "Text",ExpressionUUID->"316fb411-5ffb-400c-974e-889230e7983d"],
Cell[76320, 2001, 2049, 49, 281, "Text",ExpressionUUID->"4a56aaf5-fe49-4984-b119-13cedecbb216"],
Cell[78372, 2052, 662, 9, 97, "Text",ExpressionUUID->"f65646d2-9f52-4c30-a8a8-5465cdb1db3e"],
Cell[79037, 2063, 417, 10, 19, "Input",ExpressionUUID->"a2566440-3398-4591-986a-ad39e8a5993c",
 CellOpen->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[79491, 2078, 157, 3, 85, "Chapter",ExpressionUUID->"ece04f85-ed0d-4580-ba4b-888a33113a7f",
 CellTags->"mod"],
Cell[CellGroupData[{
Cell[79673, 2085, 1005, 27, 19, "Input",ExpressionUUID->"4adafa31-0342-4cdd-8ba3-aac3412da0de",
 CellOpen->False],
Cell[CellGroupData[{
Cell[80703, 2116, 559, 16, 26, "Print",ExpressionUUID->"b3fa626d-90f1-4970-9512-7d81dae651ba"],
Cell[81265, 2134, 567, 16, 26, "Print",ExpressionUUID->"4dca53ce-8d23-41e6-8d9c-6f5a949b8478"],
Cell[81835, 2152, 575, 16, 26, "Print",ExpressionUUID->"8e037544-2476-446b-93a9-84c001d9ac7f"]
}, Open  ]]
}, Open  ]],
Cell[82437, 2172, 423, 6, 74, "Text",ExpressionUUID->"23fb5982-080c-4e1e-bfd6-9951e3958d93"],
Cell[82863, 2180, 365, 5, 74, "Text",ExpressionUUID->"b68e00b0-0327-4656-a11f-99e64a8510e1"],
Cell[83231, 2187, 261, 4, 51, "Text",ExpressionUUID->"ce833934-b21c-4e35-8b5d-a48dca50b3e4"],
Cell[CellGroupData[{
Cell[83517, 2195, 132, 3, 46, "Input",ExpressionUUID->"8a4169f8-f5b4-4bbb-a6de-931c2d73d60f"],
Cell[83652, 2200, 14235, 324, 135, "Output",ExpressionUUID->"f44af2a7-2b4b-4ad5-bf27-d09dba76f84c"]
}, Open  ]],
Cell[97902, 2527, 157, 2, 51, "Text",ExpressionUUID->"c90a61ac-4924-4a2d-9a93-a80f2ee0ca09"],
Cell[98062, 2531, 232, 3, 51, "Text",ExpressionUUID->"839aa269-f855-46cd-a3db-202d27c29963"],
Cell[98297, 2536, 261, 7, 74, "Text",ExpressionUUID->"b0227ea5-3121-4832-86ad-fb0ab8de5081"],
Cell[CellGroupData[{
Cell[98583, 2547, 132, 3, 46, "Input",ExpressionUUID->"2fdd3554-382e-41d8-8669-b05d3235f2f4"],
Cell[98718, 2552, 111, 2, 50, "Output",ExpressionUUID->"29ce84a8-8b77-4116-b1e5-2bd486d4f0e9"]
}, Open  ]],
Cell[98844, 2557, 560, 9, 120, "Text",ExpressionUUID->"4a6a85fd-e8b9-4ded-b52e-6bd2a562d676"],
Cell[CellGroupData[{
Cell[99429, 2570, 379, 10, 46, "Input",ExpressionUUID->"40d9a09d-3c8d-4b04-bb9b-ed47b4c97367"],
Cell[99811, 2582, 175, 3, 24, "Print",ExpressionUUID->"2ad8ed47-e061-4dbd-ab02-8b8672dd9c64"]
}, Open  ]],
Cell[100001, 2588, 250, 4, 51, "Text",ExpressionUUID->"15198ecc-5afb-4265-be46-3d97626f829a"],
Cell[CellGroupData[{
Cell[100276, 2596, 110, 2, 46, "Input",ExpressionUUID->"58262253-0b43-49d4-b9b2-e9aba4b11626"],
Cell[100389, 2600, 111, 2, 50, "Output",ExpressionUUID->"a8e6c23b-5c5c-426a-9733-e14a484abdb6"]
}, Open  ]],
Cell[100515, 2605, 312, 4, 74, "Text",ExpressionUUID->"fc49c149-9a24-4909-9c9c-eb70fd678fc1"],
Cell[CellGroupData[{
Cell[100852, 2613, 263, 8, 46, "Input",ExpressionUUID->"f8cfafa6-de75-48f4-9506-73bd2535eab4"],
Cell[101118, 2623, 112, 2, 50, "Output",ExpressionUUID->"af563aec-a520-485d-ae11-0babdc511d2a"]
}, Open  ]],
Cell[101245, 2628, 105, 0, 51, "Text",ExpressionUUID->"ddd84b80-6ac7-48e6-8b9f-e6b1968171f1"],
Cell[101353, 2630, 233, 3, 50, "Program",ExpressionUUID->"06c808af-afd9-413e-9dca-213ad7b1926c"],
Cell[101589, 2635, 279, 4, 51, "Text",ExpressionUUID->"1d4156db-8e04-4211-82ea-8758c8a659ce"],
Cell[CellGroupData[{
Cell[101893, 2643, 430, 13, 46, "Input",ExpressionUUID->"a02eed41-8274-45a1-9849-a63091068e67"],
Cell[102326, 2658, 167, 4, 50, "Output",ExpressionUUID->"52f8e4f9-de82-4b32-ac8e-38a8a103a543"]
}, Open  ]],
Cell[102508, 2665, 355, 7, 74, "Text",ExpressionUUID->"b850a529-d7ad-46a0-876c-514083ebbaba"],
Cell[102866, 2674, 406, 7, 74, "Text",ExpressionUUID->"de3e7657-c096-4d97-a762-e8750ab48092"],
Cell[CellGroupData[{
Cell[103297, 2685, 385, 12, 46, "Input",ExpressionUUID->"92cd3bac-77cf-4e46-a72c-aca392780d41"],
Cell[103685, 2699, 166, 4, 50, "Output",ExpressionUUID->"cd6b3044-0bd9-4954-a918-9abfe4d41618"]
}, Open  ]],
Cell[103866, 2706, 510, 7, 74, "Text",ExpressionUUID->"7969209e-249f-440d-9a00-4799c956cfb3"],
Cell[CellGroupData[{
Cell[104401, 2717, 420, 13, 46, "Input",ExpressionUUID->"17258ee3-3a24-4e71-909b-f6ba35a8eb3e"],
Cell[104824, 2732, 166, 4, 50, "Output",ExpressionUUID->"5d4bc269-a09d-4c24-a60a-f81a4b850508"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105027, 2741, 110, 2, 46, "Input",ExpressionUUID->"0bcf64e6-1c0f-4d97-ae81-111bb29e4bb1"],
Cell[105140, 2745, 111, 2, 50, "Output",ExpressionUUID->"dd3ffc7f-574d-4173-9868-70f59721b0ef"]
}, Open  ]],
Cell[105266, 2750, 76, 0, 51, "Text",ExpressionUUID->"4961e4bb-f8d6-40c0-b054-8266a03d358e"],
Cell[CellGroupData[{
Cell[105367, 2754, 213, 6, 46, "Input",ExpressionUUID->"42cc9a2b-e1dc-4080-8f24-9688a999107e"],
Cell[105583, 2762, 111, 2, 50, "Output",ExpressionUUID->"d3b565d6-e06d-4a52-a55a-6c182158fed0"]
}, Open  ]],
Cell[105709, 2767, 88, 0, 51, "Text",ExpressionUUID->"31fc073a-dc48-41ad-a63f-1e3199e6d6f7"],
Cell[CellGroupData[{
Cell[105822, 2771, 214, 6, 46, "Input",ExpressionUUID->"fde4fae4-025c-42b5-b766-d0f3a24ec856"],
Cell[106039, 2779, 111, 2, 50, "Output",ExpressionUUID->"70f8912b-372b-48cd-b489-c98953a5dbf6"]
}, Open  ]],
Cell[106165, 2784, 231, 4, 51, "Text",ExpressionUUID->"bf8a3cc5-1f7f-43a1-a822-1a49dd85b800"],
Cell[106399, 2790, 418, 6, 74, "Text",ExpressionUUID->"e23f885d-49f8-4143-9301-b0b9dfdbd805"],
Cell[106820, 2798, 462, 14, 46, "Input",ExpressionUUID->"9d0aed51-7580-4cab-bbef-dd1e813d25e4"],
Cell[CellGroupData[{
Cell[107307, 2816, 140, 3, 46, "Input",ExpressionUUID->"77874d21-b1ee-48db-a359-f492a9e88c44"],
Cell[107450, 2821, 156, 4, 50, "Output",ExpressionUUID->"64f8e29e-d856-4607-b844-2a693104bc5b"]
}, Open  ]],
Cell[107621, 2828, 292, 4, 51, "Text",ExpressionUUID->"f22da23c-bd53-48a9-8128-5669d6250bd0"],
Cell[107916, 2834, 88, 0, 50, "Program",ExpressionUUID->"419870ec-35c4-468c-b4f5-4d4b051e5951"],
Cell[108007, 2836, 191, 3, 51, "Text",ExpressionUUID->"97cd3542-5cd0-4bab-928f-b84b502506f9"],
Cell[108201, 2841, 81, 0, 51, "Text",ExpressionUUID->"e1bce7a8-50f9-4e79-ada4-702af6512634"],
Cell[108285, 2843, 76, 0, 50, "Program",ExpressionUUID->"090a2fcb-a8e3-46ce-8f6d-f4c52e620bef"],
Cell[108364, 2845, 77, 0, 51, "Text",ExpressionUUID->"5150e56e-7c0a-4a2c-af99-4d1d00ec39a7"],
Cell[108444, 2847, 90, 0, 50, "Program",ExpressionUUID->"d596a9e4-a6d3-4701-8e95-b34c08174be0"],
Cell[108537, 2849, 169, 2, 51, "Text",ExpressionUUID->"3cff6871-3811-40d3-91d4-22f66eebbc88"],
Cell[108709, 2853, 186, 5, 46, "Input",ExpressionUUID->"1b9a88da-8845-46d1-92f3-9743c610da8d"],
Cell[CellGroupData[{
Cell[108920, 2862, 137, 3, 46, "Input",ExpressionUUID->"4ba75595-51b6-43d1-97ad-ef1a5252717a"],
Cell[109060, 2867, 112, 2, 50, "Output",ExpressionUUID->"45cf8422-4e2f-43c3-a0dd-80a1e90c0117"]
}, Open  ]],
Cell[109187, 2872, 201, 3, 51, "Text",ExpressionUUID->"a38b4d80-1182-4cae-ac26-580526d27225"],
Cell[109391, 2877, 101, 0, 50, "Program",ExpressionUUID->"0f234d5a-b533-47f3-8976-be260e045329"],
Cell[109495, 2879, 349, 5, 51, "Text",ExpressionUUID->"3f20c280-9182-4f3e-9c5b-6a69ea9cf5d4"],
Cell[109847, 2886, 112, 0, 50, "Program",ExpressionUUID->"ec38805d-10cd-4c90-aeca-370470c2d8db"],
Cell[109962, 2888, 368, 5, 51, "Text",ExpressionUUID->"68659b82-bc9f-4c94-8be5-a04ce5edb287"],
Cell[110333, 2895, 122, 0, 50, "Program",ExpressionUUID->"7471452e-8758-49e2-953e-1a37329e9682"],
Cell[110458, 2897, 820, 13, 143, "Text",ExpressionUUID->"5912ab1d-558c-43dc-ac05-82fa6fe5ee5f"],
Cell[111281, 2912, 147, 2, 50, "Program",ExpressionUUID->"a6b5ff32-af7d-4737-87b3-659ec90c4c4a"],
Cell[111431, 2916, 264, 4, 51, "Text",ExpressionUUID->"2388f84d-02c1-4a97-a746-cc729060dd8f"],
Cell[111698, 2922, 161, 3, 50, "Program",ExpressionUUID->"952b5fd3-7d6c-4264-8f74-9e079eed71f2"],
Cell[111862, 2927, 513, 7, 74, "Text",ExpressionUUID->"6435367e-5d85-4560-a802-fc0becbae310"],
Cell[112378, 2936, 437, 7, 74, "Text",ExpressionUUID->"517cf99a-304c-4205-be2c-00ae88e1cfa4"],
Cell[112818, 2945, 426, 10, 19, "Input",ExpressionUUID->"a2df2f77-df3b-405d-8718-92007b39c839",
 CellOpen->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[113281, 2960, 166, 3, 85, "Chapter",ExpressionUUID->"01e42782-3818-4381-b8de-4c9076698240",
 CellTags->"decicode"],
Cell[CellGroupData[{
Cell[113472, 2967, 994, 27, 19, "Input",ExpressionUUID->"2f1658d1-6d0d-4375-9b01-0a674272ecbf",
 CellOpen->False],
Cell[CellGroupData[{
Cell[114491, 2998, 559, 16, 26, "Print",ExpressionUUID->"5df47f96-6d64-4643-b12a-fd51d7e08bc9"],
Cell[115053, 3016, 559, 16, 26, "Print",ExpressionUUID->"071fbd29-9721-46dc-8eef-4e33880a7c96"],
Cell[115615, 3034, 561, 16, 26, "Print",ExpressionUUID->"8ecbc0c7-79ce-4df7-8a0e-d1be21ae90d5"]
}, Open  ]]
}, Open  ]],
Cell[116203, 3054, 547, 8, 74, "Text",ExpressionUUID->"ce076bc9-267b-40f2-873f-cc67f34507d5"],
Cell[CellGroupData[{
Cell[116775, 3066, 141, 3, 46, "Input",ExpressionUUID->"2c76f4f2-5bd8-4ca1-a993-d5dfb5eb846d"],
Cell[116919, 3071, 12667, 303, 111, "Output",ExpressionUUID->"4754b35b-30c7-42a0-a1d4-a70a438a9a75"]
}, Open  ]],
Cell[CellGroupData[{
Cell[129623, 3379, 2119, 54, 152, "Input",ExpressionUUID->"85a21294-f5da-4552-afb7-95c7b717bdf2"],
Cell[131745, 3435, 6958, 168, 438, "Output",ExpressionUUID->"9cb7b794-ef67-43c5-90d3-337e528a6368"]
}, Open  ]],
Cell[CellGroupData[{
Cell[138740, 3608, 79, 0, 67, "Section",ExpressionUUID->"c6012fc3-6878-4f54-a815-b07a4549e5d2"],
Cell[138822, 3610, 697, 11, 143, "Text",ExpressionUUID->"1b809259-61f8-4e4d-9e47-f1debe345bea"],
Cell[CellGroupData[{
Cell[139544, 3625, 132, 3, 46, "Input",ExpressionUUID->"f07ce19e-680b-4082-825b-25c5474a423d"],
Cell[139679, 3630, 14573, 327, 183, "Output",ExpressionUUID->"1114c492-54eb-4bf4-ab98-7523311c8357"]
}, Open  ]],
Cell[154267, 3960, 125, 0, 51, "Text",ExpressionUUID->"7c4b07be-b56b-4e08-bf41-94d63306ae23"],
Cell[154395, 3962, 96, 0, 50, "Program",ExpressionUUID->"9a679cf4-56bc-4301-8ec8-efa47ff22c94"],
Cell[154494, 3964, 376, 5, 74, "Text",ExpressionUUID->"05dabb15-4b78-4e9b-8aca-6a8fc52cb552"],
Cell[154873, 3971, 106, 0, 50, "Program",ExpressionUUID->"3141dcbc-81f7-4b9d-91ae-96537b2d915d"],
Cell[154982, 3973, 165, 3, 51, "Text",ExpressionUUID->"f1a7f0f0-b8ad-491f-963b-6b98d2a1e2e1"],
Cell[155150, 3978, 103, 0, 51, "Text",ExpressionUUID->"15cb2947-4740-4bec-93b1-a5ad71c3bcae"],
Cell[CellGroupData[{
Cell[155278, 3982, 197, 4, 46, "Input",ExpressionUUID->"d6510856-09e4-4d5b-aa24-9cd9dfa72309"],
Cell[155478, 3988, 26436, 438, 243, "Output",ExpressionUUID->"0fb0b24a-e28c-4e62-b642-d6e54506a2f4"]
}, Open  ]],
Cell[181929, 4429, 183, 3, 51, "Text",ExpressionUUID->"26b99415-b235-4558-b517-894b52991431"],
Cell[CellGroupData[{
Cell[182137, 4436, 236, 6, 46, "Input",ExpressionUUID->"528f3836-d02e-46cc-9228-b7460923fdf3"],
Cell[182376, 4444, 15365, 379, 200, "Output",ExpressionUUID->"741395df-d0de-47ba-bbb9-66a0b4ff29cc"]
}, Open  ]],
Cell[197756, 4826, 387, 8, 51, "Text",ExpressionUUID->"bb4c2e85-c7fe-4870-958b-448c004380ee"],
Cell[CellGroupData[{
Cell[198168, 4838, 99, 0, 54, "Subsection",ExpressionUUID->"65600bba-2dda-4711-bc58-7bb313647021"],
Cell[198270, 4840, 248, 4, 51, "Text",ExpressionUUID->"f5a853cc-723e-4e96-81b2-a355a930d8b0"],
Cell[198521, 4846, 107, 0, 50, "Program",ExpressionUUID->"854a7cf5-8e98-494e-8a58-cd7f4533dbd4"],
Cell[198631, 4848, 265, 4, 51, "Text",ExpressionUUID->"83eaae71-c94c-409b-822c-11c8d5f81ed6"],
Cell[198899, 4854, 112, 0, 50, "Program",ExpressionUUID->"c937d424-582c-44c3-810b-933b748c1740"],
Cell[199014, 4856, 461, 6, 74, "Text",ExpressionUUID->"7edb909c-1cd3-41a9-bf11-2371120b5e00"],
Cell[199478, 4864, 76, 0, 50, "Program",ExpressionUUID->"630dbe0f-53e4-43ce-abc9-a3bf86f20878"],
Cell[199557, 4866, 259, 4, 51, "Text",ExpressionUUID->"a4d6e6c4-a0ff-4f4d-812e-4aa3b820d32a"],
Cell[199819, 4872, 87, 0, 50, "Program",ExpressionUUID->"375e9a03-41f9-41d6-abbe-ca451bcda388"],
Cell[199909, 4874, 146, 2, 51, "Text",ExpressionUUID->"d8c36dfc-dba7-44f6-ab8d-52276a6a8763"],
Cell[CellGroupData[{
Cell[200080, 4880, 217, 4, 46, "Input",ExpressionUUID->"a68558f4-61cb-4dfc-8ed5-8214747f132c"],
Cell[200300, 4886, 149, 2, 50, "Output",ExpressionUUID->"d456e8e2-d96c-4cbc-94f6-34c6ba1a5450"]
}, Open  ]],
Cell[200464, 4891, 88, 0, 51, "Text",ExpressionUUID->"99aa47b5-efb9-49f0-a98c-823d675929a0"],
Cell[CellGroupData[{
Cell[200577, 4895, 255, 6, 46, "Input",ExpressionUUID->"3eb7d726-5421-4feb-9052-9ec4f320e7dc"],
Cell[200835, 4903, 149, 2, 50, "Output",ExpressionUUID->"7e71a2e1-6c17-4800-bbf6-14db68910c16"]
}, Open  ]],
Cell[200999, 4908, 327, 5, 74, "Text",ExpressionUUID->"3fb82b47-3be4-4f37-9ee9-3da98621b3f2"],
Cell[CellGroupData[{
Cell[201351, 4917, 164, 3, 46, "Input",ExpressionUUID->"60f4da74-156b-43b1-ac00-f271dc75933c"],
Cell[201518, 4922, 196, 3, 50, "Output",ExpressionUUID->"8dbc3cca-06a3-4950-a3c8-0395050b2b7f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[201763, 4931, 127, 0, 54, "Subsection",ExpressionUUID->"62fb76ca-26f1-4f55-83bd-c5436dcefb52"],
Cell[201893, 4933, 1638, 31, 284, "Text",ExpressionUUID->"9ae52093-8247-4704-afee-e8b80a57964d"],
Cell[203534, 4966, 333, 10, 46, "Input",ExpressionUUID->"28c83ebc-42b6-4494-89a0-167619f3746a"],
Cell[203870, 4978, 363, 11, 46, "Input",ExpressionUUID->"f965aa4a-c8c2-4ec9-bf70-50c8682878d0"],
Cell[204236, 4991, 315, 10, 46, "Input",ExpressionUUID->"77f0f09c-e42c-41b7-bd70-4a8c6c571be8"],
Cell[CellGroupData[{
Cell[204576, 5005, 507, 13, 46, "Input",ExpressionUUID->"6074535e-a3da-4116-a023-a0974beeeff8"],
Cell[205086, 5020, 445683, 11803, 99, "Output",ExpressionUUID->"87aa9855-2c90-40ac-8256-bdc7b8fa41ae"]
}, Open  ]],
Cell[650784, 16826, 777, 10, 120, "Text",ExpressionUUID->"0a83e3b7-5462-4104-bc38-f4056a8cc4e6"],
Cell[651564, 16838, 677, 10, 189, "Text",ExpressionUUID->"8435920d-b28c-40e8-ab40-8832e5be1987"],
Cell[CellGroupData[{
Cell[652266, 16852, 427, 13, 46, "Input",ExpressionUUID->"962825b3-de2e-4d73-a5ae-dce7ed321922"],
Cell[652696, 16867, 32999, 964, 198, "Output",ExpressionUUID->"3dd80ca8-5637-4d41-ad82-c966d6f22a7e"]
}, Open  ]],
Cell[685710, 17834, 888, 24, 169, "Text",ExpressionUUID->"0df18ac1-703e-4ad2-a045-77978cb42740"],
Cell[CellGroupData[{
Cell[686623, 17862, 425, 13, 46, "Input",ExpressionUUID->"a67b9d6a-aad0-4a1d-a3a2-6d236be67550"],
Cell[687051, 17877, 1003, 22, 92, "Output",ExpressionUUID->"6cc71563-075c-4d99-aaa5-53f3f984cc00"]
}, Open  ]],
Cell[688069, 17902, 216, 3, 51, "Text",ExpressionUUID->"c906933a-4680-4262-a2ee-5bf4bc0b8618"]
}, Open  ]],
Cell[CellGroupData[{
Cell[688322, 17910, 161, 2, 54, "Subsection",ExpressionUUID->"a17166f7-a9d9-4f0b-aa4a-79d7b8a964ca"],
Cell[688486, 17914, 331, 5, 51, "Text",ExpressionUUID->"4637a3ac-6848-48f8-af40-08057d8ebaab"],
Cell[688820, 17921, 142, 2, 51, "Text",ExpressionUUID->"162359fd-2b5b-4742-ba5e-2bfc2a2a3ec6"],
Cell[688965, 17925, 125, 0, 50, "Program",ExpressionUUID->"4d7ac9a6-4a4e-42a7-96bc-5177c4e275aa"],
Cell[689093, 17927, 113, 0, 51, "Text",ExpressionUUID->"4fe0a6e4-1925-4836-95e1-b13dc56b5016"],
Cell[689209, 17929, 94, 0, 50, "Program",ExpressionUUID->"78ea8839-2e96-4cce-a28d-f30c70685106"],
Cell[689306, 17931, 264, 4, 51, "Text",ExpressionUUID->"c42e2c5d-722c-4ed4-ae5b-525d8c0acf28"],
Cell[CellGroupData[{
Cell[689595, 17939, 413, 11, 46, "Input",ExpressionUUID->"952375f1-40ad-44dd-9759-54cede7c70d9"],
Cell[690011, 17952, 111, 2, 50, "Output",ExpressionUUID->"2f931af7-d1f0-4b31-a06c-a25d81b8d9f6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[690159, 17959, 483, 14, 68, "Input",ExpressionUUID->"e34b4b8d-0391-4f8f-871f-5d7b570e3a05"],
Cell[690645, 17975, 111, 2, 50, "Output",ExpressionUUID->"a5723972-3fb4-4255-8301-cab914ab7f93"]
}, Open  ]],
Cell[690771, 17980, 142, 2, 51, "Text",ExpressionUUID->"27c3c5e8-7af0-4d4d-ae28-e09ad08cced2"],
Cell[690916, 17984, 82, 0, 50, "Program",ExpressionUUID->"fc8bba12-0976-46ae-9a07-f4f31da2343b"],
Cell[691001, 17986, 92, 0, 51, "Text",ExpressionUUID->"d73ad6ed-7eb8-45be-9fa7-30cd3974ffac"],
Cell[691096, 17988, 83, 0, 50, "Program",ExpressionUUID->"151a0d8a-55a3-49b6-adc3-7c39c5e92d1c"],
Cell[691182, 17990, 150, 2, 51, "Text",ExpressionUUID->"98d71b2a-65e3-4477-9f4a-eec54ef3e1d6"],
Cell[691335, 17994, 77, 0, 50, "Program",ExpressionUUID->"4b98213a-8b76-4e76-bf4d-a9e59001e5af"],
Cell[691415, 17996, 119, 0, 51, "Text",ExpressionUUID->"6baa58aa-5220-4c47-afc9-f6e943962046"],
Cell[691537, 17998, 424, 7, 120, "Text",ExpressionUUID->"7c2717ef-ae07-4db7-a513-b7096d618a20"],
Cell[CellGroupData[{
Cell[691986, 18009, 217, 6, 46, "Input",ExpressionUUID->"efc75e52-a592-4986-9b77-b0ff919ca74e"],
Cell[692206, 18017, 111, 2, 50, "Output",ExpressionUUID->"c39c6235-59a8-40e9-a982-312768f5be77"]
}, Open  ]],
Cell[692332, 18022, 480, 7, 74, "Text",ExpressionUUID->"18f9373b-3598-4930-ac0a-fa9f8e80cf72"],
Cell[CellGroupData[{
Cell[692837, 18033, 242, 7, 46, "Input",ExpressionUUID->"596a7d90-f58e-49b7-9c5e-30722f020e7f"],
Cell[693082, 18042, 156, 4, 50, "Output",ExpressionUUID->"245e729c-a0e2-490c-a8b3-423672c13c6c"]
}, Open  ]],
Cell[693253, 18049, 219, 3, 51, "Text",ExpressionUUID->"0493f2ba-0940-40bd-b9e6-768eaed64a95"],
Cell[693475, 18054, 244, 8, 61, "Input",ExpressionUUID->"c91384af-f935-44df-ad5c-c4442cffe2e9"],
Cell[693722, 18064, 178, 3, 51, "Text",ExpressionUUID->"e65d0c5e-16c0-4457-97d8-44560f785acc"],
Cell[CellGroupData[{
Cell[693925, 18071, 320, 10, 46, "Input",ExpressionUUID->"e28d9277-e5b8-4f5c-9d0d-4108fafd8fa5"],
Cell[694248, 18083, 595, 18, 76, "Output",ExpressionUUID->"bc2465cf-adf3-4b3a-b16d-39dd91c289ae"]
}, Open  ]],
Cell[694858, 18104, 492, 7, 74, "Text",ExpressionUUID->"586246eb-7b66-4338-a3f7-04403a6555b2"],
Cell[CellGroupData[{
Cell[695375, 18115, 189, 5, 46, "Input",ExpressionUUID->"283623b6-5932-4205-bf10-77f9061c3433"],
Cell[695567, 18122, 112, 2, 50, "Output",ExpressionUUID->"9b0f4c40-27c5-4e90-bf90-0de535770580"]
}, Open  ]],
Cell[695694, 18127, 115, 0, 51, "Text",ExpressionUUID->"e396161d-7a52-46d8-912a-d832525616cf"],
Cell[CellGroupData[{
Cell[695834, 18131, 189, 5, 46, "Input",ExpressionUUID->"9f196d66-16af-408d-9bd7-e351d2fdd6c2"],
Cell[696026, 18138, 112, 2, 50, "Output",ExpressionUUID->"2cb90e4d-95fd-4751-bb26-94fda497ddad"]
}, Open  ]],
Cell[696153, 18143, 96, 0, 51, "Text",ExpressionUUID->"31f928d9-dfd1-4b7a-94b6-8a2c939f497a"],
Cell[CellGroupData[{
Cell[696274, 18147, 147, 3, 46, "Input",ExpressionUUID->"583629c7-0fa1-4704-90d9-1388d2b8e85c"],
Cell[696424, 18152, 595, 18, 76, "Output",ExpressionUUID->"d86c9044-90d8-4375-8103-d65b685b686c"]
}, Open  ]],
Cell[697034, 18173, 300, 4, 74, "Text",ExpressionUUID->"0fb902dc-f718-4531-bef1-9c2bd032677a"],
Cell[CellGroupData[{
Cell[697359, 18181, 190, 5, 46, "Input",ExpressionUUID->"ed9feea1-31ee-4bda-aa26-e5d620430b04"],
Cell[697552, 18188, 169, 4, 50, "Output",ExpressionUUID->"52a9b7ab-f2e3-4aa9-8bfb-62016b2ac6be"]
}, Open  ]],
Cell[697736, 18195, 93, 0, 51, "Text",ExpressionUUID->"3bdec2a5-d23c-43d0-80bc-ad43a31c09dc"],
Cell[CellGroupData[{
Cell[697854, 18199, 191, 5, 46, "Input",ExpressionUUID->"4d77c0b5-fa33-4fe8-a2ae-79c1ea5415e2"],
Cell[698048, 18206, 169, 4, 50, "Output",ExpressionUUID->"14bb6de3-fa9c-4e95-9726-4a7b5af2a90b"]
}, Open  ]],
Cell[698232, 18213, 94, 0, 51, "Text",ExpressionUUID->"fd0093a0-76b5-414f-8546-8e643ff9c588"],
Cell[CellGroupData[{
Cell[698351, 18217, 215, 6, 46, "Input",ExpressionUUID->"b0d15d27-a15b-421c-a7c8-874badaa2530"],
Cell[698569, 18225, 169, 4, 50, "Output",ExpressionUUID->"e8f13380-20b7-4003-b5de-4dbbfba099f1"]
}, Open  ]],
Cell[698753, 18232, 144, 2, 51, "Text",ExpressionUUID->"c410f479-5970-4cbb-b8ba-b674918dac25"],
Cell[CellGroupData[{
Cell[698922, 18238, 215, 6, 46, "Input",ExpressionUUID->"54202c1d-05dd-4de7-b007-1ebf7e4cd85b"],
Cell[699140, 18246, 158, 4, 50, "Output",ExpressionUUID->"6f5be859-d4e1-436f-a6e5-8559eb6d9338"]
}, Open  ]],
Cell[699313, 18253, 127, 0, 51, "Text",ExpressionUUID->"a4191605-e0c4-46f9-89d8-89052d5fe70b"],
Cell[CellGroupData[{
Cell[699465, 18257, 225, 6, 46, "Input",ExpressionUUID->"ab738b43-e936-40a5-aa8a-85074770fe83"],
Cell[699693, 18265, 621, 20, 76, "Output",ExpressionUUID->"4b80ad8e-b3f9-45fe-87db-adce3115f278"]
}, Open  ]],
Cell[700329, 18288, 74, 0, 51, "Text",ExpressionUUID->"e58cbc4c-3aba-4bd3-99e4-df4743690583"],
Cell[CellGroupData[{
Cell[700428, 18292, 226, 6, 46, "Input",ExpressionUUID->"814ecbb0-8551-47fd-af41-cc8e2f163432"],
Cell[700657, 18300, 621, 20, 76, "Output",ExpressionUUID->"3a5c21e1-0f2d-44f2-bf2d-c48ba7db4277"]
}, Open  ]],
Cell[701293, 18323, 74, 0, 51, "Text",ExpressionUUID->"a791d087-b190-45a7-b674-b3caffc9891d"],
Cell[CellGroupData[{
Cell[701392, 18327, 254, 8, 46, "Input",ExpressionUUID->"662be444-7b67-4de9-bae5-ec7478a7dac4"],
Cell[701649, 18337, 621, 20, 76, "Output",ExpressionUUID->"3f89aa3d-df9c-4f57-8e6d-9a28b2e51c0e"]
}, Open  ]],
Cell[702285, 18360, 344, 6, 120, "Text",ExpressionUUID->"011a1b0f-ef0b-49ca-8e44-8681f17e01de"],
Cell[702632, 18368, 87, 0, 51, "Text",ExpressionUUID->"8182bec4-5028-4c28-ab2b-b3c27931d593"],
Cell[CellGroupData[{
Cell[702744, 18372, 283, 9, 46, "Input",ExpressionUUID->"c5858426-ccca-428d-81a0-b95f0f8372cd"],
Cell[703030, 18383, 254, 8, 50, "Output",ExpressionUUID->"1985e21e-14dc-46fa-bc17-e3f8c8c77fe2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[703321, 18396, 144, 3, 46, "Input",ExpressionUUID->"f1de9219-5b9a-4ff6-82cf-861ec0f838a7"],
Cell[703468, 18401, 579, 18, 76, "Output",ExpressionUUID->"50729b47-ecd7-4eb4-8ef4-f936ad7a7eaa"]
}, Open  ]],
Cell[704062, 18422, 183, 3, 51, "Text",ExpressionUUID->"c2bcf606-b9b7-43b1-bda1-47ae8345703f"],
Cell[CellGroupData[{
Cell[704270, 18429, 167, 4, 46, "Input",ExpressionUUID->"6aa10e09-bddc-4816-8b64-1a9d059ecc96"],
Cell[704440, 18435, 579, 18, 76, "Output",ExpressionUUID->"6d9a5c5b-9561-4d89-a64a-b6ae5e13ac61"]
}, Open  ]],
Cell[705034, 18456, 100, 0, 51, "Text",ExpressionUUID->"45025395-10ec-40ef-bb20-97bcd7060057"],
Cell[CellGroupData[{
Cell[705159, 18460, 240, 8, 61, "Input",ExpressionUUID->"647add77-dd91-40f5-8756-cfb2a6373ffa"],
Cell[705402, 18470, 579, 18, 76, "Output",ExpressionUUID->"6f0642d2-333b-4328-b5f9-b251ef641458"]
}, Open  ]],
Cell[705996, 18491, 186, 3, 51, "Text",ExpressionUUID->"91af0f3c-fb35-47b7-8026-82cbb62ed13c"],
Cell[CellGroupData[{
Cell[706207, 18498, 167, 4, 46, "Input",ExpressionUUID->"34ecfb49-f76a-458b-918c-3d5cad27da0b"],
Cell[706377, 18504, 694, 22, 76, "Output",ExpressionUUID->"8b71327e-3644-4e1d-b6a2-7a00ef97272a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[707120, 18532, 120, 0, 54, "Subsection",ExpressionUUID->"da5468ba-9a01-4ff0-97af-7118903906b2"],
Cell[707243, 18534, 275, 4, 51, "Text",ExpressionUUID->"80820944-3be5-4456-aff0-f418150e2c88"],
Cell[707521, 18540, 89, 0, 50, "Program",ExpressionUUID->"99d242fd-dff2-4559-a365-3ab0b0b674fc"],
Cell[707613, 18542, 74, 0, 51, "Text",ExpressionUUID->"1328a864-5546-4a0b-b5f0-0744db3f3a13"],
Cell[707690, 18544, 87, 0, 50, "Program",ExpressionUUID->"25daf22f-a1d8-4dfd-a294-98cfdf4e204d"],
Cell[707780, 18546, 179, 3, 51, "Text",ExpressionUUID->"97b18093-f2e6-47b3-9a65-42f607e98e79"],
Cell[707962, 18551, 333, 5, 74, "Text",ExpressionUUID->"3312a74d-e27e-4e63-8390-7152cdcfd0da"],
Cell[708298, 18558, 387, 11, 46, "Input",ExpressionUUID->"a68ee8e8-7fb1-43db-9889-eb47186f60f9"],
Cell[708688, 18571, 259, 4, 51, "Text",ExpressionUUID->"c25da662-13b5-4947-a773-3a907e747e30"],
Cell[CellGroupData[{
Cell[708972, 18579, 218, 5, 46, "Input",ExpressionUUID->"3183c3e5-d538-4cfd-a3a4-9cac633769e0"],
Cell[709193, 18586, 32916, 550, 357, "Output",ExpressionUUID->"78681712-5bad-4382-94bd-6ce28c4d89a2"],
Cell[742112, 19138, 32619, 544, 357, "Output",ExpressionUUID->"825d848f-fbf7-47e2-9833-85f2c9c4eb02"]
}, Open  ]],
Cell[774746, 19685, 355, 5, 74, "Text",ExpressionUUID->"3819b8a9-e204-4968-99bf-218974692e61"],
Cell[CellGroupData[{
Cell[775126, 19694, 197, 4, 46, "Input",ExpressionUUID->"5e336eb0-2029-4372-9d46-7b8dcab3357a"],
Cell[775326, 19700, 26436, 438, 243, "Output",ExpressionUUID->"c51ea719-a581-4ad7-b9d6-22075302fea6"]
}, Open  ]],
Cell[801777, 20141, 163, 3, 51, "Text",ExpressionUUID->"e3a4663a-4520-4d0d-9648-9dc3c46c979b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[801989, 20150, 87, 0, 67, "Section",ExpressionUUID->"f3df1930-f061-485f-a1c7-bb5afd4ee5f7"],
Cell[CellGroupData[{
Cell[802101, 20154, 139, 3, 46, "Input",ExpressionUUID->"3054946f-4b2f-436b-b5f1-5c54a5c5b4a4"],
Cell[802243, 20159, 21140, 462, 111, "Output",ExpressionUUID->"fc170663-9966-4fd1-afd7-3611afe43a41"]
}, Open  ]],
Cell[823398, 20624, 2618, 41, 449, "Text",ExpressionUUID->"9f0c40d5-7c96-4b92-88dd-b2cc6e98abc0"],
Cell[CellGroupData[{
Cell[826041, 20669, 453, 12, 19, "Input",ExpressionUUID->"65273bfc-3ab6-42f5-85fc-7737d0a12443",
 CellOpen->False],
Cell[826497, 20683, 217, 5, 52, "Output",ExpressionUUID->"578e8b46-b22f-4ec3-8642-e0f97446587b"],
Cell[826717, 20690, 231, 6, 52, "Output",ExpressionUUID->"b9c12e9d-cf11-4c4d-a633-d2ae7172b017"]
}, Open  ]],
Cell[826963, 20699, 3168, 43, 672, "Text",ExpressionUUID->"cc98be94-ecfe-4b48-8250-7c25061941fc"],
Cell[830134, 20744, 203, 3, 51, "Text",ExpressionUUID->"7b15bb7f-b627-4ea2-87ab-686d2c6bf1bd"],
Cell[830340, 20749, 6835, 156, 572, "Input",ExpressionUUID->"c4f8a723-144f-4181-a14a-24428b558de8",
 Evaluatable->False],
Cell[837178, 20907, 248, 4, 51, "Text",ExpressionUUID->"9901ae9e-ebc0-4af5-8e5c-db569bfb2f8c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[837463, 20916, 92, 0, 67, "Section",ExpressionUUID->"daf30052-a7d4-4007-af91-f1dbb84ddc74"],
Cell[837558, 20918, 556, 8, 97, "Text",ExpressionUUID->"e78f6f9d-632a-445c-a0f2-68c2fa8ccf74"]
}, Open  ]],
Cell[CellGroupData[{
Cell[838151, 20931, 86, 0, 67, "Section",ExpressionUUID->"2c2d5fb2-f3af-41f5-be18-01acca97c5d6"],
Cell[838240, 20933, 488, 10, 166, "Text",ExpressionUUID->"999a598a-6497-40e4-92a2-6eb6cf37d8f4"],
Cell[838731, 20945, 1424, 42, 89, "Input",ExpressionUUID->"57b06774-08a4-47d9-9709-e2247c8dfe0d"],
Cell[840158, 20989, 272, 6, 97, "Text",ExpressionUUID->"01116ca3-c2f1-44c9-9291-c47e43127fd3"],
Cell[840433, 20997, 388, 11, 46, "Input",ExpressionUUID->"da52314b-4d8e-4bf8-b4a7-4175f012f990"],
Cell[840824, 21010, 397, 11, 46, "Input",ExpressionUUID->"e2a9d508-ccb3-442a-812d-539c13481174"],
Cell[841224, 21023, 195, 5, 46, "Input",ExpressionUUID->"8ae3facd-a671-4614-a9d2-e55f98bed3be"],
Cell[841422, 21030, 328, 5, 74, "Text",ExpressionUUID->"3e7e6b73-3421-4dc3-9d89-35d6db327930"],
Cell[CellGroupData[{
Cell[841775, 21039, 223, 5, 46, "Input",ExpressionUUID->"b35ee3c2-63d4-49be-b7cf-25ecf86663d8"],
Cell[842001, 21046, 95756, 1580, 324, "Output",ExpressionUUID->"c34454ff-31d1-4453-a7f4-10632042faf3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[937794, 22631, 217, 5, 46, "Input",ExpressionUUID->"f6dd8d99-a588-45f7-8525-3733d2e0ae60"],
Cell[938014, 22638, 4336, 81, 324, "Output",ExpressionUUID->"22bfbf2c-7653-4b40-8f98-b378319842dd"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[942399, 22725, 86, 0, 67, "Section",ExpressionUUID->"d50a7f2d-04bb-4ede-b6af-d46ade825dd8"],
Cell[942488, 22727, 812, 14, 189, "Text",ExpressionUUID->"0cd47980-ab73-439f-adda-6e473c856bb3"],
Cell[943303, 22743, 291, 8, 46, "Input",ExpressionUUID->"d8695760-9cb2-41bf-9acd-4225f29a561f"],
Cell[943597, 22753, 145, 2, 51, "Text",ExpressionUUID->"9454f54b-e1c1-4f8e-bfe1-6f4521ae083b"],
Cell[CellGroupData[{
Cell[943767, 22759, 223, 5, 46, "Input",ExpressionUUID->"c7a1707c-563e-4238-bee3-0a521840ac3b"],
Cell[943993, 22766, 95756, 1580, 324, "Output",ExpressionUUID->"fa6e1566-d2ac-41a7-a760-aa0cf50dbb22"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1039786, 24351, 225, 5, 46, "Input",ExpressionUUID->"eedc17f4-3cb5-4414-b129-a53f7f574eee"],
Cell[1040014, 24358, 95865, 1581, 392, "Output",ExpressionUUID->"e1eba5c8-e8f8-4d5b-a653-08c99eb00052"]
}, Open  ]],
Cell[1135894, 25942, 90, 0, 51, "Text",ExpressionUUID->"059b4980-a54f-47a3-aeef-24ad94075258"],
Cell[1135987, 25944, 193, 3, 51, "Text",ExpressionUUID->"6c25b24a-8f2b-4f28-9363-68e8e47d9382"],
Cell[1136183, 25949, 418, 10, 19, "Input",ExpressionUUID->"7300c21d-98b8-4239-8480-e57961de0e1f",
 CellOpen->False]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1136650, 25965, 158, 3, 85, "Chapter",ExpressionUUID->"8b9b3540-ee79-43b4-a52d-59210da72198",
 CellTags->"fitim"],
Cell[CellGroupData[{
Cell[1136833, 25972, 1015, 27, 19, "Input",ExpressionUUID->"b156f7e6-f68c-46cc-a515-f45841d84a11",
 CellOpen->False],
Cell[CellGroupData[{
Cell[1137873, 26003, 559, 16, 26, "Print",ExpressionUUID->"160a99bc-8d5e-4057-8d70-c32f23f52340"],
Cell[1138435, 26021, 577, 16, 26, "Print",ExpressionUUID->"f617d107-2855-43e0-b739-143bead9cbdb"],
Cell[1139015, 26039, 585, 16, 26, "Print",ExpressionUUID->"db59c106-4214-4d93-966c-f85b59beee86"]
}, Open  ]]
}, Open  ]],
Cell[1139627, 26059, 372, 5, 74, "Text",ExpressionUUID->"f57c07b3-efb8-4574-9882-32a3baee9316"],
Cell[1140002, 26066, 328, 5, 74, "Text",ExpressionUUID->"7a1569b1-b699-40b5-ad88-1636306f9a4e"],
Cell[1140333, 26073, 279, 4, 67, "Program",ExpressionUUID->"61ef7a54-b815-44f2-9217-0c845f01d6c2"],
Cell[1140615, 26079, 282, 6, 97, "Text",ExpressionUUID->"3b0c92ae-4314-4823-a9f2-24b7d3ea7c19"],
Cell[1140900, 26087, 295, 4, 51, "Text",ExpressionUUID->"a012d824-c368-475b-b41b-97bf0aa7fae1"],
Cell[1141198, 26093, 430, 10, 19, "Input",ExpressionUUID->"fb1c8dba-fc14-4010-b345-778ccff4678c",
 CellOpen->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[1141665, 26108, 170, 3, 85, "Chapter",ExpressionUUID->"428b2d50-6d03-4c13-851d-5aea9613312f",
 CellTags->"work1"],
Cell[CellGroupData[{
Cell[1141860, 26115, 972, 27, 19, "Input",ExpressionUUID->"58e243ff-7979-4558-9528-dbb227bd80a2",
 CellOpen->False],
Cell[CellGroupData[{
Cell[1142857, 26146, 559, 16, 26, "Print",ExpressionUUID->"b45bab38-244e-48d9-961d-f4cee2400535"],
Cell[1143419, 26164, 561, 16, 26, "Print",ExpressionUUID->"8969e096-5412-4a76-9c10-ac1359c45ee1"],
Cell[1143983, 26182, 519, 16, 26, "Print",ExpressionUUID->"965ee04b-0bdf-40fa-8835-be0ab64f04a2"]
}, Open  ]]
}, Open  ]],
Cell[1144529, 26202, 305, 4, 51, "Text",ExpressionUUID->"338108f6-1751-4350-a91d-03523be7d85d"],
Cell[1144837, 26208, 165, 4, 97, "Text",ExpressionUUID->"d9b7f641-7264-48a0-ad04-682572cbc7aa"],
Cell[1145005, 26214, 1033, 17, 212, "Text",ExpressionUUID->"89136ede-18ec-4cda-bde5-582f6108823e"],
Cell[1146041, 26233, 297, 4, 51, "Text",ExpressionUUID->"a746a3d5-86e8-4053-9ebf-0acc413f1f91"],
Cell[1146341, 26239, 134, 0, 50, "Program",ExpressionUUID->"461aa75d-0312-4359-9826-29542723b95b"],
Cell[1146478, 26241, 255, 4, 51, "Text",ExpressionUUID->"a467a842-044b-4abf-bf27-ed63dc241d9d"],
Cell[1146736, 26247, 395, 7, 143, "Text",ExpressionUUID->"37053555-10f8-475a-97ee-9f08497654fc"],
Cell[1147134, 26256, 480, 7, 74, "Text",ExpressionUUID->"17947d82-a42f-4800-ba39-501f50340cad"],
Cell[1147617, 26265, 414, 10, 19, "Input",ExpressionUUID->"cc00352c-463a-4322-bc0b-c7d2ec1e7a3c",
 CellOpen->False]
}, Open  ]],
Cell[CellGroupData[{
Cell[1148068, 26280, 154, 3, 85, "Chapter",ExpressionUUID->"6af8ac18-9fd9-4c77-b428-e79356434469",
 CellTags->"ending"],
Cell[CellGroupData[{
Cell[1148247, 26287, 709, 19, 19, "Input",ExpressionUUID->"a0c1f419-17d5-44ab-8203-eaeeb30c0472",
 CellOpen->False],
Cell[CellGroupData[{
Cell[1148981, 26310, 559, 16, 26, "Print",ExpressionUUID->"f704bcda-9ac8-4ecb-ba8d-e4c0f9192c8a"],
Cell[1149543, 26328, 585, 16, 26, "Print",ExpressionUUID->"96228931-eef9-4fd6-ae1f-087ebe015ebe"]
}, Open  ]]
}, Open  ]],
Cell[1150155, 26348, 197, 3, 51, "Text",ExpressionUUID->"187d0c9b-27f4-4cd3-ae7c-203a26017783"],
Cell[1150355, 26353, 256, 4, 51, "Text",ExpressionUUID->"bc497686-46d7-4930-aa26-6eb5960005bd"],
Cell[1150614, 26359, 101, 0, 51, "Text",ExpressionUUID->"3d9e356c-114a-4fe6-a498-67f24a012084"],
Cell[1150718, 26361, 157, 2, 51, "Text",ExpressionUUID->"80995685-a225-4009-b657-094d1483bdee"],
Cell[1150878, 26365, 168, 2, 51, "Text",ExpressionUUID->"2b45cab9-dce5-4190-9b04-c7813feb6cd8"]
}, Open  ]]
}, Open  ]]
}
]
*)

